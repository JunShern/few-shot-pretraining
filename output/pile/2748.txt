{
    "criteria": [
        {
            "criterion": "AllDocuments",
            "passed": true,
            "reason": "All documents pass."
        },
        {
            "criterion": "QuestionAnswerStringsV2",
            "passed": true,
            "reason": "Text contains ['Q:', 'A:', 'A:']."
        },
        {
            "criterion": "FullyStructured",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamStringsV2",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesStrings",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesStringsV2",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ListPrefixV2",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesMinimalEmbed",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesSynonymsEmbed",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesDiverseEmbed",
            "passed": false,
            "reason": "Does not meet criterion."
        }
    ],
    "doc_id": "2748",
    "text": "Q:\n\nIs it necessary to set scrollview.delegate as self?\n\nI am taking an online iOS course provided by Stanford. In the sample code, \n@IBOutlet weak var scrollView: UIScrollView! {\n    didSet {\n        scrollView.contentSize = imageView.frame.size\n        // all three of the next lines of code\n        // are necessary to make zooming work\n        scrollView.delegate = self\n        scrollView.minimumZoomScale = 0.03\n        scrollView.maximumZoomScale = 1.0\n    }\n}\n\nHowever, if I remove scrollView.delegate = self, this scroll view still works on the simulator.\nMy questions:\n\nIs it necessary to set scrollview.delegate as self? Why or why not?\nWhat does self refer to? command + left click locate \"did set\". \n\nA:\n\nYou do not have to set the delegate for scrollView. You only do it if you want to react delegate methods that scrollView calls. For example, if you want to do something when user performs a scroll, you need to set the delegate and implement func scrollViewDidScroll(scrollView: UIScrollView) method. Everytime user scrolls, you will be able to react in this method's body.\nSelf refers to the class that holds this variable. In this case it will be probably your UIViewController\n\nA:\n\nDefine, it still works? I mean if you can move it with touch, yeah it will work.\nThe reason for \nscrollView.delegate = self\n\nis that it allows you to add code which can execute upon scroll began, scroll  ended etc. That way you have customization points to alter the behavior or actions of scrollview. Without that little code the delegate code will never get called. \nMakes sense?\n\n"
}