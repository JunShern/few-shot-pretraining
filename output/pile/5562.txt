{
    "criteria": [
        {
            "criterion": "AllDocuments",
            "passed": true,
            "reason": "All documents pass."
        },
        {
            "criterion": "QuestionAnswerStringsV2",
            "passed": true,
            "reason": "Text contains ['Q:', 'A:']."
        },
        {
            "criterion": "FullyStructured",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamStringsV2",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesStrings",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesStringsV2",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ListPrefixV2",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesMinimalEmbed",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesSynonymsEmbed",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesDiverseEmbed",
            "passed": false,
            "reason": "Does not meet criterion."
        }
    ],
    "doc_id": "5562",
    "text": "Q:\n\nPrint negated words that follows \"no,not,never\" in a sentence in Python\n\nHow do I print all negated word that follows \"no\",\"not\", \"never\" so on. The sentence is \nSENTENCE=\"It was never going to work.I'm not happy\"\n\nDesired output\ngoing,happy (Which follows never and not)\n\nAny help !\n\nA:\n\nYou may not need ntlk for that. I'd split the string (using regex to split according to non-alphanums (or you have an issue with work.I'm part), and build a list comprehension which looks for the previous word belonging to the \"negative\" words.\nimport re\n\nSENTENCE=\"It was never going to work.I'm not happy\"\n\nall_words = re.split(\"\\W+\",SENTENCE)\n\nwords = [w for i,w in enumerate(all_words) if i and (all_words[i-1] in [\"not\",\"never\",\"no\"])]\n\nprint(words)\n\nresult:\n['going', 'happy']\n\n"
}