{
    "criteria": [
        {
            "criterion": "AllDocuments",
            "passed": true,
            "reason": "All documents pass."
        },
        {
            "criterion": "Domain",
            "passed": false,
            "reason": "Document source unavailable."
        },
        {
            "criterion": "QuestionAnswerStrings",
            "passed": true,
            "reason": "Text contains Q:."
        },
        {
            "criterion": "QuestionAnswerStringsV2",
            "passed": true,
            "reason": "Text contains ['Q:', 'A:']."
        },
        {
            "criterion": "FullyStructured",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamStrings",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamStringsV2",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesStrings",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ListPrefix",
            "passed": false,
            "reason": "Found 0 list prefixes. (Min: 5)"
        },
        {
            "criterion": "ListPrefixV2",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesMinimalEmbed",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesSynonymsEmbed",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesDiverseEmbed",
            "passed": true,
            "reason": "Text contains ['What I have found kind of works is adding bogus constraints on all four edges while I am setting other constraints. (0.190)']."
        }
    ],
    "doc_id": "6607",
    "text": "Q:\n\nManually specify constraints in Xcode 4 interfacebuilder/storyboard\n\nThis seems like a really basic question, but I can't find the answer to it.\nWhen I add elements to a scene in my storyboard, or drag them around or resize them, Xcode automatically adds and removes constraints to describe their sizing and positioning. \nNow, once Xcode has created a constraint of a particular type - say, a height constraint - I know that I can modify its attributes - Relation, Constant and Priority in the case of the height constraint - via the attributes inspector. What I can't figure out is how to manually add or remove constraints of a given type rather than relying on Xcode's magic to do so for me.\n\nFor example, in my current scenario, I have a ViewController that contains a toolbar and a table view. Now, I know exactly what constraints I want to use to describe the vertical positioning and sizing of those two views:\n\nThe top of the toolbar has Vertical Space 0 from the top of the screen\nThe toolbar has a fixed height\nThe bottom of the table view has Vertical Space 0 from the bottom of the screen\nThe top of the table view has Vertical Space 0 from the bottom of the toolbar\n\nThis way the table view's height will adjust appropriately to the screen size.\nHowever, Xcode, in its wisdom, has decided that this isn't what I want, and has instead inflicted the following constraints on me (which it doesn't seem to want to change no matter how much I randomly drag stuff around and pray):\n\nThe top of the toolbar has Vertical Space 0 from the top of the screen\nThe bottom of the toolbar has Vertical Space 526 from the bottom of the screen\nThe table view has Vertical Space 0 from the bottom of the screen\nThe table view has a fixed height of 526\n\nAs a result, everything goes wrong when I try viewing my ViewController on a smaller screen, or in a container:\n\nNot being able to just manually set my own constraints when I know exactly what I need is frustrating. How can I explicitly delete the bullshit constraints that Xcode has automatically created and manually add my own instead?\n\nA:\n\nThe problem when working with constraints in IB/storyboard is that Xcode will never allow you to have ambiguous constraints. Ever. Including when you are in the process if editing them. So whenever you may want to edit multiple constraints, Xcode may decide to automatically add some to prevent a disallowed state.\nThis can be painful to work with. What I have found kind of works is adding bogus constraints on all four edges while I am setting other constraints. This - hopefully - keeps IB in check and prevents it from adding completely dumb stuff.\nYou can add constraints from the top menu. Click the object and then Editor from the to menu. You can add constraints with the Align and Pin submenus (which then can be edited later on).\nNote: not all constraints can be added in IB. Aspect ratio for example can only be done in code.\nPS. Xcode will only allow you to delete constraints that are redundant, i.e that are not going to leave an ambiguous state. So in order to delete the \"b****t\" constraints, you have to first add enough others to create an allowed state.\n\n"
}