{
    "criteria": [
        {
            "criterion": "AllDocuments",
            "passed": true,
            "reason": "All documents pass."
        },
        {
            "criterion": "QuestionAnswerStringsV2",
            "passed": true,
            "reason": "Text contains ['Q:', 'A:']."
        },
        {
            "criterion": "FullyStructured",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamStringsV2",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesStrings",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesStringsV2",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ListPrefixV2",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesMinimalEmbed",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesSynonymsEmbed",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesDiverseEmbed",
            "passed": false,
            "reason": "Does not meet criterion."
        }
    ],
    "doc_id": "8465",
    "text": "Q:\n\nRxJava - Can't create handler inside thread that has not called Looper.prepare() - API 16\n\nFull disclosure, I'm still learning RxJava, it's a bit hard to grasp the idea if many of the tutorials available are not newbie friendly.\nThis error happens on API 16, works fine on API 23 & above (have tested below).\nAs you will see, I'm trying to replace Async Task with RxJava.\nThis is my code:\nprivate void getGps() {\n    TrackGPS gps = new TrackGPS(this);\n    Single.fromCallable(() -> {\n        if (gps.canGetLocation()) {\n            mMainVariables.setLongitude(gps.getLongitude());\n            mMainVariables.setLatitude(gps.getLatitude());\n\n            if (mMainVariables.getLongitude() != 0.0) {\n                Geocoder geocoder;\n                List<Address> addresses = null;\n\n                geocoder = new Geocoder(this, Locale.getDefault());\n                addresses = geocoder.getFromLocation(mMainVariables.getLatitude(), mMainVariables.getLongitude(), 1); // Here 1 represent max location result to returned, by documents it recommended 1 to 5\n                Log.e(\"Address:\", addresses.get(0).getAddressLine(0));\n                mMainVariables.setAddress(addresses.get(0).getAddressLine(0));\n                mMainVariables.setCity(addresses.get(0).getLocality());\n                mMainVariables.setState(addresses.get(0).getAdminArea());\n                mMainVariables.setCountry(addresses.get(0).getCountryName());\n                mMainVariables.setPostalCode(addresses.get(0).getPostalCode());\n                mMainVariables.setKnownName(addresses.get(0).getFeatureName());\n                Log.d(\"Lat Long:\", \"Lat: \" + Double.toString(mMainVariables.getLatitude()) + \" Long: \" + Double.toString(mMainVariables.getLongitude()));\n                return addresses.get(0).getAddressLine(0);\n            } else {\n                gps.showSettingsAlert();\n            }\n\n        } else {\n            Toasty.error(this, \"Can't locate GPS\", Toast.LENGTH_SHORT, true).show();\n        }\n        return \"\";\n    }).subscribeOn(Schedulers.io())\n            .observeOn(AndroidSchedulers.mainThread())\n            .subscribe((result) -> {\n                mTxtResult.setText(result);\n            });\n}\n\nEDIT: Stack below:\n05-23 20:26:58.936 3420-3420/com.example.ga.realm3 E/AndroidRuntime: FATAL EXCEPTION: main\n                                                                 io.reactivex.exceptions.OnErrorNotImplementedException: Can't create handler inside thread that has not called Looper.prepare()\n                                                                     at io.reactivex.internal.functions.Functions$OnErrorMissingConsumer.accept(Functions.java:704)\n                                                                     at io.reactivex.internal.functions.Functions$OnErrorMissingConsumer.accept(Functions.java:701)\n                                                                     at io.reactivex.internal.observers.ConsumerSingleObserver.onError(ConsumerSingleObserver.java:45)\n                                                                     at io.reactivex.internal.operators.single.SingleObserveOn$ObserveOnSingleObserver.run(SingleObserveOn.java:79)\n                                                                     at io.reactivex.android.schedulers.HandlerScheduler$ScheduledRunnable.run(HandlerScheduler.java:109)\n                                                                     at android.os.Handler.handleCallback(Handler.java:730)\n\nA:\n\nYou cannot show UI related stuff in your Scheduler thread. You are trying to show a Toast and also I presume your showSettingsAlert() is also trying show a dialog.\nThis is against the threading policy. Very similar to \nCan't create handler inside thread that has not called Looper.prepare() inside AsyncTask for ProgressDialog\n\n"
}