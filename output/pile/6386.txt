{
    "criteria": [
        {
            "criterion": "AllDocuments",
            "passed": true,
            "reason": "All documents pass."
        },
        {
            "criterion": "Domain",
            "passed": false,
            "reason": "Document source unavailable."
        },
        {
            "criterion": "QuestionAnswerStrings",
            "passed": true,
            "reason": "Text contains Q:."
        },
        {
            "criterion": "QuestionAnswerStringsV2",
            "passed": true,
            "reason": "Text contains ['Q:', 'A:']."
        },
        {
            "criterion": "FullyStructured",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamStrings",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamStringsV2",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesStrings",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ListPrefix",
            "passed": false,
            "reason": "Found 0 list prefixes. (Min: 5)"
        },
        {
            "criterion": "ListPrefixV2",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesMinimalEmbed",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesSynonymsEmbed",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesDiverseEmbed",
            "passed": true,
            "reason": "Text contains ['The text will always only have one of the 3 options in it. (0.187)']."
        }
    ],
    "doc_id": "6386",
    "text": "Q:\n\nSearch for multiple strings and print out match\n\nI have a command that prints out this long line, and i'm looking for a way to search for 3 different strings and when one is found it should be printed. The text will always only have one of the 3 options in it.\n\nb\"bid: 5.0\\r\\ncompute_on: cpu\\r\\nconcent_enabled: true\\r\\ncost: null\\r\\nduration: 4.870952844619751\\r\\nestimated_cost: '1666666666666666667'\\r\\nestimated_fee: '56000000000000'\\r\\nfee: null\\r\\nid: a197d3fa-dfb4-11e8-9f77-a6389e8e7978\\r\\nlast_updated: 1541282756.6588786\\r\\nname: '4444'\\r\\noptions:\\r\\n  compositing: false\\r\\n  format: PNG\\r\\n  frame_count: 1\\r\\n  frames: '1'\\r\\n  output_path: C:/Users/me/Google Drive/GolemProject/var/media/e/output/4444\\r\\n  resolution:\\r\\n  - 222\\r\\n  - 222\\r\\npreview: C:\\Users\\me\\AppData\\Local\\golem\\golem\\default\\rinkeby\\res\\a197d3fa-dfb4-11e8-9f77-a6389e8e7978\\tmp\\current_preview.PNG\\r\\nprogress: 0.00 %\\r\\nresources:\\r\\n- C:/Users/me/Google Drive/GolemProject/var/media/e/fa3ee533-2020-45e7-9f5c-5501baa49285/bmw27/bmw27_cpu.blend\\r\\n- C:\\Users\\me\\Google Drive\\GolemProject\\var\\media\\e\\fa3ee533-2020-45e7-9f5c-5501baa49285\\bmw27\\bmw27_cpu.blend\\r\\nstatus: Waiting\\r\\nsubtask_timeout: 0:20:00\\r\\nsubtasks: 1\\r\\ntime_remaining: ???\\r\\ntime_started: 1541282753.4829328\\r\\ntimeout: 0:40:00\\r\\ntype: Blender\\r\\n\\r\\n\"\n\nMy current code looks like this.\nstatus = subprocess.check_output([\"golemcli\", \"tasks\", \"show\", line], shell=True)\nfindstatus = ['Waiting', 'Finished', 'Timeout']\nprintstatus = str(status)\nfor line in printstatus:\n    if any(word in line for word in findstatus):\n        print(line)\n\nBut it doesnt seem like it finds anything because nothing ever gets printed.\n\nA:\n\nYou are iterating over characters - not lines. \nstatus = b\"bid: 5.0\\r\\ncompute_on: cpu\\r\\nconcent_enabled: true\\r\\ncost: null\\r\\nduration: 4.870952844619751\\r\\nestimated_cost: '1666666666666666667'\\r\\nestimated_fee: '56000000000000'\\r\\nfee: null\\r\\nid: a197d3fa-dfb4-11e8-9f77-a6389e8e7978\\r\\nlast_updated: 1541282756.6588786\\r\\nname: '4444'\\r\\noptions:\\r\\n compositing: false\\r\\n format: PNG\\r\\n frame_count: 1\\r\\n frames: '1'\\r\\n output_path: C:/Users/me/Google Drive/GolemProject/var/media/e/output/4444\\r\\n resolution:\\r\\n - 222\\r\\n - 222\\r\\npreview: C:\\Users\\me\\AppData\\Local\\golem\\golem\\default\\rinkeby\\res\\a197d3fa-dfb4-11e8-9f77-a6389e8e7978\\tmp\\current_preview.PNG\\r\\nprogress: 0.00 %\\r\\nresources:\\r\\n- C:/Users/me/Google Drive/GolemProject/var/media/e/fa3ee533-2020-45e7-9f5c-5501baa49285/bmw27/bmw27_cpu.blend\\r\\n- C:\\Users\\me\\Google Drive\\GolemProject\\var\\media\\e\\fa3ee533-2020-45e7-9f5c-5501baa49285\\bmw27\\bmw27_cpu.blend\\r\\nstatus: Waiting\\r\\nsubtask_timeout: 0:20:00\\r\\nsubtasks: 1\\r\\ntime_remaining: ???\\r\\ntime_started: 1541282753.4829328\\r\\ntimeout: 0:40:00\\r\\ntype: Blender\\r\\n\\r\\n\"\n\nfindstatus = ['Waiting', 'Finished', 'Timeout']\nprintstatus = str(status)\n\n# you need to split it here, by literal \\r\\n - not the special characters\n# for carriage return, linefeed \\r\\n: \n\nfor line in printstatus.split(r\"\\r\\n\"):         # split here by _literal_ \\\\r\\\\n \n    if any(word in line for word in findstatus):\n        print(line)\n\nAlternate way using sets:\nfindstatus = set([ 'Waiting', 'Finished', 'Timeout'] )\nprintstatus = str(status)\n\n# you need to split it here, by literal \\r\\n - not the special characters\n# for carriage return, linefeed \\r\\n: \n\nfor line in printstatus.split(r\"\\r\\n\"):         # split here by _literal_ \\\\r\\\\n \n    status = set( line.split() ) & findstatus\n    if status:\n        print(*status) \n\nOutput:\nstatus: Waiting\n\n"
}