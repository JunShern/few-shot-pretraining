{
    "criteria": [
        {
            "criterion": "AllDocuments",
            "passed": true,
            "reason": "All documents pass."
        },
        {
            "criterion": "QuestionAnswerStringsV2",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "FullyStructured",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamStringsV2",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesStrings",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesStringsV2",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ListPrefixV2",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesMinimalEmbed",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesSynonymsEmbed",
            "passed": true,
            "reason": "Text contains ['So these are some of my ideas. (0.186)']."
        },
        {
            "criterion": "ExamplesDiverseEmbed",
            "passed": true,
            "reason": "Text contains ['So these are some of my ideas. (0.144)', 'Some of what you need is already available.http://search.cpan.org/~gmax/MySQL-Sandbox-3.0.05/lib/MySQL/Sandbox.pm (0.187)']."
        }
    ],
    "doc_id": "7822",
    "text": "Managing MySQL with MySQL Sandbox?\n\nNormally I like to use the OS\u2019s package manager to manage the software on my system. This ensures that things are done consistently. When managing MySQL I\u2019d also like to manage all my instances the same way. That makes life easier for me but also for my fellow DBAs and sysadmin colleagues.\n\nI use CentOS and the rpm packages it provides and these work quite well. However, the MySQL rpms do not allow me to manage single and multiple instances alike and while mysqld runs as the mysql user the instance management needs to be done as root (stopping, starting instances, or default access). If you want to run multiple instances you can also use mysqld_multi, but that\u2019s not the default setup.\n\nSo this is not ideal. While this may not be much of an issue if you manage a single server, if you manage tens or hundreds things changes somewhat and you REALLY want to manage all instances consistently.\n\nSo I\u2019ve been thinking about finding an alternative which would suit me better. What do I need?\n\nAutomatic start up on server boot, and shutdown of \u201cSELECTED\u201d instances.\n\nAbility to support different versions of MySQL running at the same time.\n\nStraight forward mechanism to upgrade a server or switch the version of MySQL that is used to manage a specific instance.\n\nI was thinking of writing my own scripts but one solution which looks potentially close enough to my ideal solution would be to use Giuseppe Maxia\u2019s MySQL Sandbox. I think this project was born with a completely different goal (enable you to quickly get a different MySQL version up and running for testing), but it actually seems to solve most of the things I want for managing production instances.\n\nIf you\u2019ve not used it yet take a look. It works pretty well and is easy to setup.\n\nThe ability to indicate which instances should start / stop and a way to trigger this from init during startup / shutdown.\n\nThe way to access the instances is quite different from a normal mysql installation. That has confused me quite a bit and as I use the Sandbox infrequently I have to go back and workout how to \u201cget in\u201d and also how to start or stop any instance, or check if it\u2019s running.\n\nI\u2019m not entirely sure if it\u2019s easy to adjust the paths for the different mysql \u201careas\u201d to fit in with my usage of MySQL or something similar to OFA. These things are probably pretty easy to fix.\n\nThe name MySQL Sandbox sounds rather inappropriate if you really use it to manage mysql instances. That\u2019s easy to change.\n\nIdeal MySQL Layout\n\nSo how would I like the layout to look like?\n\nTarball binaries should probably be located somewhere like /path/to/some_binary_name, which allows us to distinguish between different architectures (i686, x86_64), and versions (5.0.89, 5.1.42, 5.5.0-m2). That\u2019s already solved by the current tarballs which have a prefix such as mysql-5.5.0-m2-osx10.5-x86.\n\nEach instance\u2019s data should probably be located along the lines of:\n\n/path/to/instance_name/data (for MySQL data files and my.cnf)\n\n/path/to/instance_name/tmp (for MySQL tmpdir)\n\n/path/to/instance_name/log (for MySQL logfiles (binlog and relaylog)\n\nThis allows the locations under /path/to/ to be mounted on different file systems for performance (if needed). In my case /path/to is simply /mysql, but that does not need to be that rigid. OFA is slightly different but the idea is the same.\n\nAccessing the Instances\n\nHow do I access the instances?\n\nCurrently I access the instances using the following mechanism. Each instance has a name so that name is used to access the instance as a suffix of the normal mysql command.\n\nThe final thing to want to do is to upgrade an instance. Normally this involves:\n\nDownloading the new version.\n\nStopping the instance to be upgraded.\n\nAdjusting links/directories.\n\nPerform various \u201cadmin tasks\u201d to upgrade the instance.\n\nStarting it normally again.\n\nAll that MySQL sandbox would need to do would be to perform 3.\n\nSo these are some of my ideas. I need to look at the MySQL Sandbox code in more detail to see if it will fit my needs but I expect it should not be too difficult to adjust it if needed.\n\nPerhaps if you use other operating systems or package managers and manage one or more MySQL instances on multiple servers these issues are less of a problem. I have not seen comments by others worrying about some of the limitations of the current MySQL rpms and the problem is not really with rpm itself but with the expected usage of a single instance on a single server.\n\nSo is there a better way to do this or might MySQL Sandbox be the right solution to achieve my goal?\n\nPublished by\n\nSimon J Mudd\n\nBorn in England, I now live in Spain, but spent a few years living in the Netherlands.\nI previously worked in banking (financial markets) both in IT and as a broker, but IT has always had a stronger influence. Now working at booking.com as a Senior Database Administrator.\nOther interests include photography, and travel.\nSimon is married, with two children and lives in Madrid.\nView all posts by Simon J Mudd\n\n4 thoughts on \u201cManaging MySQL with MySQL Sandbox?\u201d\n\nAbout the things that you say seem to be missing, please look at the reference manual, especially the sbtool and the scripts created by the sandbox installer. Some of what you need is already available.http://search.cpan.org/~gmax/MySQL-Sandbox-3.0.05/lib/MySQL/Sandbox.pm\nThe ability of starting/stopping a sandbox at startup/shutdown has never been in the design.\n\nMySQL::Sandbox does already provide a common directory ($HOME/sandboxes)\n\nThe single sandbox installer has more than 20 options that you can fiddle with to achieve optimal installations. The group sandbox installers can do the same fine tuning by means of environment variables that invoke the above mentioned options.\n\nRegarding the name, it is appropriate for the usage for which it was created.\n\nRegarding the init scripts both Oracle and Sybase have root owned scripts which su to the non-root script which does the real task of start/stopping the instances. This should not be to hard to replicate for MySQL.\n\nThe thing that is important to me is some way to be able to select which instances will be started on boot. On some development servers I have over 10 mysql instances running and some of those may not be fully operational or I may want to keep them down. Having a way to able to say: start all \u201cselected\u201d instances would be nice. I\u2019m not sure how that fits in with your current scheme.\n\nIn any case the MySQL Sandbox does seem to have the most generic and flexible way to manage MySQL servers and is easy to use."
}