{
    "criteria": [
        {
            "criterion": "AllDocuments",
            "passed": true,
            "reason": "All documents pass."
        },
        {
            "criterion": "Domain",
            "passed": false,
            "reason": "Document source unavailable."
        },
        {
            "criterion": "QuestionAnswerStrings",
            "passed": true,
            "reason": "Text contains Q:."
        },
        {
            "criterion": "QuestionAnswerStringsV2",
            "passed": true,
            "reason": "Text contains ['Q:', 'A:', 'A:']."
        },
        {
            "criterion": "FullyStructured",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamStrings",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamStringsV2",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesStrings",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ListPrefix",
            "passed": false,
            "reason": "Found 0 list prefixes. (Min: 5)"
        },
        {
            "criterion": "ListPrefixV2",
            "passed": false,
            "reason": "Does not meet criterion."
        }
    ],
    "doc_id": "3430",
    "text": "Q:\n\nNot allowing user exit the app using Home Button\n\nIn my app i do not want the user be able to exit my app on pressing the Home press key. There's a specific reason for not allowing the user to do this. Can anyone suggest what can be the correct way to achieve this?\nAt present what i am doing is Overriding the onKeyDown()-Method. The Code for it is as follows:\n@Override\npublic boolean onKeyDown(int keyCode, KeyEvent event)\n{\n    if (keyCode == KeyEvent.KEYCODE_BACK || keyCode == KeyEvent.KEYCODE_HOME) \n    {\n       Intent intent = new Intent(this, LockScreen.class);\n       intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);\n       startActivity(intent);\n    }\n    return true;\n}\n\nIn the Manifest file i am making changes as below:\n<activity android:name=\".LockScreen\"\n  android:screenOrientation=\"portrait\"\n  android:theme=\"@android:style/Theme.NoTitleBar.Fullscreen\">\n    <intent-filter>             \n    <category android:name=\"android.intent.category.HOME\"/>\n    </intent-filter>\n</activity>\n\nA:\n\nI agree with inazaruk but if you still want to do that then you need to override:\n@Override\npublic void onAttachedToWindow() {\n\n  this.getWindow().setType(WindowManager.LayoutParams.TYPE_KEYGUARD);\n  super.onAttachedToWindow();\n\n}\n\nA:\n\nAndroid doesn't support this scenario for simple apps, so you can't do this. \nRead this article by CommonsWare: Please ignore the Home Button. It will explain why handling Home button the way you want is not really a good idea.\n\n"
}