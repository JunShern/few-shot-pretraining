{
    "criteria": [
        {
            "criterion": "AllDocuments",
            "passed": true,
            "reason": "All documents pass."
        },
        {
            "criterion": "QuestionAnswerStringsV2",
            "passed": true,
            "reason": "Text contains ['Q:', 'A:']."
        },
        {
            "criterion": "FullyStructured",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamStringsV2",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesStrings",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesStringsV2",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ListPrefixV2",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesMinimalEmbed",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesSynonymsEmbed",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesDiverseEmbed",
            "passed": false,
            "reason": "Does not meet criterion."
        }
    ],
    "doc_id": "3292",
    "text": "Q:\n\nturbolinks / redirects after a delete\n\nHaving a delete response handled via js, I'm reloading the curent page via turbolinks. In other words :\n// onclick setup encapsulates the following\naxios({\n  method: \"delete\",\n  url: e.target.getAttribute(\"href\"),\n  headers: Csrf() // passes the csrf token to keep things 'rails'\n}).then(() => {\n  Turbolinks.visit(locationWithoutHash, { action: \"replace\" });\n});\n\nOur signout link is handled like so.\nSigning out then redirects to the root_url.\nThe problem is, Turbolinks.visit seems to preserve the initial method :\nStarted DELETE \"/auth/sign_out\" for 127.0.0.1 at 2018-04-22 11:21:12 +0200\nProcessing by Devise::SessionsController#destroy as HTML\n...stuff\nRedirected to http://demodemo.lvh.me:3000/\nCompleted 302 Found in 11ms (ActiveRecord: 1.9ms)\n\nStarted DELETE \"/\" for 127.0.0.1 at 2018-04-22 11:21:12 +0200\nActionController::RoutingError (No route matches [DELETE] \"/\"): etc...\n\nIt might just be a matter of syntax/grammar which I  could not spot within the source code\nWithout discussing the fact that such behaviour makes sense or not, is it possible to specify a method to Turbolinks.visit in order to make sure it effectively passes a GET ? (as I'm just using it to reload the current page no matter what happens, it will always be a GET)\n\nA:\n\nIt's happening when the destroy method is like this after delete redirect_to request.referer or any URL something like this if you has like this then change to like this\ndef destroy\n    @obj = Model.find(params[:id])\n\n    respond_to do |format|\n        if @obj.destroy\n            flash[:error] = 'Deleted'\n            format.html { redirect_to request.referer, status: 303  }\n            format.js { redirect_to request.referer, status: 303  }\n        end\n    end\nend\n\nI think it will help\n\n"
}