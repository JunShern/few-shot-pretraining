{
    "criteria": [
        {
            "criterion": "AllDocuments",
            "passed": true,
            "reason": "All documents pass."
        },
        {
            "criterion": "QuestionAnswerStringsV2",
            "passed": true,
            "reason": "Text contains ['Q:', 'A:']."
        },
        {
            "criterion": "FullyStructured",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamStringsV2",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesStrings",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesStringsV2",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ListPrefixV2",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesMinimalEmbed",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesSynonymsEmbed",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesDiverseEmbed",
            "passed": false,
            "reason": "Does not meet criterion."
        }
    ],
    "doc_id": "5023",
    "text": "Q:\n\nSign In with FB issue: FB popup window with the Login dialog is blocked by a web browser\n\nFB documentation says:\n\nAs noted in the reference docs for this function, it results in a\n  popup window showing the Login dialog, and therefore should only be\n  invoked as a result of someone clicking an HTML button (so that the\n  popup isn't blocked by browsers).\n\nAnd I did as it says, I put the FB.login function into an onCLick function. But the the Login dialog is still blocked. Why? How to reorder the code?\n// Facebook\n// Here is a click event, so FB.login is inside a click function.\n$(\"#login_btn_fb\").on(\"click\", function() {\n\n    function getUserData(res, fCallback) {\n        if(res.authResponse != null) {\n            FB.api('/me', function(response) {\n                console.log('/me_: ', response);\n            });\n        }\n        else {\n            console.log(\"getUserData CANCEL: \", res);\n            return;\n        }\n    };\n\n    FB.getLoginStatus(function(res) {\n\n        var uid = null;\n        var accessToken = null;\n\n        if($.isPlainObject(res)) {\n\n            // Fb+ App+\n            if(res.status == \"connected\") {\n                console.error(\"connected\");\n                uid = res.authResponse.userID;\n                accessToken = res.authResponse.accessToken;\n                getUserData(res, null);\n            }\n            // Fb+ App-\n            else if(res.status == \"not_authorized\") {\n                console.error(\"not_authorized\");\n                FB.login(function(res) {\n                    getUserData(res, null);\n                }, {scope: 'email,user_birthday,user_photos,public_profile,user_location'});\n            }\n            // Fb- App-\n            else {\n                console.log(\"UNKNOWN\");\n                FB.login(function(res) {\n                    // console.log(\"===UNK FB.login res: \", res);\n                    getUserData(res, null);\n                }, {scope: 'email,user_birthday,user_photos,public_profile,user_location', return_scopes: true});\n            };\n        }\n        // ERROR with FB\n        else {\n            alert(\"Facebook sign in failure. Please try again later.\");\n            return;\n        }\n    });\n});\n\nA:\n\nYou did not put FB.login in a function that is directly called by a User event, but in an asynchronous callback function of FB.getLoginStatus.\nUse FB.getLoginStatus to refresh a User Session and to check if the User is logged in right when you load your Page (right after FB.init), and FB.login only on User interaction - but NOT in an asynchronous callback, of course.\n\n"
}