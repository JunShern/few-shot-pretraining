{
    "criteria": [
        {
            "criterion": "AllDocuments",
            "passed": true,
            "reason": "All documents pass."
        },
        {
            "criterion": "Domain",
            "passed": false,
            "reason": "Document source unavailable."
        },
        {
            "criterion": "QuestionAnswerStrings",
            "passed": true,
            "reason": "Text contains Q:."
        },
        {
            "criterion": "QuestionAnswerStringsV2",
            "passed": true,
            "reason": "Text contains ['Q:', 'A:']."
        },
        {
            "criterion": "FullyStructured",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamStrings",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamStringsV2",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesStrings",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ListPrefix",
            "passed": false,
            "reason": "Found 0 list prefixes. (Min: 5)"
        },
        {
            "criterion": "ListPrefixV2",
            "passed": false,
            "reason": "Does not meet criterion."
        }
    ],
    "doc_id": "4400",
    "text": "Q:\n\nSymfony 3 unit tests pass locally but not at Travis\n\nI have a Symfony 3 project with tests that pass in php 5.5 & 5.6 but fail in 7.0 and 7.1. All the same tests pass when using Symfony 2.8. All tests pass locally but some fail on travis.\nshows failing tests: https://travis-ci.org/zikula/core/builds/257745627\ntravis file: https://github.com/zikula/core/blob/master/.travis.yml#L40\nI\u2019m hoping someone here will have some insight. I\u2019m pretty much at a complete loss.\noriginally in the Travis file I just ran phpunit and it was passing until very recently where I started to get errors like reported here (https://github.com/symfony/symfony/issues/19532) e.g. YamlFileLoader - Undefined class constant 'PARSE_CONSTANT'\nso I tried both ./src/vendor/symfony/symfony/src/Symfony/Bridge/PhpUnit/bin/simple-phpunit and bin/pnpunit (current setting) and they both fail (but differently!)\nas it is currently set up I get these errors before the tests fail:\n\n$ ./bin/phpunit\n  PHP Warning:  PHP Startup: Unable to load dynamic library '/home/travis/.phpenv/versions/7.0.7/lib/php/extensions/no-debug-zts-20151012/apc.so' - /home/travis/.phpenv/versions/7.0.7/lib/php/extensions/no-debug-zts-20151012/apc.so: cannot open shared object file: No such file or directory in Unknown on line 0\nWarning: PHP Startup: Unable to load dynamic library '/home/travis/.phpenv/versions/7.0.7/lib/php/extensions/no-debug-zts-20151012/apc.so' - /home/travis/.phpenv/versions/7.0.7/lib/php/extensions/no-debug-zts-20151012/apc.so: cannot open shared object file: No such file or directory in Unknown on line 0\nPHP Warning:  PHP Startup: Unable to load dynamic library '/home/travis/.phpenv/versions/7.0.7/lib/php/extensions/no-debug-zts-20151012/memcache.so' - /home/travis/.phpenv/versions/7.0.7/lib/php/extensions/no-debug-zts-20151012/memcache.so: cannot open shared object file: No such file or directory in Unknown on line 0\nWarning: PHP Startup: Unable to load dynamic library '/home/travis/.phpenv/versions/7.0.7/lib/php/extensions/no-debug-zts-20151012/memcache.so' - /home/travis/.phpenv/versions/7.0.7/lib/php/extensions/no-debug-zts-20151012/memcache.so: cannot open shared object file: No such file or directory in Unknown on line 0\n\nSo I am guessing this is related because I do not get those errors locally or in php 5.5/5.6\nany ideas how to solve this? Thanks in advance!\n\nA:\n\nFirstly, composer run on PHP 7 might bring different versions of dependencies than if it was run on PHP 5. This is because many packages are dropping PHP 5 support these days. Perhaps you're fetching a dependency that behaves differently on PHP 7.\nAnother option is that your code behaves differently on PHP 7. For example, if failures you're getting are related to sorting, it might be that your algorithm sorts in a slightly different way depending on a PHP version it's run on.\n\n"
}