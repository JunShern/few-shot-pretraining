{
    "criteria": [
        {
            "criterion": "AllDocuments",
            "passed": true,
            "reason": "All documents pass."
        },
        {
            "criterion": "Domain",
            "passed": false,
            "reason": "Document source unavailable."
        },
        {
            "criterion": "QuestionAnswerStrings",
            "passed": true,
            "reason": "Text contains Q:."
        },
        {
            "criterion": "QuestionAnswerStringsV2",
            "passed": true,
            "reason": "Text contains ['Q:', 'A:', 'A:']."
        },
        {
            "criterion": "FullyStructured",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamStrings",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamStringsV2",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesStrings",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ListPrefix",
            "passed": false,
            "reason": "Found 0 list prefixes. (Min: 5)"
        },
        {
            "criterion": "ListPrefixV2",
            "passed": true,
            "reason": "Text contains ['1', '2', '3', '4', '5', '6', '7', '8', '9', '1', '1']."
        },
        {
            "criterion": "ExamplesMinimalEmbed",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesSynonymsEmbed",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesDiverseEmbed",
            "passed": false,
            "reason": "Does not meet criterion."
        }
    ],
    "doc_id": "6478",
    "text": "Q:\n\nCORS preflight request returning HTTP 401 with windows authentication\n\nI searched a lot on Google and Stack overflow to find a solution for my problem, but nothing worked.\nHere is my problem:\n\nI use IIS 7 with a special programming environment called WebDEV that does not allow direct manipulation of OPTIONS HTTP method. So, all solutions suggesting some kind of server-side request handling using code are not feasible. \nI have to use Window authentication and disable anonymous access\nI have a page that uses CORS to POST to this server. As this POST should have Content-type: Octet-stream, a preflight is issued by the browser.\nWhen I enable anonymous access, everything works fine (CORS is well configured)\nWhen I disable anonymous access, the server replies with HTTP 401 unauthorized response to the preflight request, as it does not contain credentials information.\nI tried to write a module for IIS that accepts OPTIONS requests like this, but it did not work (couldn't add the module correctly to IIS, maybe)\npublic class CORSModule : IHttpModule\n   {\n\n          public void Dispose() { \n          }\n\n          public void Init(HttpApplication context)\n          {\n               context.PreSendRequestHeaders += delegate\n               {\n                  if (context.Request.HttpMethod == \"OPTIONS\")\n                   {\n                         var response = context.Response;\n                         response.StatusCode = (int)HttpStatusCode.OK;\n                   }\n               };\n          }\n    } \n\nThe question is: How can I make IIS respond with HTTP 200 to the preflight request without enabling anonymous access or writing some server-side code? Is there an easy configuration or a ready-made module for IIS to do so? At least, what are the detailed steps to install the above module into IIS 7?\n\nA:\n\nHere is the solution that uses \"URL Rewrite\" IIS module. It works perfectly.\n1- Stop IIS service (maybe not necessary)\n2- Install \"web platform installer\" from https://www.microsoft.com/web/downloads/platform.aspx\n3- Go to \"Applications\" tab and search for \"URL Rewrite\" and download it\n4- Install this hotfix KB2749660 (maybe not necessary)\n5- Open IIS configuration tool, double click \"URL Rewrite\"\n6- Add a new blankrule\n7- Give it any name\n8- In \"Match URL\", specify this pattern: .*\n9- In \"Conditions\", specify this condition entry: {REQUEST_METHOD} and this pattern: ^OPTIONS$\n10- In \"Action\", specify: action type Personalized response, state code 200, reason Preflight, description Preflight\n11- Start the server\nNow, the server should reply with a 200 status code response to the preflight request, regardless of the authentication. \nRemarks: I also disabled all compression, I don't know if it matters.\n\nA:\n\nFrom AhmadWabbi's answer, easy XML pasting into your web.config:\n<system.webServer>\n    <rewrite>\n        <rules>\n            <rule name=\"CORS Preflight Anonymous Authentication\" stopProcessing=\"true\">\n                <match url=\".*\" />\n                <conditions>\n                    <add input=\"{REQUEST_METHOD}\" pattern=\"^OPTIONS$\" />\n                </conditions>\n                <action type=\"CustomResponse\" statusCode=\"200\" statusReason=\"Preflight\" statusDescription=\"Preflight\" />\n            </rule>\n        </rules>\n    </rewrite>\n</system.webServer>\n\n"
}