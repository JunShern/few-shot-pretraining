{
    "criteria": [
        {
            "criterion": "AllDocuments",
            "passed": true,
            "reason": "All documents pass."
        },
        {
            "criterion": "QuestionAnswerStringsV2",
            "passed": true,
            "reason": "Text contains ['Q:', 'A:']."
        },
        {
            "criterion": "FullyStructured",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamStringsV2",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesStrings",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesStringsV2",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ListPrefixV2",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesMinimalEmbed",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesSynonymsEmbed",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesDiverseEmbed",
            "passed": true,
            "reason": "Text contains ['Making the assumption that there will only ever be one resources :posts in your routes file, a simple example could be done like: (0.186)']."
        }
    ],
    "doc_id": "3176",
    "text": "Q:\n\nHow to pass text from gets.chomp to a file\n\nI want to push resources :#{get} to the bottom of resources :posts.\nget = gets.chomp\n@file = File.open('config/routes.rb','r+')\nmyString = \"\n  resources :#{get}s\n\"\n\nRails.application.routes.draw do\n  resources :users do\n    resources :posts\n  end\n  # For details on the DSL available within this file, see http://guides.rubyonrails.org/routing.html\nend\n\nThe result is:\nRails.application.routes.draw do\n  resources :users do\n    resources :posts\n    resources :categories\n  end\n  # For details on the DSL available within this file, see http://guides.rubyonrails.org/routing.html\nend\n\nHow do I pass data from user input to a file?\n\nA:\n\nMaking the assumption that there will only ever be one resources :posts in your routes file, a simple example could be done like:\nrequire 'active_support/core_ext/string/inflections' # for `pluralize`\n\nget = gets.chomp\nlines = File.read(\"config/routes.rb\").split(/\\n/)\n\n# find the line of the file we want to insert after. This assumes\n# there will only be a single `resources :posts` in your routes.\nindex = lines.index { |line| line.strip == 'resources :posts' }\n# duplicate the existing line and replace 'posts' with the pluralized form\n# of whatever the user input to gets, we do it this way to keep indentation\nnew_line = lines[index].gsub(/posts/, get.pluralize)\n\n# insert the new line on the line after the `resources :posts` and then write\n# the entire thing back out to 'config/routes.rb'\nlines.insert(index + 1, new_line)\nFile.open(\"config/routes.rb\", \"w\") { |f| f.write(lines.join(\"\\n\")) }\n\nDepending on what you're trying to do, though, you may find it useful to look into Rails Generators.\nbefore\nRails.application.routes.draw do\n  resources :users do\n    resources :posts\n  end\nend\n\nexecute\n$ echo category | ruby example.rb\n\nafter\nRails.application.routes.draw do\n  resources :users do\n    resources :posts\n    resources :categories\n  end\nend\n\n"
}