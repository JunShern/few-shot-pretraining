{
    "criteria": [
        {
            "criterion": "AllDocuments",
            "passed": true,
            "reason": "All documents pass."
        },
        {
            "criterion": "Domain",
            "passed": false,
            "reason": "Document source unavailable."
        },
        {
            "criterion": "QuestionAnswerStrings",
            "passed": true,
            "reason": "Text contains Q:."
        },
        {
            "criterion": "QuestionAnswerStringsV2",
            "passed": true,
            "reason": "Text contains ['Q:', 'A:']."
        },
        {
            "criterion": "FullyStructured",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamStrings",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamStringsV2",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesStrings",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ListPrefix",
            "passed": false,
            "reason": "Found 0 list prefixes. (Min: 5)"
        },
        {
            "criterion": "ListPrefixV2",
            "passed": false,
            "reason": "Does not meet criterion."
        }
    ],
    "doc_id": "1272",
    "text": "Q:\n\nLogical error: Unable to determine the cause of segmentation fault\n\n    for (i = (routeVector.size () - 1); i >= 0; i--)\n    {\n        cout << \"Connected to -> \" << routeVector[i].exitPoint;\n        for (j = (routeVector.size () - 1); j >= 0; j--)\n        {\n            if (routeVector[i].selectedBranchesVector.size() > 0)\n            {\n                cout << \"\\n: routeVector[i].selectedBranchesVector[0].connectedExitPoint\" <<\nrouteVector[i].selectedBranchesVector[0].connectedExitPoint;\n\n                ******cout << \"\\nrouteVector[j].exitPoint:\" << routeVector[j].exitPoint;\n                if (routeVector[i].selectedBranchesVector[0].connectedExitPoint == routeVector[j].exitPoint)\n                {\n                    cout << \"Connected to -> \" << routeVector[i].selectedBranchesVector[0].connectedExitPoint;\n                }\n            }\n        }\n    }\n\nThe stared line is giving me a segmentation fault, I fail to understand why.\nIf the \"routeVector\" had nothing in \"selectedBranchesVector\", it wouldn't have even reached the inside if.\nWhat can be the cause of the said problem?\nEDIT 1:\nTo make the problem more clear, I printed out the two conditions of the statement and the error is shown on the stared line.\nThe structures are:\ntypedef struct branch\n{\n    unsigned int distance;\n    int          connectedExitPoint;\n} branch;\n\ntypedef struct route\n{\n    int    exitPoint;\n    vector <branch> selectedBranchesVector;\n} route;\n\nvector <route> routeVector;\n\nA:\n\nThis is dependent on the type of i and j - if i and j are unsigned, the above loops will loop back around quite happily - which is probably what is going on - print the indexes and you'll see...\n\n"
}