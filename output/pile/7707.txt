{
    "criteria": [
        {
            "criterion": "AllDocuments",
            "passed": true,
            "reason": "All documents pass."
        },
        {
            "criterion": "QuestionAnswerStringsV2",
            "passed": true,
            "reason": "Text contains ['Q:', 'A:']."
        },
        {
            "criterion": "FullyStructured",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamStringsV2",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesStrings",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesStringsV2",
            "passed": true,
            "reason": "Text contains For example."
        },
        {
            "criterion": "ListPrefixV2",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesMinimalEmbed",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesSynonymsEmbed",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesDiverseEmbed",
            "passed": false,
            "reason": "Does not meet criterion."
        }
    ],
    "doc_id": "7707",
    "text": "Q:\n\nRemoving and re-adding a subview with autolayout\n\nWhen using autolayout, my understanding is that removing a subview ( while holding a reference to it of course), the removed subview still knows its autolayout constraints. \nHowever, when adding it back to the super view later, the subview no longer knows its frame size. \nRather it seems to get a zero frame. \nI assumed that autolayout would auto size it to meet the constraints. Is that not the case? \nI thought auto layout meant don't mess with frame rects. Do I still need to set the initial frame rect when adding the subview, even with auto layout?\n\nA:\n\nWhen removing the subview, all the constraints that relate to that subview will be lost. If you need to add the subview again later, then you must add constraints to that subview again.\nTypically, I create the constraints in my custom subview. For example:\n-(void)updateConstraints\n{\n    if (!_myLayoutConstraints)\n    {\n        NSMutableArray *constraints = [NSMutableArray array];\n\n       // Create all your constraints here\n       [constraints addWhateverConstraints];\n\n       // Save the constraints in an ivar. So that if updateConstraints is called again,\n       // we don't try to add them again. That would cause an exception.\n       _myLayoutConstraints = [NSArray arrayWithArray:constraints];\n\n       // Add the constraints to myself, the custom subview\n       [self addConstraints:_myLayoutConstraints]; \n   }\n\n   [super updateConstraints];\n}\n\nupdateConstraints will be called automatically by the Autolayout runtime. The code above goes in your custom subclass of UIView. \nYou're right that in working with Autolayout, you don't want to touch frame sizes. Instead, just update the constraints in updateConstraints. Or, better still, set up the constraints so you don't have to.\nSee my answer on that topic:\nAutolayout UIImageView with programatic re-size not following constraints\nYou don't need to set the initial frame. If you do use initWithFrame, just set it to CGRectZero. Your constraints will - in fact must - detail either how big something should be, or other relationships that mean the runtime can deduce the size.\nFor example, if your visual format is: @\"|-[myView]-|\", that's everything you need for the horizontal dimension. Autolayout will know to size myView to be up to the bounds of the parent superview denoted by |. It's pretty cool.\n\n"
}