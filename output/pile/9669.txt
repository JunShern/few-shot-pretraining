{
    "criteria": [
        {
            "criterion": "AllDocuments",
            "passed": true,
            "reason": "All documents pass."
        },
        {
            "criterion": "Domain",
            "passed": false,
            "reason": "Document source unavailable."
        },
        {
            "criterion": "QuestionAnswerStrings",
            "passed": true,
            "reason": "Text contains Q:."
        },
        {
            "criterion": "QuestionAnswerStringsV2",
            "passed": true,
            "reason": "Text contains ['Q:', 'A:', 'A:']."
        },
        {
            "criterion": "FullyStructured",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamStrings",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamStringsV2",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesStrings",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ListPrefix",
            "passed": false,
            "reason": "Found 0 list prefixes. (Min: 5)"
        },
        {
            "criterion": "ListPrefixV2",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesMinimalEmbed",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesSynonymsEmbed",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesDiverseEmbed",
            "passed": false,
            "reason": "Does not meet criterion."
        }
    ],
    "doc_id": "9669",
    "text": "Q:\n\nRails and Authlogic. Show currently logged in users\n\nI would like to have the list of currently logged in users.\nThis code doesn't work :\n<% UserSession.all.each do |user_session| %>\n\n<% end %>\n\nA:\n\n@syed-aslam has a good solution, but you could just let Authlogic do the work. Check out the module Authlogic::ActsAsAuthentic::LoggedInStatus which defines two scopes: logged_in, logged_out\nYour code becomes:\n<% User.logged_in.each do |user| %>\n\n<% end %>\n\nP.S. I would normally link to the RDoc instead of source code, but the RDoc seems to have problems at the moment.\n\nA:\n\nAuthlogic gives you all kind of automatic columns that you don\u2019t really need to update or maintain on your own, they are maintained by the actual code flow of Authlogic itself.\nThose fields can contain some basic functionality related issues like the number of login attempts made, the ip address from which the attempt was made an or even what was the ip address the last time that user logged in. fun.\nThe magic column that will help us find who is probably online is the one called last_request_on, which basically indicates when was the last time that user made a request to your application.\nThe second parameter we\u2019ll need in order to make a more accurate selection, is the configuration option named logged_in_timeout, which sets the timeout after which a stale session will be expired, by default it will expire after 10 minutes.\nso if you set your session expiry to 30 minutes:\nclass User << ActiveRecord::Base\n  acts_as_authentic do |c|\n    c.logged_in_timeout 30.minutes\n  end\nend\n\nsearching for those users is pretty easy:\nmodule OnlineUsers\n  def count_online_users\n    User.count(:conditions => [\"last_request_at > ?\", 30.minutes.ago])\n  end\nend\n\n"
}