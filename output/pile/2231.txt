{
    "criteria": [
        {
            "criterion": "AllDocuments",
            "passed": true,
            "reason": "All documents pass."
        },
        {
            "criterion": "Domain",
            "passed": false,
            "reason": "Document source unavailable."
        },
        {
            "criterion": "QuestionAnswerStrings",
            "passed": true,
            "reason": "Text contains Q:."
        },
        {
            "criterion": "QuestionAnswerStringsV2",
            "passed": true,
            "reason": "Text contains ['Q:', 'A:']."
        },
        {
            "criterion": "FullyStructured",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamStrings",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamStringsV2",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesStrings",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ListPrefix",
            "passed": false,
            "reason": "Found 0 list prefixes. (Min: 5)"
        },
        {
            "criterion": "ListPrefixV2",
            "passed": false,
            "reason": "Does not meet criterion."
        }
    ],
    "doc_id": "2231",
    "text": "Q:\n\nAngular-Highcharts: Cannot read property of 'Apartment' of undefined of an object\n\nI am using Highcharts with Angular and I have two objects.\nObject one have mock data and object two have data pull from the cloud via xmlHttpRequest. When I use object one in Highcharts I get the intended result but with object two I get\n\nERROR TypeError: Cannot read property 'Condo' of undefined\nERROR TypeError: Cannot read property 'Apartment' of undefined\n\nAccording to the console.log, two objects look and should be identical.\nObject One:\nvar secondChartData = {\n   Condo: [120],\n   Apartment: [302],\n}\n//console log: secondChartData {Condo: Array(1), Apartment: Array(1)}\n\nObject Two:\nbuildingTypeObj = {};\nbuildingType: any[] = [];\nbuildingSize: any[] = [];\nconstructor() {\n  // other codes\n  this.buildingType.push(...from Firebase...);\n  this.buildingSize.push(...from Firebase...);\n  for(var j = 0; j < this.buildingType.length; j++) {\n    this.buildingTypeObj[this.buildingType[j]] = [this.buildingSize[j]];\n  }\n  //console log: secondChartData {Condo: Array(1), Apartment: Array(1)}\n}\n\nHighcharts:\nngAfterViewInit): void {\n  // other codes\n  function renderSecond(e) {\n    var point = this;\n    series: [{\n      data: this.buildingTypeObj[point.name], // doesn't work\n      //data: secondChartData[point.name], // works\n    }]\n  }\n}\n\nREST API via async because that was the system was setup:\nstatic async getInfo() {\n  // other codes\n  const xmlHttp = new XMLHttpREquest();\n  xmlHttp.open(\"GET\", groupsEndpoint, false); // false for async\n  // other codes\n}\n\nI do not understand why object two returns an error.\nCan the error be caused by async?\nHere is my Fiddle to show the intended behaviors\n\nA:\n\nSince you used an ES5 function syntax, the context of this is changed.\nYou can no longer access buildingTypeObj inside your component with this.\nInstead, have above your function a reference of this.\nngAfterViewInit() {\n  // other codes\n  const self = this;\n  function renderSecond(e) {\n    series: [{\n      data: self.buildingTypeObj[this.name],\n      data: secondChartData[this.name], \n    }]\n  }\n}\n\n"
}