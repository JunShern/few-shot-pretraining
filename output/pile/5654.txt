{
    "criteria": [
        {
            "criterion": "AllDocuments",
            "passed": true,
            "reason": "All documents pass."
        },
        {
            "criterion": "Domain",
            "passed": false,
            "reason": "Document source unavailable."
        },
        {
            "criterion": "QuestionAnswerStrings",
            "passed": true,
            "reason": "Text contains Q:."
        },
        {
            "criterion": "QuestionAnswerStringsV2",
            "passed": true,
            "reason": "Text contains ['Q:', 'A:']."
        },
        {
            "criterion": "FullyStructured",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamStrings",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamStringsV2",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesStrings",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ListPrefix",
            "passed": false,
            "reason": "Found 0 list prefixes. (Min: 5)"
        },
        {
            "criterion": "ListPrefixV2",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesMinimalEmbed",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesSynonymsEmbed",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesDiverseEmbed",
            "passed": false,
            "reason": "Does not meet criterion."
        }
    ],
    "doc_id": "5654",
    "text": "Q:\n\nDoes `git commit` commit changes that were not added\n\nI'm trying to learn git using the 'Pro Git' book by Scott Chacon. When explaining how to Stage modified files (page 18), i understand with git add the files are scheduled for commit and then commited with git commit. It mentions that a commit is done, only the changes that were added will be actually be commited, and if i change a file again, i'd have to add it againg before commit so that all changes are comitted. The text says:\n\nIt turns out that Git stages a file exactly as it is when you run the git add\n  command.If you commit now, the version of the file as it was when you last ran the git add\n  command is how it will go into the commit, not the version of the file as it looks in your working directory when you run git commit. If you modify a file after you run git add\n  , you have to run git add again to stage the latest version of the file.\n\nHowever, i'm seeing a different behaviour when trying it myself:\n$ git status              #start clean\n#On branch master\nnothing to commit (working directory clean)\n\n$ echo \"hello\" >> README.TXT \ngit-question> git add README.TXT #added change to README\n\n$ git status \n# On branch master\n# Changes to be committed:\n#   (use \"git reset HEAD <file>...\" to unstage)\n# \n#   modified:   README.TXT\n#\n\n$ echo \"good bye\" >> README.TXT            #change README after adding\n$ git status #now 'hello' is added to be committed but not 'good bye'\n# On branch master\n# Changes to be committed:\n#   (use \"git reset HEAD <file>...\" to unstage)\n#\n#   modified:   README.TXT\n#\n# Changes not staged for commit:\n#   (use \"git add <file>...\" to update what will be committed)\n#   (use \"git checkout -- <file>...\" to discard changes in working directory)\n#\n#   modified:   README.TXT\n#\n\n$ git commit -m \"only hello\" README.TXT        #commit, i would expect just 'hello' gets commited\n[master 86e65eb] only hello\n 1 file changed, 2 insertions(+)\n\n$ git status         #QUESTION: How come there's nothing to commit?!\n# On branch master\nnothing to commit (working directory clean)\n\nSo the question is: Shouldn't git commit just commit the changes that were added with git add? And if so, why does it commit the second change even if i didn't add it? \n\nA:\n\ngit commit will commit what is currently in the index and therefore what you explicitly added.\nHowever, in your example, you are doing git commit README.TXT which will commit the files you specify, that is the current file README.TXT. Just do git commit -m \"only hello\" to commit the index.\n\n"
}