{
    "criteria": [
        {
            "criterion": "AllDocuments",
            "passed": true,
            "reason": "All documents pass."
        },
        {
            "criterion": "Domain",
            "passed": false,
            "reason": "Document source unavailable."
        },
        {
            "criterion": "QuestionAnswerStrings",
            "passed": true,
            "reason": "Text contains Q:."
        },
        {
            "criterion": "QuestionAnswerStringsV2",
            "passed": true,
            "reason": "Text contains ['Q:', 'A:']."
        },
        {
            "criterion": "FullyStructured",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamStrings",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamStringsV2",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesStrings",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ListPrefix",
            "passed": false,
            "reason": "Found 0 list prefixes. (Min: 5)"
        },
        {
            "criterion": "ListPrefixV2",
            "passed": false,
            "reason": "Does not meet criterion."
        }
    ],
    "doc_id": "8077",
    "text": "Q:\n\n\u0421\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u043a\u0430 \u0432\u044b\u0431\u0440\u0430\u043d\u043d\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0438 \u0434\u0432\u0443\u043c\u0435\u0440\u043d\u043e\u0433\u043e \u043c\u0430\u0441\u0441\u0438\u0432\u0430\n\n\u041f\u043e\u0436\u0430\u043b\u0443\u0439\u0441\u0442\u0430, \u043d\u0430\u043f\u0438\u0448\u0438\u0442\u0435 \u043a\u0443\u0441\u043e\u043a \u043a\u043e\u0434\u0430, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0441\u043e\u0440\u0442\u0438\u0440\u0443\u0435\u0442 \u0432\u044b\u0431\u0440\u0430\u043d\u043d\u0443\u044e \u0441\u0442\u0440\u043e\u043a\u0443 \u0434\u0432\u0443\u043c\u0435\u0440\u043d\u043e\u0433\u043e \u043c\u0430\u0441\u0441\u0438\u0432\u0430. \u041f\u0438\u0448\u0443 - \u043d\u0435 \u0440\u0430\u0431\u043e\u0442\u0430\u0435\u0442, \u0432\u0441\u0442\u0430\u0432\u043b\u044f\u044e \u0433\u043e\u0442\u043e\u0432\u044b\u0439 \u043a\u043e\u0434 - \u043d\u0435 \u0440\u0430\u0431\u043e\u0442\u0430\u0435\u0442\n#include \"pch.h\"\n#include <iostream>\nusing namespace std;\n\nint main()\n{\n    setlocale(LC_ALL, \"Russian\");\n    const int n = 4; // \u0440\u0430\u0437\u043c\u0435\u0440 \u043c\u0430\u0441\u0441\u0438\u0432\u0430\n    int arr[n][n];\n    cout << \"\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u043c\u0430\u0441\u0441\u0438\u0432:\" << endl;\n    for (int i = 0; i < n; i++)\n    {\n        for (int j = 0; j < n; j++)\n        {\n            cout << \"arr[\" << i << \"]\" << \"[\" << j << \"]\" << \": \";\n            cin >> arr[i][j];  // \u0432\u0432\u043e\u0434 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432 \u043c\u0430\u0441\u0441\u0438\u0432\u0430\n        }\n    }\n\n    cout << \"=============================================\" << endl;\n\n    cout << \"\u0412\u0432\u0435\u0434\u0435\u043d\u043d\u044b\u0439 \u043c\u0430\u0441\u0441\u0438\u0432:\" << endl; // \u0432\u044b\u0432\u043e\u0434 \u0437\u0430\u043f\u043e\u043b\u043d\u0435\u043d\u043d\u043e\u0433\u043e \u043c\u0430\u0441\u0441\u0438\u0432\u0430\n    for (int i = 0; i < n; i++)\n    {\n        for (int j = 0; j < n; j++) {\n            cout << arr[i][j] << \" \";\n        }\n        cout << '\\n';\n    }\n\n    cout << \"=============================================\" << endl;\n\n    int choice = 0, temp;\n    cout << \"\u0412\u044b\u0431\u0435\u0440\u0438\u0442\u0435 \u0441\u0442\u0440\u043e\u043a\u0443, \u043a\u043e\u0442\u043e\u0440\u0443\u044e \u0432\u044b \u0445\u043e\u0442\u0438\u0442\u0435 \u043e\u0442\u0441\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c, \u0432\u044b\u0431\u0435\u0440\u0438\u0442\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043e\u0442 0 \u0434\u043e 4:\" << endl;\n    cin >> choice;\n\n    // \u0441\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u043a\u0430\n\n    cout << \"\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u043d\u044b\u0439 \u043c\u0430\u0441\u0441\u0438\u0432:\" << endl; // \u0432\u044b\u0432\u043e\u0434 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430 \n\n    for (int i = 0; i < n; i++)\n    {\n        for (int j = 0; j < n; j++) {\n            cout << arr[i][j] << \" \";\n        }\n        cout << '\\n';\n    }\n\n}\n\nA:\n\nstd::sort(arr[choice], arr[choice] + n);\n\n\u0418\u043b\u0438, \u0435\u0441\u043b\u0438 \u0436\u0435 \u0441\u0430\u043c\u043e\u043c\u0443 \u043d\u0443\u0436\u043d\u043e \u043d\u0430\u043f\u0438\u0441\u0430\u0442\u044c, \u0442\u043e:\nint i = 0;\nint* first = arr[choice], *last = first + n;\nwhile (first != last) {       \n    for (int* p = arr[choice]; p != last- i - 1; ++p)\n        if (*p > *(p + 1)) {\n            int temp = *p;\n            *p = *(p + 1);\n            *(p + 1) = temp;\n        }\n    ++first;\n    ++i;\n}\n\n\u042d\u0442\u043e \u043e\u0434\u0438\u043d \u0438\u0437 \u0441\u0430\u043c\u044b\u0445 \u043f\u0440\u043e\u0441\u0442\u044b\u0445 \u0432\u0430\u0440\u0438\u0430\u043d\u0442\u043e\u0432 \u0441\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u043a\u0438. \n\u0422\u043e \u0436\u0435 \u0441\u0430\u043c\u043e\u0435 \u0431\u0435\u0437 \u0443\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u0435\u0439(\u043f\u043e \u043f\u0440\u043e\u0441\u044c\u0431\u0435 \u0430\u0432\u0442\u043e\u0440\u0430):\nint  i = 0;\nwhile(i < n) {\n    for (int j = 0;  j < n - i - 1; ++j)\n        if (arr[choice][j] > arr[choice][j + 1]) {\n            int temp = arr[choice][j];\n            arr[choice][j] = arr[choice][j + 1];\n            arr[choice][j + 1] = temp;\n        }\n    ++i;\n}\n\nP.S. \u0440\u0435\u043a\u043e\u043c\u0435\u043d\u0434\u0443\u044e \u0438\u0437\u0443\u0447\u0430\u0442\u044c \u0440\u0430\u0437\u043d\u044b\u0435 \u0430\u043b\u044c\u0433\u043e\u0440\u0438\u0442\u043c\u044b \u0441\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u043a\u0438. \u0414\u043b\u044f \u0441\u0442\u0440\u043e\u043a\u0438  choice \u0434\u0432\u0443\u043c\u0435\u0440\u043d\u043e\u0433\u043e \u043c\u0430\u0441\u0441\u0438\u0432\u0430 \u043f\u0440\u043e\u0441\u0442\u043e \u0440\u0430\u0441\u0441\u043c\u0430\u0442\u0440\u0438\u0432\u0430\u044e\u0442\u0441\u044f \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u044b \u043e\u0442  arr[choice][0] \u0438 \u0434\u043e arr[choice][n], \u0433\u0434\u0435 n  \u044d\u0442\u043e \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0441\u0442\u043e\u043b\u0431\u0446\u043e\u0432.\n\n"
}