{
    "criteria": [
        {
            "criterion": "AllDocuments",
            "passed": true,
            "reason": "All documents pass."
        },
        {
            "criterion": "QuestionAnswerStringsV2",
            "passed": true,
            "reason": "Text contains ['Q:', 'A:']."
        },
        {
            "criterion": "FullyStructured",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamStringsV2",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesStrings",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesStringsV2",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ListPrefixV2",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesMinimalEmbed",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesSynonymsEmbed",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesDiverseEmbed",
            "passed": false,
            "reason": "Does not meet criterion."
        }
    ],
    "doc_id": "9547",
    "text": "Q:\n\nauto-rotating a jq.carousel using setInterval, and pausing on hover\n\nI'm using jq.carousel and as it doesn't have an auto-rotate function built in I'm using setInterval to advance it every second by calling $carouselHome.carousel('next').\nThis works, but I need to add 'pause on hover'. Here's what I have so far which works as required only after the mouse has entered and left the element once. How would I 'kick off' the interval on first page load? (example: http://jsfiddle.net/meredevelopment/hmUbd/)\nvar $carouselHome = $('#carousel-home').carousel();\n\n$('#carousel-home_prev').on('click', function(ev) {\n    $carouselHome.carousel('prev');\n});\n\n$('#carousel-home_next').on('click', function(ev) {\n    $carouselHome.carousel('next');\n});\n\n/*setInterval(function() {\n    $carouselHome.carousel('next');\n}, 1000);*/\n\n$(\"#carousel-home\").mouseenter(function(){\n    clearInterval($(this).data('timeoutId'));\n}).mouseleave(function(){\n    var someElement = $(this);\n    var timeoutId = setInterval(function() {\n        $carouselHome.carousel('next');\n    }, 1000);\n    console.log(timeoutId);\n    someElement.data('timeoutId', timeoutId); \n});\n\nThanks!\nBen\n\nA:\n\nSomething like this should work:\nif ($(\"#carousel-home\").length > 0) {\n    var $carouselHome = $('#carousel-home').carousel();\n\n    var timeoutId = setInterval(function() {\n       $carouselHome.carousel('next');\n    }, 1000);\n\n    $('#carousel-home_prev').on('click', function(ev) {\n        $carouselHome.carousel('prev');\n    });\n    $('#carousel-home_next').on('click', function(ev) {\n        $carouselHome.carousel('next');\n    });\n\n    $(\"#carousel-home\").mouseenter(function() {\n        clearInterval(timeoutId);\n    }).mouseleave(function() {\n        var someElement = $(this);\n        timeoutId = setInterval(function() {\n            $carouselHome.carousel('next');\n        }, 1000);\n    });\n}\n\n"
}