{
    "criteria": [
        {
            "criterion": "AllDocuments",
            "passed": true,
            "reason": "All documents pass."
        },
        {
            "criterion": "Domain",
            "passed": false,
            "reason": "Document source unavailable."
        },
        {
            "criterion": "QuestionAnswerStrings",
            "passed": true,
            "reason": "Text contains Q:."
        },
        {
            "criterion": "QuestionAnswerStringsV2",
            "passed": true,
            "reason": "Text contains ['Q:', 'A:', 'A:']."
        },
        {
            "criterion": "FullyStructured",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamStrings",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamStringsV2",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesStrings",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ListPrefix",
            "passed": false,
            "reason": "Found 0 list prefixes. (Min: 5)"
        },
        {
            "criterion": "ListPrefixV2",
            "passed": true,
            "reason": "Text contains ['1', '2', '3', '4', '5', '6', '1', '2', '3', '4', '5']."
        }
    ],
    "doc_id": "5900",
    "text": "Q:\n\nSQL single table with two columns\n\nI have a single table: Checking, with two columns: ID, Memo\nID is the primary key.\nI would like a query that returns both columns: ID, Memo BUT only where Memo is DISTINCT\nI can do the following to get the distinct values from Memo:\nSELECT DISTINCT(memo)\nFROM checking\n\nHow do I return those Memo values and their values from the ID column? \nI've run in circles trying inner and outer joins but I'm failing.\nThanks for your help\nSample data:\nID        Memo\n1         a\n2         c\n3         e\n4         g\n5         a\n6         c\n\nThe desired return:\n1,a\n2,c\n3,e\n4,g\n\n5 and 6 would not be included because they have duplicate memo values.\nThanks again for your help.\n\nA:\n\nSELECT  min(id), memo \nFROM checking \ngroup by memo\n\nA:\n\nIf I understand you correctly you want the first (?) primary key value corresponding to each unique memo value found?  (I'm assuming this because you can't logically have both unique memos and Id values because there is necessarily multiple ID values for each duplicated memo value...)  If the assumption is correct this will work:\nSELECT m.memo, \n    (SELECT TOP 1 x.id\n     FROM checking x\n     WHERE x.memo = m.memo\n     ORDER BY x.id) as ID\nFROM checking m\nGROUP BY m.memo\n\n"
}