{
    "criteria": [
        {
            "criterion": "AllDocuments",
            "passed": true,
            "reason": "All documents pass."
        },
        {
            "criterion": "QuestionAnswerStringsV2",
            "passed": true,
            "reason": "Text contains ['Q:', 'A:']."
        },
        {
            "criterion": "FullyStructured",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamStringsV2",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesStrings",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesStringsV2",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ListPrefixV2",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesMinimalEmbed",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesSynonymsEmbed",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesDiverseEmbed",
            "passed": false,
            "reason": "Does not meet criterion."
        }
    ],
    "doc_id": "8650",
    "text": "Q:\n\nAdd GraphStream graph into my custom jPanel\n\nI am working on GraphStream library. For now, When I run my program it opens new window for my graph and separate window for my graph. I tried to create a JFrame and add JPanel into JFrame, after all this I tried to add graph into my JPanel but it says that graph object is not a component.\nHere is my code:\nimport java.awt.BorderLayout;\nimport java.awt.EventQueue;\nimport java.sql.Connection;\nimport java.sql.DriverManager;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport java.sql.Statement;\nimport javax.swing.JFrame;\nimport javax.swing.JPanel;\nimport javax.swing.border.EmptyBorder;\n\nimport org.graphstream.graph.*;\nimport org.graphstream.graph.implementations.*;\n\npublic class GraphExplore {\n    static Connection conn2;\n    static String result, result2;\n    static JFrame frame;\n    static JPanel panel;\n\n    public static void main(String args[]) throws SQLException {\n        EventQueue.invokeLater(new Runnable() {\n            public void run() {\n                try {\n                    showData();\n                } catch (SQLException e) {\n                    e.printStackTrace();\n                }\n            }\n        });\n    }\n\n    private static void showData() throws SQLException {\n\n        JFrame frame = new JFrame();\n        frame.setVisible(true);\n        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n        frame.setBounds(30, 50, 1300, 600);\n        panel = new JPanel();\n        panel.setBorder(new EmptyBorder(5, 5, 5, 5));\n        panel.setLayout(new BorderLayout(0, 0));\n        frame.setContentPane(panel);\n\n        Graph graph = new SingleGraph(\"tutorial 1\");\n        graph.setAutoCreate(true);\n        graph.setStrict(false);\n        graph.display();\n\n        // panel.add(graph);\n\n        try {\n            Class.forName(\"org.h2.Driver\");\n            conn2 = DriverManager.getConnection(\"jdbc:h2:file:G:/hs_data/h2_db/test\", \"sa\", \"sa\");\n\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n        Statement stmt2 = conn2.createStatement();\n        ResultSet rs2 = stmt2.executeQuery(\"SELECT ANUMBER,BNUMBER,DATETIME FROM TEST\");\n        while (rs2.next()) {\n            result = rs2.getString(\"ANUMBER\");\n            result2 = rs2.getString(\"BNUMBER\");\n            graph.addNode(result);\n            graph.addNode(result2);\n            int i;\n            for (i = 0; i < 200; i++)\n                graph.addEdge(\"string\" + i, result, result2);\n            // JOptionPane.showMessageDialog(null, i);\n        }\n\n        for (Node node : graph) {\n            node.addAttribute(\"ui.label\", node.getId());\n        }\n\n    }\n\n}\n\nThis program opens separate windows for both jframe and graph. I want to show my graph into my JFrame or JPanel. Any idea about how to do this? I have seen this link, but it doesn't explains me well.\n\nA:\n\nAs shown in Graph Visualization: Advanced view: Integrating the viewer in your GUI, \"you will need to create the viewer by yourself.\" Also, call setVisible() after you have constructed the frame.\n\nIt shows error on frame.add(view).\n\nIt looks like the tutorial cited is a little dated. The Viewer method addDefaultView() now returns a ViewPanel, which can be added to a Container. In the complete example below, a border is set on an enclosing JPanel having GridLayout, and that panel is added to the frame. Also note the need to give the panel a preferred size by overriding getPreferredSize(). Resize the window to see the effect.\n\nimport java.awt.*;\nimport javax.swing.*;\nimport javax.swing.border.*;\nimport org.graphstream.graph.*;\nimport org.graphstream.graph.implementations.*;\nimport org.graphstream.ui.swingViewer.*;\nimport org.graphstream.ui.view.*;\n\n/** @see https://stackoverflow.com/a/45055683/230513 */\npublic class GraphSwing {\n\n    public static void main(String args[]) {\n        EventQueue.invokeLater(new GraphSwing()::display);\n    }\n\n    private void display() {\n        JFrame frame = new JFrame();\n        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n        JPanel panel = new JPanel(new GridLayout()){\n            @Override\n            public Dimension getPreferredSize() {\n                return new Dimension(640, 480);\n            }\n        };\n        panel.setBorder(BorderFactory.createLineBorder(Color.blue, 5));\n        Graph graph = new SingleGraph(\"Tutorial\", false, true);\n        graph.addEdge(\"AB\", \"A\", \"B\");\n        Node a = graph.getNode(\"A\");\n        a.setAttribute(\"xy\", 1, 1);\n        Node b = graph.getNode(\"B\");\n        b.setAttribute(\"xy\", -1, -1);\n        Viewer viewer = new Viewer(graph, Viewer.ThreadingModel.GRAPH_IN_GUI_THREAD);\n        ViewPanel viewPanel = viewer.addDefaultView(false);\n        panel.add(viewPanel);\n        frame.add(panel);\n        frame.pack();\n        frame.setLocationRelativeTo(null);\n        frame.setVisible(true);\n    }\n}\n\n"
}