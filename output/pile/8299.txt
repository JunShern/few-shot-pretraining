{
    "criteria": [
        {
            "criterion": "AllDocuments",
            "passed": true,
            "reason": "All documents pass."
        },
        {
            "criterion": "Domain",
            "passed": false,
            "reason": "Document source unavailable."
        },
        {
            "criterion": "QuestionAnswerStrings",
            "passed": true,
            "reason": "Text contains Q:."
        },
        {
            "criterion": "QuestionAnswerStringsV2",
            "passed": true,
            "reason": "Text contains ['Q:', 'A:']."
        },
        {
            "criterion": "FullyStructured",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamStrings",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamStringsV2",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesStrings",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ListPrefix",
            "passed": false,
            "reason": "Found 0 list prefixes. (Min: 5)"
        },
        {
            "criterion": "ListPrefixV2",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesMinimalEmbed",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesSynonymsEmbed",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesDiverseEmbed",
            "passed": false,
            "reason": "Does not meet criterion."
        }
    ],
    "doc_id": "8299",
    "text": "Q:\n\nOracle SQL String Manipulation\n\nMy field contains short codes that I want to access, such as C-COR3.\nThe issue is some records have additional information (F and H with numbers). An example is C-COR3 F1.54H19, I only care about C-COR3. Anything after \"F\" I want to ignore.\nCode below works, but only if I hard-code the full F1.54H19. I want to use wildcards to abstract this for other occurrences that have F and H info in the field. (Ex C-R3 F0.18H18 -> C-R3 or C-COR3 F0.23H8.5 -> C-COR3), note varying short code string lengths. \n/* Translates C-COR3 F1.54H19 to C-COR3. */\nselect distinct SUBSTR(lud_code_short,1,INSTR(lud_code_short, 'F1.54H19')-2) \nfrom rep_dba.mytable\n\nI've read that SUBSTR does not allow wildcards, but have had no luck trying my hand at REGEXP_INSTR and REGEX_SUBSTR instead. Any help appreciated. \n\nA:\n\nAssuming that the \"code\" is always the first continuous sequence of non-space characters (and that there are no leading spaces - if there are, that's easy to handle), you could do something like this. Note the str || ' ' in the call to instr() - that takes care of the case when the input string has no spaces in it to begin with. Also notice the last input - since there are no spaces anywhere, the output is the same as the input. (Showing that if the \"code\" is not always separated from the \"additional information\" by at least one space, the solution would not work.)\nwith\n  test_data (str) as (\n    select 'C-COR3 F14H2.5' from dual union all\n    select 'C-AB3'          from dual union all\n    select null             from dual union all\n    select 'C-AB2F14H2.5'   from dual\n  )\nselect str, substr(str, 1, instr(str || ' ', ' ') - 1) as code\nfrom   test_data\n;\n\nSTR            CODE          \n-------------- --------------\nC-COR3 F14H2.5 C-COR3        \nC-AB3          C-AB3         \n\nC-AB2F14H2.5   C-AB2F14H2.5 \n\n"
}