{
    "criteria": [
        {
            "criterion": "AllDocuments",
            "passed": true,
            "reason": "All documents pass."
        },
        {
            "criterion": "Domain",
            "passed": false,
            "reason": "Document source unavailable."
        },
        {
            "criterion": "QuestionAnswerStrings",
            "passed": true,
            "reason": "Text contains Q:."
        },
        {
            "criterion": "QuestionAnswerStringsV2",
            "passed": true,
            "reason": "Text contains ['Q:', 'A:']."
        },
        {
            "criterion": "FullyStructured",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamStrings",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamStringsV2",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesStrings",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ListPrefix",
            "passed": false,
            "reason": "Found 0 list prefixes. (Min: 5)"
        },
        {
            "criterion": "ListPrefixV2",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesMinimalEmbed",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesSynonymsEmbed",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesDiverseEmbed",
            "passed": true,
            "reason": "Text contains ['The objects are listed in the same order as the (0.199)']."
        }
    ],
    "doc_id": "5765",
    "text": "Q:\n\nHow to get Canonical ID from GCM\n\nI am trying to get a unique ID for my device so I can get push notifications from my server.\nAs all turorials say : I register using GMC:\n  GoogleCloudMessaging gcm = GoogleCloudMessaging.getInstance(context);\n  String regid = gcm.register(PROJECT_NUMBER);  // <---- duplicated if uninstalled/ reinstalled\n  SendRegIdToServer(regId);\n\nNow, I send the regId my server and save on device.\nThe problem comes when I uninstall and reinstall, since the local storage is lost, I ask GCM to register again and I get a new registration ID.  Because of this, my server is having duplicates of the same device.\nI looked at SO butlot of questions are on GCMRegistrar, which is deprecated now.\nPeople say use Canonical ID, which is unique. But how do I get it ?\nI am using gcm.register and using that ID, which obviously is duplicating on the server.\nAppreciate any help.\n\nA:\n\nThe Canonical id is returned in the response when you send a message from your server to google's gcm server.\nhttps://developer.android.com/google/gcm/http.html#response\n\nInterpreting a success response\nWhen a JSON request is successful (HTTP status code 200), the response\n  body contains a JSON object with the following fields:\nField Description multicast_id    Unique ID (number) identifying the\n  multicast message. success    Number of messages that were processed\n  without an error. failure Number of messages that could not be\n  processed. canonical_ids  Number of results that contain a canonical\n  registration ID. See Advanced Topics for more discussion of this\n  topic. results    Array of objects representing the status of the\n  messages processed. The objects are listed in the same order as the\n  request (i.e., for each registration ID in the request, its result is\n  listed in the same index in the response) and they can have these\n  fields: message_id: String representing the message when it was\n  successfully processed. registration_id: If set, means that GCM\n  processed the message but it has another canonical registration ID for\n  that device, so sender should replace the IDs on future requests\n  (otherwise they might be rejected). This field is never set if there\n  is an error in the request. error: String describing an error that\n  occurred while processing the message for that recipient. The possible\n  values are the same as documented in the above table, plus\n  \"Unavailable\" (meaning GCM servers were busy and could not process the\n  message for that particular recipient, so it could be retried). If the\n  value of failure and canonical_ids is 0, it's not necessary to parse\n  the remainder of the response.\n\nUpdate\nBelow is some more info on Canonical IDs.  Basically, if somehow the device reg id becomes out of sync with what Google thinks it should be, then when your server sends a request with the out-of-sync id, the gcm server will include in it's response , the correct id to be used in the future.\nThink about it, the way this works is; your server should have stored the reg id when the device  registered with gcm.  Your server sends a request to gcm with that id, gcm uses that id to send a message to your device. GCM can't the reg id on your device without telling the server about it.  If it did your server would just keep sending the wrong reg id.  Instead, gcm tell the server that the reg id it is using for a particular device is bad, your server can then send a message to the device to update its stored reg id to what it should be, and then the device can ack the change in REG IDs.  The info below implies there is some time limit as too how long the \"bad\" id can still be used to send messages.  I think the assumption is that it should be long enough for your server to change the device id (via a gcm message using the \"bad\" id)\nCanonical IDs\nOn the server side, as long as the application is behaving well, everything should work normally. However, if a bug in the application triggers multiple registrations for the same device, it can be hard to reconcile state and you might end up with duplicate messages.\nGCM provides a facility called \"canonical registration IDs\" to easily recover from these situations. A canonical registration ID is defined to be the ID of the last registration requested by your application. This is the ID that the server should use when sending messages to the device.\nIf later on you try to send a message using a different registration ID, GCM will process the request as usual, but it will include the canonical registration ID in the registration_id field of the response. Make sure to replace the registration ID stored in your server with this canonical ID, as eventually the ID you're using will stop working.\n\n"
}