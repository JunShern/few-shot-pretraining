{
    "criteria": [
        {
            "criterion": "AllDocuments",
            "passed": true,
            "reason": "All documents pass."
        },
        {
            "criterion": "QuestionAnswerStringsV2",
            "passed": true,
            "reason": "Text contains ['Q:', 'A:', 'A:', 'A:']."
        },
        {
            "criterion": "FullyStructured",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamStringsV2",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesStrings",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesStringsV2",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ListPrefixV2",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesMinimalEmbed",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesSynonymsEmbed",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesDiverseEmbed",
            "passed": false,
            "reason": "Does not meet criterion."
        }
    ],
    "doc_id": "8346",
    "text": "Q:\n\nBash set +x without it being printed\n\nDoes anyone know if we can say set +x in bash without it being printed:\nset -x\ncommand\nset +x\n\ntraces\n+ command\n+ set +x\n\nbut it should just print\n+ command\n\nBash is Version 4.1.10(4). This is bugging me for some time now - output is cluttered with useless set +x lines, making the trace facility not as useful as it could be.\n\nA:\n\nI had the same problem, and I was able to find a solution that doesn't use a subshell:\nset -x\ncommand\n{ set +x; } 2>/dev/null\n\nA:\n\nYou can use a subshell. Upon exiting the subshell, the setting to x will be lost:\n( set -x ; command )\n\nA:\n\nI hacked up a solution to this just recently when I became annoyed with it:\nshopt -s expand_aliases\n_xtrace() {\n    case $1 in\n        on) set -x ;;\n        off) set +x ;;\n    esac\n}\nalias xtrace='{ _xtrace $(cat); } 2>/dev/null <<<'\n\nThis allows you to enable and disable xtrace as in the following, where I'm logging how the arguments are assigned to variables:\nxtrace on\nARG1=$1\nARG2=$2\nxtrace off\n\nAnd you get output that looks like:\n$ ./script.sh one two\n+ ARG1=one\n+ ARG2=two\n\n"
}