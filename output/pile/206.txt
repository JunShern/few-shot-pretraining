{
    "criteria": [
        {
            "criterion": "AllDocuments",
            "passed": true,
            "reason": "All documents pass."
        },
        {
            "criterion": "Domain",
            "passed": false,
            "reason": "Document source unavailable."
        },
        {
            "criterion": "QuestionAnswerStrings",
            "passed": true,
            "reason": "Text contains Q:."
        },
        {
            "criterion": "QuestionAnswerStringsV2",
            "passed": true,
            "reason": "Text contains ['Q:', 'A:']."
        },
        {
            "criterion": "FullyStructured",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamStrings",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamStringsV2",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesStrings",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ListPrefix",
            "passed": false,
            "reason": "Found 0 list prefixes. (Min: 5)"
        },
        {
            "criterion": "ListPrefixV2",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesMinimalEmbed",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesSynonymsEmbed",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesDiverseEmbed",
            "passed": false,
            "reason": "Does not meet criterion."
        }
    ],
    "doc_id": "206",
    "text": "Q:\n\nPHP object question\n\nExcuse what is probably a really basic question but how do I achieve this.\n$cache = New Mem;    \n$cache->event($event)->delete;\n\nWhich is called via the function below. Without the ->delete, it works perfectly fine, but I just need to find a way to call the delete thus inside the function.\nclass Mem\n{\n    function event($event)\n    {\n        global $pdo;\n        global $memcached;\n\n        $key = md5(sha1($event) . sha1('events'));\n\n        if ($this->delete)\n        {\n            return $memcached->delete($key);\n        }\n        else\n        {\n            return $memcached->get($key);\n        }\n    }\n}\n\nI hope that makes sense, sorry for my pseudo code basically for the delete part.\n\nA:\n\nYou're calling delete as if it were a method within your class - but you have no method called delete...Instead, you should evaluate the $event variable as I'm doing below and determine what action you'll take:\nclass Mem {\n\n  private $pdo;\n  private $memcached;\n\n  public function event($event) {\n\n    $key = md5(sha1($event) . sha1('events')); #from your original code\n\n    switch ($event) {\n      case \"delete\":\n        #do delete stuff\n        $this->memchached->delete($key);\n        break;\n      case \"add\":\n        #do add stuff\n        break;\n    }\n  }\n\n}\n\nUpdate: Following additional questions in comments...\nclass Event {\n\n  private $key;\n\n  public function __construct($key) {\n    $this->key = $key;\n  }\n\n  public function delete($key) {\n    # do delete\n  }\n\n}\n\n"
}