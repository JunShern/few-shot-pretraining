{
    "criteria": [
        {
            "criterion": "AllDocuments",
            "passed": true,
            "reason": "All documents pass."
        },
        {
            "criterion": "Domain",
            "passed": false,
            "reason": "Document source unavailable."
        },
        {
            "criterion": "QuestionAnswerStrings",
            "passed": true,
            "reason": "Text contains Q:."
        },
        {
            "criterion": "QuestionAnswerStringsV2",
            "passed": true,
            "reason": "Text contains ['Q:', 'A:']."
        },
        {
            "criterion": "FullyStructured",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamStrings",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamStringsV2",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesStrings",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ListPrefix",
            "passed": false,
            "reason": "Found 0 list prefixes. (Min: 5)"
        },
        {
            "criterion": "ListPrefixV2",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesMinimalEmbed",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesSynonymsEmbed",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesDiverseEmbed",
            "passed": false,
            "reason": "Does not meet criterion."
        }
    ],
    "doc_id": "1747",
    "text": "Q:\n\nC++ while loop with 2 conditions, VS. for loop with 2 conditions?\n\nIf I wanted to iterate through a string, and stop once I found either the letter \"o\" or the end of the string, would it make any difference to use a while loop to check the 2 conditions, or a for loop with 2 conditions?\nconst int STRING_SIZE = 16;\nchar str[STRING_SIZE] = \"a bunch of words\";\n\nfor loop\nfor (int i = 0; i < STRING_SIZE && str[i] != 'o'; i++){\n    //do something\n}\n\nwhile loop\nint i = 0;\n\nwhile (i < STRING_SIZE && str[i] != 'o'){\n    //do something\n    i++\n}\n\nIs there a performance difference between the two? Is one better practice than the other?\n\nA:\n\nThere is no difference in performance between the two loops except that:\nfor() Checks condition then if true its body is executed. So for is simile to while loop.\ndo-while loop works a slightly different: It executes then checks so at least an execution is ensured.\n\n"
}