{
    "criteria": [
        {
            "criterion": "AllDocuments",
            "passed": true,
            "reason": "All documents pass."
        },
        {
            "criterion": "Domain",
            "passed": false,
            "reason": "Document source unavailable."
        },
        {
            "criterion": "QuestionAnswerStrings",
            "passed": true,
            "reason": "Text contains Q:."
        },
        {
            "criterion": "QuestionAnswerStringsV2",
            "passed": true,
            "reason": "Text contains ['Q:', 'A:']."
        },
        {
            "criterion": "FullyStructured",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamStrings",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamStringsV2",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesStrings",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ListPrefix",
            "passed": false,
            "reason": "Found 0 list prefixes. (Min: 5)"
        },
        {
            "criterion": "ListPrefixV2",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesMinimalEmbed",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesSynonymsEmbed",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesDiverseEmbed",
            "passed": true,
            "reason": "Text contains ['So, in my showPlayerTVC I want to get the set of players for that specific team, then have a row for each one that shows the playerName attribute as the cell textlabel.text. (0.198)']."
        }
    ],
    "doc_id": "8536",
    "text": "Q:\n\nCore Data Detail View from To-Many relationship\n\nI'm struggling with some aspects of Core Data, namely setting up a UITableView to list data from a to-many relationship.\nI have three entities, Teams, TeamDetails and Players:\n\nIn the first view, I list the names of all the teams in the Teams entity, then tapping each cell segues to an intermediate view with buttons to either edit a team's details or edit a team's players. Tapping on a button segues to another UITableView that lists the Team's details or Players.\nListing the TeamDetails works, since it is a one-to-one relationship and a static cell table.\nI'm trying to set up a UITableViewController that lists all the players that are associated with the selected team.  So I pass the ManagedObjectContext etc to the table view controller via the segue as shown below:\nelse if ([segue.identifier isEqualToString:@\"ShowPlayersSegue\"]){\n    NSLog(@\"Setting ShowPlayersTVC as a delegate of EditPlayerTVC\");\n    ShowPlayersTVC *showPlayerTVC = segue.destinationViewController;\n    showPlayerTVC.delegate = self;\n    showPlayerTVC.managedObjectContext = self.managedObjectContext;\n\n    showPlayerTVC.team = self.team;\n    showPlayerTVC.player = self.team.playerDetails;\n}\n\nSo, in my showPlayerTVC I want to get the set of players for that specific team, then have a row for each one that shows the playerName attribute as the cell textlabel.text.\nI've been reading tutorials and playing around for ages without getting much success.  I think I need to create an array of Player objects from the NSSet, which I can do, but I can't get the UITableview to list the objects.  I'm probably missing something fundamental here, but any suggestions would be appreciated.\n\nA:\n\nFirst, there are some issues with your data model. \nThe one-to-one to details I do not understand - why not just add attributes to the Team entity? Also, you may want to transform some of these into more flexible relationships, such as a Trainer entity, etc. \nAlso, your naming is flawed and will lead to programming errors or at least make your code difficult to read. Note the singular / plural confusion. Here is my suggestion for naming your entities / relationships: \nTeam - players <--------------->> team - Player  \n\nTo display data in an a table view you should use NSFetchedResultsController. Let the FRC fetch the Player entity and give its fetch request the following predicate:\n[NSPredicate predicateWithFormat:@\"team = %@\", teamObject]; \n\nYour segue code is almost correct. Give the new view controller a team attribute and use this in the above predicate of its fetched results controller. You do not need any player or \"playerDetails\" information (they are linked to the team anyway). \n\n"
}