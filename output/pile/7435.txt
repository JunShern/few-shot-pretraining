{
    "criteria": [
        {
            "criterion": "AllDocuments",
            "passed": true,
            "reason": "All documents pass."
        },
        {
            "criterion": "QuestionAnswerStringsV2",
            "passed": true,
            "reason": "Text contains ['Q:', 'A:']."
        },
        {
            "criterion": "FullyStructured",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamStringsV2",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesStrings",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesStringsV2",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ListPrefixV2",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesMinimalEmbed",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesSynonymsEmbed",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesDiverseEmbed",
            "passed": false,
            "reason": "Does not meet criterion."
        }
    ],
    "doc_id": "7435",
    "text": "Q:\n\nMacro to Copy/Paste Data\n\nHere is the code I have. I am trying to find the last populated row in a range. Then copy that data as formulas to the next blank row in the range. Finally copy the last populated row again and paste it to the second to last populated row as values. In a nutshell, move the formulas in the last row/cells down one row and retain that data where it was copied as numbers. So when new data is brought into the file, the formulas recalculate and I do not lose the previous calculated data. Hopefully that makes sense. The below code runs but does not appear to do anything other than to paste the data as values in the existing rows. What am I doing wrong?   \nSub Data Copy()\n\nDim myLastCell As Range\nSet myLastCell = LastCell(Worksheets(\"YTD Metric Calculator\").Range(\"E7:J76\"))\n\nSheets(\"YTD Metric Calculator\").Range(\"E7:J\" & myLastCell.Row).Copy\nSheets(\"YTD Metric Calculator\").Range(\"E7:J\" & myLastCell.Row + 1).PasteSpecial Paste:=xlPasteFormulas\nSheets(\"YTD Metric Calculator\").Range(\"E7:J\" & myLastCell.Row).Copy\nSheets(\"YTD Metric Calculator\").Range(\"E7:J\" & myLastCell.Row + 1).PasteSpecial Paste:=xlPasteValues\n'Retain Yesterday's YTD Metric Data\n\nFunction LastCell(r As Range) As Range\n\nDim LastRow&, lastCol%\n\nOn Error Resume Next\n\nWith r\n\nLastRow& = .Cells.Find(What:=\"*\", _\n  SearchDirection:=xlPrevious, _\n  SearchOrder:=xlByRows).Row\n\nlastCol% = .Cells.Find(What:=\"*\", _\n  SearchDirection:=xlPrevious, _\n  SearchOrder:=xlByColumns).Column\n\nEnd With\n\nSet LastCell = r.Cells(LastRow&, lastCol%)\n\nEnd Function\n\nVBA Goal\n\nA:\n\nYour LastCell function isn't doing what you think it is doing, because it is determining the row and column within the worksheet of the last used cell in the range, and then using that as an offset from the start of the range.\nSo if the last used row in E7:J76 was row 10, and the last used column was column I, the cell being returned from your function is cell M16 (i.e. 9 rows below E7, and 8 columns to the right).\nChange\nSet LastCell = r.Cells(LastRow&, lastCol%)\n\nto be\nSet LastCell = r.Cells(LastRow& - r.Row + 1, lastCol% - r.Column + 1)\n\nor to\nSet LastCell = r.Worksheet.Cells(LastRow&, lastCol%)\n\nThe parts where you are copying the formulas, and then replacing with values, should be something like:\nSheets(\"YTD Metric Calculator\").Range(\"E\" & myLastCell.Row).Resize(1, 6).Copy\nSheets(\"YTD Metric Calculator\").Range(\"E\" & myLastCell.Row + 1).Resize(1, 6).PasteSpecial Paste:=xlPasteFormulas\nSheets(\"YTD Metric Calculator\").Range(\"E\" & myLastCell.Row).Resize(1, 6).Value = _\n          Sheets(\"YTD Metric Calculator\").Range(\"E\" & myLastCell.Row).Resize(1, 6).Value\n\nThat can be rewritten using a With block to save a few keystrokes:\nWith Sheets(\"YTD Metric Calculator\").Range(\"E\" & myLastCell.Row).Resize(1, 6)\n    .Copy\n    .Offset(1, 0).PasteSpecial Paste:=xlPasteFormulas\n    .Value = .Value\nEnd With\n\n"
}