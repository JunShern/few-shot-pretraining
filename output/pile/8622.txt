{
    "criteria": [
        {
            "criterion": "AllDocuments",
            "passed": true,
            "reason": "All documents pass."
        },
        {
            "criterion": "QuestionAnswerStringsV2",
            "passed": true,
            "reason": "Text contains ['Q:', 'A:']."
        },
        {
            "criterion": "FullyStructured",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamStringsV2",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesStrings",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesStringsV2",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ListPrefixV2",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesMinimalEmbed",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesSynonymsEmbed",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesDiverseEmbed",
            "passed": true,
            "reason": "Text contains ['Currently, I can select these elements from list, (0.190)']."
        }
    ],
    "doc_id": "8622",
    "text": "Q:\n\nSelection field type elements cannot be shown. How to properly add a custom entity representation to Sulu form?\n\nFollowing by Sulu documentation, I try to add selection field type to display collection type resource (Room object) in admin form. Currently, I can select these elements from list,\nselect element\nselected element\nbut after form submit and reload any record cannot be shown, despite that the Room object exist in Event entity:\nempty list\nWhat I do wrong?\nCode:\nsulu_admin.yaml\nsulu_admin:\n...\n\n# Registering Selection Field Types in this section\nfield_type_options:\n    selection:\n        room_selection:\n            default_type: list_overlay\n            resource_key: rooms\n            types:\n                list_overlay:\n                    adapter: table\n                    list_key: rooms\n                    display_properties:\n                        - name\n                    icon: su-clock\n                    label: 'app.rooms'\n                    overlay_title: 'app.rooms'\n\nevent_details.xml\n        <property name=\"rooms\" type=\"room_selection\">\n             <meta>\n                 <title>app.rooms</title>\n             </meta>\n        </property>\n\nA:\n\nYour api response should just contain a flat list of room ids for rooms. Assuming you have an Event entity with a $rooms property, add a public function getRoomIds() {} to your Event entity and add the @VirtualProperty(\"rooms\") annotation to that method. Probably you have to add the @Exclude annotation to public function getRooms() {}\nEDIT:\nI just tried it, if you have an entity like the following, it works as expected. If it's still not working, maybe you have a problem with your jms serializer config.\n/**\n * @Serializer\\ExclusionPolicy(\"all\")\n */\nclass Event\n{\n    /**\n     * @Serializer\\Expose()\n     */\n    private $otherProperty;\n\n    /**\n     * @var Collection<int, Room>\n     */\n    private $rooms;\n\n    public function getRooms(): Collection\n    {\n        return $this->rooms;\n    }\n\n    /**\n     * @Serializer\\VirtualProperty()\n     * @Serializer\\SerializedName(\"rooms\")\n     */\n    public function getRoomIds(): array\n    {\n        return $this->rooms->map(function (Room $room) {\n            return $room->getId();\n        });\n    }\n}\n\n"
}