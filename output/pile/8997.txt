{
    "criteria": [
        {
            "criterion": "AllDocuments",
            "passed": true,
            "reason": "All documents pass."
        },
        {
            "criterion": "Domain",
            "passed": false,
            "reason": "Document source unavailable."
        },
        {
            "criterion": "QuestionAnswerStrings",
            "passed": true,
            "reason": "Text contains Q:."
        },
        {
            "criterion": "QuestionAnswerStringsV2",
            "passed": true,
            "reason": "Text contains ['Q:', 'A:']."
        },
        {
            "criterion": "FullyStructured",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamStrings",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamStringsV2",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesStrings",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ListPrefix",
            "passed": false,
            "reason": "Found 0 list prefixes. (Min: 5)"
        },
        {
            "criterion": "ListPrefixV2",
            "passed": false,
            "reason": "Does not meet criterion."
        }
    ],
    "doc_id": "8997",
    "text": "Q:\n\nHow to implement drag-drop directive for Ionic?\n\n//long-press.directive.d.ts\nimport { ElementRef, EventEmitter, OnDestroy, OnInit, NgZone } from '@angular/core';\nimport { Gesture } from 'ionic-angular/gestures/gesture';\nexport declare class LongPressDirective implements OnInit, OnDestroy {\n    zone: NgZone;\n    interval: number;\n    onPressStart: EventEmitter<any>;\n    onPressing: EventEmitter<any>;\n    onPressEnd: EventEmitter<any>;\n\n    el: HTMLElement;\n    pressGesture: Gesture;\n    int: any;\n    constructor(zone: NgZone, el: ElementRef);\n    ngOnInit(): void;\n    ngOnDestroy(): void;\n}\n\n//long-press.drective.js\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar core_1 = require(\"@angular/core\");\nvar gesture_1 = require(\"ionic-angular/gestures/gesture\");\nvar LongPressDirective = (function () {\n    function LongPressDirective(zone, el) {\n        this.zone = zone;\n        this.onPressStart = new core_1.EventEmitter();\n        this.onPressing = new core_1.EventEmitter();\n        this.onPressEnd = new core_1.EventEmitter();\n        this.el = el.nativeElement;\n    }\n    LongPressDirective.prototype.ngOnInit = function () {\n        var _this = this;\n        if (!this.interval)\n            this.interval = 500;\n        if (this.interval < 40) {\n            throw new Error('A limit of 40ms is imposed so you don\\'t destroy device performance. If you need less than a 40ms interval, please file an issue explaining your use case.');\n        }\n        this.pressGesture = new gesture_1.Gesture(this.el);\n        this.pressGesture.listen();\n        this.pressGesture.on('press', function (e) {\n            _this.onPressStart.emit(e);\n            _this.zone.run(function () {\n                _this.int = setInterval(function () {\n                    _this.onPressing.emit();\n                }, _this.interval);\n            });\n        });\n\n        this.pressGesture.on('pressup', function (e) {\n            _this.zone.run(function () {\n                clearInterval(_this.int);\n            });\n            _this.onPressEnd.emit();\n        });\n\n    };\n    LongPressDirective.prototype.ngOnDestroy = function () {\n        var _this = this;\n        this.zone.run(function () {\n            clearInterval(_this.int);\n        });\n        this.onPressEnd.emit();\n        this.pressGesture.destroy();\n    };\n    return LongPressDirective;\n}());\nLongPressDirective.decorators = [\n    { type: core_1.Directive, args: [{\n                selector: '[ion-long-press]'\n            },] },\n];\n/** @nocollapse */\nLongPressDirective.ctorParameters = function () { return [\n    { type: core_1.NgZone, },\n    { type: core_1.ElementRef, },\n]; };\nLongPressDirective.propDecorators = {\n    'interval': [{ type: core_1.Input },],\n    'onPressStart': [{ type: core_1.Output },],\n    'onPressing': [{ type: core_1.Output },],\n    'onPressEnd': [{ type: core_1.Output },],\n};\nexports.LongPressDirective = LongPressDirective;\n//# sourceMappingURL=long-press.directive.js.map\n\nThis is implementation of 'press', 'press-up' event.\nThis directive intends to build upon the existing Hammer.JS press event that Ionic uses for long pressing, by giving you interval emission.\nhttps://www.npmjs.com/package/ionic-long-press\n I want to add 'drag'-'drop' event.\nI am beginner of angular.\nExpert's help is needed.\nThanks.\n\nA:\n\nI solved the problem using this plugin.\nhttps://github.com/AbineshSrishti/ionic2-selection-card-drag\n\n"
}