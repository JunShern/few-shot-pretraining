{
    "criteria": [
        {
            "criterion": "AllDocuments",
            "passed": true,
            "reason": "All documents pass."
        },
        {
            "criterion": "QuestionAnswerStringsV2",
            "passed": true,
            "reason": "Text contains ['Q:', 'A:']."
        },
        {
            "criterion": "FullyStructured",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamStringsV2",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesStrings",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesStringsV2",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ListPrefixV2",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesMinimalEmbed",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesSynonymsEmbed",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesDiverseEmbed",
            "passed": false,
            "reason": "Does not meet criterion."
        }
    ],
    "doc_id": "3966",
    "text": "Q:\n\nAndroid get all assets folder images\n\nHow to retrive all images from folder named 'imagesf' in assets folder and using it as int[] instead of \nint[] mImages = new int[]{\n R.drawable.pic1\n,R.drawable.pic2\n,R.drawable.pic3\n,R.drawable.pic4\n};\n\nTo use it in a viewpager\n\nA:\n\nUse below code to get all image name from 'imagesf' in assets folder\nprivate List<String> getImage(Context context) throws IOException {\n  AssetManager assetManager = context.getAssets();\n  String[] files = assetManager.list(\"imagesf\");   \n  List<String> it = Arrays.asList(files);\n  return it; \n}\n\nand get one by one image as Bitmap by using below code iterating in loop:\nprivate Bitmap getBitmapFromAsset(String strName)\n    {\n        AssetManager assetManager = getAssets();\n        InputStream istr = null;\n        try {\n            istr = assetManager.open(strName);\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n        Bitmap bitmap = BitmapFactory.decodeStream(istr);\n        return bitmap;\n    }\n\n"
}