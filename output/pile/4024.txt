{
    "criteria": [
        {
            "criterion": "AllDocuments",
            "passed": true,
            "reason": "All documents pass."
        },
        {
            "criterion": "Domain",
            "passed": false,
            "reason": "Document source unavailable."
        },
        {
            "criterion": "QuestionAnswerStrings",
            "passed": true,
            "reason": "Text contains Q:."
        },
        {
            "criterion": "QuestionAnswerStringsV2",
            "passed": true,
            "reason": "Text contains ['Q:', 'A:']."
        },
        {
            "criterion": "FullyStructured",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamStrings",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamStringsV2",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesStrings",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ListPrefix",
            "passed": false,
            "reason": "Found 0 list prefixes. (Min: 5)"
        },
        {
            "criterion": "ListPrefixV2",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesMinimalEmbed",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesSynonymsEmbed",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesDiverseEmbed",
            "passed": false,
            "reason": "Does not meet criterion."
        }
    ],
    "doc_id": "4024",
    "text": "Q:\n\nHow can I get any expression in C# as string?\n\nIn many cases one needs the name of an expression, parameter, statement, etc. For example:\npublic abstract void Log(string methodName, string parameterName, string message);\n\npublic void FooMethod(string value)\n{\n    if (value == null)\n    {\n        this.Log(\"FooMethod\", \"value\", \"The value must be whatever...\");\n        throw new ArgumentNullException(\"value\");\n    }\n\n    if (value.Length < 5)\n    {\n        this.Log(\"FooMethod\", \"value.Length\", \"The value length must be whatever...\");\n        throw new ArgumentException(\"value\");\n    }\n}\n\nIs there any way of getting these string literals automatically like for example with a keyword that can be used like typeof(string)?\nOr is there a simple and performant approach based on reflection?\nI'm not looking for a way to check and log this parameter (which is actually only an example). I'm looking for a method to get part of the code as string.\nThe following would be more accurate, could be checked by the compiler and would also be considered when refactoring the code:\npublic void FooMethod(string value)\n{\n    if (value == null)\n    {\n        this.Log(literal(this.FooMethod), literal(value), \"The parameter '\" + literal(value) + \"' must be whatever...\");\n        throw new ArgumentNullException(literal(value));            \n    }\n\n    if (value.Length < 5)\n    {\n        this.Log(literal(this.FooMethod), literal(value.Length), \"The value length must be whatever...\");\n        throw new ArgumentException(literal(value));\n    }\n}\n\nA:\n\nYou can create static methods like this for all possible types. Below is for method name.\npublic static string GetString(Action obj)\n{\n    return obj.Method.Name;\n}\n\npublic static string GetString(Delegate obj )\n{\n    return obj.Method.Name;\n}\n\n"
}