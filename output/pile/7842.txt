{
    "criteria": [
        {
            "criterion": "AllDocuments",
            "passed": true,
            "reason": "All documents pass."
        },
        {
            "criterion": "Domain",
            "passed": false,
            "reason": "Document source unavailable."
        },
        {
            "criterion": "QuestionAnswerStrings",
            "passed": true,
            "reason": "Text contains Q:."
        },
        {
            "criterion": "QuestionAnswerStringsV2",
            "passed": true,
            "reason": "Text contains ['Q:', 'A:']."
        },
        {
            "criterion": "FullyStructured",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamStrings",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamStringsV2",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesStrings",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ListPrefix",
            "passed": false,
            "reason": "Found 0 list prefixes. (Min: 5)"
        },
        {
            "criterion": "ListPrefixV2",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesMinimalEmbed",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesSynonymsEmbed",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesDiverseEmbed",
            "passed": false,
            "reason": "Does not meet criterion."
        }
    ],
    "doc_id": "7842",
    "text": "Q:\n\napt - checking if a similar package has been installed\n\nThis question explains how to find out if a given Debian package has been installed, but it does not take into account \"synonyms\" when installing via apt-get.\nFor instance, if I try apt-get install libncurses-dev, apt-get replies:\nNote, selecting 'libncurses5-dev' instead of 'libncurses-dev'\n\nAnd then it installs that package (libncurses5-dev), which is fine by me. \nBut what if I want to make a script to detect if the package has already been installed?\ndpkg -s libncurses-dev replies that the package is not installed, which is indeed correct, since it's libncurses5-dev that was installed. But I'd like my script to detect that, in this case, it no longer needs to install libncurses-dev.\nI could not find an option in apt-get to check if the given package or one of its providers has already been installed, such that my script would work when checking for libncurses-dev as well as for libncurses5-dev.\n\nA:\n\nIf you want to write a script to check to see if package libncurses-dev or its alias has been installed, consider the following program flow:\n\nCheck if the package has been installed with dpkg using the exact name, libncurses-dev in this case.\nIf the above does not evaluate to true, then search apt for the package you are looking for using the non-aliased name:\n$ apt-cache search libncurses-dev\nlibncurses5-dev - developer's libraries for ncurses\n\nIt appears that apt-cache search will return the 'alias' if the package has one.\n\nIf #1 evaluates false and #2 returns an alias, just grab the package's alias and try #1 again.\n\nCheck dpkg again with the alias name of the package, in this case it would be libncurses5-dev. If dpkg does not find the package by an alias (actually a superseded package) then it must not be installed.\n\n"
}