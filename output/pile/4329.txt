{
    "criteria": [
        {
            "criterion": "AllDocuments",
            "passed": true,
            "reason": "All documents pass."
        },
        {
            "criterion": "QuestionAnswerStringsV2",
            "passed": true,
            "reason": "Text contains ['Q:', 'A:']."
        },
        {
            "criterion": "FullyStructured",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamStringsV2",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesStrings",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesStringsV2",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ListPrefixV2",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesMinimalEmbed",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesSynonymsEmbed",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesDiverseEmbed",
            "passed": false,
            "reason": "Does not meet criterion."
        }
    ],
    "doc_id": "4329",
    "text": "Q:\n\nHow to iterate over a char pointer array returned by a function in cpp\n\nI create a function that creates a 28 array from random chars from a-z.\nWhen I try to iterate over the pointer array from main I get the wrong values.\nWhat do I'm missing?\nI know array are passed by reference to function, does are returned by reference too?\n#include <iostream>\n#include <ctime>\n#define MAX 28\n\n// Generate random char array with a-z values\nchar* generateRandomString(int length) {\n    char random[length];\n    for (int i = 0; i < length; i++) {\n        // Minimun a ascii = 97\n        // Maximun z ascii = 122\n        srand(int(time(NULL))); // Timestamp seed generator\n        int randomInt = 97 + (rand() % 25);\n        char randomChar = randomInt;\n        random[i] = randomChar;\n    }\n    return random;\n}\n\nint main() {\n    char* random = generateRandomString(MAX);\n\n    for (int i = 0; i < MAX; i++) {\n        std::cout << random[i] << std::endl; // (*random)[i] Does not work neither\n    }\n\n    return 0;\n}\n\nA:\n\nYou are returning a pointer to a local variable that goes out of scope before the caller can use it.  Just use std::string instead.\nAnd don't call srand() multiple times, call it only once.1\n1: Even better, don't use srand() at all, use a C++ random number generator from the <random> library instead.\n#include <iostream>\n#include <string>\n#include <ctime>\n#define MAX 28\n\n// Generate random char array with a-z values\nstd::string generateRandomString(int length) {\n    std::string random;\n    random.resize(length);\n    for (int i = 0; i < length; i++) {\n        // Minimun a ascii = 97\n        // Maximun z ascii = 122\n        int randomInt = 97 + (rand() % 25);\n        char randomChar = randomInt;\n        random[i] = randomChar;\n    }\n    return random;\n}\n\nint main() {\n    srand(int(time(NULL))); // Timestamp seed generator\n\n    std::string random = generateRandomString(MAX);\n\n    for (int i = 0; i < MAX; i++) {\n        std::cout << random[i] << std::endl; // (*random)[i] Does not work neither\n    }\n\n    return 0;\n}\n\n"
}