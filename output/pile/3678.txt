{
    "criteria": [
        {
            "criterion": "AllDocuments",
            "passed": true,
            "reason": "All documents pass."
        },
        {
            "criterion": "Domain",
            "passed": false,
            "reason": "Document source unavailable."
        },
        {
            "criterion": "QuestionAnswerStrings",
            "passed": true,
            "reason": "Text contains Q:."
        },
        {
            "criterion": "QuestionAnswerStringsV2",
            "passed": true,
            "reason": "Text contains ['Q:', 'A:']."
        },
        {
            "criterion": "FullyStructured",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamStrings",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamStringsV2",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesStrings",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ListPrefix",
            "passed": false,
            "reason": "Found 0 list prefixes. (Min: 5)"
        },
        {
            "criterion": "ListPrefixV2",
            "passed": false,
            "reason": "Does not meet criterion."
        }
    ],
    "doc_id": "3678",
    "text": "Q:\n\nvectorizing a script with cellfun\n\nI'm aiming to import data from various folder and text files into matlab. \nclear all\nmain_folder = 'E:\\data';\n    %Directory of data\nTopFolder = dir(main_folder);\n    %exclude the first two cells as they are just pointers. \nTopFolder = TopFolder(3:end);\nTopFolder = struct2cell(TopFolder);\nName1 = TopFolder(1,:);\n    %obtain the name of each folder\ndirListing = cellfun(@(x)dir(fullfile(main_folder,x,'*.txt')),Name1,'un',0);\nVariables = cellfun(@(x)struct2cell(x),dirListing,'un',0);\nFilesToRead = cellfun(@(x)x(1,:),Variables,'un',0);\n    %obtain the name of each text file in each folder\n\nThis provides the name for each text file in each folder within 'main_folder'. I am now trying to load the data without using a for loop (I realise that for loops are sometimes faster in doing this but I'm aiming for a compact script).\nThe method I would use with a for loop would be:\nfor k = 1:length(FilesToRead);\n    filename{k} = cellfun(@(x)fullfile(main_folder,Name{k},x),FilesToRead{k},'un',0);\n    fid{k} = cellfun(@(x)fopen(x),filename{k},'un',0);\n    C{k} = cellfun(@(x)textscan(x,'%f'),fid{k},'un',0);\nend\n\nIs there a method which would involve not using loops at all? something like cellfun within cellfun maybe?\n\nA:\n\nfolder = 'E:\\data';\nfiles = dir(fullfile(folder, '*.txt'));\nfull_names = strcat(folder, filesep, {files.name});\nfids = cellfun(@(x) fopen(x, 'r'), full_names);\nc = arrayfun(@(x) textscan(x, '%f'), fids);  % load data here\nres = arrayfun(@(x) fclose(x), fids);\nassert(all(res == 0), 'error in closing files');\n\nbut if the data is in csv format it can be even easier:\nfolder = 'E:\\data';\nfiles = dir(fullfile(folder, '*.txt'));\nfull_names = strcat(folder, filesep, {files.name});\nc = cellfun(@(x) csvread(x), full_names,  'UniformOutput', false);\n\nnow all the data is stored in c\n\n"
}