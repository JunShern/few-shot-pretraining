{
    "criteria": [
        {
            "criterion": "AllDocuments",
            "passed": true,
            "reason": "All documents pass."
        },
        {
            "criterion": "Domain",
            "passed": false,
            "reason": "Document source unavailable."
        },
        {
            "criterion": "QuestionAnswerStrings",
            "passed": true,
            "reason": "Text contains Q:."
        },
        {
            "criterion": "QuestionAnswerStringsV2",
            "passed": true,
            "reason": "Text contains ['Q:', 'A:']."
        },
        {
            "criterion": "FullyStructured",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamStrings",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamStringsV2",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesStrings",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ListPrefix",
            "passed": true,
            "reason": "Found 6 list prefixes. (Min: 5)"
        },
        {
            "criterion": "ListPrefixV2",
            "passed": true,
            "reason": "Text contains ['2', '1', '1', '3', '2', '1', '3', '1', '0']."
        }
    ],
    "doc_id": "6151",
    "text": "Q:\n\nSum of numbers in array\n\nI am new to programming and I try to solve problems in online-judging system. There is a problem, which looks very interesting and important, but unfortunately I have no idea how to solve that. I would appreciate any hints.\nHere is the problem: Given an array as an input. Print 1 if there are two subarrays, which have the same sum of numbers, otherwise print 0. \nInput:\n2\n1 1\nOutput:\n1\nInput:\n3\n2 5 3\nOutput:\n1\nInput:\n3\n1 4 7\nOutput:\n0\nThanks\n\nA:\n\nThis is known as the partition problem (or at least a variant of the partition problem). It's a problem that requires what is called a dynamic programming solution. This is a pretty advanced problem for someone who is just beginning to learn how to program. I advise starting on some easier challenges.\nIf, however, you are interested in tackling this beast, check out this link: http://people.csail.mit.edu/bdean/6.046/dp/. The link on this page to the 'partition problem' shows a video explanation of a working solution.\n\n"
}