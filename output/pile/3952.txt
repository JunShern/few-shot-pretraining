{
    "criteria": [
        {
            "criterion": "AllDocuments",
            "passed": true,
            "reason": "All documents pass."
        },
        {
            "criterion": "Domain",
            "passed": false,
            "reason": "Document source unavailable."
        },
        {
            "criterion": "QuestionAnswerStrings",
            "passed": true,
            "reason": "Text contains Q:."
        },
        {
            "criterion": "QuestionAnswerStringsV2",
            "passed": true,
            "reason": "Text contains ['Q:', 'A:']."
        },
        {
            "criterion": "FullyStructured",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamStrings",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamStringsV2",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesStrings",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ListPrefix",
            "passed": false,
            "reason": "Found 0 list prefixes. (Min: 5)"
        },
        {
            "criterion": "ListPrefixV2",
            "passed": false,
            "reason": "Does not meet criterion."
        }
    ],
    "doc_id": "3952",
    "text": "Q:\n\nCode is HttpClient or servlet API to parse Cookie header\n\nIs there any existing code in Apache HttpClient or in the servlet API to parse Cookie header and obtain from a string that contains \"name1=value1; name2=value2; ...\" a list of Cookie? Writing code to parse this doesn't seem too hard, but if there is already some existing code, I'd like to use it.\n\nA:\n\nIf you call getCookies() on the HttpServletRequest object, it will return an array of Cookie objects.  If you need to frequently look up cookies by name, then it may be easier to put them in to a Map so it's easy to look them up (rather than iterate over the Array each time).  Something like this:\npublic static Map<String,Cookie> getCookieMap(HttpServletRequest request) {\n    Cookie[] cookies = request.getCookies();\n    HashMap<String,Cookie> cookieMap = new HashMap<String,Cookie>();\n    if (cookies != null) {\n        for (Cookie cookie : cookies) {\n            cookieMap.put(cookie.getName(), cookie);\n        }\n    }\n    return cookieMap;\n}\n\nIf you're using HttpClient and not servlets, you can get the Cookie array using:\nclient.getState().getCookies()\n\nwhere client is your HttpClient object.\n\n"
}