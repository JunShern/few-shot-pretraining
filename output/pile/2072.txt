{
    "criteria": [
        {
            "criterion": "AllDocuments",
            "passed": true,
            "reason": "All documents pass."
        },
        {
            "criterion": "Domain",
            "passed": false,
            "reason": "Document source unavailable."
        },
        {
            "criterion": "QuestionAnswerStrings",
            "passed": true,
            "reason": "Text contains Q:."
        },
        {
            "criterion": "QuestionAnswerStringsV2",
            "passed": true,
            "reason": "Text contains ['Q:', 'A:']."
        },
        {
            "criterion": "FullyStructured",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamStrings",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamStringsV2",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesStrings",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ListPrefix",
            "passed": false,
            "reason": "Found 0 list prefixes. (Min: 5)"
        },
        {
            "criterion": "ListPrefixV2",
            "passed": false,
            "reason": "Does not meet criterion."
        }
    ],
    "doc_id": "2072",
    "text": "Q:\n\nPutting NewLine in writing CSV documents Perl\n\nI am trying to write data calculated by my perl script into a csv file which will be repeatedly opened and input to. I have encountered two issues. One, the CSV created ocupies a single row, adding each new field to a new column. The seccond is that the CSV file once created does not succesfully close so I am unable to reopen and edit it by running the script again. \nthe code that I am using is this: \npush my @rows, [\"Entries Missing from English doc:\",\" \" , \"Entries Missing  from French doc:\"];\npush @rows, [\"$englishUnincluded[0]\", \" \", \"$frenchUnincluded[0]\"];\nmy $csv = Text::CSV->new ({binary=>1}) or die \"cannot use CSV: \".Text::CSV->error_diag ();\nopen my $csvFile, \">:encoding(utf8)\", \"telt.csv\" or die \"telt.csv: $!\";\n$csv->column_names(@{$rows[0]});\n$csv->print($csvFile, $_) for @rows;\nclose $csvFile or die \"teet.csv: didnt close at all\";\n\nI have also tried using consecutive print statements rather than the $csv->print(..) for @rows; I previously had statments looking like \n$field_vals = [\"$val\", \"something\", \" \"];\n$csv->print($csvFile, $field_vals); and reloaded all the values into field vals and printed them as lines to the CSV but had the same two issues continuously. \n** note that CSV not closing issue goes away if only one line is printed. \nAlso, script does not print the \"or die\" message on not closing the file properly.\nthank you in advance for any help you provide!\n\nA:\n\nYou've forgotten to declared end of line:\nmy $csv = Text::CSV->new ({binary=>1, eol => $/}) or die \"cannot use CSV: \".Text::CSV->error_diag ();\n#                           here __^^^^^^^^^^^^\n\n"
}