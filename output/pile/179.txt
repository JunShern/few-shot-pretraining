{
    "criteria": [
        {
            "criterion": "AllDocuments",
            "passed": true,
            "reason": "All documents pass."
        },
        {
            "criterion": "QuestionAnswerStringsV2",
            "passed": true,
            "reason": "Text contains ['Q:', 'A:']."
        },
        {
            "criterion": "FullyStructured",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamStringsV2",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesStrings",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesStringsV2",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ListPrefixV2",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesMinimalEmbed",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesSynonymsEmbed",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesDiverseEmbed",
            "passed": true,
            "reason": "Text contains ['suppose the list of values are something like following: (0.154)']."
        }
    ],
    "doc_id": "179",
    "text": "Q:\n\nRead multiple lists from python into an SQL query\n\nI have 3 lists of user id's and time ranges (different for each user id) for which I would like to extract data.  I am querying an AWS redshift database through Python.  Normally, with one list, I'd do something like this:\nsql_query = \"select userid from some_table where userid in {}\".format(list_of_users)\n\nwhere list of users is the list of user id's I want - say (1,2,3...)\nThis works fine, but now I need to somehow pass it along a triplet of (userid, lower time bound, upper time bound).  So for example ((1,'2018-01-01','2018-01-14'),(2,'2018-12-23','2018-12-25'),...\nI tried various versions of this basic query\nsql_query = \"select userid from some_table where userid in {} and date between {} and {}\".format(list_of_users, list_of_dates_lower_bound, list_of_dates_upper_bound)\n\nbut no matter how I structure the lists in format(), it doesn't work.  I am not sure this is even possible this way or if I should just loop over my lists and call the query repeatedly for each triplet?\n\nA:\n\nsuppose the list of values are something like following:\nlist_of_users = [1,2], \nlist_of_dates_lower_bound = ['2018-01-01', '2018-12-23']\nlist_of_dates_lower_bound = ['2018-01-14', '2018-12-25']\n\nthe formatted sql would be:\nselect userid from some_table where userid in [1,2] and date between ['2018-01-01', '2018-12-23'] and ['2018-01-14', '2018-12-25']\n\nThis result should not be what you thought as is, it's just an invalid sql, the operand of between should be scalar value.\nI suggest loop over the lists, and pass a single value to the placeholder.\n\n"
}