{
    "criteria": [
        {
            "criterion": "AllDocuments",
            "passed": true,
            "reason": "All documents pass."
        },
        {
            "criterion": "QuestionAnswerStringsV2",
            "passed": true,
            "reason": "Text contains ['Q:', 'A:', 'A:', 'A:']."
        },
        {
            "criterion": "FullyStructured",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamStringsV2",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesStrings",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesStringsV2",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ListPrefixV2",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesMinimalEmbed",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesSynonymsEmbed",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesDiverseEmbed",
            "passed": false,
            "reason": "Does not meet criterion."
        }
    ],
    "doc_id": "5994",
    "text": "Q:\n\nHow to exclude dependencies from maven assembly plugin : jar-with-dependencies?\n\nMaven's assembly plugin enables the creation of a big jar including all dependencies with descriptorRef jar-with-dependencies.\nHow can one exclude some of these dependencies? It seems like it does not have such a configuration? Is there another solution?\n\nA:\n\nAdd the <scope>provided</scope> to the dependencies you don't want included in the jar-with-dependencies, e.g.\n    <dependency>\n      <groupId>storm</groupId>\n      <artifactId>storm</artifactId>\n      <version>0.6.1-SNAPSHOT</version>\n      <scope>provided</scope>\n    </dependency>\n\nA:\n\nYou should use the excludes option available in dependencySet. \nFollow below.:\nExample in your pom.xml:\n...\n  <build>\n    <plugins>\n      <plugin>\n        <artifactId>maven-assembly-plugin</artifactId>\n        <version>2.3</version>\n        <configuration>\n          <finalName>../final/${project.artifactId}</finalName>\n          <archive>\n            <manifest>\n              <addClasspath>false</addClasspath>\n              <mainClass>com.entrerprise.App</mainClass>\n            </manifest>\n          </archive>\n          <descriptors>\n            <descriptor>src/main/resources/jar-with-deps-with-exclude.xml</descriptor>\n          </descriptors>\n          <appendAssemblyId>false</appendAssemblyId>\n        </configuration>\n        <executions>\n          <execution>\n            <id>make-assembly</id>\n            <phase>package</phase>\n            <goals>\n              <goal>single</goal>\n            </goals>\n          </execution>\n        </executions>\n      </plugin>\n...\n\nNow in your new file jar-with-deps-with-exclude.xml (where dependencySet lives):\n <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n    <assembly xmlns=\"http://maven.apache.org/ASSEMBLY/2.0.0\"\n      xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n      xsi:schemaLocation=\"http://maven.apache.org/ASSEMBLY/2.0.0 http://maven.apache.org/xsd/assembly-2.0.0.xsd\">\n        <id>jar-with-dependencies-and-exclude-classes</id>\n        <formats>\n          <format>jar</format>\n        </formats>\n        <includeBaseDirectory>false</includeBaseDirectory>\n        <dependencySets>\n          <dependencySet>\n            <outputDirectory>/</outputDirectory>\n            <useProjectArtifact>false</useProjectArtifact>\n            <unpack>true</unpack>\n            <scope>runtime</scope>\n            <excludes>\n              <exclude>junit:junit</exclude>\n              <exclude>commons-cli:commons-cli</exclude>\n              <exclude>org.apache.maven.wagon:wagon-ssh</exclude>\n            </excludes>\n           </dependencySet>\n        </dependencySets>\n        <fileSets>\n          <fileSet>\n            <outputDirectory>/</outputDirectory>\n            <directory>${project.build.outputDirectory}</directory>\n          </fileSet>\n        </fileSets>\n      </assembly>\n\nThat's all.\n\nA:\n\nThis example indicates one way to do this:\n <dependencySets>\n    <dependencySet>\n      ....\n      <excludes>\n        <exclude>commons-lang:commons-lang</exclude>\n        <exclude>log4j:log4j</exclude>\n      </excludes>\n    </dependencySet>\n    ....\n  </dependencySets>\n\nEssentially we would use the excludes option available in dependencySet.\nSee also: https://maven.apache.org/plugins/maven-assembly-plugin/assembly-component.html\n\n"
}