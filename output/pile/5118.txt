{
    "criteria": [
        {
            "criterion": "AllDocuments",
            "passed": true,
            "reason": "All documents pass."
        },
        {
            "criterion": "Domain",
            "passed": false,
            "reason": "Document source unavailable."
        },
        {
            "criterion": "QuestionAnswerStrings",
            "passed": true,
            "reason": "Text contains Q:."
        },
        {
            "criterion": "QuestionAnswerStringsV2",
            "passed": true,
            "reason": "Text contains ['Q:', 'A:']."
        },
        {
            "criterion": "FullyStructured",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamStrings",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamStringsV2",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesStrings",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ListPrefix",
            "passed": false,
            "reason": "Found 0 list prefixes. (Min: 5)"
        },
        {
            "criterion": "ListPrefixV2",
            "passed": false,
            "reason": "Does not meet criterion."
        }
    ],
    "doc_id": "5118",
    "text": "Q:\n\nExecuting Sp_SetAppRole from ExecuteSqlCommand\n\nHere is my Code:\n            SqlParameter rolename = new SqlParameter(\"rolename\", SqlDbType.VarChar);\n            rolename.Direction = ParameterDirection.Input;\n            rolename.Value = \"role\";                \n\n            SqlParameter password = new SqlParameter(\"password\", SqlDbType.VarChar);\n            password.Direction = ParameterDirection.Input;\n            password.Value = \"123@123\";\n\n            SqlParameter fCreateCookie = new SqlParameter(\"fCreateCookie\", SqlDbType.Bit);\n            fCreateCookie.Direction = ParameterDirection.Input;\n            fCreateCookie.Size = 100;\n            fCreateCookie.Value = true;                \n\n            SqlParameter cookie = new SqlParameter(\"cookie\", SqlDbType.VarBinary);\n            cookie.Direction = ParameterDirection.Output;\n            cookie.Size = 8000;\n\n            _context.Database.ExecuteSqlCommand(TransactionalBehavior.DoNotEnsureTransaction, \"EXEC sp_setapprole @rolename,@password,@fCreateCookie, @cookie OUT;\", rolename, password, fCreateCookie, cookie);\n\nAnd I am getting an Error:\nThe formal parameter \"@fCreateCookie\" was not declared as an OUTPUT parameter, but the actual parameter passed in requested output.\nCan someone tell me what I am doing wrong?\n\nA:\n\nyou are missing a parameter \n    ALTER procedure [sys].[sp_setapprole]\n        @rolename   sysname,        -- name app role\n        @password   sysname,        -- password for app role\n-->     @encrypt    varchar(10) = 'none',       -- Encryption style ('none' | 'odbc')\n        @fCreateCookie bit = 0,  \n        @cookie varbinary(8000) = 0xFFFFFFFF OUTPUT\n    as\n\nyou need to add a paramerer @encrypt = 'none'  before @fcreatecookie in your executesqlcommand call\n\n"
}