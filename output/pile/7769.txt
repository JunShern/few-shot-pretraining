{
    "criteria": [
        {
            "criterion": "AllDocuments",
            "passed": true,
            "reason": "All documents pass."
        },
        {
            "criterion": "QuestionAnswerStringsV2",
            "passed": true,
            "reason": "Text contains ['Q:', 'A:']."
        },
        {
            "criterion": "FullyStructured",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamStringsV2",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesStrings",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesStringsV2",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ListPrefixV2",
            "passed": true,
            "reason": "Text contains ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-']."
        },
        {
            "criterion": "ExamplesMinimalEmbed",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesSynonymsEmbed",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesDiverseEmbed",
            "passed": false,
            "reason": "Does not meet criterion."
        }
    ],
    "doc_id": "7769",
    "text": "Q:\n\ndiscordjs/nodejs , How can i check if a message only contains custom emotes?\n\nI'm building my own discordbot in NodeJS by using discordjs.\nWith the code below you can recognize if the message contains only a emote\nclient.on(\"message\", function(message){\nvar bool = message.content.match(/^(:[^:\\s]+:|<:[^:\\s]+:[0-9]+>|<a:[^:\\s]+:[0-9]+>)$/);\n\nan emote shows like this when you do an console.log (the emote Kappa as an example) :\n\n<:Kappa:731053321502326797>\n\nNow it only matches when 1 emote is in the message\nBut it doesnt match if a message contains 2 emotes with a space between it.\nHow can i make this possible?\n\nA:\n\nUse\n^(:[^:\\s]+:|<:[^:\\s]+:[0-9]+>|<a:[^:\\s]+:[0-9]+>)+$\n\nSee proof.\nExplanation:\nNODE                     EXPLANATION\n--------------------------------------------------------------------------------\n  ^                        the beginning of the string\n--------------------------------------------------------------------------------\n  (                        group and capture to \\1 (1 or more times\n                           (matching the most amount possible)):\n--------------------------------------------------------------------------------\n    :                        ':'\n--------------------------------------------------------------------------------\n    [^:\\s]+                  any character except: ':', whitespace\n                             (\\n, \\r, \\t, \\f, and \" \") (1 or more\n                             times (matching the most amount\n                             possible))\n--------------------------------------------------------------------------------\n    :                        ':'\n--------------------------------------------------------------------------------\n   |                        OR\n--------------------------------------------------------------------------------\n    <:                       '<:'\n--------------------------------------------------------------------------------\n    [^:\\s]+                  any character except: ':', whitespace\n                             (\\n, \\r, \\t, \\f, and \" \") (1 or more\n                             times (matching the most amount\n                             possible))\n--------------------------------------------------------------------------------\n    :                        ':'\n--------------------------------------------------------------------------------\n    [0-9]+                   any character of: '0' to '9' (1 or more\n                             times (matching the most amount\n                             possible))\n--------------------------------------------------------------------------------\n    >                        '>'\n--------------------------------------------------------------------------------\n   |                        OR\n--------------------------------------------------------------------------------\n    <a:                      '<a:'\n--------------------------------------------------------------------------------\n    [^:\\s]+                  any character except: ':', whitespace\n                             (\\n, \\r, \\t, \\f, and \" \") (1 or more\n                             times (matching the most amount\n                             possible))\n--------------------------------------------------------------------------------\n    :                        ':'\n--------------------------------------------------------------------------------\n    [0-9]+                   any character of: '0' to '9' (1 or more\n                             times (matching the most amount\n                             possible))\n--------------------------------------------------------------------------------\n    >                        '>'\n--------------------------------------------------------------------------------\n  )+                       end of \\1 (NOTE: because you are using a\n                           quantifier on this capture, only the LAST\n                           repetition of the captured pattern will be\n                           stored in \\1)\n--------------------------------------------------------------------------------\n  $                        before an optional \\n, and the end of the\n                           string\n\n"
}