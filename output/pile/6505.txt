{
    "criteria": [
        {
            "criterion": "AllDocuments",
            "passed": true,
            "reason": "All documents pass."
        },
        {
            "criterion": "Domain",
            "passed": false,
            "reason": "Document source unavailable."
        },
        {
            "criterion": "QuestionAnswerStrings",
            "passed": true,
            "reason": "Text contains Q:."
        },
        {
            "criterion": "QuestionAnswerStringsV2",
            "passed": true,
            "reason": "Text contains ['Q:', 'A:']."
        },
        {
            "criterion": "FullyStructured",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamStrings",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamStringsV2",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesStrings",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ListPrefix",
            "passed": false,
            "reason": "Found 0 list prefixes. (Min: 5)"
        },
        {
            "criterion": "ListPrefixV2",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesMinimalEmbed",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesSynonymsEmbed",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesDiverseEmbed",
            "passed": false,
            "reason": "Does not meet criterion."
        }
    ],
    "doc_id": "6505",
    "text": "Q:\n\nPython search imap email for a string\n\nNew to python, having some trouble getting past this.\nAm getting back emails from gmail via imap (with starter code from https://yuji.wordpress.com/2011/06/22/python-imaplib-imap-example-with-gmail/) and want to search a specific email (which I am able to fetch) for a specific string. Something like this\nids = data[0]\nid_list = ids.split()\nids = data[0]\nid_list = ids.split()\nlatest_email_id = id_list[-1]\nresult, data = mail.fetch(latest_email_id, \"(RFC822)\") \nraw_email = data[0][1] \n\ndef search_raw():\n    if 'gave' in raw_email:\n        done = 'yes'\n    else:\n        done = 'no'\n\nand it always sets done to no. Here's the output for the email (for the body section of the email)\nContent-Type multipart/related;boundary=1_56D8EAE1_29AD7EA0;type=\"text/html\"\n--1_56D8EAE1_29AD7EA0\nContent-Type text/html;charset=\"UTF-8\"\nContent-Transfer-Encoding base64\n\nPEhUTUw+CiAgICAgICAgPEhFQUQ+CiAgICAgICAgICAgICAgICA8VElUTEU+PC9USVRMRT4KICAg\nICAgICA8L0hFQUQ+CiAgICAgICAgPEJPRFk+CiAgICAgICAgICAgICAgICA8UCBhbGlnbj0ibGVm\ndCI+PEZPTlQgZmFjZT0iVmVyZGFuYSIgY29sb3I9IiNjYzAwMDAiIHNpemU9IjIiPlNlbnQgZnJv\nbSBteSBtb2JpbGUuCiAgICAgICAgICAgICAgICA8QlI+X19fX19fX19fX19fX19fX19fX19fX19f\nX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fXzwvRk9OVD48L1A+CgogICAgICAg\nICAgICAgICAgPFBSRT4KR2F2ZQoKPC9QUkU+CiAgICAgICAgPC9CT0RZPgo8L0hUTUw+Cg==\n--1_56D8EAE1_29AD7EA0--\n\nI know the issue is the html, but can't seem to figure out how to parse the email properly. \nThank you!\n\nA:\n\nThe text above is base64 encoding. Python has a module named base64 which gives you the ability to decode it.\nimport base64\nimport re\n\ndef has_gave(raw_email):\n    email_body = base64.b64decode(raw_email)\n    match = re.search(r'.*gave.*', email_body , re.IGNORECASE)\n    if match:\n        done = 'yes'\n        print 'match found for word ', match.group()\n    else:\n        done = 'no'\n        print 'no match found'\n\n    return done\n\n"
}