{
    "criteria": [
        {
            "criterion": "AllDocuments",
            "passed": true,
            "reason": "All documents pass."
        },
        {
            "criterion": "Domain",
            "passed": false,
            "reason": "Document source unavailable."
        },
        {
            "criterion": "QuestionAnswerStrings",
            "passed": true,
            "reason": "Text contains Q:."
        },
        {
            "criterion": "QuestionAnswerStringsV2",
            "passed": true,
            "reason": "Text contains ['Q:', 'A:']."
        },
        {
            "criterion": "FullyStructured",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamStrings",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamStringsV2",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesStrings",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ListPrefix",
            "passed": false,
            "reason": "Found 0 list prefixes. (Min: 5)"
        },
        {
            "criterion": "ListPrefixV2",
            "passed": false,
            "reason": "Does not meet criterion."
        }
    ],
    "doc_id": "5172",
    "text": "Q:\n\nN\u00famero de requisi\u00e7\u00f5es simult\u00e2neas que um servidor PHP suporta\n\nVamos supor que tenho um servidor com um processador i7 com 4 n\u00facleos/8 threads.\nEm uma arquitetura multi-thread, assumindo que se crie uma thread por requisi\u00e7\u00e3o, apenas ser\u00e1 permitido 8 requisi\u00e7\u00f5es simult\u00e2neas, uma vez que o processador possui 8 threads?\nSe os servidores PHP s\u00e3o multi-thread, como conseguem responder a milhares de conex\u00f5es simult\u00e2neas?\n\nA:\n\nN\u00e3o fazem. Simult\u00e2neo s\u00f3 a quantidade de processadores existentes. Existe uma ilus\u00e3o de simultaneidade, como ocorre no seu computador agora. Tem centenas ou milhares de processos rodando e parece que tudo est\u00e1 simult\u00e2neo, mas n\u00e3o est\u00e1. Vai havendo troca de execu\u00e7\u00e3o.\nO sistema operacional vai agendando uma thread de cada vez em cada processador existente. Como a troca ocorre muito r\u00e1pido parece superficialmente que est\u00e3o executando simultaneamente, mas se fizer um teste b\u00e1sico de tempo ver\u00e1 que n\u00e3o \u00e9 bem assim.\nEstamos falando de processador. Acontece que grande parte das tarefas envolvem entrada e sa\u00edda, ent\u00e3o enquanto est\u00e1 lendo ou escrevendo dados externamente ao processador este fica ocioso ent\u00e3o ter v\u00e1rias threads, bem mais que estas 8 pode ser \u00fatil j\u00e1 que enquanto uma thread espera o recurso externo responder outra que n\u00e3o est\u00e1 dependendo de recurso externo pode executar, o que ajuda dar a ilus\u00e3o de simultaneidade.\nNa verdade hoje \u00e9 mais comum aplica\u00e7\u00f5es trabalharem assincronamente e n\u00e3o depender tanto assim de threads expl\u00edcitas para compensar o uso de acessos externos.\nDe qualquer forma tenho minhas d\u00favidas se um \u00fanico servidor consegue atender milhares de requisi\u00e7\u00f5es \"simult\u00e2neas\" com PHP.\nO Node limita \u00e0 quantidade virtual de CPUs porque ele trabalha assincronamente, n\u00e3o tem porque usar threads em excesso porque o processador \u00e9 acionado conforme a necessidade, n\u00e3o precisa haver concorr\u00eancia de recursos de CPU. Ele enfileira as requisi\u00e7\u00f5es em excesso j\u00e1 que n\u00e3o tem como atender mais que a capacidade do hardware, assim economiza com o gerenciamento e por isso escala muito melhor, fora o fato que o aproveitamento n\u00e3o fica tanto na \"sorte\" do momento.\nO Node ficou conhecido por fazer isto, mas todas tecnologias fazem isto hoje, em geral usam a libuv. Em geral as pessoas n\u00e3o entendem muito do que est\u00e3o fazendo, elas leem algo e acham que \u00e9 aquilo que est\u00e1 escrito sem questionar, sem entender o que est\u00e1 ocorrendo ali.\nLeia \u00c9 sempre garantido que uma aplica\u00e7\u00e3o com m\u00faltiplas threads rode mais r\u00e1pido que usando uma \u00fanica thread? para entender melhor.\n\n"
}