{
    "criteria": [
        {
            "criterion": "AllDocuments",
            "passed": true,
            "reason": "All documents pass."
        },
        {
            "criterion": "QuestionAnswerStringsV2",
            "passed": true,
            "reason": "Text contains ['Q:', 'A:']."
        },
        {
            "criterion": "FullyStructured",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamStringsV2",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesStrings",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesStringsV2",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ListPrefixV2",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesMinimalEmbed",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesSynonymsEmbed",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesDiverseEmbed",
            "passed": false,
            "reason": "Does not meet criterion."
        }
    ],
    "doc_id": "8381",
    "text": "Q:\n\ncompilation error in c statements\n\nI am trying to run this code.this code runs successfully.But when i change variables to constant numbers i get compilation error.\nMy code that works fine: \n int a =5,b=6,c=7;\n int d;\n d = a,b,c;\n printf(\"%d\",d);\n\nas i run the code its output is 5.\nbut when i run this segment of code: \n d = 2,6,7;\n printf(\"%d\",d);\n\ni get compilation error.I tried i on other compiler also. But the error still exists. What i am doing wrong.\n\nA:\n\nYour first code use the variables and assignment d = a and b and c just as expression there, so run the code:\nint main(int argc, char const *argv[])\n{\n int a =5,b=5,c=7;\n int d;\n d = a,b,c+1;\n printf(\"%d\",d);\n return 0;\n}\n\nYou get 5, b and c+1 just valued and put them there useless.But if you run this code which includes comma expression:\nint main(int argc, char const *argv[])\n{\n int a =5,b=5,c=7;\n int d;\n d = (a,b,c+1);\n printf(\"%d\",d);\n return 0;\n}\n\nYou get 8 as the last one valued expression.\nYou can use the number play as an expression with ():\nint main(int argc, char const *argv[])\n{\n int a =5,b=5,c=7;\n int d;\n d = (0,3,1);\n printf(\"%d\",d);\n return 0;\n}\n\nget the last number or valued data.\nIt works for me the code below:\nint main(int argc, char const *argv[])\n{\n int a =5,b=5,c=7;\n int d;\n d = 0,3+1,1-1;\n printf(\"%d\",d);\n return 0;\n}\n\nit output is 0, but if you don't with (), it meaningless by this way, why not just use d = 0;\n\n"
}