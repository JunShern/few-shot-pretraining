{
    "criteria": [
        {
            "criterion": "AllDocuments",
            "passed": true,
            "reason": "All documents pass."
        },
        {
            "criterion": "Domain",
            "passed": false,
            "reason": "Document source unavailable."
        },
        {
            "criterion": "QuestionAnswerStrings",
            "passed": true,
            "reason": "Text contains Q:."
        },
        {
            "criterion": "QuestionAnswerStringsV2",
            "passed": true,
            "reason": "Text contains ['Q:', 'A:']."
        },
        {
            "criterion": "FullyStructured",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamStrings",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamStringsV2",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesStrings",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ListPrefix",
            "passed": false,
            "reason": "Found 0 list prefixes. (Min: 5)"
        },
        {
            "criterion": "ListPrefixV2",
            "passed": true,
            "reason": "Text contains ['1', '2', '3', '4', '5', '6', '7', '8', '9', '1', '2', '3', '4', '5', '6', '7', '8', '9']."
        },
        {
            "criterion": "ExamplesMinimalEmbed",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesSynonymsEmbed",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesDiverseEmbed",
            "passed": false,
            "reason": "Does not meet criterion."
        }
    ],
    "doc_id": "7615",
    "text": "Q:\n\nColumn is NULL when printed as individual field or column, filled when whole data frame is printed\n\nWhen I create a column of counts using dplyr, it appears to be filled correctly, until I try to use the counts column on its own. \nExample:\nI create this dataframe:\nV1 <- c(\"TEST\", \"test\", \"tEsT\", \"tesT\", \"TesTing\", \"testing\",\"ME-TESTED\", \"re tested\", \"RE testing\")\nV2 <- c(\"othertest\", \"anothertest\", \"testing\", \"123\", \"random stuff\", \"irrelevant\", \"tested\", \"re-test\", \"tests\")\nV3 <- c(\"type1\", \"type2\", \"type1\", \"type2\", \"type3\", \"type2\", \"type2\", \"type2\", \"type1\")\ndf <- data.frame(V1, V2, V3)\n\nThen, I use dplyr to create a column of counts:\ndf$counts <- df %>% group_by(V3) %>% mutate(count = n())\n\nThis gives the expected result:\n> df\n      V1           V2    V3  counts.V1    counts.V2 counts.V3 counts.count\n1       TEST    othertest type1       TEST    othertest     type1            3\n2       test  anothertest type2       test  anothertest     type2            5\n3       tEsT      testing type1       tEsT      testing     type1            3\n4       tesT          123 type2       tesT          123     type2            5\n5    TesTing random stuff type3    TesTing random stuff     type3            1\n6    testing   irrelevant type2    testing   irrelevant     type2            5\n7  ME-TESTED       tested type2  ME-TESTED       tested     type2            5\n8  re tested      re-test type2  re tested      re-test     type2            5\n9 RE testing        tests type1 RE testing        tests     type1            3\n\nBut, when I try to use the counts.count column in any way, the result is null:\n> df$counts.count\nNULL\n\nSame result for the other columns created by dplyr.\nBut the rest of the data frame seems normal:\n> df$V1\n[1] TEST       test       tEsT       tesT       TesTing    testing    ME-TESTED  re tested  RE testing\nLevels: ME-TESTED re tested RE testing test tesT tEsT TEST testing TesTing\n\nI am totally confused about why printing the whole df gives me a different output than printing just the column of interest. What am I missing here?\n\nA:\n\nIf you rewind and recreate the dataframe and then don't do an assignment but just print the result to the screen you see this:\ndf %>% group_by(V3) %>% mutate(count = n())\n\nSource: local data frame [9 x 4]\nGroups: V3 [3]\n\n          V1           V2     V3 count\n      <fctr>       <fctr> <fctr> <int>\n1       TEST    othertest  type1     3\n2       test  anothertest  type2     5\n3       tEsT      testing  type1     3\n4       tesT          123  type2     5\n5    TesTing random stuff  type3     1\n6    testing   irrelevant  type2     5\n7  ME-TESTED       tested  type2     5\n8  re tested      re-test  type2     5\n9 RE testing        tests  type1     3\n\nIf you now do the assgnment the structure is rather confused and I think you might have gotten a more informative error if there had been fewer unique values of V1 or V2:\ndf$counts <- df %>% group_by(V3) %>% mutate(count = n())\n# snipped what you already showed\n str(df)\n#-----\n'data.frame':   9 obs. of  4 variables:\n $ V1    : Factor w/ 9 levels \"ME-TESTED\",\"re tested\",..: 7 4 6 5 9 8 1 2 3\n $ V2    : Factor w/ 9 levels \"123\",\"anothertest\",..: 4 2 8 1 5 3 7 6 9\n $ V3    : Factor w/ 3 levels \"type1\",\"type2\",..: 1 2 1 2 3 2 2 2 1\n $ counts:Classes \u2018grouped_df\u2019, \u2018tbl_df\u2019, \u2018tbl\u2019 and 'data.frame':   9 obs. of  4 variables:\n  ..$ V1   : Factor w/ 9 levels \"ME-TESTED\",\"re tested\",..: 7 4 6 5 9 8 1 2 3\n  ..$ V2   : Factor w/ 9 levels \"123\",\"anothertest\",..: 4 2 8 1 5 3 7 6 9\n  ..$ V3   : Factor w/ 3 levels \"type1\",\"type2\",..: 1 2 1 2 3 2 2 2 1\n  ..$ count: int  3 5 3 5 1 5 5 5 3\n  ..- attr(*, \"vars\")=List of 1\n  .. ..$ : symbol V3\n  ..- attr(*, \"labels\")='data.frame':   3 obs. of  1 variable:\n  .. ..$ V3: Factor w/ 3 levels \"type1\",\"type2\",..: 1 2 3\n  .. ..- attr(*, \"vars\")=List of 1\n  .. .. ..$ : symbol V3\n  .. ..- attr(*, \"drop\")= logi TRUE\n  ..- attr(*, \"indices\")=List of 3\n  .. ..$ : int  0 2 8\n  .. ..$ : int  1 3 5 6 7\n  .. ..$ : int 4\n  ..- attr(*, \"drop\")= logi TRUE\n  ..- attr(*, \"group_sizes\")= int  3 5 1\n  ..- attr(*, \"biggest_group_size\")= int 5\n\nThe format you are seeing is how R displays a matrix that is embedded in a dataframe. Objects of class table (and perhaps tbl?)  inherit from the matrix-class.\n\n"
}