{
    "criteria": [
        {
            "criterion": "AllDocuments",
            "passed": true,
            "reason": "All documents pass."
        },
        {
            "criterion": "QuestionAnswerStringsV2",
            "passed": true,
            "reason": "Text contains ['Q:', 'A:']."
        },
        {
            "criterion": "FullyStructured",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamStringsV2",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesStrings",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesStringsV2",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ListPrefixV2",
            "passed": true,
            "reason": "Text contains ['-', '-', '-', '-', '-', '-']."
        },
        {
            "criterion": "ExamplesMinimalEmbed",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesSynonymsEmbed",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesDiverseEmbed",
            "passed": false,
            "reason": "Does not meet criterion."
        }
    ],
    "doc_id": "2870",
    "text": "Q:\n\nRetrieve a specific word from the entire string in android?\n\nI have some data in the html format. I am using Html.fromHtml(String) when setting the data to the textview in android. Also the html data contains 2 to 3 images. I want to get the name of the images from the html data and  store them in an array. Based on the number of the images in the array I will set them to the imageview. How can I get the image name from src in image tag?\nWhich one will be the better option .i.e using regular expression or substring? \nPlease suggest some solutions and help me with some examples.\nMy Code:\npublic View getView(int position, View convertView, ViewGroup parent) \n{ \n---\n---\n   desc = (TextView) view.findViewById(R.id.description);\n   URLImageParser p = new URLImageParser(desc, this);\n   Spanned htmlSpan = Html.fromHtml(listItem.getdesc(), p, null);\n   desc.setText(htmlSpan);\n----\n----\n----\n----\n}\n\npublic class URLDrawable extends BitmapDrawable {\n        // the drawable that you need to set, you could set the initial drawing\n        // with the loading image if you need to\n        protected Drawable drawable;\n\n        @Override\n        public void draw(Canvas canvas) {\n            // override the draw to facilitate refresh function later\n            if(drawable != null) {\n                drawable.draw(canvas);\n            }\n        }\n    }\n\n    public class URLImageParser implements ImageGetter {\n        ListAdapter c;\n        View container;\n\n        /***\n         * Construct the URLImageParser which will execute AsyncTask and refresh the container\n         * @param t\n         * @param listAdapter\n         */\n        public URLImageParser(View t, ListAdapter listAdapter) {\n            this.c = listAdapter;\n            this.container = t;\n        }\n\n        public Drawable getDrawable(String source) {\n            URLDrawable urlDrawable = new URLDrawable();\n\n            // get the actual source\n            ImageGetterAsyncTask asyncTask = \n                new ImageGetterAsyncTask( urlDrawable);\n\n            asyncTask.execute(source);\n\n            // return reference to URLDrawable where I will change with actual image from\n            // the src tag\n            return urlDrawable;\n        }\n\n        public class ImageGetterAsyncTask extends AsyncTask<String, Void, Drawable>  {\n            URLDrawable urlDrawable;\n\n            public ImageGetterAsyncTask(URLDrawable d) {\n                this.urlDrawable = d;\n            }\n\n            @Override\n            protected Drawable doInBackground(String... params) {\n                String source = params[0];\n                return fetchDrawable(source);\n            }\n\n            @Override\n            protected void onPostExecute(Drawable result) {\n                // set the correct bound according to the result from HTTP call\n                urlDrawable.setBounds(0, 0, 0 + result.getIntrinsicWidth(), 0 \n                        + result.getIntrinsicHeight()); \n\n                // change the reference of the current drawable to the result\n                // from the HTTP call\n                urlDrawable.drawable = result;\n\n                // redraw the image by invalidating the container\n                URLImageParser.this.container.invalidate();\n            }\n\n            /***\n             * Get the Drawable from URL\n             * @param urlString\n             * @return\n             */\n            public Drawable fetchDrawable(String urlString) {\n                try {\n                    InputStream is = fetch(urlString);\n                    Drawable drawable = Drawable.createFromStream(is, \"src\");\n                    drawable.setBounds(0, 0, 0 + drawable.getIntrinsicWidth(), 0 \n                            + drawable.getIntrinsicHeight()); \n                    return drawable;\n                } catch (Exception e) {\n                    return null;\n                } \n            }\n\n            private InputStream fetch(String urlString) throws MalformedURLException, IOException {\n                DefaultHttpClient httpClient = new DefaultHttpClient();\n                HttpGet request = new HttpGet(urlString);\n                HttpResponse response = httpClient.execute(request);\n                return response.getEntity().getContent();\n            }\n        }\n    }\n\nA:\n\nHtml.ImageGetter() will be more helpful, it will find the tag <img>\nhttp://developer.android.com/reference/android/text/Html.ImageGetter.html\n\n"
}