{
    "criteria": [
        {
            "criterion": "AllDocuments",
            "passed": true,
            "reason": "All documents pass."
        },
        {
            "criterion": "Domain",
            "passed": false,
            "reason": "Document source unavailable."
        },
        {
            "criterion": "QuestionAnswerStrings",
            "passed": true,
            "reason": "Text contains Q:."
        },
        {
            "criterion": "QuestionAnswerStringsV2",
            "passed": true,
            "reason": "Text contains ['Q:', 'A:']."
        },
        {
            "criterion": "FullyStructured",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamStrings",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamStringsV2",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesStrings",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ListPrefix",
            "passed": false,
            "reason": "Found 0 list prefixes. (Min: 5)"
        },
        {
            "criterion": "ListPrefixV2",
            "passed": false,
            "reason": "Does not meet criterion."
        }
    ],
    "doc_id": "1791",
    "text": "Q:\n\nInvalid Date Issue but Date is Invalid\n\nI have a date format \n\n03.03.2016 20:01\n\nAnd I have a code\naData._date = new Date(aData[3]).getTime();\n\nerror is that date is invalid but, at different computer it worked well but now it is not working .What is the problem?\nThanks in advance\n\nA:\n\nWhat is the problem?\n\nParsing of strings using the Date constructor (or Date.parse, they are equivalent for parsing) is largely implementation dependent and is not recommended. Manually parse strings, either with a small function if you only have to deal with a single format, or use a library (there are many good ones to choose from) and provide the format otherwise.\nECMAScript 2015 specifies that Date.parse correctly parse ISO 8601 extended format dates, however any other format is implementation dependent. Many browsers in use do not correctly (i.e. per the specification) parse ISO 8601 format dates either.\n\"03.03.2016 20:01\" is not an ISO 8601 date format. Assuming it's DD.MM.YYYY hh:mm it can be parsed as a local date and time using:\n\nfunction parseDMYHM(s){\r\n  var b = ('' || s).split(/\\D/);\r\n  return new Date(b[2], b[1]-1, b[0], b[3], b[4]);\r\n}\r\n\r\ndocument.write(parseDMYHM('03.03.2016 20:01'));\n\nOr if you have a library with a parse function that accepts a format to parse (as such libraries that are any good will), using something like:\nvar d = parse('03.03.2016 20:01', 'DD.MM.YYYY hh:mm');\n\n"
}