{
    "criteria": [
        {
            "criterion": "AllDocuments",
            "passed": true,
            "reason": "All documents pass."
        },
        {
            "criterion": "QuestionAnswerStringsV2",
            "passed": true,
            "reason": "Text contains ['Q:', 'A:']."
        },
        {
            "criterion": "FullyStructured",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamStringsV2",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesStrings",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesStringsV2",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ListPrefixV2",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesMinimalEmbed",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesSynonymsEmbed",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesDiverseEmbed",
            "passed": false,
            "reason": "Does not meet criterion."
        }
    ],
    "doc_id": "9700",
    "text": "Q:\n\nFind value in array of objects\n\nI have an array of objects, each object contains n key/value pairs. I need to return an array of the objects which has a value matching x.\nUsing Underscore.js I could use _.findWhere however I don't know what key the value will be under.\nI could obviously loop the array, fetch all of the keys in each object, then run _.findWhere on each key and check if the value is there, but it doesn't seem like a good way of doing this.\n\nA:\n\nI could obviously loop the array, fetch all of the keys in each object...\n\nYes.   \nWrite a function that accepts an array and a value to look for in its elements members,  loop over the array, loop over the keys of the current element, and push the objects containing a member with a matching value to an array and return it after the iteration.\nfunction findValues (arr,val) {\n    var result = [];\n    for (var i=0,current;i<arr.length;i++) {\n        current = arr [i];\n        for (var key in current) {\n            if (current [key] === val) {\n               result.push (current);\n            }\n        }\n    }\n    return result\n}\n\nHere is an example output\nfindValues (\n   [{\n     a:1,\n     b:2,\n     c:3\n   },{\n     a:1,\n     b:2,\n   },{\n     a:1,\n     b:2,\n   },{\n     a:1,\n     b:2,\n     c:3,\n     d:4\n   },{\n     a:1,\n     b:2,\n   }],\n   3\n) //[{\"a\":1,\"b\":2,\"c\":3},{\"a\":1,\"b\":2,\"c\":3,\"d\":4}]\n\n"
}