{
    "criteria": [
        {
            "criterion": "AllDocuments",
            "passed": true,
            "reason": "All documents pass."
        },
        {
            "criterion": "Domain",
            "passed": false,
            "reason": "Document source unavailable."
        },
        {
            "criterion": "QuestionAnswerStrings",
            "passed": true,
            "reason": "Text contains Q:."
        },
        {
            "criterion": "QuestionAnswerStringsV2",
            "passed": true,
            "reason": "Text contains ['Q:', 'A:']."
        },
        {
            "criterion": "FullyStructured",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamStrings",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamStringsV2",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesStrings",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ListPrefix",
            "passed": false,
            "reason": "Found 0 list prefixes. (Min: 5)"
        },
        {
            "criterion": "ListPrefixV2",
            "passed": true,
            "reason": "Text contains ['+', '+', '+', '+', '+', '+']."
        },
        {
            "criterion": "ExamplesMinimalEmbed",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesSynonymsEmbed",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesDiverseEmbed",
            "passed": true,
            "reason": "Text contains ['and these are the results for the second query: (0.200)']."
        }
    ],
    "doc_id": "2788",
    "text": "Q:\n\nMysql subquery much faster than join\n\nI have the following queries which both return the same result and row count:\nselect * from (\n               select UNIX_TIMESTAMP(network_time) * 1000 as epoch_network_datetime, \n                      hbrl.business_rule_id, \n                      display_advertiser_id, \n                      hbrl.campaign_id, \n                      truncate(sum(coalesce(hbrl.ad_spend_network, 0))/100000.0, 2) as demand_ad_spend_network, \n                      sum(coalesce(hbrl.ad_view, 0)) as demand_ad_view, \n                      sum(coalesce(hbrl.ad_click, 0)) as demand_ad_click, \n                      truncate(coalesce(case when sum(hbrl.ad_view) = 0 then 0 else 100*sum(hbrl.ad_click)/sum(hbrl.ad_view) end, 0), 2) as ctr_percent, \n                      truncate(coalesce(case when sum(hbrl.ad_view) = 0 then 0 else sum(hbrl.ad_spend_network)/100.0/sum(hbrl.ad_view) end, 0), 2) as ecpm,\n                      truncate(coalesce(case when sum(hbrl.ad_click) = 0 then 0 else sum(hbrl.ad_spend_network)/100000.0/sum(hbrl.ad_click) end, 0), 2) as ecpc \n               from hourly_business_rule_level hbrl\n               where (publisher_network_id = 31534) \n               and network_time between str_to_date('2017-08-13 17:00:00.000000', '%Y-%m-%d %H:%i:%S.%f') and str_to_date('2017-08-14 16:59:59.999000', '%Y-%m-%d %H:%i:%S.%f') \n               and (network_time IS NOT NULL and display_advertiser_id > 0)\n               group by network_time, hbrl.campaign_id, hbrl.business_rule_id\n               having demand_ad_spend_network > 0\n               OR demand_ad_view > 0\n               OR demand_ad_click > 0\n               OR ctr_percent > 0\n               OR ecpm > 0\n               OR ecpc > 0\n               order by epoch_network_datetime) as atb\n       left join dim_demand demand on atb.display_advertiser_id = demand.advertiser_dsp_id \n       and atb.campaign_id = demand.campaign_id \n       and atb.business_rule_id = demand.business_rule_id \n\nran explain extended, and these are the results:\n+----+-------------+----------------------------+------+-------------------------------------------------------------------------------+---------+---------+-----------------+---------+----------+----------------------------------------------+\n| id | select_type | table                      | type | possible_keys                                                                 | key     | key_len | ref             | rows    | filtered | Extra                                        |\n+----+-------------+----------------------------+------+-------------------------------------------------------------------------------+---------+---------+-----------------+---------+----------+----------------------------------------------+\n|  1 | PRIMARY     | <derived2>                 | ALL  | NULL                                                                          | NULL    | NULL    | NULL            | 1451739 |   100.00 | NULL                                         |\n|  1 | PRIMARY     | demand                     | ref  | PRIMARY,join_index                                                            | PRIMARY | 4       | atb.campaign_id |       1 |   100.00 | Using where                                  |\n|  2 | DERIVED     | hourly_business_rule_level | ALL  | _hourly_business_rule_level_supply_idx,_hourly_business_rule_level_demand_idx | NULL    | NULL    | NULL            | 1494447 |    97.14 | Using where; Using temporary; Using filesort |\n+----+-------------+----------------------------+------+-------------------------------------------------------------------------------+---------+---------+-----------------+---------+----------+----------------------------------------------+\n\nand the other is:\nselect UNIX_TIMESTAMP(network_time) * 1000 as epoch_network_datetime, \n       hbrl.business_rule_id, \n       display_advertiser_id, \n       hbrl.campaign_id, \n       truncate(sum(coalesce(hbrl.ad_spend_network, 0))/100000.0, 2) as demand_ad_spend_network, \n       sum(coalesce(hbrl.ad_view, 0)) as demand_ad_view, \n       sum(coalesce(hbrl.ad_click, 0)) as demand_ad_click, \n       truncate(coalesce(case when sum(hbrl.ad_view) = 0 then 0 else 100*sum(hbrl.ad_click)/sum(hbrl.ad_view) end, 0), 2) as ctr_percent, \n       truncate(coalesce(case when sum(hbrl.ad_view) = 0 then 0 else sum(hbrl.ad_spend_network)/100.0/sum(hbrl.ad_view) end, 0), 2) as ecpm, \n       truncate(coalesce(case when sum(hbrl.ad_click) = 0 then 0 else sum(hbrl.ad_spend_network)/100000.0/sum(hbrl.ad_click) end, 0), 2) as ecpc \nfrom hourly_business_rule_level hbrl\njoin dim_demand demand on hbrl.display_advertiser_id = demand.advertiser_dsp_id \nand hbrl.campaign_id = demand.campaign_id \nand hbrl.business_rule_id = demand.business_rule_id \nwhere (publisher_network_id = 31534) \nand network_time between str_to_date('2017-08-13 17:00:00.000000', '%Y-%m-%d %H:%i:%S.%f') and str_to_date('2017-08-14 16:59:59.999000', '%Y-%m-%d %H:%i:%S.%f') \nand (network_time IS NOT NULL and display_advertiser_id > 0)\ngroup by network_time, hbrl.campaign_id, hbrl.business_rule_id\nhaving demand_ad_spend_network > 0\nOR demand_ad_view > 0\nOR demand_ad_click > 0 \nOR ctr_percent > 0\nOR ecpm > 0\nOR ecpc > 0\norder by epoch_network_datetime;\n\nand these are the results for the second query:\n+----+-------------+----------------------------+------+-------------------------------------------------------------------------------+---------+---------+---------------------------------------------------------------+---------+----------+----------------------------------------------+\n| id | select_type | table                      | type | possible_keys                                                                 | key     | key_len | ref                                                           | rows    | filtered | Extra                                        |\n+----+-------------+----------------------------+------+-------------------------------------------------------------------------------+---------+---------+---------------------------------------------------------------+---------+----------+----------------------------------------------+\n|  1 | SIMPLE      | hourly_business_rule_level | ALL  | _hourly_business_rule_level_supply_idx,_hourly_business_rule_level_demand_idx | NULL    | NULL    | NULL                                                          | 1494447 |    97.14 | Using where; Using temporary; Using filesort |\n|  1 | SIMPLE      | demand                     | ref  | PRIMARY,join_index                                                            | PRIMARY | 4       | my6sense_datawarehouse.hourly_business_rule_level.campaign_id |       1 |   100.00 | Using where; Using index                     |\n+----+-------------+----------------------------+------+-------------------------------------------------------------------------------+---------+---------+---------------------------------------------------------------+---------+----------+----------------------------------------------+\n\nthe first one takes about 2 seconds while the second one takes over 2 minutes!\nwhy is the second query taking so long? \nwhat am I missing here?\nthanks.\n\nA:\n\nUse a subquery whenever the subquery significantly shrinks the number of rows before - ANY JOIN - always to reinforce Rick James Plan B.\nTo reinforce Rick & Paul's answer which you have already documented.  The answers by Rick and Paul deserve Acceptance.\n\n"
}