{
    "criteria": [
        {
            "criterion": "AllDocuments",
            "passed": true,
            "reason": "All documents pass."
        },
        {
            "criterion": "QuestionAnswerStringsV2",
            "passed": true,
            "reason": "Text contains ['Q:', 'A:']."
        },
        {
            "criterion": "FullyStructured",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamStringsV2",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesStrings",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesStringsV2",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ListPrefixV2",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesMinimalEmbed",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesSynonymsEmbed",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesDiverseEmbed",
            "passed": true,
            "reason": "Text contains [\"It's one of millions solutions.. above you have contact_list ordered by names. (0.191)\"]."
        }
    ],
    "doc_id": "7396",
    "text": "Q:\n\nContacts Matching\n\nI have the below Models:\nclass UserModel(User):\n  mobile_number = StringField\n  common_name = StringField\n\nclass Contacts(models.Model):\n  user = ForeignKey(UserModel)\n  mobile_number = StringField\n  name = StringField\n\nand I created a new UserModel of non repeated mobile number and most commonly used name from Contacts Model.  I implemented it by using:\nfrom collections import Counter\n\nAny professional suggestions ? to get the common name from Contacts Model of each mobile_number of Contacts Model\n\nA:\n\ncontact_list = Contacts.objects.all().order_by('name')\n\nname = None\n\nfor contact in contact_list:\n    if contact.name != name:\n        print '-- New Name --'\n        print 'name: %s' % contact.name\n        name = contact.name\n    print 'phone number: %s' % contact.phone \n\nIt's one of millions solutions.. above you have contact_list ordered by names. Counter from collections is also a good approach.. even better then this.\n\n"
}