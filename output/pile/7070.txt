{
    "criteria": [
        {
            "criterion": "AllDocuments",
            "passed": true,
            "reason": "All documents pass."
        },
        {
            "criterion": "QuestionAnswerStringsV2",
            "passed": true,
            "reason": "Text contains ['Q:', 'A:']."
        },
        {
            "criterion": "FullyStructured",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamStringsV2",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesStrings",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesStringsV2",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ListPrefixV2",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesMinimalEmbed",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesSynonymsEmbed",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesDiverseEmbed",
            "passed": false,
            "reason": "Does not meet criterion."
        }
    ],
    "doc_id": "7070",
    "text": "Q:\n\nOne-off job with hangfire\n\nHow can I run a one-off job with hangfire?\nIt doesn't look that CRON syntax supports \"run at startup and never again\" type of thing.\nI don't want to come up with a fixed CRON date (like 2019-02-28T15:12), because that wouldn't work across several environments.\nAny ideas how to do it?\n\nA:\n\nWhat we ended up with is a job that never runs, but can be triggered via Hangfire UI.\nSo something like this:\nRecurringJob.AddOrUpdate<SomeType>(\"name\", service => service.Run(), NEVER);\n\n"
}