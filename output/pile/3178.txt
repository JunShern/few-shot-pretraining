{
    "criteria": [
        {
            "criterion": "AllDocuments",
            "passed": true,
            "reason": "All documents pass."
        },
        {
            "criterion": "Domain",
            "passed": false,
            "reason": "Document source unavailable."
        },
        {
            "criterion": "QuestionAnswerStrings",
            "passed": true,
            "reason": "Text contains Q:."
        },
        {
            "criterion": "QuestionAnswerStringsV2",
            "passed": true,
            "reason": "Text contains ['Q:', 'A:']."
        },
        {
            "criterion": "FullyStructured",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamStrings",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamStringsV2",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesStrings",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ListPrefix",
            "passed": false,
            "reason": "Found 0 list prefixes. (Min: 5)"
        },
        {
            "criterion": "ListPrefixV2",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesMinimalEmbed",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesSynonymsEmbed",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesDiverseEmbed",
            "passed": false,
            "reason": "Does not meet criterion."
        }
    ],
    "doc_id": "3178",
    "text": "Q:\n\nRight to Left Languages in Java\n\nWhen I entered \nnew String(\"<some arabic text>\".getBytes(), \"UTF-8\");\n\ndespite displayed exactly the way it was pasted (into the eclipse editor), index 0 contained the rightmost character of the string. \n(Also, each arabic letter was two bytes, the first byte being -40 for each. Does that indicate the sequence?)\nI would like to know if the java compiler recognizes arabic in the background of if the eclipse editor would reorganize arabic literals? Or why the debugger knew this was arabic, which means the first to be read letter is the rightmost one and as such assigned an index 0.\n\nA:\n\nAll text is stored in writing order, so the first (right most) letter in Arabic should be stored in index 0. It's up to the software that displays strings to recognize that the text is Arabic and lay it out right-to-left.\nAlso, the line of code you quote at best does nothing, at worst it corrupts the data. It encodes the given Unicode string as bytes using the system default encoding, which\u00a0could be anything, and then pretends the resulting bytes represent some  text in UTF-8 and decodes it.\n\n"
}