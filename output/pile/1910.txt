{
    "criteria": [
        {
            "criterion": "AllDocuments",
            "passed": true,
            "reason": "All documents pass."
        },
        {
            "criterion": "Domain",
            "passed": false,
            "reason": "Document source unavailable."
        },
        {
            "criterion": "QuestionAnswerStrings",
            "passed": true,
            "reason": "Text contains Q:."
        },
        {
            "criterion": "QuestionAnswerStringsV2",
            "passed": true,
            "reason": "Text contains ['Q:', 'A:']."
        },
        {
            "criterion": "FullyStructured",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamStrings",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamStringsV2",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesStrings",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ListPrefix",
            "passed": false,
            "reason": "Found 0 list prefixes. (Min: 5)"
        },
        {
            "criterion": "ListPrefixV2",
            "passed": false,
            "reason": "Does not meet criterion."
        }
    ],
    "doc_id": "1910",
    "text": "Q:\n\nJ2SE getting a json response throwing exception 451?\n\nI'm creating an application that needs to get an answer from a webservice that response as json object. I've already test URL on browser and it works very well but using Java(J2SE) it doesn't works and throws an exception 451 from server.\nI don't know why it works on browser and doesn't works on j2se and how to fix it. \nHow could I fix this ?\nThe URL: https://economia.awesomeapi.com.br/all/USD-BRL\nException\nServer returned HTTP response code: 451 for URL: https://economia.awesomeapi.com.br/all/USD-BRL\n\nMethod\npublic void getJsonFromURL(){ \n     try{\n        URL u = new URL(\"https://economia.awesomeapi.com.br/all/USD-BRL\");\n        HttpURLConnection c = (HttpURLConnection) u.openConnection();\n\n        c.setRequestProperty(\"Content-Type\", \"application/json; charset=UTF-8\");            \n        c.setRequestProperty(\"Accept\", \"application/json\");           \n        c.setRequestProperty(\"access-control-allow-origin\", \"*\");\n        c.setRequestProperty(\"server\", \"keycdn-engine\");\n        c.setRequestMethod(\"GET\");\n        c.setDoOutput(true);\n        c.setDoInput(true);\n        c.connect();\n\n        int status = c.getResponseCode();\n        System.out.println(\"Code Response: \" + status);\n\n            //Exception\n            Server returned HTTP response code: 451 for URL: https://economia.awesomeapi.com.br/all/USD-BRL\n\n        }catch(Exception e){\n            System.out.println(\"Erro: \" + e.getLocalizedMessage());\n        }   \n\n}\n\nA:\n\nSeems I found it, the server doesn't like if the user-agent header isn't there. The request below gave me a result. Even if the parameter has no value, its accepted.\nI couldn't be some certificate/ssl/tls issue since the connection was established and the server actually replied, it just didn't like the request very much. This line did it:\n con.setRequestProperty(\"User-Agent\", \"\");\n\n"
}