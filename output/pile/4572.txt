{
    "criteria": [
        {
            "criterion": "AllDocuments",
            "passed": true,
            "reason": "All documents pass."
        },
        {
            "criterion": "Domain",
            "passed": false,
            "reason": "Document source unavailable."
        },
        {
            "criterion": "QuestionAnswerStrings",
            "passed": true,
            "reason": "Text contains Q:."
        },
        {
            "criterion": "QuestionAnswerStringsV2",
            "passed": true,
            "reason": "Text contains ['Q:', 'A:']."
        },
        {
            "criterion": "FullyStructured",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamStrings",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamStringsV2",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesStrings",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ListPrefix",
            "passed": false,
            "reason": "Found 0 list prefixes. (Min: 5)"
        },
        {
            "criterion": "ListPrefixV2",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesMinimalEmbed",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesSynonymsEmbed",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesDiverseEmbed",
            "passed": false,
            "reason": "Does not meet criterion."
        }
    ],
    "doc_id": "4572",
    "text": "Q:\n\njQuery conditional statement to check if a select option has either of 4 values selected\n\nI am working on this project that has a reservation form which allow users specify which sort of service they require. I have a select menu with eight (8) options and I have two divs which would either show/hide depending on the value of the option been selected. Seen below is the select element:\n<select name=\"serviceChoice\" id=\"serviceChoice\">\n  <option value=\"A\">Option A</option>\n  <option value=\"B\">Option B</option>\n  <option value=\"C\" selected=\"selected\">Option C</option>\n  <option value=\"D\">Option D</option>\n  <option value=\"E\">Option E</option>\n  <option value=\"F\">Option F</option>\n</select>\n\n<div id=\"field_1\" class=\"optionBox\">I have several form fields</div>\n<div id=\"field_2\" class=\"optionBox\">I have several form fields</div>\n\nI have written my jQuery code to alternate between these divs, however I would like to know if there is a shorter better way to get this done. I would also like to clear the values of any input elements in a div which has been hidden due to the choice of the user. My code is as follows:\n(function($){\n    $('#field_1').show();\n    $('select[name=serviceChoice]').change(function(){\n        if( $('select[name=serviceChoice] option:selected').val() == 'A' ) {\n            $('.optionBox').hide();\n            $('#dropOff').show();\n        } else if ( $('select[name=serviceChoice] option:selected').val() == 'B' ) {\n            $('.optionBox').hide();\n            $('#pickUp').show();\n        } else if ( $('select[name=serviceChoice] option:selected').val() == 'C' ) {\n            $('.optionBox').hide();\n            $('#pickUp').show();\n        } else if ( $('select[name=serviceChoice] option:selected').val() == 'D' ) {\n            $('.optionBox').hide();\n            $('#pickUp').show();\n        } else {\n            $('.optionBox').show();\n        }\n    });\n})(jQuery);\n\nA:\n\n// You can use the document.ready as both encapsulation as well as\n// to make sure the DOM is ready for operation.\n$(function ($) {\n\n  // Unless these are dynamic (the set could change), it's better to cache them\n  var optionBox = $('.optionBox');\n  var dropOff = $('#dropOff');\n  var pickUp = $('#pickUp');\n  var field1 = $('#field_1');\n\n  field.show();\n\n  // Your select box has an ID. They are faster than attribute selectors \n  // in both parsing ase well as fetching from the DOM\n  $('#serviceChoice').change(function () {\n\n    // The current context of this function is the DOM element, which is the select\n    // You can use it to get the value, rather than using a selector again. Removes\n    // the need for jQuery to parse the selector and look for it in the DOM\n    switch ($(this).val()) {\n    case 'A':\n      optionBox.hide();\n      dropOff.show();\n      break;\n    case 'B':\n    case 'C':\n    case 'D':\n      optionBox.hide();\n      pickUp.show();\n      break;\n    default:\n      optionBox.show();\n    }\n  });\n});\n\nMinus the comments, here's what you get:\n$(function ($) {\n\n  var optionBox = $('.optionBox');\n  var dropOff = $('#dropOff');\n  var pickUp = $('#pickUp');\n  var field1 = $('#field_1');\n\n  field.show();\n\n  $('#serviceChoice').change(function () {\n\n    switch ($(this).val()) {\n    case 'A':\n      optionBox.hide();\n      dropOff.show();\n      break;\n    case 'B':\n    case 'C':\n    case 'D':\n      optionBox.hide();\n      pickUp.show();\n      break;\n    default:\n      optionBox.show()\n    }\n  })\n});\n\n"
}