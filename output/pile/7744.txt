{
    "criteria": [
        {
            "criterion": "AllDocuments",
            "passed": true,
            "reason": "All documents pass."
        },
        {
            "criterion": "Domain",
            "passed": false,
            "reason": "Document source unavailable."
        },
        {
            "criterion": "QuestionAnswerStrings",
            "passed": true,
            "reason": "Text contains Q:."
        },
        {
            "criterion": "QuestionAnswerStringsV2",
            "passed": true,
            "reason": "Text contains ['Q:', 'A:']."
        },
        {
            "criterion": "FullyStructured",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamStrings",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamStringsV2",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesStrings",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ListPrefix",
            "passed": false,
            "reason": "Found 0 list prefixes. (Min: 5)"
        },
        {
            "criterion": "ListPrefixV2",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesMinimalEmbed",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesSynonymsEmbed",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesDiverseEmbed",
            "passed": true,
            "reason": "Text contains ['From the user-added columns that are visible, a user can re-order these, and I use the order of these columns for something else later in my code. (0.185)', 'Why are the starred values different, and how can I check for this in my code? (0.197)']."
        }
    ],
    "doc_id": "7744",
    "text": "Q:\n\nReordering columns in DataGridView then reading DisplayIndex with hidden columns\n\nI have a DataGridView containing some columns - some added automatically and some added when a user performs a certain action. Some of the auto-generated columns are not visible, and the visible columns are frozen and read-only. From the user-added columns that are visible, a user can re-order these, and I use the order of these columns for something else later in my code.\nThe auto-generated columns are of the custom type DataGridViewUnincludedMetadataColumn and the user-generated columns are normal DataGridViewColumns.\nThe problem: \nI am trying to get a DataGridViewColumn[] (called orderedColumnList) which is just the user-generated, visible columns. \nI use this code to count the number of auto-generated, visible columns:\nint unincludedVisibleColumnCount = 0;\nforeach (var unincludedCol in dataGridView_Metadata.Columns.OfType<DataGridViewUnincludedMetadataColumn>())\n{\n    if (unincludedCol.Visible)\n    {\n        unincludedVisibleColumnCount++;\n    }\n}\n\nI use this code to get my orderedColumnList:\nforeach (DataGridViewColumn col in dataGridView_Metadata.Columns)\n{\n    if (col.GetType() != typeof(DataGridViewUnincludedMetadataColumn))\n    {\n        //if the column is going to be visible\n        //add the column to the orderedcolumnlist \n\n        orderedColumnList[col.DisplayIndex - unincludedVisibleColumnCount] = col;\n\n    }\n}\n\nThe problem is that the DisplayIndex doesn't seem to match up with the actual index of where each column is being displayed. \nIn my tests I'm getting this:\nIndex | DisplayIndex | Where the column actually is in the display\n  0   |       0      |        0\n  1   |       1      |        1\n  2   |       4      |    n/a - Visible == false\n  3   |       6*     |        5*\n  4   |       3      |        3\n  5   |       2      |        2\n  6   |       5*     |        4*\n\nInitially I thought it was just the last column that was off but then I tested by adding another user-generated column and it made the last two columns off by one, so I'm confused as to what the pattern here might be. \nWhy are the starred values different, and how can I check for this in my code? \n\nA:\n\nI have now figured this out thanks to @stuartd's comment, code is below. This uses the GetFirstColumn() and GetNextColumn() methods on the DataGridViewColumnCollection object with DataGridViewElementStates.Visible.\nList<DataGridViewColumn> orderedColumnList = new List<DataGridViewColumn>();\n\nDataGridViewColumn firstCol = dataGridView_Metadata.Columns.GetFirstColumn(DataGridViewElementStates.Visible);\n\nDataGridViewColumn nextCol = dataGridView_Metadata.Columns.GetNextColumn(firstCol, DataGridViewElementStates.Visible, DataGridViewElementStates.None);\nwhile (nextCol != null)\n{\n    if (nextCol.GetType() != typeof(DataGridViewUnincludedMetadataColumn))\n    {\n        orderedColumnList.Add(nextCol);                        \n    }\n    nextCol = dataGridView_Metadata.Columns.GetNextColumn(nextCol, DataGridViewElementStates.Visible, DataGridViewElementStates.None);\n}\n\n"
}