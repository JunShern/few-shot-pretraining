{
    "criteria": [
        {
            "criterion": "AllDocuments",
            "passed": true,
            "reason": "All documents pass."
        },
        {
            "criterion": "Domain",
            "passed": false,
            "reason": "Document source unavailable."
        },
        {
            "criterion": "QuestionAnswerStrings",
            "passed": true,
            "reason": "Text contains Q:."
        },
        {
            "criterion": "QuestionAnswerStringsV2",
            "passed": true,
            "reason": "Text contains ['Q:', 'A:']."
        },
        {
            "criterion": "FullyStructured",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamStrings",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamStringsV2",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesStrings",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ListPrefix",
            "passed": false,
            "reason": "Found 0 list prefixes. (Min: 5)"
        },
        {
            "criterion": "ListPrefixV2",
            "passed": false,
            "reason": "Does not meet criterion."
        }
    ],
    "doc_id": "8640",
    "text": "Q:\n\nEthereum implementation of a non-fungible but divisible token? (ERC721 seems not to work for that)\n\nI am struggling currently with finding the right implementation possibility for a token with the following properties:\n\nAsset-backed token based on a non-fungible asset (like a piece of art)\nMore than one owner per token (crowd-ownership on each non fungible asset) e.g. multiple owners of one piece of art\n\nA non fungible asset would lead into the direction of using ERC721 (which has been used e.g. by cryptokitties). The problem of this standard is that it would not allow multiple owners of a token because each token is not divisible.\nI thought about multiple options but couldnt find out whether they are possible. For example would it be possible to have an ERC20 token \"own\" a ERC721?\nAny suggestions?\n\nA:\n\nThe problem of this standard is that it would not allow multiple owners of a token because each token is not divisible.\n\nIs there possibly confusion between the idea of divisibility and fractional ownership? They're quite different concerns. \nDivisibility is about division. For example, you can divide $100 into two $50 but you wouldn't want to saw a kitty in two because that would be very bad for the cat. Still, joint ownership of a single kitty is possible. \nIt's true that ERC721 considers only a single owner. This is a common pattern that keeps the core standard and code compact but it doesn't prevent joint/fractional ownership, if that is what is needed. \nThe trick is that the \"owner\" could be a contract. That's up to you at an application-design level. You could put any sort of multi-signature or governance contract in place and give it custody of assets.  \nHope it helps. \n\n"
}