{
    "criteria": [
        {
            "criterion": "AllDocuments",
            "passed": true,
            "reason": "All documents pass."
        },
        {
            "criterion": "Domain",
            "passed": false,
            "reason": "Document source unavailable."
        },
        {
            "criterion": "QuestionAnswerStrings",
            "passed": true,
            "reason": "Text contains Q:."
        },
        {
            "criterion": "QuestionAnswerStringsV2",
            "passed": true,
            "reason": "Text contains ['Q:', 'A:']."
        },
        {
            "criterion": "FullyStructured",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamStrings",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamStringsV2",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesStrings",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ListPrefix",
            "passed": false,
            "reason": "Found 0 list prefixes. (Min: 5)"
        },
        {
            "criterion": "ListPrefixV2",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesMinimalEmbed",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesSynonymsEmbed",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesDiverseEmbed",
            "passed": false,
            "reason": "Does not meet criterion."
        }
    ],
    "doc_id": "6507",
    "text": "Q:\n\nHow to smoothly rasterize PDF using the API?\n\nI'd like to rasterize a PDF source (in this case to PNG, 500x500 pixels) using these golang bindings for ImageMagick6. On the CLI, I can do this using\nconvert -density 5000 -define psd:fit-page=500x test.pdf -resize 500x test.png\n\nwhich results in a smoothly rendered image.\nWhat I'm failing to do right now is to produce something similar using the API: either the resulting image has scaled pixels or is blurry and has a size 500x500 pixels, or it's in the \"original\" size.\nHere's a minimum snippet of my playground code:\npackage main\n\nimport \"gopkg.in/gographics/imagick.v2/imagick\"\n\nfunc main() {\n    imagick.Initialize()\n    defer imagick.Terminate()\n    mw := imagick.NewMagickWand()\n    defer mw.Destroy()\n\n    mw.SetImageResolution(5000,5000)\n    mw.SetOption(\"psd:fit-page\", \"500x\")\n\n    mw.ReadImage(\"test.pdf\")\n    mw.ResizeImage(500, 500, imagick.FILTER_POINT, 1)\n    mw.SetIteratorIndex(0) // This being the page offset\n    mw.SetImageFormat(\"png\")\n    mw.WriteImage(\"test.png\")\n}\n\nI got confused by density, image size, image resolution and canvas size I guess. How is it meant to be used?\n\nA:\n\nYour GO version of the convert command is missing the \"density\" argument. Replacing the call to SetImageResolution with one to SetOption and using a filter to smooth out the edges results in a smooth image:\npackage main\n\nimport \"gopkg.in/gographics/imagick.v2/imagick\"\n\nfunc main() {\n    imagick.Initialize()\n    defer imagick.Terminate()\n    mw := imagick.NewMagickWand()\n    defer mw.Destroy()\n\n    mw.SetOption(\"density\", \"5000\")\n    mw.SetOption(\"psd:fit-page\", \"500x\")\n\n    mw.ReadImage(\"test.pdf\")\n\n    mw.ResizeImage(500, 500, imagick.FILTER_LAGRANGE, 1)\n    mw.SetIteratorIndex(0) // This being the page offset\n    mw.SetImageFormat(\"png\")\n    mw.WriteImage(\"test.png\")\n}\n\n"
}