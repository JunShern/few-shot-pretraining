{
    "criteria": [
        {
            "criterion": "AllDocuments",
            "passed": true,
            "reason": "All documents pass."
        },
        {
            "criterion": "QuestionAnswerStringsV2",
            "passed": true,
            "reason": "Text contains ['Q:', 'A:']."
        },
        {
            "criterion": "FullyStructured",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamStringsV2",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesStrings",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesStringsV2",
            "passed": true,
            "reason": "Text contains For example."
        },
        {
            "criterion": "ListPrefixV2",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesMinimalEmbed",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesSynonymsEmbed",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesDiverseEmbed",
            "passed": true,
            "reason": "Text contains ['The examples are more up to date and will provide a better design for your application. (0.182)']."
        }
    ],
    "doc_id": "4866",
    "text": "Q:\n\nJApplet scrollbar using JScrollPane shows but doesn't scroll Graphics2D content outside screen\n\nI am trying to add a scrollbar to a JApplet component. I know I shouldn't use it and should rather use JPanel, but for sake of semplicity I'll leave it like it, as in a tutorial I am following.\nAs you can see I tried adding a ScrollPane component, and add to it the applet. Then I add the scrollpane to the frame. \nThe result is that I can see a vertical scrollbar, but that it does have the ability to scrool. Actually the scroll cursor is missing. And the up and down arrows don't scrooll too. I'd like to scroll down to the part of the line I've drawn that went outside the visible area.\nWhat am I doing wrong?\npublic class App {\n\n    private App() {\n        final int WINHSIZE = 800;\n        final int WINVSIZE = 600;\n\n        class MyJApplet extends JApplet {\n\n            public void init() {\n                setBackground(Color.black);\n                setForeground(Color.white);\n            }\n\n            public void paint(Graphics g) {\n                Graphics2D g2 = (Graphics2D) g;\n                        g2.drawLine(0, 0, 2000, 2000);\n                }\n            }\n        }\n\n        JFrame f = new JFrame(\"Title\");\n        f.addWindowListener(new WindowAdapter() {\n            public void windowClosing(WindowEvent e) {\n                System.exit(0);\n            }\n        });\n\n        JApplet applet = new MyJApplet();\n        JScrollPane myScrollPane = new JScrollPane(applet, JScrollPane.VERTICAL_SCROLLBAR_ALWAYS, JScrollPane.HORIZONTAL_SCROLLBAR_AS_NEEDED);\n\n        f.getContentPane().add(\"Center\", myScrollPane);\n        applet.init();\n        f.pack();\n        f.setSize(new Dimension(WINHSIZE, WINVSIZE));\n        f.setVisible(true);\n\n    }\n\n    public static void main(String[] args) {\n        new App();\n    }\n}\n\nA:\n\nI'll leave it like it, as in a tutorial I am following. \n\nWell your tutorial is old and you should NOT be following it. Instead you should be learning how to create a JFrame the normal way. \nThat is you do custom painting on a JPanel by overriding the paintComponent() method and you add the panel to the frame. You should NOT override paint(). Read the section from the Swing tutorial (which is a far better tutorial to follow) on Custom Painting for more information. You need to make sure to override the getPreferredSize() method so the scrollbars can work properly.\nf.getContentPane().add(\"Center\", myScrollPane);\n\nThat is not how you add a Component to a Container. You would never hardcode a constraint like that. Also you should be using:\n add(component, constraint)\n\nThe BorderLayout will contain fields you can use to identify the constraint.\nPeople don't use f.getContentPane().add(...) anymore. Since JDK4 you can use f.add(...). As I said your tutorial is way out of date.\nLook at the table of contents of the Swing tutorial. The examples are more up to date and will provide a better design for your application. For example you should be creating GUI components on the Event Dispatch Thread, which your code is NOT doing. Read the tutorial on Concurrency to understand why this is important.\n\n"
}