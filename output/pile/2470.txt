{
    "criteria": [
        {
            "criterion": "AllDocuments",
            "passed": true,
            "reason": "All documents pass."
        },
        {
            "criterion": "QuestionAnswerStringsV2",
            "passed": true,
            "reason": "Text contains ['Q:', 'A:']."
        },
        {
            "criterion": "FullyStructured",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamStringsV2",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesStrings",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesStringsV2",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ListPrefixV2",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesMinimalEmbed",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesSynonymsEmbed",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesDiverseEmbed",
            "passed": false,
            "reason": "Does not meet criterion."
        }
    ],
    "doc_id": "2470",
    "text": "Q:\n\nArray works fine on localhost but not working on live server (gives error message Undefined offset: 0) - Laravel-5.8\n\nEverything works perfectly okay on localhost but when migrated to godaddy live server(cpanel) I keep getting this error (Undefined offset: 0) on my blade view\nI have tested the application on my localhost using XAMPP running PHP 7.2.12 and it works very fine but now I moved it to godaddy cpanel running PHP 7.3 and it keeps giving me this error\n//This is my Route\nRoute::get('/conversations', 'DoctorsController@Conversations');\n//This is my Controller\npublic function Conversations(Request $request){\n    //authenticate user\n    if($request->us == 'guest'){\n\n        return redirect()->intended('login');\n\n    }else{\n\n    $unread=DB::table('messaging')\n            ->where([\n                    ['Reciever', Auth::user()->id],\n                    ['ReadStatus', '=', '']\n                    ])\n            ->get();\n\n    $pending=$unread->count();\n\n    //retrieve previous chat;\n    $conversations=DB::table('messaging')\n                ->where('Sender', Auth::user()->id)\n                ->orWhere('Reciever', Auth::user()->id)\n                ->groupBy('Sender')\n                ->orderBy('ReadStatus', 'asc')\n                ->get();\n\n    //retrieve profile of users in the previous chat\n    $profiles = array();\n    $read_status = array();\n    foreach($conversations as $conversation){\n    if($conversation->Sender == Auth::user()->id){\n\n    //check user role to know which database to query\n    $userRole=DB::table('role_user')\n            ->where('user_id', $conversation->Reciever)\n            ->get();\n\n    if($userRole[0]->role_id === 2){\n\n        #retrieve the sender details from doctors table\n        $profile=DB::table('doctors')\n                    ->where('doctor_id', $conversation->Reciever)\n                    ->get();\n\n    }else{\n\n        //retrieve the sender details from users table\n        $profile=DB::table('profiles')\n                    ->where('user_id', $conversation->Reciever)\n                    ->get();\n\n    }\n\n        if(in_array($profile, $profiles)){\n\n        }else{\n        array_push($profiles, $profile);\n\n        }\n\n        //retrieve the reciever details\n    }else if($conversation->Reciever == Auth::user()->id){\n\n        //check user role to know which database to query\n        $userRole=DB::table('role_user')\n                ->where('user_id', $conversation->Sender)\n                ->get();\n\n        if($userRole[0]->role_id === 2){\n\n            $profile=DB::table('doctors')\n                    ->where('doctor_id', $conversation->Sender)\n                    ->get();\n\n        }else{\n\n            $profile=DB::table('profiles')\n                    ->where('user_id', $conversation->Sender)\n                    ->get();\n\n        }\n\n        //retrive unread chat;\n            $unreadconvers=DB::table('messaging')\n                ->select('ReadStatus')\n                ->where([\n                        ['Reciever', Auth::user()->id],\n                        ['Sender', $conversation->Sender],\n                        ['ReadStatus', '=', '']\n                        ])\n                ->get();\n\n            if(in_array($profile, $profiles)){\n\n            }else{\n            $profile['unreads'] = $unreadconvers->count();\n            array_push($profiles, $profile);\n            //array_push($read_status, $unreadconvers->count());\n\n            }\n\n        }\n\n        $i++;\n    }\n\n    return view('conversations')->with(['profile'=>$profiles, 'pending'=>$pending, 'unreads'=>$read_status]);\n    //return to the conversation blade\n\n    }\n}\n\n//This is my Blade template\n@foreach($profile as $profile)\n      <div class=\"col-md-4 element-animate\">\n        <div class=\"media d-block media-custom text-center\">\n          <img src= \"{{ URL::to(isset($profile[0]->image) ? $profile[0]->image : '../img/user.png') }}\" alt=\"Image Placeholder\" class=\"img-fluid img-fluid-doctors\">\n          <div class=\"media-body\">\n            <a href=\"{{ isset($profile[0]->doctor_id) ? url('/chat-doctor?db='.$profile[0]->doctor_id) : url('/chat-doctor?us='.$profile[0]->user_id)  }}\" class=\"envelop\"><i class=\"far fa-envelope\"></i><span class=\"unread\">{{ isset($profile['unreads']) ? $profile['unreads'] : 0 }}</span>\n            <h3 class=\"mt-0 text-black\">{{ $profile[0]->name }}</h3>\n            </a>\n\n          </div>\n        </div>\n      </div>\n\n      @endforeach\n\nAt the Controller, this code is expected to retrieve all the messages from the database linking to the logged in user either send or received, store them using an array and display them at the blade template looping through each of the array.\nCurrently that is what it does on localhost but on live server I get this error message Undefined offset: 0 (View: /resources/views/conversations.blade.php)\n\nA:\n\nI have found the solution to this issue, I was using === instead of == where I have this code \nif($userRole[0]->role_id === 2)\nI now change this line of code to\nif($userRole[0]->role_id == 2)\nand now is working perfectly well.\nThank you for your response Chin Leung.\n\n"
}