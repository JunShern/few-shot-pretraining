{
    "criteria": [
        {
            "criterion": "AllDocuments",
            "passed": true,
            "reason": "All documents pass."
        },
        {
            "criterion": "QuestionAnswerStringsV2",
            "passed": true,
            "reason": "Text contains ['Q:', 'A:']."
        },
        {
            "criterion": "FullyStructured",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamStringsV2",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesStrings",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesStringsV2",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ListPrefixV2",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesMinimalEmbed",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesSynonymsEmbed",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesDiverseEmbed",
            "passed": false,
            "reason": "Does not meet criterion."
        }
    ],
    "doc_id": "8843",
    "text": "Q:\n\nHow can I correctly output an array of objects in the reverse order from mongodb?\n\nComments are saved in an array of objects. How can I correctly output them in reverse order (comments from newest to oldest)?\nMy db:\n{\"_id\":{\"$oid\":\"5e3032f14b82d14604e7cfb7\"},\n\"videoId\":\"zX6bZbsZ5sU\",\n\"message\":[\n    {\"_id\":{\"$oid\":\"5e3032f14b82d14604e7cfb8\"},\n    \"user\":{\"$oid\":\"5e2571ba388ea01bcc26bc96\"},\"text\":\"1\"\n    },\n     {\"_id\":{\"$oid\":\"5e3032f14b82d14604e7cfb9\"},\n    \"user\":{\"$oid\":\"5e2571ba388ea01bcc26bc96\"},\"text\":\"2\"\n    },\n    ....\n    ]\n\nMy sheme Mongoose:\nconst schema = new Schema({\nvideoId: { type: String, isRequired: true },\nmessage: [\n{\n  user: { type: Schema.Types.ObjectId, ref: 'User' },\n  text: { type: String }\n},\n\n]\n});\n\nMy code:\nconst userComments = await Comment.find(\n  { videoId: req.query.videoId },\n  { message: { $slice: [skip * SIZE_COMMENT, SIZE_COMMENT] } }\n)\n  .sort({ message: -1 })\n  .populate('message.user', ['avatar', 'firstName']);\n\nbut sort not working;\nthanks in advance!\n\nA:\n\nYou can simply use $reverseArray to reverse content of an array.\ndb.collection.aggregate([\n   {\n     $addFields:\n      {\n         message: { $reverseArray: \"$message\" }\n      }\n   }\n])\n\nCollection Data :\n/* 1 */\n{\n    \"_id\" : ObjectId(\"5e3032f14b82d14604e7cfb7\"),\n    \"videoId\" : \"zX6bZbsZ5sU\",\n    \"message\" : [ \n        {\n            \"_id\" : ObjectId(\"5e3032f14b82d14604e7cfb8\"),\n            \"user\" : ObjectId(\"5e2571ba388ea01bcc26bc96\"),\n            \"text\" : \"1\"\n        }, \n        {\n            \"_id\" : ObjectId(\"5e3032f14b82d14604e7cfb9\"),\n            \"user\" : ObjectId(\"5e2571ba388ea01bcc26bc96\"),\n            \"text\" : \"2\"\n        }\n    ]\n}\n\n/* 2 */\n{\n    \"_id\" : ObjectId(\"5e309318d02e05b694b0b25f\"),\n    \"videoId\" : \"zX6bZbsZ5sUNEWWWW\",\n    \"message\" : [ \n        {\n            \"_id\" : ObjectId(\"5e3032f14b82d14604e7cfc9\"),\n            \"user\" : ObjectId(\"5e2571ba388ea01bcc26bc87\"),\n            \"text\" : \"Old\"\n        }, \n        {\n            \"_id\" : ObjectId(\"5e3032f14b82d14604e7cfd0\"),\n            \"user\" : ObjectId(\"5e2571ba388ea01bcc26bc87\"),\n            \"text\" : \"New\"\n        }\n    ]\n}\n\nResult :\n/* 1 */\n{\n    \"_id\" : ObjectId(\"5e3032f14b82d14604e7cfb7\"),\n    \"videoId\" : \"zX6bZbsZ5sU\",\n    \"message\" : [ \n        {\n            \"_id\" : ObjectId(\"5e3032f14b82d14604e7cfb9\"),\n            \"user\" : ObjectId(\"5e2571ba388ea01bcc26bc96\"),\n            \"text\" : \"2\"\n        }, \n        {\n            \"_id\" : ObjectId(\"5e3032f14b82d14604e7cfb8\"),\n            \"user\" : ObjectId(\"5e2571ba388ea01bcc26bc96\"),\n            \"text\" : \"1\"\n        }\n    ]\n}\n\n/* 2 */\n{\n    \"_id\" : ObjectId(\"5e309318d02e05b694b0b25f\"),\n    \"videoId\" : \"zX6bZbsZ5sUNEWWWW\",\n    \"message\" : [ \n        {\n            \"_id\" : ObjectId(\"5e3032f14b82d14604e7cfd0\"),\n            \"user\" : ObjectId(\"5e2571ba388ea01bcc26bc87\"),\n            \"text\" : \"New\"\n        }, \n        {\n            \"_id\" : ObjectId(\"5e3032f14b82d14604e7cfc9\"),\n            \"user\" : ObjectId(\"5e2571ba388ea01bcc26bc87\"),\n            \"text\" : \"Old\"\n        }\n    ]\n}\n\nYour Query : You can use native MongoDB's $lookup instead of .populate() , So try below :\nComments.aggregate([\n    {\n        $addFields:\n        {\n            message: { $reverseArray: \"$message\" }\n        }\n    }, {\n        $lookup: {\n            from: \"User\",\n            let: { ids: \"$message.user\" },\n            pipeline: [\n                {\n                    $match: { $expr: { $in: [\"$_id\", \"$$ids\"] } }\n                },\n                { $project: { avatar: 1, firstName: 1, _id: 0 } }\n            ],\n            as: \"userData\"\n        }\n    }\n])\n\n"
}