{
    "criteria": [
        {
            "criterion": "AllDocuments",
            "passed": true,
            "reason": "All documents pass."
        },
        {
            "criterion": "Domain",
            "passed": false,
            "reason": "Document source unavailable."
        },
        {
            "criterion": "QuestionAnswerStrings",
            "passed": true,
            "reason": "Text contains Q:."
        },
        {
            "criterion": "QuestionAnswerStringsV2",
            "passed": true,
            "reason": "Text contains ['Q:', 'A:', 'A:', 'A:']."
        },
        {
            "criterion": "FullyStructured",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamStrings",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamStringsV2",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesStrings",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ListPrefix",
            "passed": false,
            "reason": "Found 0 list prefixes. (Min: 5)"
        },
        {
            "criterion": "ListPrefixV2",
            "passed": true,
            "reason": "Text contains ['-', '-', '-', '-', '-', '-', '-']."
        },
        {
            "criterion": "ExamplesMinimalEmbed",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesSynonymsEmbed",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesDiverseEmbed",
            "passed": true,
            "reason": "Text contains ['You can then create any number of other initializers that all call this main one. (0.191)']."
        }
    ],
    "doc_id": "1669",
    "text": "Q:\n\nAdding a custom initWith?\n\nIf I create a custom initWith for an object do I essentially include the code I would add should I want to override init?\n-(id) init {\n    self = [super init];\n    if (self) {\n        NSLog(@\"_init: %@\", self);\n    }\n    return(self);\n}\n\ne.g.\n-(id) initWithX:(int) inPosX andY:(int) inPosY {\n    self = [super init];\n    if(self) {\n        NSLog(@\"_init: %@\", self);\n        posX = inPosX;\n        posY = inPosY;\n    }\n    return(self);\n}\n\ngary\n\nA:\n\nYou can create one designated initializer that accepts all parameters that you want to make available in initialization.\nThen you call from your other -(id)init your designated initializer with proper parameters.\nOnly the designated initializer will initialize super class [super init].\nExample:\n- (id)init\n{\n    return [self initWithX:defaultX andY:defaultY];\n}\n\n- (id)initWithPosition:(NSPoint)position\n{\n    return [self initWithX:position.x andY:position.y];\n}\n\n- (id)initWithX:(int)inPosX andY:(int)inPosY\n{\n    self = [super init];\n    if(self) {\n        NSLog(@\"_init: %@\", self);\n        posX = inPosX;\n        posY = inPosY;\n    }\n    return self;\n}\n\nThe designated initializer is -(id)initWithX:andY: and you call it from other initializers.\nIn case you want to extend this class you call your designated initializer from subclass.\n\nA:\n\nI'd suggest creating one main initializer that handles most of the work. You can then create any number of other initializers that all call this main one. The advantage of this is if you want to change the initialization process, you'll only have to change one spot. It might look like this:\n-(id) initWithX:(float)x {\n    if (self = [super init]) {\n        /* do most of initialization */\n        self.xVal = x;\n    }\n    return self;\n}\n\n-(id) init {\n    return [self initWithX:0.0f];\n}\n\nIn this example initWithX: is our main initializer. The other initializer (init) simply calls initWithX: with a default value (in this case 0).\n\nA:\n\nYes, that's exactly how I do it.  One slight change will cut out a line of code:\n if (self = [super init]) {\n\nAs opposed to:\n self = [super init];\n if(self) {\n\n"
}