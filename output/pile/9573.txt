{
    "criteria": [
        {
            "criterion": "AllDocuments",
            "passed": true,
            "reason": "All documents pass."
        },
        {
            "criterion": "QuestionAnswerStringsV2",
            "passed": true,
            "reason": "Text contains ['Q:', 'A:']."
        },
        {
            "criterion": "FullyStructured",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamStringsV2",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesStrings",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesStringsV2",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ListPrefixV2",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesMinimalEmbed",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesSynonymsEmbed",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesDiverseEmbed",
            "passed": false,
            "reason": "Does not meet criterion."
        }
    ],
    "doc_id": "9573",
    "text": "Q:\n\nComo utilizar Infinite Scroll dentro de um ion-card?\n\nPreciso que o InfiniteScroll emita um evento ao rolar o scroll do card, e n\u00e3o da p\u00e1gina.\n\nimport { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { GrupoService } from 'src/app/services/grupo.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { LoadingController, IonInfiniteScroll } from '@ionic/angular';\r\n\r\n@Component({\r\n  selector: 'app-temporadas',\r\n  templateUrl: './temporadas.page.html',\r\n  styleUrls: ['./temporadas.page.scss'],\r\n})\r\n\r\nexport class TemporadasPage implements OnInit {\r\n\r\n  @ViewChild(IonInfiniteScroll) infinite : IonInfiniteScroll\r\n\r\n  temporadas      : any = []\r\n  grupoId         : any\r\n  loading         : any\r\n  erro            : boolean \r\n  erroJogos       : boolean = false\r\n  spin            : boolean = true\r\n  page            : number = 1;\r\n  isAdministrador : boolean = false\r\n  \r\n  constructor(\r\n    private grupoService  : GrupoService,\r\n    private activeRoute   : ActivatedRoute,\r\n    private loadingCtrl   : LoadingController,\r\n    private router        : Router,\r\n  ) { }\r\n\r\n  async ngOnInit() {\r\n    if(localStorage.getItem('administrador') == '1')\r\n    {\r\n      this.isAdministrador = true\r\n    }\r\n    \r\n    this.loading = await this.loadingCtrl.create()\r\n    this.loading.present()\r\n    this.grupoId = this.activeRoute.snapshot.params['grupo']\r\n    this.obterTemporadas()\r\n  }\r\n\r\n  toggleInfiniteScroll() {\r\n    this.infinite.disabled = !this.infinite.disabled;\r\n  }\r\n\r\n  obterTemporadas()\r\n  {\r\n    this.erro = false\r\n    let params =  {\r\n      grupo : this.grupoId\r\n    }\r\n    this.grupoService.obterTemporadas(params).subscribe(\r\n      data => {\r\n        this.temporadas = data\r\n        this.loading.dismiss()\r\n\r\n        for(let temporada of this.temporadas){\r\n          let jogosParams = {\r\n            temporada : temporada.id,\r\n            page      : this.page\r\n          }\r\n\r\n          this.grupoService.obterJogos(jogosParams).subscribe(\r\n            data => {\r\n              this.spin = false\r\n              temporada.jogos = data\r\n              console.log(data)\r\n              return temporada.jogos.data\r\n            },\r\n            err => {\r\n              this.spin = false\r\n              if(err.error.resultado == false)\r\n              {\r\n                return false\r\n              }\r\n            }\r\n          )\r\n          console.log(temporada)\r\n        }        \r\n      },\r\n      err =>{\r\n        if(err.error.resultado ==  false)\r\n        {\r\n          this.erro = true\r\n        }\r\n        this.loading.dismiss()\r\n        console.log(err)\r\n      }\r\n    )\r\n  }\r\n\r\n  /*infiniteJogos(event)\r\n  {\r\n    setTimeout(() => {\r\n      console.log('Done');\r\n      this.page++\r\n      this.obterTemporadas()\r\n      event.target.complete();\r\n\r\n      if (data.length == 1000) {\r\n        event.target.disabled = true;\r\n      }\r\n    }, 500);\r\n  }*/\r\n\r\n  cadastrarTemporada()\r\n  {\r\n    this.router.navigate(['temporada/cadastrar',this.grupoId])\r\n\r\n  }\r\n  \r\n  cadastrarJogos(temporada)\r\n  {\r\n    this.router.navigate([this.grupoId,'jogos','cadastrar',temporada])\r\n    \r\n  }\r\n\r\n  jogoDetalhes(jogo,temporada)\r\n  {\r\n    this.router.navigate([this.grupoId,temporada,'detalhes-jogos',jogo])\r\n  }\r\n\r\n  jogoFinalizadoDetalhes(jogo,temporada)\r\n  {\r\n    this.router.navigate([this.grupoId,temporada,'detalhes-jogo-finalizado',jogo])\r\n  }\r\n\r\n}\nion-button {\r\n    //padding-left:50%!important;\r\n    //padding-right:50%!important;\r\n    //align-content: center!important;\r\n    //align-items: center!important;\r\n}\r\n\r\n.jogos \r\n{\r\n    height: 250px;\r\n    overflow: scroll;\r\n}\r\n\r\n.jogoFinalizado\r\n{\r\n    background-color: greenyellow;\r\n    color: white;\r\n    font-size: 30px;\r\n}\r\n\r\nh2{\r\n    text-align: center;\r\n}\r\nion-spinner{\r\n    top:50%;\r\n    left:50%;\r\n}\r\n\r\nion-icon{\r\n    text-align: right!important;\r\n    font-size: 40px;\r\n}\n<ion-card *ngIf=\"erro == true\">\r\n  <ion-label>Sem temporadas</ion-label>\r\n</ion-card>\r\n\r\n<ion-button *ngIf=\"isAdministrador\" (click)=\"cadastrarTemporada()\">(+) Temporada</ion-button>\r\n\r\n<div *ngIf=\"erro == false\">\r\n  <ion-card *ngFor=\"let temporada of temporadas\">\r\n\r\n    <ion-card-header>\r\n      <ion-card-title>Temporada: {{temporada.nome}}</ion-card-title>\r\n      <ion-card-subtitle>{{temporada.descricao}}</ion-card-subtitle>\r\n    </ion-card-header>\r\n\r\n    <ion-card-content>\r\n      <ion-button *ngIf=\"isAdministrador\" (click)=\"cadastrarJogos(temporada.id)\">(+) Jogos</ion-button>\r\n      <ion-item *ngIf=\"!temporada.jogos\">\r\n        N\u00e3o h\u00e1 jogos cadastrados nesta temporada.\r\n      </ion-item>\r\n\r\n    </ion-card-content>\r\n    <ion-spinner icon=\"crescent\" class=\"spinner-royal\" *ngIf=\"spin\"></ion-spinner>\r\n  \r\n    <h2 *ngIf=\"!spin\">\r\n      Jogos\r\n    </h2>\r\n\r\n    <div *ngIf=\"temporada.jogos\" class=\"jogos\">\r\n   \r\n      <div *ngFor=\"let jogo of temporada.jogos.data\">\r\n\r\n        <!-------------------------JOGO \u00d1 FINALIZADO------------------------------------>\r\n        <ion-card *ngIf=\"!jogo.hora_final\" (click)=\"jogoDetalhes(jogo.id,jogo.temporada)\">\r\n          <ion-card-content>\r\n            <ion-col>\r\n              Dia : {{jogo.data | date: 'dd/MM/yyyy'}}\r\n              <br />\r\n              Hora : {{jogo.hora_inicial}}\r\n            </ion-col>\r\n            <ion-col>\r\n              <ion-icon name=\"md-add-circle\" float-right></ion-icon>\r\n            </ion-col>\r\n          </ion-card-content>\r\n        </ion-card>\r\n        <!-------------------------JOGO FINALIZADO!!!!!!------------------------------------>\r\n        <ion-card class=\"jogoFinalizado\" *ngIf=\"jogo.hora_final\"\r\n          (click)=\"jogoFinalizadoDetalhes(jogo.id,jogo.temporada)\">\r\n          <ion-card-content>\r\n            <ion-col>\r\n              Dia : {{jogo.data | date: 'dd/MM/yyyy'}}\r\n              <br />\r\n              Hora Inicial : {{jogo.hora_inicial}}\r\n              <br>\r\n              Hora Final : {{jogo.hora_final}}\r\n            </ion-col>\r\n            <ion-col>\r\n              <ion-icon name=\"done-all\" float-right></ion-icon>\r\n            </ion-col>\r\n          </ion-card-content>\r\n        </ion-card>\r\n\r\n      </div>\r\n\r\n      <ion-infinite-scroll threshold=\"10px\" (ionInfinite)=\"loadData($event)\">\r\n        <ion-infinite-scroll-content\r\n          loadingSpinner=\"bubbles\"\r\n          loadingText=\"Loading more data...\">\r\n        </ion-infinite-scroll-content>\r\n      </ion-infinite-scroll>\r\n\r\n    </div>\r\n\r\n  </ion-card>\r\n\r\n</div>\n\nPrint da compila\u00e7\u00e3o :\n\nA:\n\nPesquisei algo sobre a algum tempo, e pelo que entendo, infinite-scroll precisa de um scroll para ter refer\u00eancia do \"fim\" da lista.\nFicaria algo como:\n<ion-card>\n<ion-card-header>\n    T\u00edtulo\n</ion-card-header>\n\n<ion-card-content>\n\n    <ion-scroll scrollY=\"true\">\n      <ion-list *ngFor=\"let item of items\">\n         <!-- Conte\u00fado se repetindo -->\n      </ion-list>\n\n       <ion-infinite-scroll threshold=\"10px\" (ionInfinite)=\"loadData($event)\">\n          <ion-infinite-scroll-content\n            loadingSpinner=\"bubbles\"\n            loadingText=\"Loading more data...\">\n          </ion-infinite-scroll-content>\n        </ion-infinite-scroll>\n\n    </ion-scroll>\n\n</ion-card-content>\n</ion-card>\n\n"
}