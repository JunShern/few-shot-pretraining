{
    "criteria": [
        {
            "criterion": "AllDocuments",
            "passed": true,
            "reason": "All documents pass."
        },
        {
            "criterion": "QuestionAnswerStringsV2",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "FullyStructured",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamStringsV2",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesStrings",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesStringsV2",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ListPrefixV2",
            "passed": true,
            "reason": "Text contains ['*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*']."
        },
        {
            "criterion": "ExamplesMinimalEmbed",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesSynonymsEmbed",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesDiverseEmbed",
            "passed": false,
            "reason": "Does not meet criterion."
        }
    ],
    "doc_id": "9249",
    "text": "\ufeff/* Copyright 2015-2016 MongoDB Inc.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n* http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\nusing System;\nusing System.Linq.Expressions;\nusing MongoDB.Bson.Serialization;\nusing MongoDB.Driver.Core.Misc;\n\nnamespace MongoDB.Driver.Linq.Expressions\n{\n    internal sealed class FieldAsDocumentExpression : SerializationExpression, IFieldExpression\n    {\n        private readonly Expression _expression;\n        private readonly string _fieldName;\n        private readonly IBsonSerializer _serializer;\n\n        public FieldAsDocumentExpression(Expression expression, string fieldName, IBsonSerializer serializer)\n        {\n            _expression = Ensure.IsNotNull(expression, nameof(expression));\n            _fieldName = Ensure.IsNotNull(fieldName, nameof(fieldName));\n            _serializer = Ensure.IsNotNull(serializer, nameof(serializer));\n        }\n\n        public Expression Document\n        {\n            get { return null; }\n        }\n\n        public Expression Expression\n        {\n            get { return _expression; }\n        }\n\n        public string FieldName\n        {\n            get { return _fieldName; }\n        }\n\n        public override ExtensionExpressionType ExtensionType\n        {\n            get { return ExtensionExpressionType.FieldAsDocument; }\n        }\n\n        public override IBsonSerializer Serializer\n        {\n            get { return _serializer; }\n        }\n\n        public override Type Type\n        {\n            get { return _serializer.ValueType; }\n        }\n\n        public override string ToString()\n        {\n            return \"{\" + _fieldName + \"}\";\n        }\n\n        public FieldAsDocumentExpression Update(Expression expression)\n        {\n            if (expression != _expression)\n            {\n                return new FieldAsDocumentExpression(expression, _fieldName, _serializer);\n            }\n\n            return this;\n        }\n\n        protected internal override Expression Accept(ExtensionExpressionVisitor visitor)\n        {\n            return visitor.VisitDocumentWrappedField(this);\n        }\n    }\n}"
}