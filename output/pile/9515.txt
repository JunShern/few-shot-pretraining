{
    "criteria": [
        {
            "criterion": "AllDocuments",
            "passed": true,
            "reason": "All documents pass."
        },
        {
            "criterion": "QuestionAnswerStringsV2",
            "passed": true,
            "reason": "Text contains ['Q:', 'A:']."
        },
        {
            "criterion": "FullyStructured",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamStringsV2",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesStrings",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesStringsV2",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ListPrefixV2",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesMinimalEmbed",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesSynonymsEmbed",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesDiverseEmbed",
            "passed": false,
            "reason": "Does not meet criterion."
        }
    ],
    "doc_id": "9515",
    "text": "Q:\n\npolymerfire/firebase-query transaction complete event\n\nVery new to Polymer and Polymerfire.  I couldn't find an answer here so hoping I can get help here.  The basic question I have is \"how do I work with the data that polymerfire/firebase-query sends?\"  Note I'm using polymerfire version 0.9.4, and polymer is version 1.4.0.\nI can load my data from Firebase no problem using Firebase query, however some of the values are raw numbers that I need to convert to user friendly information.  For example I have time stored in ms that I want to convert to a date, and a numeric field that indicates the \"type\" of data that is stored and I want to show an icon for it, not just a raw number.  I figured my best option would be to use the transactions-complete promise or an observer.  Both fire but neither seems to give me access to the data.  The Observer's newData is an empty array, and transactions-complete.. well I don't really know what to do with that when the promise fires.  Below is my relevant code.  I also tried using notify: true, but I seem to not be grasping the concept correctly.  \n\n<firebase-query\n    id=\"query\"\n    app-name=\"data\"\n    path=\"/dataPath\"\n    transactions-complete=\"transactionCompleted\"\n    data=\"{{data}}\">\n</firebase-query>\n\n<template is=\"dom-repeat\" items=\"{{data}}\">\n  <div class=\"card\">\n    <div>Title: <span>{{item.title}}</span></div>\n    <div>Date Created: <span>{{item.dateCreated}})</span></div>\n    <div>Date Modified: <span>{{item.dateModified}}</span></div>\n    <div>Status: <span>{{item.status}}</span></div>\n  </div>\n</template>\n\nPolymer({\n  is: 'my-view1',\n  properties: {\n      data: {\n        notify: true,\n        type: Object,\n        observer: 'dataChanged'\n      }\n  },\n  dataChanged: function (newData, oldData) {\n    console.log(newData[0]);\n    // do something when the query returns values?\n  },\n  transactionCompleted: new Promise(function(resolve, reject) {\n //        how can I access \"data\" here? \n  })`\n\nA:\n\nI wound up going another way entirely, which seemed to be a cleaner approach to what I was doing anyways.  I broke it down into separate components.  This way when the detail component was loaded, the ready function would allow me to adjust the data before it got displayed:\nlist.html:\n<firebase-query\n    id=\"query\"\n    app-name=\"data\"\n    path=\"/dataPath\"\n    data=\"{{data}}\">\n</firebase-query>\n\n<template is=\"dom-repeat\" items=\"{{data}}\">\n   <my-details dataItem={{item}}></my-details>\n</template>\n\ndetails.html\n <template>\n    <div id=\"details\">\n      <paper-card heading=\"{{item.title}}\">\n        <div class=\"card-content\">\n          <span id=\"description\">{{item.description}}</span><br/><br/>\n          <div class=\"details\">Date Created: <span id=\"dateCreated\">{{item.dateCreated}}</span><br/></div>\n          <div class=\"details\">Last Modified: <span id=\"dateModified\">{{item.dateModified}}</span><br/></div>\n          <div class=\"status\"><span id=\"status\">{{item.status}}</span><br/></div>\n        </div>\n      </paper-card>\n\n  </template>\n\nThen in the javascript ready function I can intercept and adjust the data accordingly:\nPolymer({\n  is: 'my-details',\n  properties: {\n      item: {\n        notify: true,\n      },\n  },\n ready: function() {\n    this.$.dateModified.textContent = this.getDate(this.item.dateModified);\n    this.$.dateCreated.textContent = this.getDate(this.item.dateCreated);\n    this.$.status.textContent = this.getStatus(this.item.status);\n  },\n\n"
}