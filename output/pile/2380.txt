{
    "criteria": [
        {
            "criterion": "AllDocuments",
            "passed": true,
            "reason": "All documents pass."
        },
        {
            "criterion": "Domain",
            "passed": false,
            "reason": "Document source unavailable."
        },
        {
            "criterion": "QuestionAnswerStrings",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "QuestionAnswerStringsV2",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "FullyStructured",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamStrings",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamStringsV2",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesStrings",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ListPrefix",
            "passed": false,
            "reason": "Found 0 list prefixes. (Min: 5)"
        },
        {
            "criterion": "ListPrefixV2",
            "passed": true,
            "reason": "Text contains ['*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*']."
        },
        {
            "criterion": "ExamplesMinimalEmbed",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesSynonymsEmbed",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesDiverseEmbed",
            "passed": false,
            "reason": "Does not meet criterion."
        }
    ],
    "doc_id": "2380",
    "text": "/****************************************************************************\n**\n** Copyright (C) 2016 The Qt Company Ltd.\n** Contact: https://www.qt.io/licensing/\n**\n** This file is part of the QtWidgets module of the Qt Toolkit.\n**\n** $QT_BEGIN_LICENSE:LGPL$\n** Commercial License Usage\n** Licensees holding valid commercial Qt licenses may use this file in\n** accordance with the commercial license agreement provided with the\n** Software or, alternatively, in accordance with the terms contained in\n** a written agreement between you and The Qt Company. For licensing terms\n** and conditions see https://www.qt.io/terms-conditions. For further\n** information use the contact form at https://www.qt.io/contact-us.\n**\n** GNU Lesser General Public License Usage\n** Alternatively, this file may be used under the terms of the GNU Lesser\n** General Public License version 3 as published by the Free Software\n** Foundation and appearing in the file LICENSE.LGPL3 included in the\n** packaging of this file. Please review the following information to\n** ensure the GNU Lesser General Public License version 3 requirements\n** will be met: https://www.gnu.org/licenses/lgpl-3.0.html.\n**\n** GNU General Public License Usage\n** Alternatively, this file may be used under the terms of the GNU\n** General Public License version 2.0 or (at your option) the GNU General\n** Public license version 3 or any later version approved by the KDE Free\n** Qt Foundation. The licenses are as published by the Free Software\n** Foundation and appearing in the file LICENSE.GPL2 and LICENSE.GPL3\n** included in the packaging of this file. Please review the following\n** information to ensure the GNU General Public License requirements will\n** be met: https://www.gnu.org/licenses/gpl-2.0.html and\n** https://www.gnu.org/licenses/gpl-3.0.html.\n**\n** $QT_END_LICENSE$\n**\n****************************************************************************/\n\n#ifndef QSTACKEDLAYOUT_H\n#define QSTACKEDLAYOUT_H\n\n#include <QtWidgets/qtwidgetsglobal.h>\n#include <QtWidgets/qlayout.h>\n\nQT_BEGIN_NAMESPACE\n\n\nclass QStackedLayoutPrivate;\n\nclass Q_WIDGETS_EXPORT QStackedLayout : public QLayout\n{\n    Q_OBJECT\n    Q_DECLARE_PRIVATE(QStackedLayout)\n    Q_PROPERTY(int currentIndex READ currentIndex WRITE setCurrentIndex NOTIFY currentChanged)\n    Q_PROPERTY(StackingMode stackingMode READ stackingMode WRITE setStackingMode)\n    QDOC_PROPERTY(int count READ count)\n\npublic:\n    enum StackingMode {\n        StackOne,\n        StackAll\n    };\n    Q_ENUM(StackingMode)\n\n    QStackedLayout();\n    explicit QStackedLayout(QWidget *parent);\n    explicit QStackedLayout(QLayout *parentLayout);\n    ~QStackedLayout();\n\n    int addWidget(QWidget *w);\n    int insertWidget(int index, QWidget *w);\n\n    QWidget *currentWidget() const;\n    int currentIndex() const;\n    using QLayout::widget;\n    QWidget *widget(int) const;\n    int count() const override;\n\n    StackingMode stackingMode() const;\n    void setStackingMode(StackingMode stackingMode);\n\n    // abstract virtual functions:\n    void addItem(QLayoutItem *item) override;\n    QSize sizeHint() const override;\n    QSize minimumSize() const override;\n    QLayoutItem *itemAt(int) const override;\n    QLayoutItem *takeAt(int) override;\n    void setGeometry(const QRect &rect) override;\n    bool hasHeightForWidth() const override;\n    int heightForWidth(int width) const override;\n\nQ_SIGNALS:\n    void widgetRemoved(int index);\n    void currentChanged(int index);\n\npublic Q_SLOTS:\n    void setCurrentIndex(int index);\n    void setCurrentWidget(QWidget *w);\n\nprivate:\n    Q_DISABLE_COPY(QStackedLayout)\n};\n\nQT_END_NAMESPACE\n\n#endif // QSTACKEDLAYOUT_H\n"
}