{
    "criteria": [
        {
            "criterion": "AllDocuments",
            "passed": true,
            "reason": "All documents pass."
        },
        {
            "criterion": "QuestionAnswerStringsV2",
            "passed": true,
            "reason": "Text contains ['Q:', 'A:']."
        },
        {
            "criterion": "FullyStructured",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamStringsV2",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesStrings",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesStringsV2",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ListPrefixV2",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesMinimalEmbed",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesSynonymsEmbed",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesDiverseEmbed",
            "passed": false,
            "reason": "Does not meet criterion."
        }
    ],
    "doc_id": "735",
    "text": "Q:\n\nwhat this method return?\n\nI am reading the following code,\npublic static <t> T getFirst(List<T> list)\n\nI understand the List<T> list, the method get a reference to List<T> as parameter, and return \nan object with type T, but what about the <t> after the keyword public static?\nwhat does this mean?\n\nA:\n\n<t> declares a type parameter. That means that the method has a type parameter that can change on each invocation.\nUnless T is a concrete type in your project (which is unlikely), the <t> should be <T>.\nSo in plain english <T> T getFirst(List<T> list) means:\n\nthere's a method called getFirst\nit has a type parameter T (i.e. an arbitrary type which is aliased to T)\nit takes a List<T> as its argument (i.e. a List of objects of that arbitrary type).\nit returns a T object (i.e. an instance of that arbitrary type).\n\nIf you just wrote T getFirst(List<T> list) then the meaning would change:\n\nthere's a method called getFirst\nit takes a List<T> as its argument (i.e. a List of objects of the concrete type T)\nit returns an object of the concrete type T.\n\n"
}