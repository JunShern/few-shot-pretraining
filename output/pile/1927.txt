{
    "criteria": [
        {
            "criterion": "AllDocuments",
            "passed": true,
            "reason": "All documents pass."
        },
        {
            "criterion": "Domain",
            "passed": false,
            "reason": "Document source unavailable."
        },
        {
            "criterion": "QuestionAnswerStrings",
            "passed": true,
            "reason": "Text contains Q:."
        },
        {
            "criterion": "QuestionAnswerStringsV2",
            "passed": true,
            "reason": "Text contains ['Q:', 'A:']."
        },
        {
            "criterion": "FullyStructured",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamStrings",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamStringsV2",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesStrings",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ListPrefix",
            "passed": false,
            "reason": "Found 0 list prefixes. (Min: 5)"
        },
        {
            "criterion": "ListPrefixV2",
            "passed": false,
            "reason": "Does not meet criterion."
        }
    ],
    "doc_id": "1927",
    "text": "Q:\n\nproperty value is not changing in subscribe block in angular4\n\nI am implementing authentication in asp.net core angular application. In my login component I am sending credentials in auth service which returns either true or false. when that returns true it is working fine. But when it is returning false, it is not changing the value of 'invalidLogin' property to true. I have tried this putting outside the subscribe block, only then it works. I have no idea why it is not changing inside subscribe block.\n`\nexport class LoginComponent implements OnInit {\n\n  invalidLogin:boolean | undefined;\n  loginCredentials:loginModel={\n    email:\"\",\n    password:\"\"\n  };\n\n  constructor(private router:Router, private authService:AuthService) { }\n\n  ngOnInit() {\n    this.invalidLogin=false;\n  }\n\n  signIn() {\n    this.authService.login(this.loginCredentials).subscribe(result=>{\n      if(result) this.router.navigate(['/']);\n      this.invalidLogin=true;\n    });\n  }\n\n}\n\n`\n\nA:\n\nCheck for the status code in response, if it's not 200 (success status code range) then it will be handled via error callback like this:\n.subscribe((data) => {\n  // Success case\n  console.log(data);\n},\n(e) => {\n  // Error case\n  console.log(e);\n});\n\n"
}