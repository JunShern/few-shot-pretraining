{
    "criteria": [
        {
            "criterion": "AllDocuments",
            "passed": true,
            "reason": "All documents pass."
        },
        {
            "criterion": "QuestionAnswerStringsV2",
            "passed": true,
            "reason": "Text contains ['Q:', 'A:']."
        },
        {
            "criterion": "FullyStructured",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamStringsV2",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesStrings",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesStringsV2",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ListPrefixV2",
            "passed": true,
            "reason": "Text contains ['1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '2', '2', '2', '2', '2', '2', '3', '3', '3', '4', '4', '4', '1', '1', '1', '1', '1', '1', '1', '1', '2', '2', '2', '2', '2', '2', '3', '3', '3', '4', '4', '4']."
        },
        {
            "criterion": "ExamplesMinimalEmbed",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesSynonymsEmbed",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesDiverseEmbed",
            "passed": false,
            "reason": "Does not meet criterion."
        }
    ],
    "doc_id": "1449",
    "text": "Q:\n\nms-access: query (concat multiple records into one)\n\nhere's a glimpse of the original table:\nOccurrence Number   Occurrence Date 1 0 Preanalytical (Before Testing)  Cup Type    2 0 Analytical (Testing Phase)  2 0 Area    3 0 Postanalytical ( After Testing) 4 0 Other   Practice Code   Comments\n1477    2/5/2010    1.1 Specimen Mislabeled                     PURSLEY \n1476    2/5/2010    1.1 Specimen Mislabeled                     HPMR    \n1475    2/5/2010    1.1 Specimen Mislabeled                     ACCIM   N008710\n1474    2/5/2010    1.1 Specimen Mislabeled                     ACCIM   N008636\n1473    2/5/2010    1.3 QNS-Quantity Not Sufficient                     SAPMC   \n1472    2/5/2010    1.3 QNS-Quantity Not Sufficient                     RMG \n1471    2/5/2010    1.1 Specimen Mislabeled                     NMED    \n1470    2/5/2010    1.9 QNS- Specimen Spilled in transit                        MRPS    \n1469    2/5/2010    1.9 QNS- Specimen Spilled in transit                        ANESPC  \n1468    2/5/2010            2.22 Instrument Problem-reinject                LAB \n1525    2/8/2010            2.5 Other - False (+) Blanks    Tecan 2         LAB \n1524    2/8/2010            2.5 Other - False (+) Blanks    Tecan #1            LAB Blank 019\n1523    2/8/2010            2.22 Instrument Problem, 2.5 Other  Tecan           LAB \n1519    2/8/2010                    3.3A Reporting Error    4.1 LIS Problem? (see LOM 1418,1520)    LAB/SJC F356028\n1518    2/8/2010    1.4 Tests Missed/Wrong Test Ordered                     SDPTC   F316628\n1516    2/8/2010    1.6 Test Requisition Missing                        TPMCF   2 specimens both unlabeled\n1515    2/8/2010    1.1 Specimen Mislabeled                     PALMETTO    \n1514    2/8/2010    1.1 Specimen Mislabeled                     THWR    \n1513    2/8/2010    1.1 Specimen Mislabeled                     THWR    \n\ni am getting information from this table using the following statement:\nselect mid(Lom1,1,4) as LOM, sum([Count1]) as [Count] from (\n\nSELECT [Lab Occurrence Form].[1 0 Preanalytical (Before Testing)] as Lom1,Count([Lab Occurrence Form].[1 0 Preanalytical (Before Testing)]) AS [Count1]\nFROM [Lab Occurrence Form]\nWHERE ((([Lab Occurrence Form].[Occurrence Date]) Between [Forms]![Meeting_Reasons_Frequency]![Text4] And [Forms]![Meeting_Reasons_Frequency]![Text2]))\nGROUP BY [Lab Occurrence Form].[1 0 Preanalytical (Before Testing)]\nHAVING Count([Lab Occurrence Form].[1 0 Preanalytical (Before Testing)])<>0\n\nUNION SELECT [Lab Occurrence Form].[2 0 Analytical (Testing Phase)], Count([Lab Occurrence Form].[2 0 Analytical (Testing Phase)]) AS [CountOf2 0 Analytical (Testing Phase)]\nFROM [Lab Occurrence Form]\nWHERE ((([Lab Occurrence Form].[Occurrence Date]) Between [Forms]![Meeting_Reasons_Frequency]![Text4] And [Forms]![Meeting_Reasons_Frequency]![Text2]))\nGROUP BY [Lab Occurrence Form].[2 0 Analytical (Testing Phase)]\nHAVING Count([Lab Occurrence Form].[2 0 Analytical (Testing Phase)])<>0\n\nunion\n\nSELECT  [Lab Occurrence Form].[3 0 Postanalytical ( After Testing)], Count([Lab Occurrence Form].[3 0 Postanalytical ( After Testing)]) AS [CountOf3 0 Postanalytical ( After Testing)]\nFROM [Lab Occurrence Form]\nWHERE ((([Lab Occurrence Form].[Occurrence Date]) Between [Forms]![Meeting_Reasons_Frequency]![Text4] And [Forms]![Meeting_Reasons_Frequency]![Text2]))\nGROUP BY  [Lab Occurrence Form].[3 0 Postanalytical ( After Testing)]\nHAVING Count([Lab Occurrence Form].[3 0 Postanalytical ( After Testing)])<>0\n\nUNION SELECT [Lab Occurrence Form].[4 0 Other], Count([Lab Occurrence Form].[4 0 Other]) AS [CountOf4 0 Other]\nFROM [Lab Occurrence Form]\nWHERE ((([Lab Occurrence Form].[Occurrence Date]) Between [Forms]![Meeting_Reasons_Frequency]![Text4] And [Forms]![Meeting_Reasons_Frequency]![Text2]))\nGROUP BY [Lab Occurrence Form].[4 0 Other]\nHAVING Count([Lab Occurrence Form].[4 0 Other])<>0\nORDER BY 1, 2)\n\ngroup by mid(Lom1,1,4);\n\nthis is what the query returns:\nLOM Count\n1.1     231\n1.11    21\n1.3     103\n1.4     6\n1.5     1\n1.6     25\n1.8     2\n1.9     88\n2.1     8\n2.22    5\n2.24    1\n2.3     1\n2.4     1\n2.5     29\n3.2     13\n3.3     8\n3.3A    4\n4.1     2\n4.6     1\n4.8     7\n\ni need to add another column here. let's say it is column3\nthis is the output that need:\nLOM Count   column3\n1.1     231 everything from original table where LOM LIKE *1.1* separated by \",\"\n1.11    21  everything from original table where LOM=1.11 separated by \",\"\n1.3     103 everything from original table where LOM=1.3 separated by \",\"\n1.4     6   everything from original table where LOM=1.4 separated by \",\"\n1.5     1   everything from original table where LOM=1.5 separated by \",\"\n1.6     25  \n1.8     2   \n1.9     88  \n2.1     8   \n2.22    5   \n2.24    1   \n2.3     1   \n2.4     1   \n2.5     29  \n3.2     13  \n3.3     8   \n3.3A    4   \n4.1     2   \n4.6     1   \n4.8     7   \nprac    1   \n\nthat would mean the first element in column 3 would be \"something1, something2, etc...somethingelse231\"\ni apologize if this explanation is horrible, please let me know if i can clarify anything\n\nA:\n\nHere's one solution I found: http://www.access-programmers.co.uk/forums/showpost.php?p=272455&postcount=2\nIt requires writing a VBA function.  I don't know of a way to do it with straight SQL in Access.\nPublic Function Conc(Fieldx, Identity, Value, Source) As Variant\n  Dim cnn As ADODB.Connection\n  Dim rs As ADODB.Recordset\n  Dim SQL As String\n  Dim vFld As Variant\n\n  Set cnn = CurrentProject.Connection\n  Set rs = New ADODB.Recordset\n  vFld = Null\n\n  SQL = \"SELECT [\" & Fieldx & \"] as Fld\" & _\n        \" FROM [\" & Source & \"]\" & _\n        \" WHERE [\" & Identity & \"]=\" & Value\n\n  ' open recordset.\n  rs.Open SQL, cnn, adOpenForwardOnly, adLockReadOnly\n\n  ' concatenate the field.\n  Do While Not rs.EOF\n    If Not IsNull(rs!Fld) Then\n      vFld = vFld & \", \" & rs!Fld\n    End If\n    rs.MoveNext\n  Loop\n  ' remove leading comma and space.\n  vFld = Mid(vFld, 3)\n\n  Set cnn = Nothing\n  Set rs = Nothing\n\n  ' return concatenated string.\n  Conc = vFld\nEnd Function\n\nYou can then use it in a query like this:\nSELECT [tblData].[ID], \n       Conc(\"Field1\",\"ID\",[ID],\"tblData\") AS Field1,\n       Conc(\"Field2\",\"ID\",[ID],\"tblData\") AS Field2\nFROM tblData\nGROUP BY [tblData].[ID];\n\nEdit\nSo your first  query would look something like this:\nSELECT [Lab Occurrence Form].[1 0 Preanalytical (Before Testing)] as Lom1,\n       Conc(\"NameOfTheFieldToConcatenate\", \n            \"[Lab Occurrence Form].[1 0 Preanalytical (Before Testing)]\", \n            [Lab Occurrence Form].[1 0 Preanalytical (Before Testing)],\n            \"[Lab Occurrence Form]\"),\n       Count([Lab Occurrence Form].[1 0 Preanalytical (Before Testing)]) AS [Count1]\nFROM [Lab Occurrence Form]\nWHERE ((([Lab Occurrence Form].[Occurrence Date]) Between [Forms]![Meeting_Reasons_Frequency]![Text4] And [Forms]![Meeting_Reasons_Frequency]![Text2]))\nGROUP BY [Lab Occurrence Form].[1 0 Preanalytical (Before Testing)]\nHAVING Count([Lab Occurrence Form].[1 0 Preanalytical (Before Testing)])<>0\n\nNote that you may have to tweak the Conc() function a little to get the wildard compare you want instead of an exact match on the LOM field.\n\n"
}