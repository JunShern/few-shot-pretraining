{
    "criteria": [
        {
            "criterion": "AllDocuments",
            "passed": true,
            "reason": "All documents pass."
        },
        {
            "criterion": "QuestionAnswerStringsV2",
            "passed": true,
            "reason": "Text contains ['Q:', 'A:']."
        },
        {
            "criterion": "FullyStructured",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamStringsV2",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesStrings",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesStringsV2",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ListPrefixV2",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesMinimalEmbed",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesSynonymsEmbed",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesDiverseEmbed",
            "passed": false,
            "reason": "Does not meet criterion."
        }
    ],
    "doc_id": "6054",
    "text": "Q:\n\nHow to get and set / access and modify a global variable between components\n\nI'm new to Angular, currently using Angular 5 Cli with VS Code. I have 2x components (Comp1 & Comp2) that need to access the same variable which is ultimately a string. This variable is rendered in the 3rd Component's (Comp 3) View/HTML template. \nWhat's the best way to access this? \nExample files below:\nComp3.html\n<a routerLink=\"/{{modeName | lowercase}}\" class=\"mode\"><span class=\"icon {{modeName | lowercase}}\"></span><span>{{modeName}}</span></a>\n\nComp3.ts\nimport { Component } from '@angular/core';\nimport { LowerCasePipe } from '@angular/common';\n\n@Component({\nselector: 'pm-nav-button',\ntemplateUrl: './comp3.component.html'\n})\n\nexport class Comp3 {\n\nconstructor() {}\n\nmodeName: string;\n\n}\n\nComp2.ts & Comp1.ts - (these are configured based on Angular Routing whichever view loads it'll set 'Grid' mode or 'List' mode)\nimport { Component, OnInit } from '@angular/core';\nimport { LowerCasePipe } from '@angular/common';\nimport { Comp3 } from './comp3-component';\n\n@Component({\nselector: 'content-two',\ntemplateUrl: './comp3.component.html'\n})\n\nexport class Comp2 implements OnInit {\n\nconstructor(private _comp3: Comp3) {}\n\nngOnInit(): void {\n    this._Comp3.modeName = 'Grid';\n}\n\n}\n\nHowever, it all compiles fine with no errors, but I'm not seeing 'Grid' binded to the template's bindings (interpolation). I think I'm setting the the variable after the template has rendered, even though I'm setting it within ngOnInit. I want to be able to access, check and set this variable from other components. How do I do this? Thanks\n\nA:\n\nWhen passing data between components that lack a direct connection, such as siblings, grandchildren, etc, you should  use a shared service.\nYou can try following code snippet.\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\n@Injectable()\nexport class SharedService {\n  private messageSource = new BehaviorSubject<string>(\"list\");\n  currentMessage = this.messageSource.asObservable();\n  constructor() { }\n  changeMessage(message: string) {\n    this.messageSource.next(message)\n\n  }\n}\n\n//Comp1\nimport { Component, OnInit } from '@angular/core';\nimport {SharedService} from '../shared.service';\n@Component({\n  selector: 'app-comp1',\n  templateUrl: './comp1.component.html',\n  styleUrls: ['./comp1.component.css']\n})\nexport class Comp1Component implements OnInit {\n\n   message:string;\n  constructor(private data: SharedService) {\n\n   }\n  ngOnInit() {\n    this.data.currentMessage.subscribe(message => this.message = message)\n    console.log(this.message);\n  }\n\n}\n\n//Comp2\nimport { Component, OnInit } from '@angular/core';\nimport {SharedService} from '../shared.service';\n@Component({\n  selector: 'app-comp2',\n  templateUrl: './comp2.component.html',\n  styleUrls: ['./comp2.component.css']\n})\nexport class Comp2Component implements OnInit {\n\n    message:string;\n  constructor(private data: SharedService) { }\n  ngOnInit() {\n    this.data.currentMessage.subscribe(message => this.message = message)\n    console.log(this.message);\n  }\n\n}\n\n"
}