{
    "criteria": [
        {
            "criterion": "AllDocuments",
            "passed": true,
            "reason": "All documents pass."
        },
        {
            "criterion": "Domain",
            "passed": false,
            "reason": "Document source unavailable."
        },
        {
            "criterion": "QuestionAnswerStrings",
            "passed": true,
            "reason": "Text contains Q:."
        },
        {
            "criterion": "QuestionAnswerStringsV2",
            "passed": true,
            "reason": "Text contains ['Q:', 'A:']."
        },
        {
            "criterion": "FullyStructured",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamStrings",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamStringsV2",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesStrings",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ListPrefix",
            "passed": false,
            "reason": "Found 0 list prefixes. (Min: 5)"
        },
        {
            "criterion": "ListPrefixV2",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesMinimalEmbed",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesSynonymsEmbed",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesDiverseEmbed",
            "passed": false,
            "reason": "Does not meet criterion."
        }
    ],
    "doc_id": "428",
    "text": "Q:\n\nHow to prevent people from dropping in non-droppable elements?\n\nI am implementing drag and drop this way.\n<?php echo $this->Html->script('modernizr/2.5.3/modernizr.min.js', array('block' => 'scriptTop')); ?>\n\n$(document).ready(function () {\n    dropArea = document.getElementById(\"droparea\");\n\n    dropArea.addEventListener(\"dragleave\", function (evt) {\n        var target = evt.target;\n\n        if (target && target === dropArea) {\n            this.className = \"\";\n        }\n\n        dropArea.className = \"\";\n        evt.preventDefault();\n        evt.stopPropagation();\n\n    }, false);\n\n    dropArea.addEventListener(\"dragenter\", function (evt) {\n        this.className = \"over\";\n        evt.preventDefault();\n        evt.stopPropagation();\n\n    }, false);\n\n    dropArea.addEventListener(\"dragover\", function (evt) {\n\n        evt.preventDefault();\n        evt.stopPropagation();\n\n    }, false);\n    // this is the initial add-drop\n    dropArea.addEventListener(\"drop\", function (evt) {\n        doStuff();\n        this.className = \"\";\n        evt.preventDefault();\n        evt.stopPropagation();\n\n    }, false);\n  }\n\nThere are times when my users dropped stuff NOT into #droparea.\nI want to prevent them from doing that.\nWhat should I do?\n\nA:\n\nYou need to add a noop dragover and drop handler for your document.  This will prevent the default browser behavior of replacing current page with dropped file.\nSee here for a demo\n// Handle dropping on non-droparea    \ndocument.addEventListener(\"drop\", cancelEvent, false);\ndocument.addEventListener(\"dragover\", cancelEvent, false);\n\nfunction cancelEvent(evt) {\n    evt.preventDefault();\n    evt.stopPropagation();\n}\n\n"
}