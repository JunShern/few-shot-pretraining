{
    "criteria": [
        {
            "criterion": "AllDocuments",
            "passed": true,
            "reason": "All documents pass."
        },
        {
            "criterion": "QuestionAnswerStringsV2",
            "passed": true,
            "reason": "Text contains ['Q:', 'A:']."
        },
        {
            "criterion": "FullyStructured",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamStringsV2",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesStrings",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesStringsV2",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ListPrefixV2",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesMinimalEmbed",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesSynonymsEmbed",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesDiverseEmbed",
            "passed": false,
            "reason": "Does not meet criterion."
        }
    ],
    "doc_id": "1234",
    "text": "Q:\n\nWaterline - Where with sum of fields\n\nI've got the following model Test\nmodule.exports = {\n    attributes: {\n        a: {\n            type: 'number'\n        },\n        b: {\n            type: 'number'\n        }\n    }\n}\n\nI would like to build a query that allows me to put sum of fields a and b in where statement.\nSQL equavilent:\nSELECT * FROM Test WHERE a + b = myValue\n\nI read in sails doc's about Criteria modifiers but there is no word about that.\nIs there any clever way to do that? Of course I can use native query but I would like to avoid that because I must use the sum along with other modifiers. The reason is I'm generating dynamic queries from separate files and with native queries I will have to also handle already defined functionality like or, and, etc.\n\nA:\n\nI found a workaround. Maybe it will be useful to someone.\nIt is not stricte sails/node solution, but database one, however, it fits my case perfectly.\nFrom MySQL 5.7 there is something like generated columns.\n\nColumns are generated because the data in these columns are computed based on predefined expressions.\n\nAll I had to do was add an extra, auto generated column to my Test model:\nmodule.exports = {\n    attributes: {\n        a: {\n            type: 'number',\n            columnType: 'int'\n        },\n        b: {\n            type: 'number',\n            columnType: 'int'\n        },\n        c: {\n            type: 'number',\n            columnType: 'int GENERATED ALWAYS AS(a + b) VIRTUAL'\n        }\n    }\n}\n\nNow I'm able to do such query:\nconst result = await Test.find({ c: 2 })\n\n...and I get the correct result. Waterline treats my column like any other, database does everything instead of me.\nOf course I can mix it with other modifiers with no problems.\nI haven't seen any complications so far.\n\n"
}