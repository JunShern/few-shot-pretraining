{
    "criteria": [
        {
            "criterion": "AllDocuments",
            "passed": true,
            "reason": "All documents pass."
        },
        {
            "criterion": "QuestionAnswerStringsV2",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "FullyStructured",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamStringsV2",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesStrings",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesStringsV2",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ListPrefixV2",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesMinimalEmbed",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesSynonymsEmbed",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesDiverseEmbed",
            "passed": true,
            "reason": "Text contains ['<longsleep> but aside from scripting languages, what is the best practice to create an snappy image with many snaps pre installed where some of the snaps are not in the store? (0.178)', 'Am I right in thinking that, in snappy, there are about five things missing from that kind of workflow? (0.195)', 'The things that are important for me are the param and return tags, and the one line summary. (0.167)', 'Most of the things are ready. (0.160)', 'and 2) they complain of the lack of a .so.0 file which is included in one of the packages I explicitly added to stage-packages any ideas? (0.176)', 'For example create some sort of link to the Snap on the Snapcraft website (0.178)', 'What about doing two PR, one for the bug and one for the \"new feature\"? (0.199)', 'Those are yours and getting those failures out of the way would be great! (0.169)', \"<pedronis> mborzecki: the failure mode of that test look like the are different services that provide similar but different apis for something, it's quite weird (0.197)\", 'Only two of them appear in the listing of snapcraft.io (0.185)', '<niemeyer> pedronis: If the duplication you mention is developer/publisher, these are not actually duplicated, in the sense they were supposed to potentially represent different people.. we do have a problem which is not using the same structure for both, so indeed an inconsistency (0.188)', \"<niemeyer> Chipaca: That's why I one of the first things I asked is what are the media types we have (0.190)\", '<niemeyer> pedronis: Yeah.. as mentioned earlier, in those situations I try to pack up a few high-profile changes that are clear reasons for the effort of breaking the API apart between vN and vN+1 (0.183)', '<niemeyer> Chipaca: Yeah, I remember these discussions when we redesigned the original API.. but I have memories of the issue going beyond the representation of the result, and into actual usability, in the sense it\\'s convenient for the user to have \"snap info foo\" doing the right thing (0.199)', '<noise][> slvn_: we have some upcoming feature work to allow for publishers to self-select categories, but in the meantime if you can provide a list of your game snaps that need to be categorized in a forum post I can get someone from our advocacy team to review and get them associated to the category (0.172)', '<pedronis> mborzecki: Chipaca: another approach would be to find something a bit more encompassing than \"name\" and also put Channel and some helpers for the various kind of IDs we have there (0.184)', '<mborzecki> mvo: added a bunch of comments in #7593, i think some relate to how the seed/recovery is supposed to work, can you take a look and maybe we could discuss that with whoever is interested before/after the standup? (0.199)', 'The only thing I can say for sure is that we see issues with a number of workloads some of which are probably due to patches mising from containerd. (0.158)', \"<zyga> mvo: in snapd.mk there's a section for things that are removed if we are packaging for a classic distribution (0.196)\"]."
        }
    ],
    "doc_id": "984",
    "text": "#snappy 2015-10-12\n<dholbach> good morning\n<clobrano> good morning\n<Chipaca> goood morning people!\n<mvo> hey Chipaca, good morning!\n<Chipaca> mvo: how's things?\n<mvo> Chipaca: busy, but good otherwise, how are you?\n<Chipaca> mvo: considering breakfast\n<Chipaca> :)\n<mvo> Chipaca: do it!\n<Chipaca> mvo: i need to fix the way we're using husks, i learned\n<Chipaca> um\n<Chipaca> not husks\n<Chipaca> the other thing\n<Chipaca> tombs\n<mvo> Chipaca: oh? how so?\n<mvo> Chipaca: the way you used them looked super nice\n<Chipaca> mvo: the function you give to tomb.Go is supposed to check whether the tomb.Kill has been called\n<Chipaca> mvo: http.Serve does not do that :)\n<Chipaca> i learned this in trying to make the server auto-go away after a bit ;)\n<mvo> Chipaca: heh, ok\n<Chipaca> so there'll be a branch about that sometime today, maybe :)\n<mvo> Chipaca: cool\n<Chipaca> we're also not doing that in tasks' tomb, but that's ok because there aren't cancelable tasks just yet\n<JamesTait> Good morning all; happy Monday, and happy World Arthritis Day! \u00f0\u009f\u0098\u0083\n<ogra_> ouch\n<Chipaca> wah, http.Server's Serve() calls out to private methods; i can't reimplement it tomb-friendly without reimplementing the guts of http :-(\n<Chipaca> pitti: o/\n<Chipaca> pitti: how much do you know about systemd's socket activation? :)\n<Chipaca> pitti: looking for a way to tell systemd to shut it down after inactivity\n<Chipaca> pitti: or lacking that, looking for a way to tell systemd it's shutting down due to inactivity\n<Chipaca> pitti: i've tried doing sd_notify(0, \"STOPPING=1\") but that still seems to get clients connecting after\n<pitti> Chipaca: not much, I'm afraid; sd_notify(3) looks like STOPPING=1, but do you actually shut down the service afterwards?\n<Chipaca> yep\n<pitti> Chipaca: you can't tell if a service is inactive from teh outside, the process itself needs to do that\n<Chipaca> sd_notify doesn't seem to make any difference\n<pitti> Chipaca: maybe it gets restarted immediately due to new clietns connecting?\n<Chipaca> yes\n<pitti> Chipaca: i. e. you might have stopped the .service, but not the corresponding .socket\n<Chipaca> and then it starts starting\n<Chipaca> pitti: i'm testing exactly that\n<Chipaca> that is: i'm trying to make sure that if the server decides to go away *just* as a new client connects, things still work\n<gberginc> can anyone help me get my demo snappy app that depends on a small shared library run?\n<gberginc> shared lib only has one function and my main app only calls that function\n<gberginc> all is packed into a snap\n<gberginc> the contents of the package can be seen at http://pastebin.com/4MA60S6r\n<gberginc> (well, the structure, that is)\n<biezpal> gberginc, you should define \"LD_LIBRARY_PATH\" variable to make library \"shared\" :)\n<gberginc> sorry, biezpal, I am completely new to Snappy - where should I add this? on my host I have specified LD_LIBRARY_PATH before building the app\n<biezpal> I mean, run \"export LD_LIBRARY_PATH=/apps/heyho/current/lib/x86_64-linux-gnu\" in Snappy with your app installed on\n<biezpal> and try to run your app after this, this should help\n<ogra_> you shouldnt need that\n<ogra_> the wrapper that executes the snap binary will set it automatically\n<ogra_> you just need to put your lib in the right place in your snap\n<biezpal> ogra_, is it already implemented?\n<ogra_> lib/x86_64-linux-gnu/ for amd64 and lib/arm-linux-gnueabihf/ for arm\n<ogra_> biezpal, since forever :)\n<biezpal> ogra_, few month ago we requested this feature)\n<biezpal> btw, where can we get changelogs?\n<gberginc> I have the lib in that folder but it doesn't seem to work\n<gberginc> I may have some other problems though :)\n<gberginc> because even after setting LD_LIBRARY_PATH it doesn't work; I'll look into\n<Chipaca> ogra_: um... you sure the LD_LIBRARY_PATH thing is done?\n<Chipaca> ogra_: it's not done by ubuntu-core-launcher, and it's not done by snappy\n<Chipaca> ogra_: i think it used to be done by the precursor of snapcraft, but i'm not sure\n<biezpal> :D\n<Chipaca> so AFAIK you still have to do it yourself\n<Chipaca> gberginc: if you share the snap itself, i can help, probably\n<gberginc> after setting LD_LIBRARY_PATH I see this in ldd\n<gberginc> (amd64)ubuntu@localhost:/apps/heyho.sideload/current$ ldd bin/main\n<gberginc>         linux-vdso.so.1 =>  (0x00007ffdf3fda000)\n<gberginc>         libmylib.so => /apps/heyho.sideload/current/lib/x86_64-linux-gnu/libmylib.so (0x00007fa3a3019000)\n<gberginc>         libc.so.6 => /lib/x86_64-linux-gnu/libc.so.6 (0x00007fa3a2c4f000)\n<gberginc>         /lib64/ld-linux-x86-64.so.2 (0x00007fa3a321b000)\n<gberginc> but it still fails to start\n<gberginc> let me create a repo with the app\n<gberginc> ^ Chipaca\n<Chipaca> gberginc: how are you starting it, and what error do you get\n<ogra_> Chipaca, hmm ? ubuntu-core-launcher should do it since quite a while\n<Chipaca> ogra_: set LD_LIBRARY_PATH? nope\n<ogra_> yes\n<Chipaca> john@fogey:~/canonical/ubuntu-core-launcher$ grep -r LD_LIBRAR\n<Chipaca> john@fogey:~/canonical/ubuntu-core-launcher$\n<ogra_> now thats weird, i definitely remember apparmor chnges after this landed\n<ogra_> well, but then yes, you need a wrapper\n<Chipaca> gberginc: fwiw just the .snap would probably be enough to point you in the right direction, don't need to see the source itself\n<gberginc> Chipaca: ok, I'll share the snap\n<gberginc> Chipaca: http://k00.fr/2w2gp\n<biezpal> (amd64)ubuntu@management:~$ /apps/heyho.sideload/current/bin/main\n<biezpal> Hello from librarycos(0) = 1.000000\n<biezpal> (amd64)ubuntu@management:~$ /apps/heyho.sideload/current/bin/hoho\n<biezpal> Heyhohoho!\n<Chipaca> $ heyho.main\n<Chipaca> Hello from librarycos(0) = 1.000000\n<Chipaca> biezpal: don't call it directly, that's not contained!\n<Chipaca> biezpal: use the /apps/bin/* wrappers\n<Chipaca> gberginc: so\n<Chipaca> gberginc: move main to main.real\n<Chipaca> gberginc: and make \"main\" a script that does: #!/bin/sh\n<Chipaca> LD_LIBRARY_PATH=$SNAP_APP_PATH/lib/x86_64-linux-gnu $SNAP_APP_PATH/bin/main.real\n<Chipaca> (if you're packaging more than one architecture, $SNAPP_ARCH can help)\n * Chipaca wonders, not for the first time, why there isn't a SNAP_ variable for the multiarch string thing\n<gberginc> great, thanks Chipaca!\n<gberginc> Chipaca: it works!\n<Chipaca> *shocking*\n<gberginc> for me, yes :D\n<gberginc> I'll now try openfoam to see how easy it would be to make a framework/app out of it\n<olli> gm\n<jdstrand> ogra_: hey, I'm not working right now, but I was wondering how to force a module load with snappy config. I know about the 'modprobe' option, but that edits a file in /etc/modprobe.d. I think I need a file in /etc/modules-load.d to be edited, unless there is something I can put in modprobe.d\n<jdstrand> but I can't seem to find it\n<jdstrand> what I specifically need it iptable_filter and ip6table_filter to be loaded, since they don't autload from within a snap\n<ogra_> heh, i didnt even know abouot /etc/modules-load.d ... is that the same as /etc/modules ?\n<ogra_> (just broken down into single files)\n<jdstrand> yes\n<ogra_> Chipaca, ^^^ can we add that to snappy config for ubuntu-core ?\n<jdstrand> otherwise firewall snaps aren't going to work :)\n<ogra_> jdstrand, same game as always ... needs adding to writable paths in ubuntu-core-config and a function in snappy for snappy config\n<Chipaca> what's the difference between modprobe.d and modules-load.d?\n<jdstrand> both have man pages\n<ogra_> modprobe.d definest module parameters\n<jdstrand> the first adjusts options when loading\n<jdstrand> the second forces load on boot\n<Chipaca> oooh, haven't been told to rtfm in ages\n * Chipaca rtfm's\n<jdstrand> this is trying to deal with this bug: https://bugs.launchpad.net/snappy/+bug/1496419\n<ubottu> Launchpad bug 1496419 in Snappy \"iptable_filter and ip6table_filter do not auto load\" [Undecided,New]\n * ogra_ adds an ubuntu-core-config task\n<jdstrand> cool, thanks\n<jdstrand> one of these days, I'll have a ufw snap in the store\n<ogra_> yay\n<ogra_> then i could actually snappify my firewall !\n * ogra_ already has a ufw firewall in use here ... but deb based \n<jdstrand> yeah, me too\n * davmor2 pictures ogra_'s home slowly turning into rasp pi2's \n<jdstrand> I really want to create a little 'router snap' for my soekris\n<Chipaca> ogra_: where does ubuntu-core-config come into the picture, btw?\n<ogra_> Chipaca, it defines the writable paths on the image\n<Chipaca> ah\n<ogra_> davmor2, nah, for real stuff i dont use RPis :)\n<davmor2> ogra_: oh sorry Beagle Board blacks is it ;)\n<ogra_> http://www.amazon.de/gp/product/B00JR6X0ZK\n<ogra_> plain x86\n<davmor2> ogra_: nice\n<jdstrand> ogra_, Chipaca: so we need that writable path but also a 'modules-load' option in snappy config ubuntu-core. guessing that would just be a list that create a file in /etc/modules-load.d/ubuntu-core.conf that has one module per line\n<ogra_> jdstrand, yeah, that sounds correct\n<ogra_> by default just an empty file\n * jdstrand nods\n<Chipaca> how many modules would it be, worst case?\n<Chipaca> because making it a bunch of files would be easier :)\n<jdstrand> in my case, 2\n<jdstrand> :)\n<jdstrand> or any firewall snap\n<Chipaca> i mean, /etc/modules-load.d/ubuntu-core-$module for every module you want\n<jdstrand> I don't know what other modules don't autoload when under confinement\n<ogra_> well\n<ogra_> might not only be an autoload thing but simply some adjustment to the default image\n<jdstrand> that seems weird when comparing it to modprobe\n<jdstrand> Chipaca: ^\n<jdstrand> modprobe creates one file\n<ogra_> i can imagine that you might want to force load modules that wouldnt autoload when doing a certain oem project\n<jdstrand> ogra_: I had that feeling too, but I couldn't come up with an example\n<davmor2> jdstrand, ogra_: actually I'm surprised that ufw isn't in the base image it is way more pleasant to use that iptable :)\n<ogra_> davmor2, bot not everyone needs a firewall builtin into his drone :)\n<jdstrand> it wasn't considered minimal enough\n<davmor2> ogra_: but iptables is which is the actual firewall, ufw just makes your eyes bleed less using it :P\n<ogra_> well, a snappy install should essentially only be systemd, the snappy binary, a shell and the glue to make these three boot a system\n<ogra_> as minimal as possible\n<ogra_> sadly we're kind of moving away from that a little recently\n<Chipaca> we are?\n<ogra_> yeah, definitely\n<Chipaca> aww\n<ogra_> so many seed additions recently :/\n<davmor2> ogra_: but iptable is part of the kernel right so if you have the kernel installed it's there isn't it?\n<Chipaca> i'm still wanting to nuke python out of there\n<ogra_> davmor2, not the userspace\n<Chipaca> iptables the userspace things are quite large, even\n<davmor2> ogra_: grrrr ogra2 keeps getting priority over ogra_   fair enough wasn't sure if it was a separate thing or not nice to know though :)\n<Chipaca> ogra2 isn't an async ogra_ ?\n<ogra_> Chipaca, nah, its my snappy test setup for the bip snap in longterm testing :)\n * Chipaca reads \"yes, yes it is\"\n<ogra_> haha\n<longsleep> Chipaca: nuke python2 or python3 - but please keep a python there so snaps do not have to ship python for simple scripts and stuff\n<Chipaca> longsleep: https://github.com/micropython/micropython :D\n<longsleep> mhm - i am not sure i like that\n * longsleep prefers to have /usr/bin/python \n<ogra_> we will definitely get rid of python at some point\n<ogra_> thats like saying \"we need nodejs in the image so snaps dont need to ship it\"\n<longsleep> well, python has been standard on linuxes for centuries - i am not sure if node qualifies as comparison\n<Chipaca> ogra_: not node! v8, clearly\n<davmor2> Chipaca: isn't the system-image-cli stuff written in py3?\n<Chipaca> longsleep: so has X\n<Chipaca> davmor2: yes. But that's already on the chopping block.\n<longsleep> but whatever, in my case i would need a python framework to avoid having 30 snaps each shipping python for scripting\n<Chipaca> davmor2: apparmor-click is also py3\n<longsleep> to me, removing python is the same as removing /bin/sh\n<longsleep> or /bin/bash for that matter\n<Chipaca> oh, i agree. bash should also go >:D\n<jdstrand> I'm not saying python shouldn't go, but fyi, it adds something in the neighborhood of 40M to a snap\n<jdstrand> (if using it with snapcraft, for example)\n<Chipaca> here's the thing\n<Chipaca> right now, it's in a weird state\n<longsleep> yes - i mean that would be fine if there is a framework\n<Chipaca> where we don't *promise* it'll be there\n<Chipaca> but people still depend on it\n<longsleep> true, but this is the same as with sed, awk, sh, grep\n<Chipaca> so, i think we should do two things, in order, if/when we have infinite engineering resources\n<davmor2> Chipaca: Python Roulette\n<Chipaca> or what you say\n<ogra_> bash needs to die on the snappy image :)\n<Chipaca> basically, handwavy make it possible to use a \"python framework\" (which isn't possible right now)\n<Chipaca> and then remove everything not *strictly* essential from the core\n<longsleep> that sounds good to me\n<jdstrand> I don't think python should be a framework\n<Chipaca> framework is wrong, hence the handwavy bit\n<jdstrand> that isn't what frameworks are for. that are explicitly not for a substitute for libraries\n<Chipaca> frameworks can't depend on things, and are for controlling access to shared resources, nothing else\n<longsleep> isnt a framework something snaps can share or rely on?\n<Chipaca> longsleep: no\n<longsleep> ah\n<jdstrand> with this sorta is, cause the interpreter is versioned\n<Chipaca> longsleep: also, frameworks can't depend on things\n * jdstrand nods to handwavy bit\n<Chipaca> longsleep: so you couldn't make a framework that depended on the \"pthon\" \"framework\" \"\"\n * Chipaca adds more \"\"s in there\n<beuno> also, you don't need all of python\n * Chipaca also adds an y\n<beuno> so surely snapcraft can improve\n<longsleep> Chipaca: i see, so how to solve that?\n<beuno> and only bring in the bits you need\n<Chipaca> longsleep: today, carry on as you were\n<Chipaca> later, we'll see\n<Chipaca> longsleep: this is long-term after-lunch-break-chat stuff\n<Chipaca> beuno: hola :)\n<beuno> o/ Chipaca\n<longsleep> Chipaca: i see :) but is later also to remove one of the pythons? Right now there is 2 and 3 isn't it?\n<Chipaca> longsleep: no, only 3\n<Chipaca> wait\n<longsleep> Chipaca: oh 2 went away then already?\n<Chipaca> 2 is also on there!\n<Chipaca> what?\n<Chipaca> i thought we'd got rid of 2\n<longsleep> thats what i mean :)\n<Chipaca> :-(((\n<longsleep> well i did not check for a while\n<longsleep> maybe it is gone now\n<beuno> Chipaca, it used to be there because of cloud-init\n<Chipaca> ahhhh\n<Chipaca> 15.04 still has it\n<Chipaca> wily does not\n<Chipaca> phewww\n<beuno> right\n<longsleep> ah ok\n<Chipaca> longsleep: rolling --> awesomeness\n<longsleep> but 15.04 is what anyone should use now right?\n<Chipaca> also, much breakage, all the time\n<Chipaca> longsleep: only if you like things that don't break all the time\n * longsleep did not check on rolling since June or something\n<beuno> longsleep, rolling is slowly becoming 16.04\n<beuno> sometimes, not slowly and not backwards compatible\n<longsleep> Chipaca: so you would agree saying that python3 will be in 16.04 - or is 16.04 after lunch break stuff?\n<beuno> if you want to stay close to the LTS and can tolerate some breakage, I'd follow rolling\n<beuno> longsleep, we don't know\n<beuno> if we can, I think we'll try and release 16.04 without Python\n<Chipaca> 16.04 is 3\u00c3\u0097 too far into the future for humble little me to guess at\n<beuno> everyone benefits from a smaller image\n<longsleep> beuno: Ok fair enough, but i suggest you think about sharing python with multiple snaps before removing it\n<beuno> longsleep, absolutely\n<Chipaca> longsleep: yeh, in what i said above there was an ordering\n<beuno> we need the same for node, java, etc\n<Chipaca> qt\n<beuno> so it's a general problem to solve\n<Chipaca> /o\\ qt\n<longsleep> Ok sounds good to me, as long as i can avoid adding python to all of my snaps\n<Chipaca> hah!\n<Chipaca> we've got python3.4 and 3.5 in wily\n<Chipaca> instead\n<longsleep> hehe\n<beuno> what's 40mb among friends?\n<Chipaca> probably a bug tho, i guess in the transition to 3.5 we forgot to update something\n<Chipaca> ogra_: ^?\n * Chipaca puts it on the floor and runs\n<longsleep> but can you agree in saying \"python2 is dead\" - use python3 or is there still some movement to resurrect python 2?\n<ogra_> i'm pretty sure we only seed one\n<ogra_> must be some dep that pulls in the other\n<beuno> longsleep, no chance py2 is coming back\n<longsleep> beuno: ok good thats what i wanted to hear :)\n<Chipaca> longsleep: python2 is dead. Long live python3.\n<longsleep> btw, python3 does still not support ipv6 listeners in the standard library .. totally sucks\n<ogra_> heh\n<ogra_> we dont seed any python\n<beuno> ogra_, python seeds us?\n<ogra_> some package deps seem to pul both of them in\n<ogra_> ah, wait\n<ogra_> we do seed python3-pycurl\n<ogra_> booo\n<Chipaca> longsleep: python3 does support ipv6 in the standard library, afaik, fwiw, etc\n<longsleep> Chipaca: yes but only for clients, the socketserver implementations do not\n<Chipaca> longsleep: http://pastebin.ubuntu.com/12763435/\n<Chipaca> longsleep: lies\n<Chipaca> you just need to set address_family to ipv6\n<longsleep> then ipv4 does not work\n<Chipaca> ah, yes it sucks you can't easily do both\n<Chipaca> more subclassing is needed\n<longsleep> yes that is what i mean sorry\n<longsleep> my rant was not precise enough :)\n<Chipaca> longsleep: but, http://code.activestate.com/recipes/578504-server-supporting-ipv4-and-ipv6/\n<Chipaca> that is a lot longer than it needs to be, also :)\n<longsleep> sure custom class is always possible\n<longsleep> i nowadays just use a simple go server instead\n<Chipaca> yes... yes... embrace that feeling of compiled speed\n<longsleep> Chipaca: i noticed that when implementing a workaround for bug #1480404\n<ubottu> bug 1480404 in webdm \"Webdm open/manage links cannot handle https\" [Critical,Confirmed] https://launchpad.net/bugs/1480404\n<longsleep> the snap now runs a redirecting web server to https, just a simple python script but that cannot do dual stack\n * ogra_ always uses a 50 line shell script for webservers :P\n<ogra_> just some bi-directional nc wrapping is enough for everyone !\n<longsleep> mhm that includes argument parsing with GET and HEAD support?\n<ogra_> sure\n<longsleep> i mean the python script i have currently has 74 lines\n<ogra_> http://paste.ubuntu.com/12763576/\n<longsleep> ogra_: ok nice, here is what i use http://paste.ubuntu.com/12763590/\n<ogra_> misses curly brackets evereywhere :P\n<longsleep> yeah\n * ogra_ grins evil\n<longsleep> we could do it with node - plenty curly there\n<ogra_> haha, yeah\n<Chipaca> ogra_: what're the []'s around \\r\\n for?\n<Chipaca> ogra_: in tr -d '[\\r\\n]'\n<ogra_> it removes linefeeds and returns\n<Chipaca> yes\n<Chipaca> but what are the []s for\n<Chipaca> works without 'em\n<Chipaca> afaict\n<ogra_> i think thats how it arrives in encoded stings\n<ogra_> (that code is like 2 years old ... i dont remember anymore)\n<jdstrand> ogra_: hey, fyi, lp:~jdstrand/+junk/ufw-snap. see the readme.md file. to create a snap: make clean ; make snap. you'll need to adjust /etc/modules-load.d/something.conf to include iptable_filter and ip6table_filter until the feature is implemented in snappy config\n<jdstrand> ogra_: it is only very lightly tested and I'm heading out for the rest of the day (US holiday), but it is there if you want to play with it\n<ogra_> jdstrand, no snapcraft ?\n<jdstrand> no, snapcraft doesn't handle --root with setup.py right yet\n<jdstrand> serguisens knows about it\n<ogra_> ah, python\n<jdstrand> it is nice having ufw on my snappy system though :)\n * jdstrand heads out\n<jdstrand> ogra_: oh, if you are interested in trying it out and find a bug and feel like filing it, feel free to file it at lp:ufw\n#snappy 2015-10-13\n<biezpal> good morning all\n<biezpal> Seems like we have faced another \"random-version-string\" problem, similar to https://bugs.launchpad.net/bugs/1498396\n<ubottu> Launchpad bug 1498396 in Snappy \"Random string in data path breaks application\" [Undecided,Fix committed]\n<biezpal> We have service in snap package with apparmor profile defined like:\n<biezpal> profile \"app_ovs-init-db_0.0.1\" {\n<biezpal>   capability,\n<biezpal>   ...\n<biezpal> In systemd this service exist with name \"app_ovs-init-db_IDDSYPEfafNM.service\" and seems like apparmor cannot change profile properly because of different names. When we trying to start service through ubuntu-core-launcher we see error:\n<biezpal> aa_change_onexec failed with -1\n<biezpal> . errmsg: No such file or directory\n<biezpal> If we change service name in apparmor profile and start service again - everything works fine.\n<biezpal> How can we configure apparmor profile to work with random named services?\n<jjohansen> biezpal: ?\n<jjohansen> biezpal: within a profile you can specify the name to transition to\n<jjohansen>   /foo px -> bar,\n<jjohansen> or you could use the the change_profile api\n<jjohansen> from a shell you can do\n<jjohansen>   aa-exec -p profile_name -- your shell command\n<jjohansen> and that will run your shell command with the specified profile_name\n<jjohansen> aa-exec is just a wrapper around the change_profile api\n<biezpal> jjohansen, but we need valid apparmor profile before snap package installed\n<biezpal> we have a list of service that should run automatically after package installed and we cannot change all profiles manually from shell\n<jjohansen> biezpal: so what kind of changes do you need to the profile?  Just changing the name, or do you need to change the profile contents?\n<jjohansen> sorry, I am reading the bug now\n<biezpal> apparmor profile that we have in snap package becomes invalid after install because of randow version in service name\n<jjohansen> biezpal: do you need the random version in the profile name?\n<biezpal> for example, profile defined for service_0.0.1 but system looking for service_IDDSYPEfafNM\n<biezpal> jjohansen, we don't need random version in profile :)\n<biezpal> cause we cannot define them in advance, before installation\n<jjohansen> right\n<biezpal> and because of it our services cannot start\n<jjohansen> so, I  am not sure what the best way to proceed from here, jdstrand will know the snap integration part much better\n<jjohansen> biezpal: unfortunately jdstrand won't come online for about 8 hours\n<biezpal> jjohansen, yes, we know :)\n<biezpal> thanks anyway\n<jjohansen> biezpal: my initial reaction is don't do that :)\n<jjohansen> it is possible to make the change_profile rule match multiple versions\n<jjohansen> and I am guessing that will be the route to go, but I'd run it past jdstrand first\n<biezpal> ok, waiting for jdstrand\n<dholbach> good morning\n<mvo> hey dholbach, good morning\n<dholbach> hi mvo\n<mvo> ogra_: hi, fwiw, I triggered a new build for vivid from proposed that contains some rest api fixes (just in case you wonder why a new build is happening right now)\n<fgimenez> good morning\n<Chipaca> mo'in\n<Chipaca> something weird is up with wily\n<Chipaca> getting stuck in emerg mode\n<Chipaca> mvo: o/\n<mvo> hey Chipaca\n<Chipaca> mvo: how's things?\n<Chipaca> mvo: did you know wily edge 199 -> 201 lands you in emergency mode right now?\n<Chipaca> mvo: (just in case you thought things were ok :-p)\n<mvo> Chipaca: uff\n<mvo> Chipaca: ok, thats alarming as it most likely affects stable in some way too\n<longsleep> good morning snappy\n<Chipaca> indeed, I am moderately alarmed by this\n<Chipaca> Chipaca code Mauve\n * Chipaca steals python *and* perl from under longsleep's feet\n<Chipaca> longsleep: morning :)\n<longsleep> hehe i switched from Perl to Python in 2001\n<longsleep> so have fun with the Perl but let me keep Python :P\n<longsleep> but aside from scripting languages, what is the best practice to create an snappy image with many snaps pre installed where some of the snaps are not in the store? I have to start with some build system for this soon - any suggestions?\n<fgimenez> hi mvo\n<mvo> hey fgimenez\n<fgimenez> i'm trying 15.04/edge r212 on kvm and it doesn't have eth0 up when started\n<fgimenez> mvo, is that a known issue? ^\n<mvo> fgimenez: not a know issue :(\n<fgimenez> mvo, i'll try to check again and ping you back, even more after sudo ifconfig eth0 up it only has a ipv6 address\n<Chipaca> fgimenez: not any eth0, or not ipv4?\n<Chipaca> ah\n<fgimenez> Chipaca, only lo\n<Chipaca> fgimenez: \"ifconfig eth0 up\", or ifup eth0?\n<Chipaca> fgimenez: what do you have in /etc/network/interfaces.d?\n<fgimenez> Chipaca, eth0 with: \"allow-hotpug eth0\\niface eth0 inet dhcp\"\n<Chipaca> fgimenez: and \"sudo journalctl -x\"?\n<Chipaca> fgimenez: anything red in that? :)\n<mvo> fgimenez: so it might be the new kernel http://people.canonical.com/~ogra/core-image-stats/vivid/20151013.1.changes\n<fgimenez> Chipaca, :) a few about ACPI, EXT4-fs and pkcsslotd, I also get http://paste.ubuntu.com/12771951/\n<mvo> Chipaca: hm, I just upgraded rolling and no panic, let me try to reproduce again with the exact versions\n<ogra_> fgimenez, there is actually a \\n in the eth0 file ?\n<fgimenez> ogra_, no, just for displaying it here :)\n<ogra_> ah, k\n<Chipaca> ogra_: excellent question :)\n<ogra_> hah, look ... my test server just started spilling autopilot reboot messages to the console ... it is on 211 ... lets see if it comes up\n<fgimenez> ogra_, latest stable was 185 on edge, right?\n<ogra_> fgimenez, yup\n<Chipaca> gah! map is not a function, it's a keyword :-(\n<fgimenez> ogra_, ok thx, i'll try upgrade and rollback from there\n * ogra_ waits for ogra2 to return ...\n<ogra_> there he is\n<ogra_> so looks like my installed/auto-upgraded server comes up fine with 212\n<ogra_> yep, all up\n<JamesTait> Good morning all; happy Tuesday, and happy Ada Lovelace Day! \u00f0\u009f\u0098\u0083\n<mvo> Chipaca: so r199->201 is a 40mb delta update and I strongly suspect it contains a new kernel *but* for me it did not panic :(\n<mvo> Chipaca: no new kernel, sorry\n<mvo> Chipaca: do you have some more details about the recovery mode you ended up in?\n<Chipaca> mvo: it looks recoverish?\n<Chipaca> mvo: dunno what details there are to be had :)\n<Chipaca> it's a kvm in snapshot mode, so i can drop back to the old thing and redo the update any time\n<Chipaca> (and have, multiple times, and it ends up in emerg mode every time)\n<Chipaca> ah, this might be relevant\n<Chipaca> failed to exec /bin/plymouth\n<mvo> Chipaca: I thnk the pylmouth is a red-herring\n<Chipaca> ok :)\n<mvo> Chipaca: does it tell you why its in recovery mode? or is it because of plymouth and its not a red-herring at all :) ?\n<Chipaca> ah, charset not found\n<mvo> Chipaca: ha!\n<Chipaca> failed to mount /boot/efi\n<mvo> Chipaca: so that indicates that the kernel has changed but no modules\n<Chipaca> because charset not found\n<mvo> Chipaca: so a new kernel but no modules, or rather, the filesystem has a new kernel abi and the old kernel is booted which then can not load the nls8859-1 module\n<ogra_> someone dropped vfat stuff ?\n<ogra_> it shouldnt be a module anymore\n * ogra_ asked for that ages ago \n<mvo> Chipaca: can you inspect the filesystem?\n<Chipaca> mvo: sure, what do i look for?\n<mvo> Chipaca: i.e. md5sums of /boot/grub/{a,b}/*\n<Chipaca> let me see if i can bring up ssh\n<mvo> Chipaca: and \"ls /lib/modules/ /writable/cache/system/\"\n<mvo> Chipaca: I actually suspect just 199->201 is not enough, something like ?->199->201, i.e. old-kernel->new->new maybe?\n<ogra_> (amd64)ogra@aleph2:~$ lsmod |grep vfat\n<ogra_> (amd64)ogra@aleph2:~$ cat /proc/filesystems |grep fat\n<ogra_> \tvfat\n<Chipaca> trying to bring up ssh froze stuff (?)\n<Chipaca> ogra_: what about nls\n<Chipaca> ogra_: problem isn't vfat\n<ogra_> nls8859-1 really needs to be compiled in, givcen that vaft is too\n<mvo> yeah, its nls8859\n<ogra_> i'm not doubting that :)\n<mvo> :)\n<ogra_> but vfat is useless without nls8859, so it needs to be compiled in too\n<mvo> all good, well, there is a bug in our code somewhere I think\n * mvo nods\n<Chipaca> where was the kernel config stored?\n<ogra_> (though it helps finding module issues :P )\n<ogra_> Chipaca, in boot (if you are lucky and the kernel is the same as in the device tarball(\n<Chipaca> mvo: before the reboot: http://pastebin.ubuntu.com/12772258/\n<Chipaca> ogra_: where in boot?\n<mvo> Chipaca: what does the module dirs look like?\n<ogra_> Chipaca, in /boot\n<Chipaca> $ ls /lib/modules/\n<Chipaca> 4.2.0-16-generic\n<Chipaca> $ ls /boot/\n<ogra_> oh !\n<Chipaca> efi  grub\n<ogra_> (amd64)ogra@aleph2:~$ ls /boot/\n<ogra_> System.map-3.19.0-31-generic  efi   initrd.img-3.19.0-31-generic  vmlinuz-3.19.0-31-generic.efi.signed\n<ogra_> abi-3.19.0-31-generic         grub  vmlinuz-3.19.0-31-generic\n<mvo> Chipaca: and the other one? /writable/cache ?\n<ogra_> no config anymore ?\n<mvo> Chipaca: and the other one? /writable/cache/system/lib/modules ?\n<Chipaca> $ ls /writable/cache/system/lib/modules/\n<Chipaca> 4.2.0-14-generic\n<mvo> Chipaca: so that is before the reboot?\n<Chipaca> yes\n<mvo> Chipaca: what is the content  /writable/cache/system/etc/system-image/channel.ini?\n<mvo> Chipaca: and /etc/system-image/channel.ini ?\n<mvo> Chipaca: so I'm super confused, /lib/modules is different on a/b but the kernel is the same but also the \"other\" parition has a lower version for the kernel modules than your current partition\n<Chipaca> mvo: http://pastebin.ubuntu.com/12772276/\n<mvo> Chipaca: thats puzzling\n<mvo> Chipaca: thanks, so other looks correct and yet it has the modules for 4.2.0-14-generic ?\n<mvo> Chipaca: it explains the failure, but how the systemd ended up in that state is the interessting part now :)\n<mvo> Chipaca: does it make sense so far? what I'm saying?\n<Chipaca> mvo: new system has .16 kernel and .14 modules --> how can it i don't even\n<Chipaca> mvo: makes sense to me\n<mvo> Chipaca: yeah, it does not make any sense, do you still have content in /writable/cache ? i.e. the delta update?\n<mvo> Chipaca: the delta update files?\n<mvo> Chipaca: so one theory might be that the delta update used the wrong base, e.g. \"other\" was \"185\" but the delta update used soemthing later that did no include the kernel change in the filesystem which is still a weak theory because the kernel itself was part of the delta\n<Chipaca> mvo: where in /writable/cache should i have content?\n<Chipaca> i mean, there's /writable/cache/system :)\n<Chipaca> let me start over, and see what system-image-cli has to say for itself\n<Chipaca> $ sudo system-image-cli -n\n<Chipaca> Upgrade path is 200:201\n<mvo> Chipaca: yeah, thanks. if you still have the state of before the upgrade, thats awsome, what revno was \"other\" before?\n<Chipaca> yes, i do still have the before-upgrade; always do kvm -snapshot here\n<mvo> Chipaca: we dtive system-image by pointing it to the \"other\" parition so that we get the delta download relative to this \"other\"\n<Chipaca> because i can commit a snapshot, but can't uncommit a non-snapshot :)\n<mvo> :)\n<Chipaca> version_detail: ubuntu=20151008,raw-device=20151008,version=197\n<Chipaca> that's /writable/cache/system/etc/system-image/channel.ini before the upgrade\n<Chipaca> (i mean, it has all the other stuff, but that's got the info you want)\n<mvo> Chipaca: could you run system-image-cli -C /writable/cache/system/etc/system-image -n\n<mvo> Chipaca: thats what snappy will do?\n<mvo> Chipaca: well, it will not use \"-n\"\n<Chipaca> I can, but you might not like it\n<mvo> Chipaca: this smells like a but in s-i or a bug in the way we drive it\n<Chipaca> $ sudo system-image-cli -C /writable/cache/system/etc/system-image -n\n<Chipaca> Already up-to-date\n<mvo> Chipaca: oh? well, that would explain the issue, but \u00e2\u0080\u00a6 but?\n<mvo> why does it think its up-to-date?\n<Chipaca> mvo: wait, we get to blame barry for this?\n<Chipaca> that's always a win!\n<mvo> Chipaca: do you have --debug or something in s-i?\n<mvo> Chipaca: well, we better have hard data to backup this claim ;)\n<Chipaca> http://pastebin.ubuntu.com/12772321/\n<mvo> Chipaca: hm, I hope this getprop failure is not the issue :(\n<mvo> Chipaca: what does \"sudo system-image-cli -n -v\" yield?\n<Chipaca> i'm assuming that's part of the \"check you're on an ubuntu phone\" code :)\n<mvo> Chipaca: ups, coud you set the -C dir to \"/writable/cache/system/etc/system-image/config.d\" instead?\n<mvo> Chipaca: sorry, I think I pasted you the wrong dir\n<Chipaca> http://pastebin.ubuntu.com/12772343/\n<mvo> ta\n<Chipaca> http://pastebin.ubuntu.com/12772348/\n<Chipaca> \u00e2\u0080\u009cUpgrade path is 201\u00e2\u0080\u009d\n<mvo> Chipaca: I wonder what that means, if it means a full download, we are good, if it means just the 200:201 delta not so much\n<Chipaca> i think a delta is written m:n\n<mvo> Chipaca: if you run it with \"--no-apply\" instead of \"-n\", what does it download?\n<Chipaca> as in the 200:201 you get without -C\n<mvo> the download will end up in /writable/cache\n<Chipaca> \thttp://system-image.ubuntu.com/ubuntu-core/rolling/edge/generic_amd64/version-201.tar.xz.asc -> /writable/cache/version-201.tar.xz.asc\n<mvo> i.e. sudo system-image-cli -C /writable/cache/system/etc/system-image/config.d/ -g -v\n<Chipaca> tadaa\n<Chipaca> http://pastebin.ubuntu.com/12772377/\n<Chipaca> includes: device-2bc2ee8db5cd33e143438171da503c2ce56eeb49adc0617872b9a099d18c2288.tar.xz\n<Chipaca> and that file has lib/modules/4.2.0-16-generic\n<Chipaca> and vmlinuz 4.2.0.16\n<Chipaca> wait, that shouldn't be a problem :)\n<mvo> Chipaca: ok, so the next suspect is the upgrader then that applies the upgrade\n<Chipaca> mvo: is that also system-image?\n<mvo> Chipaca: \"sudo ubuntu-core-upgrade --dry-run --leave-files\" maybe?\n<mvo> Chipaca: \"sudo ubuntu-core-upgrade --dry-run --leave-files --debug\" maybe?\n<Chipaca> Failed to read command file: None\n<mvo> Chipaca: is there a ubuntu_command file in /writable/cache ?\n<Chipaca> mvo: i could send you the kvm image, fwiw :)\n<mvo> Chipaca: that might be easier indeed\n<Chipaca> http://pastebin.ubuntu.com/12772390/\n<mvo> Chipaca: less learning expereince for you :P\n<Chipaca> indeed\n<Chipaca> which is why i'm not stopping you :)\n<mvo> Chipaca: I'm kidding, I will be so happy when this part gets replaced\n<longsleep> Does it make sense to test for future breakage anything other than 15.04/edge (which works fine). Should i test rolling/edge from time to time?\n<mvo> Chipaca: but maybe you will appreciate it more this way when we replace it\n<mvo> Chipaca: \"sudo ubuntu-core-upgrade --dry-run --leave-files --debug /writable/cache/ubuntu_command\"\n<mvo> Chipaca: sorry for my mistaken cmdline earlier\n<mvo> Chipaca: and feel free to upload your image to people.c.c or something and I can poke it harder\n<mvo> Chipaca: this command should give us some hints\n<Chipaca> ubuntu-core-upgrade: error: argument --debug: invalid int value: '/writable/cache/ubuntu_command'\n<Chipaca> :)\n * Chipaca goes with 9\n<Chipaca> whoa, that was verbose. doing over.\n<mvo> Chipaca: I get some lunch but will read scrollback\n<Chipaca> mvo: stderr: http://pastebin.ubuntu.com/12772425/\n<Chipaca> mvo: stdout looks like a tar listing, can upload if needed\n<mvo> Chipaca: hm, if you run that without --dry-run, does it unpack the right lib/modules? I suspect it will and this means something is missing here :(\n<mvo> Chipaca: i.e. somewhere what we did is not what snappy did\n * mvo really lunches first\n<olli> gm\n<Chipaca> mvo: indeed, that worked perfectly\n<Chipaca> doing over with strace\n<mvo> Chipaca: yeah, lets figure out what it execve()s :/\n<sergiusens> morning\n<Chipaca> olli: sergiusens: mo'in\n * sergiusens has a nasty cold since yesterday\n<Chipaca> so does the uk\n<Chipaca> they're calling it \"autumn\"\n<sergiusens> Chipaca, it snowed in the Altas Cumbres yesterday!\n<sergiusens> we are enjoying spring ;-)\n<Chipaca> wow, slightly late this year\n<Chipaca> usually it's september it snows :)\n<Chipaca> whaaaa\n<Chipaca> ok, lots of trace files :)\n<Chipaca> hah, well, that's something that went wrong\n<Chipaca> /tmp/trace.1080:execve(\"/usr/bin/system-image-cli\", [\"system-image-cli\", \"--progress\", \"json\", \"-C\", \"/etc/system-image/config.d\"], [/* 23 vars */]) = 0\n<Chipaca> and that happens if it can't read the one in /writable/cache\n<Chipaca> $ ls -l /writable/cache/system/etc/system-image/config.d/00_default.ini\n<Chipaca> lrwxrwxrwx 1 root root 13 Oct 13 11:04 /writable/cache/system/etc/system-image/config.d/00_default.ini -> ../client.ini\n<Chipaca> puzzled, now\n<ogra_> why ?\n<ogra_> the old s-i-cli used /etc/system-image/client.ini by default, the new one uses the files under /etc/system-image/config.d/\n<Chipaca> i think this is related to a bug barry already fixed\n<Chipaca> with system-image not really requiring config to work\n<Chipaca> but we still treat it like it does\n<Chipaca> and system-image used to crash with a symlink, but he fixed taht\n<Chipaca> ogra_: in any case, it's doing the wrong update and getting into trouble\n * olli waves at Chipaca\n<Chipaca> i'm not sure when using the wrong config for system image is the right thing, but this isn't one of those times :)\n<ogra_> well, whats inside that client.ini  ?\n<ogra_> it should point to the new image\n<Chipaca> it's not there ^\n<Chipaca> broken symlink\n<ogra_> ah !\n<ogra_> it should be there\n<Chipaca> it refuses to bow to your imperialist views on existentialism\n<ogra_> http://paste.ubuntu.com/12772505/\n<Chipaca> i don't believe it's necessary any more\n<ogra_> (note that archive_master lives elsewhere in rolling, the above is stable)\n<Chipaca> k\n<ogra_> i thik it is still necessary\n * Chipaca buys ogra_ a box of chocolates of the wrong ABI\n<ogra_> haha\n<mvo> Chipaca: ha! so 00_default.ini is a dangling symlink on wily. nice catch. its not on 15.04 fortunately there is a client.ini there but  I think its there because I put it back\n<mvo> Chipaca: so the fix is to test for 01_channel.ini I guess (?) or 20_snappy.ini which is safer\n<mvo> Chipaca: nice work tracking this one down \\o/\n<Chipaca> what are we actually testing for?\n<mvo> Chipaca: that the other partition is \"valid\" (no-empty)\n<mvo> Chipaca: see systemimage.go:222\n * mvo needs to vanish again for some seconds\n<Chipaca> mvo: if the question is \"can system-image build an upgrade path from this\", then maybe we should check with barry and update the check\n<Chipaca> mvo: there's an XXX just below where you ponted me at in systemimage.go that points at potential trouble; it doesn't say *why* it does two different checks :-/\n<mvo> Chipaca: it otherIsEmpty() contains some info, no?\n<mvo> Chipaca: i.e. we need(ed) in the old days both client and channnel config, nowdays we don't need a client config but we still need a snappy specific config\n<Chipaca> ah, so it does, so it does\n<mvo> so checking for 20_snappy.ini seems prudent (unless I miss something)\n<longsleep> When testing snappy on bare metal, how many sdcards have you folks worn out already? These things drive me crazy eventually :/\n<Chipaca> longsleep: hard drives are a consumable; sd cards more so\n<mvo> fgimenez: how big is /boot now with the alpha images and the signed kernels?\n<fgimenez> mvo, let me check\n<longsleep> Chipaca: yeah, i am just wondering if this happens to other people as well\n<longsleep> i mean, flash 100x, the odds that the card is borked seem to be big\n<Chipaca> longsleep: yes. Fortunately update is usually good enough you only rarely need a full reflash, and that helps\n<mvo> longsleep: how many cards did you loose already? and how often does it happen?\n<longsleep> mvo: this is now the third card out of 5 which stopped working since i started working with snappy in march\n<Chipaca> longsleep: how often do you reflash?\n<mvo> longsleep: all the same batch of cards? just curious if there are differences between manufactors etc\n<mvo> longsleep: seems like a lot indeed\n<longsleep> Chipaca: sure they will last longer for normal use case - though the general quality of the sdcards seem like shit, i mean these are all sandisk cards - the normal ones though. The exreme ones seem to be more durable.\n<longsleep> mvo: yes those who give i/o errors are from the same batch\n<Chipaca> longsleep: like these? http://martybugs.net/articles/images/sandisk_box_large.jpg\n<Chipaca> ah, those are cf\n<longsleep> Chipaca: around 100 times\n<Chipaca> http://ecx.images-amazon.com/images/I/61ezDfz50AL.jpg\n<longsleep> Chipaca: yes those\n<Chipaca> longsleep: check they aren't fake sandisks\n<longsleep> and i got a broken one from transcend as well\n<beuno> longsleep, FWIW, I trashed an SD card in a single night when I wrote a small app that took pictures when it detected movement, and it rained that night  :)   (it was pointing out the window)\n<longsleep> beuno: yeah - thats why i ask here, if this is a common thing others must have dead sdcards as well\n<longsleep> or do you all get the expensive ones?\n<fgimenez> mvo, 76M in bbb, 131M in amd64\n<longsleep> Chipaca: hard to tell if its a fake\n<Chipaca> longsleep: yep, seems to vary a lot\n<longsleep> Chipaca: could be, but they worked fine half a year full capacity and all. So i find it unlikely\n<Chipaca> longsleep: ah, ok :)\n<Chipaca> longsleep: these days i mostly just get the expensive ones\n<Chipaca> longsleep: but if i were working with them in bulk i'd probably be ok wiht the cheaper ones\n<longsleep> Chipaca: right, thats why i am testing the cheap ones\n<longsleep> but the Transcend one which broke today is an expensive one, only 8GB though\n<longsleep> they give 30 years limited guarantee on that one\n<longsleep> haha they do not give that guarantee for write intensive applications\n<Chipaca> i'd be tempted to get it rma'd :)\n<longsleep> they explicitly list \"servers\" as write intensive or continuous use case in their warranty agreement\n<longsleep> so basically they know that the card can just fail when used in a server\n<longsleep> and that is for a card which is called \"Premium\"\n<mvo> Chipaca: do we have a bug for the upgrade issue or should we have one? I want to ensure its tracked because I will likely forget about it because of release and all this other stuff that is going on\n<Chipaca> mvo: filing i tnow\n<Chipaca> mvo: do you know why it failed for me and not for you?\n<beuno> spite?\n<mvo> Chipaca: \\o/ please add the relevant bits from irc so that we know how to fix it too :)\n<mvo> Chipaca: no idea yet, in a meeting right now so I can't check, will check tonight\n<Chipaca> beuno: +1\n<Chipaca> mvo: bug 1505682\n<ubottu> bug 1505682 in Snappy \"upgrade wily/edge 199->201 failed\" [Undecided,New] https://launchpad.net/bugs/1505682\n<Chipaca> mvo: let me know if i should expand it any\n<mvo> Chipaca: looks good\n<Chipaca> and wily.img.xz made it up\n<sergiusens> elopio, can you look at https://code.launchpad.net/~sergiusens/snapcraft/1500902/+merge/273444 again? or are we good already?\n<elopio> sergiusens: we are good.\n<sergiusens> elopio, \\o/\n<elopio> I saw Chipaca's +1 but forgot to push mine.\n<barry> mvo: hi.  what's up?\n<mvo> hey barry, we tracked down  a issue in snappy to a broken /etc/system-image/config.d/00_default.ini symlink. this may be snappy specific I need to look further into it\n<barry> mvo: cool.  si 3.0.2 in wily at least no longer crashes on dangling symlinks, but i don't think we ever tracked down why the symlink is dangling\n<barry> (don't think it is on touch)\n<mvo> barry: ok, thanks! thats good to know\n * mvo adds it to the bug\n<barry> mvo: i'm around all day so ping me if needed\n<mvo> barry: thanks, busy with $stuff today :( but much appreciated that offer\n<barry> mvo: i hear ya :)\n<plars> ogra_:  is pi2_0.15_all.snap still available somewhere?\n<ogra_> sure\n<ogra_> there is an achive folder in the download dir\n<plars> ogra_: got it, thanks!\n<elopio> Chipaca: are you getting a vet error on trunk?\n<Chipaca> elopio: negatory\n<Chipaca> well, i could get *actual* trunk\n<Chipaca> and see\n<Chipaca> give me a mo'\n<sergiusens> Chipaca, a month?\n<ogra_> no, he typoed mvo\n<Chipaca> yes, tests are slow\n<elopio> Chipaca: http://pastebin.ubuntu.com/12773266/\n<Chipaca> definitely not getting that\n<Chipaca> and would be disappointed with everything if i did\n<mvo> ogra_: heh\n<elopio> tarmac is not getting that either, so might be a wily thing.\n<Chipaca> i'm on wily\n<Chipaca> but haven't updated\n<Chipaca> on it now\n<Chipaca> elopio: i guess i can rewrite that test to use reflect instead of the lazier printf\n<elopio> Chipaca: that might be clearer, because I'm not sure what you are testing there.\n<Chipaca> elopio: pointer equality\n<Chipaca> elopio: i want to know they're the same *actual object*\n<Chipaca> elopio: but go won't let you compare functions, it protects you from thinking two functions that compare different give different values for the same inputs\n<Chipaca> or somehting, i don't know why it doesn't let you\n<elopio> Chipaca: got it. It might be nicer to actually excercise that d.router.NotFoundHandler instead of just checking the references.\n<elopio> but I'm not sure how hard it would be to write that test.\n<elopio> and I don't understand the vet error anyway. I'm upgrading here too.\n<Chipaca> elopio: updated, still not getting that\n<Chipaca> elopio: your vet probably comes from source\n<Guest42341> omg what am i doing here???\n<Chipaca> ogra_: https://pastebin.canonical.com/141658/ <- know issue of rpi2 on rolling?\n * ogra_ grumbles about 2fa\n<Chipaca> ogra_: sorry, comes from somebody working on server side, always 2fa'd in :)\n<ogra_> definitely not known, no\n<Chipaca> ogra_: anything verterok could try?\n<mvo> Chipaca: \"failed to find user uid/gid\"  hu? no clickpkg or snappypkg user on this system?\n<ogra_> works flawless here\n<Chipaca> um\n<verterok> Chipaca: o/\n<Chipaca> verterok: you did install the tools ppa, didn't you?\n<ogra_> (copy pasted the command)\n<Chipaca> mvo: i'd guess an old u-d-f\n<Chipaca> pre the switch\n<ogra_> 0.31-0ubuntu1\n<ogra_> is what i use atm\n<Chipaca> verterok: ppa:snappy-dev/tools is what i mean\n<verterok> Chipaca: I have the ppa, checking the installed version\n<Chipaca> ah, ok\n<ogra_> newer should work too\n<verterok> Chipaca: I have http://ppa.launchpad.net/snappy-dev/beta/ubuntu\n * Chipaca also builds just in case\n<Chipaca> verterok: ah! no, not that one\n<Chipaca> i thought we'd deleted that one already\n<verterok> Chipaca: ok, removing and adding the new one\n<Chipaca> that has 0.23\n<verterok> yup\n<ogra_> http://paste.ubuntu.com/12773485/\n<Chipaca> tools has 0.31\n<ogra_> just for reference\n<ogra_> sergiusens, can we tunr off that azure warning for RPi builds ?\n<Chipaca> ogra_: http://pastebin.ubuntu.com/12773489/\n<ogra_> wut ?!?\n<Chipaca> ogra_: $ sudo tail -n1 /etc/sudoers\n<Chipaca> Defaults\tinsults\n<Chipaca> ogra_: just in case you thought sudo was all serious and only about security\n<ogra_> hah\n<qengho> I'm accustomed to, and like, having only a debian/ directory in source control and giving that to some kind of System that creates deb packages in architectures I don't own. Am I right in thinking that, in snappy, there are about five things missing from that kind of workflow?\n<Chipaca> qengho: not sure what you mean, but I'd start with \"no, you are not right\"\n<Chipaca> qengho: for example, lp:~snappy-dev/snappy-hub/snappy-examples has a bunch of sources of snaps in source control\n<qengho> Thanks, Chipaca. I'll look.\n<qengho> Okay, so cross-compiling is normal and expected, in this new world. And fabricating the programs for a package involves knowing something of the package, in this world too; there is no debian/rules kind of standard interface. I wish those facts were in the docs on the web site.\n<sergiusens> qengho, you want a snapcraft.yaml which defines everything, launchpad will build snaps from that\n<sergiusens> qengho, it is not open to public building just yet though\n<qengho> Huh.\n<sergiusens> qengho, more context maybe?\n<sergiusens> or huh to your huh ;-)\n<ogra_> huh huh\n<qengho> Okay, I've read most of the web site, and haven't heard of snapcraft yet.\n<sergiusens> qengho, https://developer.ubuntu.com/en/snappy/snapcraft/\n<qengho> sergiusens: I think that deserves to be merged into guides, pretty early.\n<Facu> Hi all! Question... we're installing the standard image in a raspberry pi 2... all works ok, and we can see the raspi in 'webdm.local'\n<Facu> it's nice, it works\n<sergiusens> qengho, right, Thibaut is working on that with dholbach\n<Facu> however, we want to start a *second* one, how we can change that name so we don't get BOTH trying to use webdm.local?\n<Facu> thanks!!\n<sergiusens> Facu, with snappy config and changing the hostname I think/hope\n<verterok> Chipaca: FYI, now its working  (building rolling)\n<qengho> Facu: this isn't a snappy answer, but: mdns should append numbers to avoid name collisions.   webdm.local, webdm1.local, webdm2.local\n<Facu> sergiusens, that is using u-d-f, or after it?\n<Facu> qengho, and there you don't know which one is which one :) (it will depend on boot order, right?)\n<sergiusens> Facu, after, on a running image\n<sergiusens> qengho, right there is a plan\n<sergiusens> to be fair, webdm needs lots of catching up to do\n<Facu> sergiusens, but to do that, I'd need to ssh into the raspi, and for that I'd need the IP ;)\n<qengho> Facu: Something like that. Also, there's probably a hyphen before the number, now that I think about it.\n<sergiusens> Facu, it might just be easier to connect your rpi2 to your network socket in your laptop and setup nm to share the connection\n<ogra_> sergiusens, i dont think webdm picks up the hostname\n<ogra_> it still uses webdm.local in any case\n<ogra_> (unless something changed recently)\n<Chipaca> ogra_: it only uses webdm if hostname is localhost\n<Chipaca> you need to restart the service though\n<Chipaca> so\n<ogra_> oh, i didnt know that !\n<Chipaca> echo \"config: {ubuntu-core: {hostname: potato}}\" | sudo snappy config ubuntu-core - | grep hostname\n<Chipaca> sudo snappy service restart\n<Chipaca> Facu: ^ those two should get you sorted\n<ogra_> creeezie ... it works !\n<sergiusens> ogra_, imagine that ;-)\n<sergiusens> ogra_, it was done for MWC fwiw\n<ogra_> ah\n<Facu> Chipaca, do you know if I can choose a different hostname at the u-d-f step?\n<ogra_> not at the u-d-f step\n<Chipaca> Facu: not unless you want to write your own oem snap\n<ogra_> you can pre-define settings inside the oem snap (but that would mean you need to use your own and are bound to always use --developer-mode )\n<Chipaca> ogra_: jinx, i guess\n<Facu> we're using developer mode already\n<Facu> ok\n<ogra_> :)\n<Facu> Chipaca, ogra_, sergiusens, qengho, thanks!!\n<elopio> fgimenez: so, what are we testing? 15.04 alpha?\n<fgimenez> elopio, yep, 14 for amd64 and 13 for armhf are the candidates\n<elopio> fgimenez: ok. And we are only missing some exploratory to see if we catch the ip issue again?\n<fgimenez> elopio, yes, the suite is passing on both (with eventual failures of the rollback test, but that's a test problem), i've tried -rollback and -update on amd64 too\n<fgimenez> elopio, also 13->14->13->14... oon amd64, i'm currently doing the same for bbb\n<elopio> fgimenez: awesome.\n<fgimenez> elopio, there's also this branch https://code.launchpad.net/~fgimenez/snappy/fix-activate-test, activate is not present in the rc images\n<fgimenez> elopio, and setupsuite does funny things on reboot :)\n<elopio> fgimenez: yeah, the setup has become scary\n<verterok> Chipaca, ogra_: hey, it's working now, old tools was the reason of my error.\n<verterok> Chipaca, ogra_: We are now seeing that the dhcp client is not starting on boot (no IP assigned to the device)...in case it's relevant let me know if you need more info about it\n<ogra_> verterok, weird, works here\n<Chipaca> verterok: more info plz :)\n<ogra_> do you use snapy config to modify the eth0 settings somehow ?\n<verterok> ogra_: no, we are sideloading a test snap. no other changes besides that\n<verterok> Chipaca, ogra_: looking at syslog\n<ogra_> oh, wait, you are using rolling\n<ogra_> that can indeed have unexpected breakage\n<elopio> fgimenez: oh, sorry, we were in the middle of something in the meeting.\n<verterok> ogra_: yes, we are on rolling\n<ogra_> (at any time)\n<elopio> fgimenez: ah, ovmf, this is the card: https://trello.com/c/I1BSZ6iV/130-run-tests-for-snappy-personal-and-uefi-boot\n<fgimenez> elopio, my connection was ugly, we can join again\n<verterok> yup, we know :)\n<elopio> fgimenez: no, don't worry. That was the last thing I wanted to mention.\n<elopio> we need to give it a try.\n<elopio> sergiusens: did you uplad the example snap?\n<elopio> *upload\n<fgimenez> elopio, ok thanks, there's the link you mentioned\n<sergiusens> elopio, oh sorry, no; which one was it?\n<elopio> sergiusens: bash config.\n<sergiusens> elopio, hah, you didn't update the version ;-\n<sergiusens> ;-)\n<elopio> sergiusens: I haven't made any changes to it.\n<sergiusens> elopio, ah, so it is a new package?\n<elopio> sergiusens: yes, it's not in the store.\n<sergiusens> elopio, uploaded\n<fgimenez> nice evening everyone o/\n<elopio> sergiusens: thanks!\n<tasdomas> hi\n<tasdomas> a quick question regarding hw-assign\n<tasdomas> let's say my snap specifies a service that requires access to a device (a pi-glow in this instance)\n<tasdomas> when I install it, the service does not have access\n<tasdomas> but even after performing hw-assign, it seems I need to restart the service for the settings to take effect\n<tasdomas> is there a nicer way of doing this?\n<ogra_> tasdomas, sadly not, there is a bug open that services should be auto-restarted though\n<jdstrand> beuno: hey, this isn't urgent-- at the next store rollout can you pull in the latest review tools?\n#snappy 2015-10-14\n<dholbach> good morning\n<tasdomas> morning\n<tasdomas> if a service requires access to a device, does it need to be restarted after hw-assign?\n<tasdomas> or is there a more elegant solution?\n<tasdomas> I noticed that the webcam-demo basically runs an executable periodically to retrieve an image, so I guess it does not have that problem\n<fgimenez> good morning\n<mvo> Chipaca: hi, a quick question about the rest api, i remember in some versions the ubuntu-core snap was not displayed, there was a question about this and I wonder if I misremember and if not if its fixed ?\n<tasdomas> does a service need to be restarted after running hw-assign for its package?\n<mvo> tasdomas: yes, this needs to be done manually at this point iirc\n<tasdomas> mvo, I see - thanks\n<tasdomas> mvo, took me a while to figure out why the webcam-demo does not need this\n<mvo> tasdomas: sorry, bug #1484645 (https://bugs.launchpad.net/snappy/+bug/1484645)\n<ubottu> Launchpad bug 1484645 in Snappy \"Snappy hw-assign doesn't restart affected services\" [Medium,Triaged]\n<mvo> maybe we need to raise the priority of this one\n<mvo> or at least print some warning as a stop-gap\n<JamesTait> Good morning all; happy Wednesday, and happy World Maths Day! \u00f0\u009f\u0098\u0083\n<Chipaca> mvo: core is always displayed in the rest api, afaik\n<Chipaca> mvo: i believe the question was about when it would be displayed in the CPI\n<mvo> Chipaca: ok, in this case the question needs more context\n<mvo> Chipaca: aha, sorry, then I misread it, you should be in the CC so feel free to correct that :)\n<Guest42341> omg how do i end up on this channel???\n<tasdomas> is the source for the snappy mqtt package available anywhere?\n<Chipaca> what do you call a thing that looks like a mutex, but whose lock/unlock methods take a string and it only locks things with the same string?\n<Chipaca> i'd call it a mutex tree, except it's not a tree, it's more like a bush :)\n<mvo> Chipaca: sounds like a MutexManager to me\n<mvo> Chipaca: if I don't know what its good for I call it a manager :P\n<Chipaca> noted :)\n<mvo> Chipaca: you could of course make it something like a factory, i.e. GiveMeMutex(string) and it either gives you a ref for a new one or a existing one\n<Chipaca> mvo: yes, but there's a two-level thing going on that i'd lose\n<Chipaca> um, maybe\n<Chipaca> hm\n<Chipaca> mvo: some operations mutate the state of everything, so they need to lock a \"root\" mutex, whereas most things just read or mutate things on a leaf, so they *rlock* the root mutex and lock/rlock the leaf mutex\n<Chipaca> mvo: i'll push it as is, you tell me if a name pops out at you :)\n<Chipaca> mvo: http://bazaar.launchpad.net/~chipaca/snappy/lock-ness/revision/771#daemon/mutex/mutex.go\n<beuno> jdstrand, ack\n<popey> dholbach: heya, do we have a simple snapcraft example which caters for the \"I have a simple C / C++ program I want to build and package as a snap?\n<dholbach> popey, https://bazaar.launchpad.net/~snappy-dev/snapcraft/core/files/head:/examples/libpipeline/\n<popey> ta!\n<dholbach> sergiusens, tedg: about the Snappy Clinic?\n<dholbach> what do you think?\n<dholbach> I mean on Friday\n<sergiusens> dholbach, didn't I reply for Monday? :-)\n<dholbach> oh?\n<dholbach> sergiusens, ok... shall we have a chat on Friday then to talk about a propoer script?\n<dholbach> tedg, ^\n<sergiusens> dholbach, that sounds like a good plan\n<dholbach> awesome... which time? 14 UTC?\n<sergiusens> dholbach, 14 sounds good\n<dholbach> rock and roll - I'll pencil something into the calendar\n<sergiusens> dholbach, I might have a baby in arms potentially crying at that time, but for something private should be fine ;-)\n<dholbach> :-)\n * dholbach hugs sergiusens\n<ogra_> must be the mate overdose if it cries :)\n * sergiusens feels the hug and hugs back\n<sergiusens> ogra_, probably, but from the mother ;)\n<ogra_> haha\n<rickspencer3> mvo, did I see \"hw-assign\" fixes in your snappy stable release announcement? ;)\n<mvo> rickspencer3: yes, the override bug should be fixed in r7\n<rickspencer3> mvo, is that the one that made me have to edit the apparmor profile?\n<mvo> rickspencer3: yes, I believe that this one is fixed\n<rickspencer3> \\o/\n * Chipaca -> lunch\n<dholbach> mvo, ogra: got much to discuss for the call today - if not, I guess we can skip it?\n<ogra_> dholbach, nothing from me atm\n<dholbach> all right, let's skip it then\n<dholbach> from what I gathered mvo is going to be busy as well :)\n<ogra_> nah, he just pretends to :P\n * ogra_ upgrades to snapcraft 0.3 ... lets see if my snaps still build \n<ogra_> ogra@styx:~/Devel/branches/ircproxy$ snapcraft\n<ogra_> DEPRECATED: Use \"plugin\" instead of \"type\"\n<ogra_> Pulling ircproxy\n<ogra_> ...\n<ogra_> Staging ircproxy\n<ogra_> Snapping ircproxy\n<ogra_> Generated 'ircproxy_0.1_amd64.snap' snap\n<ogra_> ogra@styx:~/Devel/branches/ircproxy$\n<ogra_> \\o/\n * ogra_ changes \"type\" to \"plugin\" \n<mvo> dholbach: skip\n<ogra_> sergiusens, well done !!\n<sergiusens> ogra_, lol, at least that works :-P\n * sergiusens wonders where zyga is\n<sergiusens> it is the perfect moment to switch to git\n<ogra_> oh, is that better to do if zyga isnt around ?\n * ogra_ didnt know \n<sergiusens> lol\n<sergiusens> ogra_, he said he'd help with all the automation :-)\n<ogra_> ah\n<tedg> dholbach: sergiusens: sounds good\n<dholbach> cool cool\n<dholbach> sergiusens, tedg: at which time on Monday do you think we should do the Clinic?\n<dholbach> shall we maybe announce it a bit in advance?\n<tedg> If we go too early, people have an opportunity to think up hard questions.\n<tedg> Need to keep them on the edge.\n<dholbach> I'm not sure if that should be a real concern. :-)\n<tedg> Heh\n<dholbach> we're going to get those hard questions soon enough anyway :)\n<tedg> So I'm not particular on time. I guess it'd depend on who we expect the audience to be.\n<tedg> 1400UTC is a bit early for the West Coast US.\n<dholbach> ok\n<tedg> But, not sure if we're looking to include those folks or not.\n<dholbach> the latest I could offer (if you want me in there as well) is 16 UTC\n<dholbach> that's EOD (or near-EOD) for most Europeans, but I guess we could do that\n<tedg> dholbach: I think you'd have a better feel for what works than me or sergiusens\n<tedg> You choose, we'll follow :-)\n<sergiusens> dholbach, 16 utc seems like a good compromise catch all\n<dholbach> ok, let's try it - if it doesn't work, we'll do something different\n<dholbach> I'll send out the announce Thu or Fri - that should be good enough\n<sergiusens> dholbach, we should bounce the times so eventually everyone can join\n<dholbach> nice one! let's talk about that on Friday too then\n * ogra_ has lannding meeting on mondays at 16:00 UTC\n<sergiusens> ogra_, you still go to those?\n<ogra_> yes\n<sergiusens> ogra_, wow, why? :-P\n<ogra_> to help out with image build issues etc\n<ogra_> (and answer questions about plumbing which nobody else can answer anymore)\n<sergiusens> dholbach, btw, did you do your snapcraft dput magic?\n<dholbach> oh ok, no - will do\n<tedg> Did we ever add a logs command to snappy?\n<dholbach> sergiusens, https://launchpad.net/ubuntu/wily/+queue?queue_state=1&queue_text=snapcraft\n<dholbach> sitting in the queue for the release admins\n<ogra_> hmm, what is \"snappy man\" and why does it spill formatting chars to my console ?\n<dholbach> fgimenez, elopio: do we know why http://autopkgtest.ubuntu.com/packages/s/snapcraft/ is failing?\n<dholbach> will 0.3 fix it? :)\n<sergiusens> ogra_, that is what olli wanted, the man page (troff)\n<olli> sergiusens, I never said man or troff\n<ogra_> well, it would be nice if it was actually readable :)\n<olli> I want documentation to go to a website\n<olli> automatically\n<fgimenez> dholbach, according to this https://objectstorage.prodstack4-5.canonical.com/v1/AUTH_77e2ada1e7a84929a74ba3b87153c0ac/autopkgtest-wily/wily/amd64/s/snapcraft/20151005_190657@/log.gz there's a problem with the unit tests, let me check\n<ogra_> the funniest is that i have \"snappy man\" but not \"snappy help\" :)\n<sergiusens> fgimenez, did we disable unit test running from debian/rules?\n<fgimenez> sergiusens, no idea, currently in trunk there's no override there for the tests\n<Chipaca> ogra_: it's because you didn't want to ship troff in core. See what you've done?\n<ogra_> owww ... i didnt realize its my fault ... really sorry then\n * ogra_ seeds man :P\n<Chipaca> :-p\n<fgimenez> sergiusens, the failures are for 0.2.1 http://autopkgtest.ubuntu.com/packages/s/snapcraft/wily/amd64/ no override there either\n<ogra_> we just need to tell people to then run: snappy man|man\n<Chipaca> |man -l -\n<ogra_> yeah\n<sergiusens> fgimenez, you are talking about autopackage tests, I'm talking about the regular debuild\n<fgimenez> sergiusens, yes, in debian/rules there's only an override for dh_compress http://bazaar.launchpad.net/~snappy-dev/snapcraft/0.2/view/head:/debian/rules, the tests are not disabled there, but you are right, the errors in https://objectstorage.prodstack4-5.canonical.com/v1/AUTH_77e2ada1e7a84929a74ba3b87153c0ac/autopkgtest-wily/wily/amd64/s/snapcraft/20151005_190657@/log.gz come from adt-run while executing runtests\n<sergiusens> fgimenez, dholbach so unit tests aren't running from package build, I fixed it and reproduced the error\n<sergiusens> fails during package build, works fine outside of it\n<plars> ogra_: I'm bulding rolling/edge images for rpi2 with something like: \"core rolling --oem pi2.canonical --device raspi2_armhf --enable-ssh --developer-mode --channel edge\" and they seem to stop working at ubuntu-core rev 9, but 8 worked. Any idea what changed between those two that might have broken things?\n<fgimenez> sergiusens, great, thx :)\n<plars> ogra_: similarly, on generic_armhf, 186 works but 187 does not\n<ogra_> plars, rpi started using the new uboot setup between 8 and 9\n<plars> ogra_: what's different about it?\n<ogra_> http://system-image.ubuntu.com/ubuntu-core/rolling/edge/raspi2_armhf/version-8.json (device=0.16 ...) http://system-image.ubuntu.com/ubuntu-core/rolling/edge/raspi2_armhf/version-9.json (device=0.16-1 ...)\n<ogra_> i have to look that up\n<ogra_> oh, that was just the addition of linux-fiirmware i think\n<ogra_> shouldnt affect booting\n<ogra_> and it wouldnt affect amd64 indeed\n<plars> ogra_: it will very likely affect things for me - remember how I have to boot the test images from usb?\n<plars> ogra_: so I'll likely need to make similar changes to uboot that boots from the mmc on our rpi2\n<ogra_> well. i was wrong the uboot change was in 0.15 already\n<ogra_> when we dropped all txt files\n<plars> ogra_: right, this problem is just affecting rpi2, nothing else\n<ogra_> so between 8 and 9 there were only minor kernel adjustments\n<plars> I'm gussing 187 for generic_armhf got the same kernel adjustments?\n<plars> *guessing\n<ogra_> no idea, i dont touch amd64 usually\n<plars> ogra_: I'm not saying amd64\n<ogra_> oh, generic_armhf, sorry, i misread\n<ogra_> might be, i didnt look at BBB for a long time either\n<plars> :)\n<plars> something in those changes broke rpi2 for us\n<ogra_> (last time for the uboot changes but they were far before that)\n<plars> ogra_: bbb works fine\n<plars> rpi2 is completely busted for the way we have to automate it though\n<ogra_> well, both are identical on the uboot level\n<ogra_> both dont use txt files anymore and require editing of uboot.env\n<plars> so either we need some other options for automating (unlikely unless they release a rev of the board with better hardware) or we need to figure out what changed and roll it back\n<ogra_> and both use the same kernel ... with RPi having a set of extra HW patches on top\n<plars> ogra_: I don't expect bbb to break here, we don't have to do this trick to make bbb boot\n<plars> ogra_: bbb boots off the sd card, just as if you had flashed it, because we can boot a stable image off of emmc\n<ogra_> http://people.canonical.com/~ogra/core-image-stats/20151002.changes thats the rootfs changes of 187\n<plars> ogra_: rpi only has one place to boot from, so we have to resort to pushing the new image to usb - did anything with usb perhaps?\n<ogra_> plars, yes, i know, i'm working on a netboot setup for the Pi as discussed with the CI team last week\n<ogra_> hopefully ready on friday\n<plars> ogra_: oh? I didn't hear about this\n<plars> ogra_: they don't tell me anything anymore :)\n<ogra_> you will still need the boot partition intact ... but it then should completely operate from ram and be able to dd a remote image from network\n<ogra_> plars, blame ursual and celso :P\n<ogra_> *ursula\n<Ursinha> me\n<ogra_> plars, anyway, the 187 changes show a new systemd and udev\n<ogra_> perhaps your issue is related to that\n<Ursinha> plars: we can't advertise features other people are working on :P\n<plars> ogra_: hah, I thought that changelog looked familiar\n<ogra_> plars, so the idea is to have a script that itercepts the uboot boot via the serial port, then dumps a netboot config in place, pulls a remote kernel and initrd ... that initrd has dd and wget inside and writes that image to SD\n<plars> ogra_: it's the same point that bbb stopped getting ipv4 addresses on boot\n<plars> ogra_: I'm not sure that this is the same bug on rpi2 though, iirc when we looked at it with serial, it's just not getting past loading the kernel\n<ogra_> yes, probably a systemd regression\n<ogra_> i think pitti actually made some changes to networking that we perhaps need to adapt to\n * ogra_ remembers seeing a mail\n<plars> ogra_: where does it boot from though? the sd that it's about to dd over the top of? what happens if something goes wrong or if the new image that you dd is bad?\n<plars> ogra_: also, we've been down the path of trying to drive uboot automatically over serial before... it's bad\n<ogra_> you are screwed if the boot partition is broken indeed\n<plars> ogra_: isn't that exactly what we're trying to avoid?\n<ogra_> you cant avoid that\n<plars> :(\n<ogra_> as you know already :)\n<ogra_> i'm doing the best we can under the restrictions we have ... nothing more ... i cant magically swing my want and make an eMMC appear on the devic\n<ogra_> e\n<ogra_> *wand\n<plars> ogra_: yeah, I know... I think the way I already use is still better when it works though\n<ogra_> plars, do cprov and Ursinha know your way ?\n<plars> ogra_: yes\n * ogra_ wonders if it makes sense that he works on this then\n<jdstrand> mvo: is there something like this http://people.canonical.com/~lzemczak/landing-team/ubuntu-touch/rc-proposed/ for snappy?\n<jdstrand> mvo: and hello :)\n<ogra_> plars, the requirement was to dd a full image to the SD\n<plars> ogra_: I think they have different needs, and can more easily tolerate needing to reflash the sd if things go bad though\n<ogra_> i assume thats will be a very rare case anyway\n<Ursinha> plars: for us it'd be to reset the device to run new tests\n<plars> Ursinha: when ev talked to me about it, it sounds like you can handle needing to reflash a few by hand every day\n<plars> Ursinha: that's harder for me\n<plars> I need to be able to automatically reset it to a stable condition\n<ogra_> you will only need to manually re-flash if the dd actually failed to write the first megabytes of the img... as long as the first partition ends up on the SD you should be fine\n<Ursinha> plars: that's sort what we need, but we need a specific stable condition :)\n<ogra_> i wouldnt expect that to be \"a few per day\" ... rather a few per month if at all\n<plars> ogra_: I'd be willing to give it a try\n<ogra_> i'll hand it to you once i'm done :)\n<ogra_> jdstrand, indeed there is ;) the original of that stuff ... http://people.canonical.com/~ogra/core-image-stats/\n<jdstrand> I was thinking you might've had it. thanks!\n<ogra_> jdstrand, iirc lukasz uses my logs as input, i guess he can do the same for snappy too\n<ogra_> in case you need more details\n<jdstrand> I don't, no\n<mvo> jdstrand: what ogra_ said, plus there is a script https://code.launchpad.net/~mvo/+junk/compare-channels that can be used to compare channels, e.g. \"compare-channels.py ubuntu-core edge alpha\". its slow though needs to download images\n<mvo> jdstrand: and hello to you as well :)\n<jdstrand> interesting, thanks :)\n<ogra_> mvo, why do you need images to compare channels ? manifests should be enough\n<mvo> ogra_: patches welcome :P\n<ogra_> well, just curious\n<ogra_> do yoou actually unpack them and compare contents ?\n<mvo> I don't know, I did that a long while ago, maybe I could not find the right manifests? sorry, I really don't remember\n<ogra_> fair enough\n<sergiusens> ogra_, mvo I bet it is because the channels don't have manifests, only cdimage has manifests\n<ogra_> sergiusens, well, index.json has all info about which manifest to look for\n<ogra_> which is what my script does\n * ogra_ makes a note to actiually store the manifests under http://people.canonical.com/~ogra/core-image-stats/ so we have the history for them\n<sergiusens> ogra_, ah, doesn't cdimage roll over though, faster than system image at least?\n<ogra_> yeah\n<elopio> sergiusens: could you please upload teh licensed snap example to the store?\n<ogra_> which is fine if you generate the changelog immediately after build\n<ogra_> but doesnt work when trying to go backwards\n<sergiusens> ogra_, that is the reason ;-) when mvo did this it was reactive to figure out something that couldn't use the sources you use ;-)\n<ogra_> i'll add some backup code to my script\n<ogra_> so we have the manifests for older images too\n<dholbach> sergiusens, snapcraft 0.3 is in wily :)\n<dholbach> https://launchpad.net/ubuntu/+source/snapcraft/\n<sergiusens> dholbach, great, I already fixed that test thing, we can dilute it to 0.4 now I hope\n<dholbach> nice!\n<sergiusens> dholbach, thanks a bunch\n<dholbach> let's open 0.4 then ;-)\n<jdstrand> mvo: fyi, I reviewed snappy-debug. please see my response to the email thread\n<sergiusens> elopio, fgimenez Chipaca I need one QA and one Chipaca to look at this :-) https://code.launchpad.net/~sergiusens/snapcraft/1506096/+merge/274418\n<Chipaca> chipaca levels are running rather low today\n<Chipaca> we'll see if we can scrounge one up for you\n<Chipaca> mvo: what's the state of https://code.launchpad.net/~mvo/snappy/snappy-snapfs-mount/+merge/273883 ?\n<mvo> Chipaca: no change yet, sorry. I need to address the comments and thing some more about your other alternative\n<Chipaca> no worries\n<mvo> Chipaca: I kind of like the property of rm -rf /apps/$name/$ver\n<mvo> Chipaca: I would like to preserve this, but maybe thats all mood with all-snap anyway because once something is mounted there the rm -rf will not work anymore anyway\n<sergiusens> mvo, btw, are we keeping SNAP_APP_DATA_PATH and others or are we going to be bind mounting that into /apps/$name/$ver/data ?\n<sergiusens> we can keep the var too ;-)\n<Chipaca> mvo: it's not strictly true anyway; there's a bunch of odds and ends in the system as well\n<Chipaca> mvo: like apparmor, seccomp, and systemd chunks\n<mvo> Chipaca: yeah\n<mvo> sergiusens: hm, once we mount the snap we could bind mount too indeed. I have no immediate plans for this though\n<sergiusens> fgimenez, can you try real quick changing the port to 9999?\n<fgimenez> sergiusens, sure, give me a second\n<sergiusens> fgimenez, I don't know why it is going to a proxy since I added 'NO_PROXY' for 127.0.0.1 :-(\n<fgimenez> sergiusens, it seems to work with lower case os.environ['no_proxy'] = '127.0.0.1' :)\n<mhall119> asac: ping\n<sergiusens> olli, ^\n<olli> mhall119, wazzup\n<mhall119> olli: Hi, earlier this year we printed some appdev flyers to give away at conferences, they highlight the developer portal and the scopes, apps and web sections, We have a space available to add something about Snappy and a link to it's section on the devportal, I just need someone to tell me what words to use\n<mhall119> olli: see https://docs.google.com/document/d/1EQ3Dm-lMMxEY584_vX10ESBlxVxin8RgIHHpPCpgtns/edit towards the bottom I have a comment for this\n<mhall119> I'd like to get snappy stuff added before asking for another batch to be printed\n<olli> mhall119, what's your timeline?\n<olli> I don't think I will get to this this week\n<mhall119> olli: if we can get it early next week, I'm going ot try and have them printed in time for FOSSETCON next month\n<olli> mhall119, I added a reminder for Mo\n<mhall119> thanks\n<manik> hey guys\n<manik> anyone around?\n<manik> how do i generate a device tarball for a particular platform?\n<tedg> I'm around, but I don't know how to do that :-)\n<manik> tedg: is there any way to tell where a device tarball came from in a given image?\n<manik> or what version it is?\n<manik> or really get any information about it?\n<manik> also, is there a way to access the contents of a .snap?\n<sergiusens> manik, your questions are rather broad\n<sergiusens> manik, there is no supported way to create a tarball\n<manik> sergiusens: thanks\n<manik> is there a way to see the snap contents?\n<sergiusens> manik, instructions on how to get started with one are here though https://developer.ubuntu.com/en/snappy/guides/porting/\n<sergiusens> manik, but to have it supported is another story\n<sergiusens> manik, to list contents of a .snap that has not been installed just dpkg -c [file.snap]\n<sergiusens> subject to change with all snaps\n<manik> ok\n#snappy 2015-10-15\n<tedg> sergiusens: So feeling a bit weird, I have to put the getting source options in setup_stage_packages() now\n<tedg> sergiusens: Because I need the source to know which packages we need.\n<tedg> sergiusens: It seems to be working, but seems kinda broken.\n<sergiusens> tedg, ok, but what are you talking about, I am missing some context\n<tedg> sergiusens: Porting catkin to snapcraft 0.3\n<tedg> sergiusens: So I need to get the source if it's on git or something to get the packages.xml\n<sergiusens> tedg, right, but this problem was alway there, right?\n<sergiusens> too many right don't make a wrong ?\n<sergiusens> rights\n<sergiusens> tedg, http://bazaar.launchpad.net/~ted/snapcraft/ros-catkin-plugin/view/head:/snapcraft/plugins/catkin.py#L121\n<tedg> sergiusens: Hmm, it worked before....\n<tedg> sergiusens: And I just changed my pull to override setup_stage_packages()\n<sergiusens> tedg, in your MP you inverted the setup_stage_packages and pull calls\n<sergiusens> tedg, I think that's why\n<tedg> sergiusens: What changed is the ordering in pull()\n<tedg> Oh, I must have unmerged that change.\n<tedg> So do you like reordering that or overrideing setup_stage_packages() better?\n<sergiusens> tedg, I'll answer with another question; are we ever going to need something from stage pacckage to satisfy a pull\n<sergiusens> tedg, ftr https://code.launchpad.net/~ted/snapcraft/ros-catkin-plugin/+merge/273048#diff-line-508\n<sergiusens> that's the inversion\n<sergiusens> tedg, I haven't checked if this change would break pip and friends\n<tedg> I'm curious if we just have bad naming.\n<tedg> If we shouldn't just call it \"pre-stage-packages\" and \"post-stage-packages\"\n<tedg> It's not that we don't need both, but we need to be clear about how they go.\n<tedg> Or, perhaps, put setup_stage_packages in the pull() for the super class.\n<tedg> Then the subclass could move it where it needs it.\n<sergiusens> tedg, I was wanting to implement pull in the base class today but I am waiting for your plugins to not cause one more update you need to do ;-)\n<tedg> Ha\n<tedg> This has touched more files than I expected\n<tedg> Everything is at least building now.\n<JamesTait> Good morning all; happy Thursday, and happy Conflict Resolution Day! \u00f0\u009f\u0098\u0083\n<biezpal> Hi all! We have a problem with random string in package version and apparmor profiles\n<biezpal> Apparmor profile:\n<biezpal> profile \"ovs_init-db_0.0.1\" {\n<biezpal> But system is waiting for:\n<biezpal> ovs_init-db_IDKQMVPQVIGN\n<biezpal> We cannot specify random version while preparing snap package. How should we handle it?\n<jjohansen> biezpal: did you have a chance to talk to jdstrand\n<biezpal> jjohansen, nope :(\n<biezpal> seems like we have a 12-hours difference in time :)\n<jjohansen> sadly I am going to give the same recommendation, he is the guy you should talk to\n<jjohansen> biezpal: yeah, that is a problem, I can ping him about it tomorrow for you but I don't know how much time he will have, so he may not get back right away\n<biezpal> jjohansen, thanks\n<Chipaca> Ooops, I did it again.\n<Chipaca> https://code.launchpad.net/~chipaca/snappy/lock-ness/+merge/274547\n<Chipaca> 1k lines\n<Chipaca> how did that happen\n<davmor2> Chipaca: they let you write the code, that's normally how it happens\n<Chipaca> and i'm lovin' it\n<Chipaca> mvo_: ogra2: fwiw, the lock adds 5ms, or 10%, to the quickest rest query on bbb\n<ogra_> Chipaca, stop taling to that test guy :P\n<ogra_> *talking\n<Chipaca> ogra_: why? beuno hardly ever has time for epic dissing contests these days, so i'll take it piecemeal from davmor2\n<ogra_> haha\n<davmor2> ogra_: someone has to deflate his head otherwise he can't get through doorways and it's expensive to get building modifications done in the UK\n<ogra_> oh, and i always thought that was a beard !\n<jdstrand> biezpal: fyi, your profile name is due to the fact that you are sideloading. there was a change in snappy not too long ago that does that. it changes not only the profile name but install dir, etc, etc\n<jdstrand> jjohansen: (fyi ^)\n<Chipaca> oh, missed that\n<Chipaca> biezpal: jjohansen: holler if you need more help with that\n<Chipaca> jdstrand: good catch :)\n<jdstrand> biezpal: if this isn't working right for you, I suggest talking to Chipaca or someone else here\n * Chipaca wonders what the problem is\n<biezpal> jdstrand, we know about random string version for sideloaded apps. The problem is that we cannot specify apparmor profile because of random string version\n<biezpal> before, we could specify number version in apparmor profile, but now it doesn't work\n<Chipaca> where/why do you have to specify the version?\n<biezpal> profile name contain version which is now random\n<biezpal> apparmor profile config, first line\n<biezpal> profile \"ovs_init-db_0.0.1\" {\n<jdstrand> biezpal: are you using 'security-policy' in your yaml?\n<biezpal> jdstrand, yes\n<jdstrand> biezpal: see this: http://bazaar.launchpad.net/~snappy-dev/snappy-hub/snappy-examples/view/head:/framework-template/meta/svc.apparmor.boilerplate\n<jdstrand> biezpal: basically, have ###VAR### in there, and use ###PROFILEATTACH###, then it all gets filled in for you\n<biezpal> jdstrand, so, we can use {APP_VERSION} in our profiles, right?\n<jdstrand> yes\n<jdstrand> ###VAR### gets expanded to all those vars\n<mvo_> Chipaca: nice\n<biezpal> jdstrand, ok, thanks, we'll try it now\n<biezpal> jdstrand,  seems like I didn't get you right.. How should we define @{APP_VERSION} for our app before installation?\n<Chipaca> biezpal: so\n<biezpal> ah, I see now..\n<jdstrand> biezpal: you don't have to. it gets filled in for you on install\n<Chipaca> biezpal: do you have click-review?\n<Chipaca> biezpal: click-review would've told you about ###vars### and ###profileattach###\n<biezpal> jdstrand, Chipaca yes, I see how it works now, thanks\n<Chipaca> biezpal: holler if you get stuck again please\n<biezpal> Chipaca, sure, I will :)\n<biezpal> thanks\n<tbr> aj\n<tbr> EWINDOW\n<Chipaca> tbr: ENOCOOKIE\n * davmor2 gives Chipaca a Cookie now will you stop complaining?\n<Chipaca> davmor2: http://i.imgur.com/05bXjHW.jpg\n<davmor2> Chipaca: say Cookie one more time......I dare you!\n<kenvandine> Cookie\n * Chipaca gets behind the bulletproof glass\n<kenvandine> :)\n<longsleep> Hey folks, what does \"support for secure boot\" mean with the latest stable release mean?\n<longsleep> -mean\n<mvo_> longsleep: that you can enable uefi and secure boot and the system will boot signed kernels\n<mvo_> longsleep: useful for systems who need a higher level of trust etc\n<ogra_> longsleep, after you switched yu rodroid to UEFI you can use signed kernels ;)\n<ogra_> *your\n<longsleep> mvo_: signed kernel wit UEFI and microsoft keys you mean?\n<mvo_> longsleep: yes\n<longsleep> mvo_: ah ok - thanks - so not relevant for arm\n<mvo_> well, the shim is signed with the microsoft key and that uses our key for the subsequent steps\n<mvo_> longsleep: yeah\n<longsleep> yes true, is it the same shim as with normal ubuntu?\n<mvo_> yes\n<tbr> well AArgh64 servers with UEFI...\n<tbr> if they ever ship\n<ogra_> longsleep, the last two releases were rather irrelevant to arm overall\n<mvo_> I guess the mail should have clarified that its about uefi secure boot\n<longsleep> ogra_: yeah i figured that, my odroids updated flawlessly from 5 to 6 and 7 though\n<ogra_> and the next one likely as well\n<longsleep> ogra_: did you look into possibilies for secure boot on armhf?\n<ogra_> not really ... would that be possible with uboot at all ?\n<longsleep> tbr: somewhere i read that 2016 will be the year of arm64 servers\n<ogra_> wasnt that arm64 laptops ?\n<longsleep> ogra_: mhm could have been laptos - i remember it not very good\n<longsleep> ogra_: i saw some code in u-boot with which was labled secure boot using some keys fused into the soc\n<longsleep> ogra_: did not look closes yet though\n<ogra_> \"fused into the soc\" heh\n<ogra_> might be hard to do if you are not a manufacturer\n<longsleep> true, but getting the uboot signed might be possible somehow\n<tbr> HS silicon often uses keys from a PROM inside the soc\n<longsleep> yeah - without knowing anything .. how are the phones which use u-boot protect their bootloader?\n<ogra_> usualyl from the preloader as i understand\n<longsleep> right, and how is the preloader protected from beeing overwritten with a preloader which does not validate anything?\n<tbr> longsleep: e.g. QC usually only loads a signed loader and will not boot if it's not signed\n<ogra_> yeah\n<tbr> and most phones don't use u-boot but a-boot or that other thing\n<ogra_> and you cant easily overwrite it either\n<longsleep> right\n<ogra_> some use uboot, but only chainloaded\n<longsleep> tbr: so i asume it is pretty hard to get secure boot on arm when the soc would boot any loader\n<tbr> longsleep: just as on x86, it's not an arch dependent problem\n<longsleep> tbr: right, i see - thanks!\n<longsleep> ogra_: are there any device which do not chain load uboot with some binary boot loader blob?\n<tbr> intel will also want your firstborn if you want the secure version of their CPUs\n<longsleep> hehe\n<ogra_> longsleep, yeah, most of them ...\n<ogra_> uboot on phones is rather a rare case ... it exists though\n<tbr> TI SoCs can usually be booted with u-boot directly\n<tbr> e.g. the BB with its AM335x\n<tbr> MLO is just a minimal u-boot\n<longsleep> oh, thats cool, so no proprietary part required to boot them up?\n<tbr> correct\n<tbr> not like RPi that requires that ginormous blob to boot the GPU before it even thinks about ARM cores\n<tbr> also u-boot on x86 works well\n<tbr> and I don't mean chain loaded\n<longsleep> is that in use on x86 in some machines one can buy?\n<tbr> yes, the minnowboard max for example\n<tbr> I'm not sure if it still requires the FSP blob or if someone figured that out yet\n<ogra_> i think you can re-flash the bnootloader on ALIX boards easily\n<ogra_> they come with coreboot preinstalled though\n<longsleep> coreboot is nice, though i read that most coreboot devices still load some blob to make hardware components work\n<ogra_> might be, i have two alix boards but never examined that level\n<tbr> that's the FSP and SM\n<tbr> you can get around those in some cases\n<tbr> you will still very much need the microcode updates though\n<longsleep> yeah - i would like to know what this stuff is doing though\n<tbr> the microcode in the soc is most often barely functional\n<tbr> fsp mostly sets up RAM timings and such IIRC\n<tbr> I've heard of a coreboot fork called libreboot (how inventive!) that manages on a few devices without those\n<longsleep> oh let me google that\n<longsleep> Ministry of Freedom (UK) lol\n<longsleep> they support the t400 - not so bad\n<ogra_> t400 ... pfft ...\n * ogra_ wants a t1000 to mow his lawn\n<longsleep> eheh\n<ogra_> but thats still 600 revisions away\n<longsleep> the t400 is a little old\n<longsleep> libreboot can be flashed on the bbb\n<longsleep> that would be awesome if it then could boot snappy\n * tbr fails to see the appeal on BBB, it already has a fully open source boot process\n<longsleep> oh it has? sorry then i was just ignorant\n<tbr> 14:25:22< tbr> TI SoCs can usually be booted with u-boot directly\n<tbr> 14:25:42< tbr> e.g. the BB with its AM335x\n<tbr> 14:25:50< tbr> MLO is just a minimal u-boot\n<longsleep> so the sources for MLO are public - i did not know that\n<longsleep> i do not have a BBB either though\n<ogra_> longsleep, MLO is uboot on a diet :)\n<tbr> which is necessary due to the internal SoC ram being only 32k or such. so all it does is try to set up the RAM and find the proper U-Boot binary\n<elopio> sergiusens: I'll review your code iff you upload the licensed snap.\n<elopio> that's my price :)\n<sergiusens> elopio, deal\n<Chipaca> elopio: \"licensed snap\"?\n<elopio> sergiusens: do you like or dislike docstrings?\n<sergiusens> elopio, wait, can we upload now?\n<sergiusens> elopio, I like!\n * ogra_ buys a license from elopio \n<elopio> Chipaca: yes, the one that has a funny paragraph that you have to agree with.\n<Chipaca> elopio: dude\n<sergiusens> elopio, I've just never done them properly, but I want to document the base plugin with docstrings\n<Chipaca> elopio: snappy-examples/licensed\n<elopio> I suspect you wrote that one.\n<sergiusens> Chipaca, he wants me to upload that ;-)\n<sergiusens> Chipaca, to the store\n<Chipaca> to the stoar\n<Chipaca> ok :)\n * Chipaca gets it now\n<sergiusens> elopio, I'll check on the 'all reviews must be manual' thing first\n<elopio> ogra_: the first one is free.\n<ogra_> yay\n * ogra_ feels the greed for more coming up \n<elopio> sergiusens: I was just thinking that it's so hard for me to understand the snapcraft code because it doesn't have comments. Like this compose method.\n<elopio> I think I'd even like an example in the docstring.\n<sergiusens> elopio, ah, give me an example on how to write a 'proper' docstring and I'll do it :-)\n<sergiusens> elopio, it is not as easy as it was to do in go ;-)\n<elopio> sergiusens: https://www.python.org/dev/peps/pep-0257/\n<sergiusens> elopio, in go I jst started writing them and all was fine, the world was happy; in python there are many iplicit semantic rules :-P\n<elopio> sergiusens: I'll start documenting some things I understand.\n<elopio> then you can copy the format.\n<sergiusens> elopio, does that work for you http://paste.ubuntu.com/12791820/\n<sergiusens> elopio, ignore the runtests.sh part (that will be a separate MP)\n<sergiusens> elopio, wht is the correct way to add an example?\n<elopio> sergiusens: looks good, but not perfect.\n<elopio> sergiusens: instead of Returns, it should be Return.\n<elopio> and the first sentence should be a single line.\n<elopio> there are some tools that take the first line of the docstring as a summary.\n<sergiusens> elopio, so I have around 50 chars to express it?\n<elopio> sergiusens: yes, the short summary. Then you write as many lines you want in the following paragraphs.\n<sergiusens> elopio, it seems there are many ways to write docscrings\n<sergiusens> which I dislike\n<sergiusens> elopio, http://paste.ubuntu.com/12791994/\n<elopio> sergiusens: yes. The form we tried to follow in the tests was to stick to pep 257 as much as possible, using the sphinx tags.\n<sergiusens> elopio, I found that and then a ::param ...:: format\n<sergiusens> elopio, I saw ``keyword`` as well\n<sergiusens> elopio, just show me one docsrting from a test I can follow and I will write awesome docstrings\n<sergiusens> I dislike the fact that there is choice on how to do this ;-)\n<ogra_> but linux ius abouot choice !\n<elopio> sergiusens: https://bazaar.launchpad.net/~ubuntu-sdk-team/ubuntu-ui-toolkit/trunk/view/head:/tests/autopilot/ubuntuuitoolkit/_custom_proxy_objects/_common.py#L121\n<elopio> sergiusens: there's free will, but we crush it on code reviews.\n<sergiusens> elopio, does help(something) pretty format all those ::param:: declaratons btw?\n<sergiusens> elopio, should I use ''' or \"\"\" ?\n<elopio> sergiusens: I don't know about help. But the idea is to generate an sphinx html out of this.\n<elopio> sergiusens: \"\"\"\n<sergiusens> elopio, is multiline allowed after ::param keyword:: ?\n<elopio> sergiusens: yes.\n<sergiusens> elopio, ah, I see it now\n<sergiusens> elopio, how do I ref a :param keyword: in return?\n<sergiusens> elopio, see, this is why I did not start doing this :-)\n<sergiusens> vmayoral, hey, since you joined, I'm interested in knowing if you have tried experimenting with faster sdcards\n<vmayoral> hey @sergiusens,\n<sergiusens> vmayoral, I talked about some of the i/o slowness with ogra_ and mvo_ and there are some ideas floating around aside from just slow sdcard that might affect you; primarily the shared usb bus\n<elopio> sergiusens: uhm, I don't know. Just name it.\n<vmayoral> sergiusens: we've ordered them, should be able to test it soon\n<elopio> http://sphinx-doc.org/domains.html#cross-referencing-python-objects\n<elopio> sergiusens: it seems you can reference attr, but not parameters.\n<elopio> sergiusens: this is the examples I mostly follow: http://sphinx-doc.org/domains.html#info-field-lists\n<sergiusens> elopio, how about this http://paste.ubuntu.com/12792139/?\n<elopio> sergiusens: perfect.\n<elopio> I tend to be more verbose on the second paragraph instead of the return keyword.\n<elopio> but as you prefer.\n<sergiusens> elopio, I wasn't sure, I just saw duplication and then saw the doc you sent me and the example from ui-toolkit :-P\n<elopio> sergiusens: just choose whatever makes you happy, and we'll copy that style. The things that are important for me are the param and return tags, and the one line summary.\n<sergiusens> elopio, great, I'll stick to this, I don't like free form :-)\n<sergiusens> elopio, the paragraph could be used to go into detail with examples\n<sergiusens> elopio, which I haven't seen how to do yet\n<elopio> sergiusens: ah, right.\n<elopio> there are two options for the examples. You can write doctest  https://docs.python.org/3/library/doctest.html\n<elopio> or you can make it free form with the sphinx syntax. Let me see if I can find a nice one.\n<sergiusens> elopio, I don't mind doctest as long as they can access the network or if that won't be a problem we will be facing on and on in the future\n<elopio> sergiusens: we don't necessarily run the doctests. We need to add a command that runs them, and we can choose not to run them while the package is being build, for example.\n<sergiusens> elopio, I'll table the doctest/examples with sphinx for now then and think about it\n<sergiusens> elopio, I've already pushed the docstring while you weren't looking\n<sergiusens> :-)\n<elopio> sergiusens: https://bazaar.launchpad.net/~autopilot/autopilot/trunk/view/head:/autopilot/matchers/__init__.py#L49\n<sergiusens> vmayoral, great, we are looking forward to isolating the issue\n * sergiusens will brb\n<sergiusens> elopio, I uploaded licensed.canonical\n<sergiusens> tedg, is the catkin plugin ready for review? I saw some code changes but not sure if I should start code review yet\n<zyga> sergiusens: hey!\n<zyga> sergiusens: how are you\n<sergiusens> zyga, doing good, what's up?\n<zyga> sergiusens: holidays, a bit ill, enjoying rain and wind in Poland :)\n<elopio> sergiusens: thanks. I'm still confused by your branch.\n<elopio> I'm slow today.\n<sergiusens> elopio, the tests don't make it clear either?\n<elopio> sergiusens: it's like you are filling the missing properties with the values from the wiki, right?\n<sergiusens> elopio, exactly; and you might ask why I don't use .update() I guess\n<sergiusens> elopio, 1 I've had issues with it, 2 there is more to come (properties from the wiki will also do var expansion for the values)\n<elopio> sergiusens: no, I would just phrase the comments differently.\n<sergiusens> elopio, this is why we have reviews :-)\n<sergiusens> zyga, well go and relax if you are on holidays AND ill ;-)\n<elopio> sergiusens: yeah, but I don't know how to make it better. I'm trying...\n<sergiusens> elopio, exactly, I tried to explain using only a few words, maybe compose is what causes confusion and that word needs to be changed\n<elopio> sergiusens: :return: a dictionary that fills the missing values from the properties passed as an argument with values from the part in the wiki.\n<elopio> sergiusens: just a suggestion. Not sure if yours is better.\n<elopio> sergiusens: also I don't understand why would you return something if there is no wiki part. Shouldn't it raise an exception?\n<sergiusens> elopio, ah, I was trying to not use the word dictionary as that was implied in the type, but if that is fine, I don't mind using that\n<sergiusens> elopio, I can raise an exception too, that is debatable; I don't mind\n<elopio> sergiusens: I think it's clearer to raise an exception than to return a null value that later has to be interpreted.\n<sergiusens> elopio, I will raise an exception\n<sergiusens> elopio, right, as it is now, it is not a nul value, it is a nop\n<elopio> sergiusens: also, the docs are to be read by people, so make them as readable as possible. Don't worry that much about the metadata or duplication.\n<elopio> sergiusens: ah, I see. You return the same thing you get.\n<elopio> I'm inclined for the exception. The caller can take care of catching it to make it no-op.\n<sergiusens> elopio, ok, let me change that\n<elopio> sergiusens: and about the tests, I think that the name is the most important thing to make them readable.\n<elopio> instead of test_compose, I see three tests. something like\n<elopio> test_compose_must_update_missing_value_from_wiki -> you pass no source as argument\n<elopio> test_compose_must_keep_value_from_properties -> you pass source as an argument\n<elopio> test_compose_unexisting_wiki_part_must_raise_exception\n<elopio> sergiusens: and starting to nitpick, s/part1/part-from-wiki.\n<sergiusens> elopio, the nitpick I refuse as the part lives in both places :-)\n<sergiusens> elopio, but if it makes it clearer, then yeah, for the test it is fine\n<elopio> sergiusens: well, it wouln't hurt to make it more verbose like: part-that-exists-in-wiki\n<elopio> not a big deal if the name of the test is clear. And you can always throw comments instead.\n<elopio> sergiusens: anyway, now that I get what your branch does, +1. It looks correct to me.\n<elopio> I'll top approve after lunch.\n<sergiusens> elopio, I'll be fixing in the meantime :-)\n<elopio> sergiusens: and I would throw in an integration or example test.\n<elopio> but maybe not yet. We only have the curl part in the wiki, and there's no much sense in overwriting its properties. Maybe an example when we have more parts that make sense to extend\n<mvo_> Chipaca: *if* you are still around, I followed up on the snappy-snapfs-mount MP would love to hear your thoughts, but no rush, I call it a day now\n<sergiusens> tedg, maybe envvars can all be driven by the plugin and no need to have it in the parts?\n<tedg> sergiusens: Eh, I'm not sure that many people will use plugins though. I'd like to have less of them.\n<tedg> sergiusens: For instance if ROS didn't have so many relocation issues, it'd be nice if that didn't have to be a plugin. Just a repo and some stage-packages in the wiki.\n<tedg> I'm just not sure we're ever gonna live in a world where the libraries end up where we want.\n<tedg> And I hate pushing people to write shell scripts all the time.\n<sergiusens> tedg, well the thing is, for a part, we can't\n<sergiusens> tedg, as in, hey look for stuff here too\n<tedg> sergiusens: I guess I was thinking that the part would provide environment variables for things it builds. For instance \"I put my data here\"\n<sergiusens> tedg, right, I have that email in draft :-)\n<sergiusens> tedg, The wrapper thing is all fine and dandy to some extent for running, but building is so disparate\n<tedg> I feel like we're walking a dangerous path with encouraging so many wrappers.\n<sergiusens> tedg, so I replied and not sure if it will be for the worse :-)\n<sergiusens> tedg, wrt actual things in the pipeline, just leave a coment in the catkin branch when it is ready for another look\n<tedg> sergiusens: I think that it is, I'm building a test snap to see if it still all works.\n#snappy 2015-10-16\n<dholbach> good morning\n<fgimenez> good morning\n<dholbach> ogra_, ogra2: do you know who could help figuring out https://bugs.launchpad.net/snappy/+bug/1506480 (link to \"Kernel requirements for Snappy\" is broken and I'm not sure what else to link to)?\n<ubottu> Launchpad bug 1506480 in Snappy \"Broken link in https://developer.ubuntu.com/en/snappy/guides/porting/\" [Undecided,New]\n<Chipaca> asac: beuno: http://jimbenton.tumblr.com/image/131162934224\n<tasdomas> morning\n<Chipaca> mo'in!\n<tasdomas> the wiki specification for snappy confinement mentions an assign.yaml file that can be used instead of running the hw-assign command\n<tasdomas> however, I couldn't find any more information about it (format, etc.)\n<tasdomas> is it supported?\n<Chipaca> tasdomas: where does it mention that?\n<tasdomas> Chipaca, https://wiki.ubuntu.com/SecurityTeam/Specifications/SnappyConfinement\n<Chipaca> tasdomas: there's no assign.yaml in that doc\n<Chipaca> tasdomas: it says \"assign yaml\"\n<Chipaca> tasdomas: no dot\n<Chipaca> tasdomas: it's not a file; it's part of the oem config\n<tasdomas> Chipaca, ah, sorry - misread that\n<Chipaca> tasdomas: so, yes it's supported, for oem snaps\n<tasdomas> Chipaca, so for my own snap the only thing to do is use hw-assign, right?\n<Chipaca> tasdomas: right\n<Chipaca> tasdomas: what're you wanting to do?\n<tasdomas> Chipaca, I was writing a simple snappy app to control the piglow device on my orange matchbox\n<tasdomas> Chipaca, http://domas.monkus.lt/posts/2015-10-15-writing-a-snappy-application/\n<tasdomas> Chipaca, my main problem was that I need to restart the service after assigning the i2c device to it\n<Chipaca> really?\n<Chipaca> that's surprising to me -- but then i know little about i2c and the rpi2\n<Chipaca> tasdomas: are you sure it's not that you need to restart the service that uses it?\n<Chipaca> (that'd be bug 1484645 fwiw)\n<ubottu> bug 1484645 in Snappy \"Snappy hw-assign doesn't restart affected services\" [High,Triaged] https://launchpad.net/bugs/1484645\n<tasdomas> Chipaca, sorry - maybe I wasn't clear - my problem was that I needed to restart the service (exposed by my snappy app) that uses the i2c device\n<Chipaca> wow, it's going to be a long day\n<Chipaca> because you said exactly that\n<Chipaca> sorry :-(\n<Chipaca> tasdomas: that's a bug, we know about it, should get fixed (on rolling/edge) soonish\n<tasdomas> Chipaca, ah, cool!\n<tasdomas> Chipaca, can I bother you with one more question?\n<Chipaca> tasdomas: i dount you can bother me with a question, but you're welcome to try\n<Chipaca> doubt*\n<tasdomas> there's an mqtt snappy app available in the store - but I can't find the source for it\n<tasdomas> I want to modify it to make it mdns discoverable\n<Chipaca> tasdomas: have you tried asking the snap publisher?\n<Chipaca> or gone to the snap support url?\n<Chipaca> tasdomas: this one, i presume https://search.apps.ubuntu.com/api/v1/package/mosquitto.kartben\n<tasdomas> Chipaca, ah, will do\n<dpm> davidcalle, dholbach, looking at askubuntu, there seems to be quite a lot of questions around snappy already\n<dpm> might be worth for us looking at them in the upcoming weeks\n<dholbach> maybe we can talk about it in our next docs hour call?\n<dholbach> dpm, ^\n<dpm> it could be a good topic, yes\n<dholbach> cool\n<davidcalle> dholbach, dpm, +1\n<tasdomas> by the way, is it possible to use snapcraft to build a snappy package for a different architecture? e.g. build a RPi2 compatible package on my amd64 laptop?\n<dpm> davidcalle, dholbach, it might be worth creating a snapcraft tag as well. Right now we've got 'snappy' already, which redirects to 'ubuntu-core'\n<dholbach> yep, that makes sense\n<dholbach> ciao ppisati, do you know how we could fix https://bugs.launchpad.net/bugs/1506480? (which information should we link to in the article there?)\n<ubottu> Launchpad bug 1506480 in Snappy \"Broken link in https://developer.ubuntu.com/en/snappy/guides/porting/\" [Undecided,New]\n<JamesTait> Good morning all; happy Friday, and happy World Food Day! \u00f0\u009f\u0098\u0083\n<ogra_> dholbach, ppisati should be able to help with the link\n<dholbach> cool\n<dpm> dholbach, davidcalle, do we have any document that specifies the format of the snapcraft.yaml file?\n<dholbach> dpm, no spec-like doc in our docs yet, but there's 1) https://developer.ubuntu.com/en/snappy/snapcraft/your-first-snap/ and 2) ./examples in lp:snapcraft and 3) https://bazaar.launchpad.net/~snappy-dev/snapcraft/core/view/head:/docs/snapcraft-advanced-features.md which will land as soon as the md importer is working\n<davidcalle> dpm, closest thing we have to a spec for it in the the App dev manual\n<dholbach> ah yes, and that\n<davidcalle> It's actually quite detailed\n<dpm> davidcalle, yeah, I've gone through 1) and 2), but I've been missing a doc that is specific to snapcraft.yaml\n<davidcalle> dpm, https://docs.google.com/document/d/1Rj9nVBttx62BvGlbnkmKOzAlAIEWuLNr1QaSGe3gQDA/edit#heading=h.8o7w1g30gucy\n<dpm> ahaha\n<dpm> I had actually seen this, but couldn't figure out where, glad I wasn't going mad\n<davidcalle> dpm, not sure the link is world-readable though, hopefully next week in some form on duc...\n<dpm> yeah\n<dpm> davidcalle, dholbach, http://askubuntu.com/questions/686167/what-is-snapcraft, this might help with AskUbuntu/Stackoverflow searches to give a 5 min intro and direct folks to the site\n<Chipaca> mvo: ping\n<davidcalle> dpm, this is excellent\n<davidcalle> dpm, love it :)\n<mvo> Chipaca: pong\n<dpm> glad it if it's useful :)\n<Chipaca> mvo: this race condition with the automount unit\n<Chipaca> mvo: tell me about it\n<mvo> Chipaca: its not that much that I know - so the code will activate and start the automount unit, right after that it runs the click stuff\n<dholbach> dpm, nice one!\n<dholbach> dpm, now we can't change the URLs anymore! :-)\n<mvo> Chipaca: when I do not unpack the meta,.click dirs it will fail to generate the apparmor profiles\n<mvo> Chipaca: however ls a bit later is fine\n<dpm> dholbach, oh, I can update the link after we've done the IA rearrangement. Or just make it point to https://developer.ubuntu.com/snappy\n<mvo> Chipaca: hm, maybe its something else, need to look deeper\n<dholbach> dpm, or we add redirects - in any case, no problem :)\n<Chipaca> mvo: aiui, systemctl should not return until automount has actually started\n<Chipaca> mvo: maybe we're creating the units but not starting the .automount until later?\n * Chipaca looks\n<mvo> Chipaca: adding a sleep did not solve it, so its something else\n<mvo> Chipaca: here we go, its a missing .click/manifest in the snap :/\n<mvo> Chipaca: sorry\n<mvo> Chipaca: let me fix that\n<Chipaca> hue hue hue, to quote a brazilian\n<mvo> Chipaca: we also may want to keep the .meta for now because of \"snappy list -v\"\n<mvo> unless we go husks\n<Chipaca> mvo: that one i don't follow\n<Chipaca> mvo: once automount is started, any access under it will trigger the mount\n<Chipaca> mvo: even if you're accessing things that are there\n<mvo> Chipaca: so only the active snap has a automount unit\n<Chipaca> ohhhh\n<mvo> Chipaca: so snappy list -v (old snap) will not have a meta/packages.yaml\n<Chipaca> yep yep\n<Chipaca> so, yeah, leave it for now, flag it for removal when we switch to lightweights\n<Chipaca> ok\n<mvo> yeah, will do\n<Chipaca> mvo: have you checked it for speed?\n<mvo> Chipaca: not yet, no\n<Chipaca> k\n<Chipaca> mvo: the lightweight thing of looking at remote manifests does not work for sideloaded stuff though\n<mvo> Chipaca: one more complication - the hooks expect .click/$name.$origin.manifest - and the $origin is not known at build time. so we can not ship that in the snap and need to generate it\n<mvo> Chipaca: once hooks are gone this is no longer a issue of course\n<Chipaca> hooks were going to be gone \"soon\" since i joined\n<Chipaca> not lookin' good\n<mvo> yeah\n<mvo> there is only one left\n<mvo> but that one is pretty sticky :P\n<mvo> Chipaca: do you want me to split the branch for the snapfs-mount up more?\n<Chipaca> mvo: how would you split it?\n<Chipaca> unless you moved all the systemd stuff to .. ahem .. systemd :-p\n<Chipaca> mvo: anyway, you don't have to, but my review is slower :)\n<mvo> Chipaca: I can do that I think if it helps (I will do that in any case in this MP, your suggestion makes sense)\n<mvo> but lunch first\n<Chipaca> mvo: i'm not sure the total time would be less, so i'd say nah\n<beuno> Chipaca, lol\n<longsleep> yaml question, how can i have a binary with a _ in the name?\n<tedg> sergiusens: So I think I may need to copy the options locally to stay under the 79 character limit :-)\n<sergiusens> tedg, harr harr :-)\n * sergiusens notices that today is not talk like a pirate day\n<tedg> sergiusens: It can be here!\n<tedg> matey\n<sergiusens> tedg, I couldn't sleep last night thingking about the override of setup_stage_packages; maybe it is best to use repo.Ubuntu directly instead\n<tedg> Since we can't have casual Friday's working from home, we should have talk like a pirate Fridays.\n<sergiusens> tedg, right on\n<tedg> sergiusens: Heh, I never meant for you to lose sleep over it :-)\n<sergiusens> although my vocabulary is rather scarce\n<sergiusens> tedg, it is one of those things\n<sergiusens> I also stayed up late as I went to a docker meetup to see a bunch of old friends\n<sergiusens> learned a lot about docker and why developer like it so much\n<tedg> I'm feeling like we might need to detach the plugin lifecycle from the overall one. Like have more phases for plugins.\n<tedg> I think it is nice. I just haven't see the overlays actually work well. Seems like they always get confused for me.\n<ogra_> because you talk like a pirate to them ?\n<tedg> Stupid overlays are no fun, they never talk like pirates.\n<dholbach> sergiusens, tedg: snappy clinic planning?\n<jdstrand> mvo: hey, curious if you had a chance to review my email re snappy-debug. I know we were both pretty busy yesterday\n<mvo> jdstrand: I saw it but have not acted on it yet, sorry\n<jdstrand> mvo: ack\n<dholbach> sergiusens, I found an interesting one: http://pastebin.ubuntu.com/12799579/\n<dholbach> not sure if we support this\n<dholbach> tedg, ^\n<dholbach> I just used: apt-get source bamtools\n<sergiusens> dholbach, thanks, perfect example for custom plugin\n<dholbach> I'll leave that one for you then :)\n<dholbach> tedg, sergiusens: I added two more examples to the pad\n<Chipaca> sergiusens: i should probably have pointed you at that talk earlier\n<Chipaca> sergiusens: 's good stuff\n<elopio> mvo: Chipaca: yes! with this last test I saw the moment when the last cloud init message appeared and the moment when the mode switched to regular. It's just twice as slow as the last time I tried.\n<elopio> fgimenez: ^\n<elopio> Chipaca: tell me more about waiting for a systemd service.\n<Chipaca> elopio: it's just a for loop with a sleep and a check\n<Chipaca> elopio: give me a sec\n<elopio> Chipaca: ah, we have that.\n<Chipaca> elopio: ah! show me the code :)\n<elopio> I thought you were talking about subscribing a listener to the service or something like that.\n<Chipaca> elopio: well, you could, but why bother\n<elopio> Chipaca: https://bazaar.launchpad.net/~snappy-dev/snappy/snappy/view/head:/_integration-tests/testutils/wait/wait.go\n<elopio> to work around the workaround I will just have to increase the maxWaitRetries.\n<Chipaca> elopio: and you're waiting for bootok?\n<elopio> Chipaca: I'm waiting for snappy_mode=regular\n<Chipaca> elopio: and is that better, or worse than waiting for boot ok?\n * sergiusens wonders if it is beer o clock already\n<Chipaca> sergiusens: it is!\n<elopio> Chipaca: better, I think. Instead of checking the service, we check it's effect.\n<Chipaca> sergiusens: you should come visit. can't have beer on my own (and ellie doesn't do beers)\n<elopio> *its\n<elopio> it's beer-on-hangout o'clock.\n<Chipaca> elopio: so, yeah, looks like you're already doing the right thing and all :)\n<Chipaca> elopio: wrt increasing maxWaitRetries, maybe instead have an arch-dependent base?\n<Chipaca> elopio: ie scale checkInterval by some bogomips factor\n<elopio> Chipaca: that would be nice.\n<Chipaca> var bogomips = map[string]int{\"arm\": 100, \"amd64\": 1, etc}\n<Chipaca> and index it on GOARCH\n<elopio> I'll make a card to be able to configure the wait, with a delay factor.\n<elopio> but anyway, this is a bug :) Instead of working it around, somebody should fix it.\n * elopio looks at somebody.\n<Chipaca> elopio: which is the bug, exactly?\n<Chipaca> elopio: that you can ssh in before you can log in?\n<elopio> Chipaca: you can sign in before boot-ok. both ssh and normal log in through serial. And if you are fast with a rollback, that makes the boot crazy.\n<elopio> https://bugs.launchpad.net/snappy/+bug/1498293\n<ubottu> Launchpad bug 1498293 in Snappy \"after a successful update and reboot, the bootloader snappy_mode is set to 'try'\" [Critical,Triaged]\n<elopio> on bbb you don't have to be super fast. I actually can reproduce this manually.\n<Chipaca> elopio: so that's the bug\n<Chipaca> elopio: not that \"try\" thing :)\n<Chipaca> so, we want the boot-ok to be done *before* ssh and getty lets people in\n<Chipaca> pitti: do you remember offhand whether there's a target that would let us do that easily?\n<elopio> Chipaca: I think so. You could fix the rollback so it waits for boot-ok, but then it might affect something else.\n<elopio> Chipaca: and if you just move the log in after boot-ok, the reboot will take twice the time to let you access the board.\n<Chipaca> elopio: well, but it's letting you in before things are ready\n<sergiusens> Chipaca, I don't mind visiting; when are we having a sprint in London?\n<Chipaca> sergiusens: i have space for two for half a week every week\n<Chipaca> as long as they're not super tall :)\n<elopio> Chipaca: well, before cloud-init has finished. Most of the things are ready.\n<dholbach> tedg, sergiusens: is the announce text roughly what you expected?\n<sergiusens> dholbach, where is it?\n<dholbach> sergiusens, ah sorry - on the pad :)\n<sergiusens> dholbach, looks good, just added on clarification just in case\n<dholbach> thanks sergiusens\n<sergiusens> dholbach, btw, how hard would it be to patch clog?\n<dholbach> rock and roll\n<dholbach> let me check\n<sergiusens> dholbach, so ideally, patch CMakeLists.txt to take an arg to provide an alternate ~/.clogrc path\n<tedg> If sergiusens is happy I'm good.\n * tedg didn't keep a link to the pad :-)\n<dholbach> tedg,\n<dholbach> http://snappy.asac.ws:9001/p/snapcraft-clinics\n<sergiusens> -DLOGRC_PATH=$SNAP_APP_DATA_PATH or something like that, and then the code would need to expand the var\n<tedg> dholbach: +1\n<dholbach> sergiusens, I guess it's not too hard to do - maybe something to look into some other time?\n<dholbach> tedg, sergiusens: thibautr suggested next time we ask for proposals on what people would like to see snappified :)\n<fgimenez> have a nice weekend o/\n<sergiusens> dholbach, sounds like a good idea\n<sergiusens> dholbach, maybe at the end of the clinic we ask that question too\n<dholbach> for next time we can maybe leave it a bit more time in advance, so we can collect suggestions beforehand\n<sergiusens> elopio, very simple MP https://code.launchpad.net/~sergiusens/snapcraft/tested_or_not/+merge/274741\n<elopio>  sergiusens: why is that needed? I find it good to see if all your test code is being run.\n<elopio> if it isn't, you can probably remove it. Or you have a condition that has to be faked.\n<sergiusens> Chipaca, can we get the release from the rest api already or not?\n<Chipaca> sergiusens: i don't think that's in stable yet\n<Chipaca> sergiusens: why?\n<sergiusens> Chipaca, to be able to ask it to be able to ask the store if you know what I mean.\n<Chipaca> sergiusens: updating to latest edge to see if it's there yet\n<sergiusens> elopio, ok, it just bothers me to be honest :-)\n<Chipaca> sergiusens: wait, the release?\n<Chipaca> sergiusens: you could always get the release!\n<sergiusens> Chipaca, as in 15.04-core .. btw, I'm not saying you can't, I'm asking if you can! :-D\n<Chipaca> sergiusens: the store id is what was missing, and is there now\n<Chipaca> sergiusens: http://pastebin.ubuntu.com/12801235/\n<Chipaca> sergiusens: ^ that's the output in rolling/edge :)\n<sergiusens> Chipaca, yup, nice\n<Chipaca> sergiusens: http://pastebin.ubuntu.com/12801274/\n<Chipaca> sergiusens: that's 15.04, now\n<Chipaca> sergiusens: note the socket name has changed\n<sergiusens> Chipaca, life is good!\n<sergiusens> Chipaca, mind looking at this https://code.launchpad.net/~sergiusens/snapcraft/build-deps-request-something-missing/+merge/274749 among other complicated things in your life?\n<Chipaca> sergiusens: i don't *mind*, but it's friday afternoon and the malbec has already confessed its crimes\n<sergiusens> Chipaca, look at it and then decide ;-)\n * Chipaca obeys\n<Chipaca> sergiusens: no, that's too many lines of code for this hour\n<Chipaca> sergiusens: also, the complexity is astounding\n<Chipaca> sergiusens: flabbergasting\n<Chipaca> sergiusens: maybe split it in two or three and have a team work on it on monday\n<sergiusens> Chipaca, btw https://github.com/docopt/docopt.go\n<Chipaca> !\n<Chipaca> sergiusens: also, in that branch, i think you're using the Schwarzschild metric wrong; you need to use Kruskal\u00e2\u0080\u0093Szekeres coordinates to express it like that\n<pitti> Chipaca: Before=systemd-user-sessions.service? That's \"before people can log in\" (I didn't read the full backscroll)\n<Chipaca> pitti: that includes ssh and getty (both tty and serial)?\n<pitti> yes\n<Chipaca> elopio: could you try that?\n<Chipaca> pitti: thanks!\n<Chipaca> pitti: can something be after: multi-user.service *and* before: systemd-user-sessions.service?\n<Chipaca> that seems to be a no-no\n<pitti> no\n * Chipaca could test, but me has already checked out\n<pitti> as multi-user is after user-sessions\n<Chipaca> suspected as much\n<Chipaca> we need to check on monday, then, whether sessions is enough\n<pitti> it has multi-user in it, after all :)\n<pitti> right; I'm just on a drive-by, need to leave again\n<sergiusens> Chipaca, let me fix!\n<sergiusens> :-)\n<sergiusens> Chipaca, I like the docopts thing, but I can't easily add help to commands\n<sergiusens> tedg, final comment wrt setup_stage_packages\n<sergiusens> and there's a merge conflict (very minor)\n<tedg> Heh\n * tedg isn't sure if he wants to look\n<tedg> sergiusens: I don't think we can use pull with the current configuration of the command. Because the superclass is just empty.\n<sergiusens> tedg, right, I mean, pull() -> handle_source_options;\n<sergiusens> tedg, then have your private implementation of setup_stage_packages keeping self.stage_packages empty (or reuse if you want)\n<tedg> Oh, I see.\n<tedg> That seems a little scarier to me...\n<sergiusens> tedg, in other words, setup_stage_packages should have always been _setup_stage_packages\n<tedg> Because then we have two overrides\n<sergiusens> tedg, 2?\n<tedg> sergiusens: We'd have to override setup_stage_packages to be null, then have pull get sources, setup deps, and then call it.\n<sergiusens> tedg, let me try and propose something\n<sergiusens> tedg, meh, I'll do this in another proposal (I'll fix the priv/pub thing first)\n<tedg> sergiusens: I think restructuring pull() also would help.\n<sergiusens> tedg, indeed, that's why :-)\n<sergiusens> well another reason why\n<tedg> I think there may need to be a \"get_deps_from_source()\"\n<tedg> Or something for plugins.\n<tedg> sergiusens: I'm getting an odd error with trying to copy system libs. Basically the -dev packages are bringing in symlinks and that seems to be confusing snapcraft.\n<tedg> sergiusens: Does that sound like something you've seen?\n<tedg> http://paste.ubuntu.com/12804340/\n<tedg> http://pastebin.ubuntu.com/12804368/\n<tedg> The first results in the second :-)\n<sergiusens> tedg, that is weird, the path exists but can't be copied to\n<sergiusens> tedg, does /home/ubuntu/readlinetest/parts/ginac/install/lib/x86_64-linux-gnu/ exist?\n<tedg> sergiusens: No\n<sergiusens> tedg, that is the darn problem then :-/\n<tedg> sergiusens: I'll get an MR here in a sec.\n<sergiusens> tedg, its just a mnissing os.makedirs(os.path.basename(real_path, exist_ok=True)\n<sergiusens> before the copy\n<sergiusens> tedg, what I don't get is that that lib should of been relinked to the internal one\n<tedg> sergiusens: There is no internal one because it's on the list of blocked packages.\n<tedg> sergiusens: I'm not sure that readline should be on that list though.\n<sergiusens> tedg, ah, then the makedirs missing is the correct thing to do or if it is one of those that is always on the system, add it to the skip list\n<sergiusens> tedg, right, maybe not; the only real problematic one is libc\n<sergiusens> tedg, all others come inherited from deb2snap\n<tedg> sergiusens: So, I think it found a bug, but perhaps it isn't a bad bug once we get everything more refined.\n<sergiusens> tedg, what bug?\n<tedg> sergiusens: Not making the directory\n<sergiusens> tedg, right, that is indeed a bug\n#snappy 2015-10-17\n<sergiusens> elopio, Chipaca if you get bored https://code.launchpad.net/~sergiusens/snapcraft/cleanup/+merge/274801\n<sergiusens> :-)\n#snappy 2015-10-18\n<tmk> hi\n<tmk> any1 online?\n#snappy 2016-10-17\n<lpotter> I would guess it depends on the license it is released under\n<dr1337_> ogra_: how does snappy know where to mount the /writeable partition and what to do with it?\n<ogra_> dr1337, from the initrd (and the filesystem label)\n<dr1337> ogra_ nah I mean the snap command\n<dr1337> on snapcraft.io it's /snap\n<ogra_> well, that doesnt mount the writable partition\n<ogra_> snaps are just squashfses and the /snap path is hardcoded\n<ogra_> for more details, i guess zyga might be able to point you to the right code snippets\n<dr1337> and what's the gadget snap for?\n<ogra_> it describes the image (defining what kernel, bootloader and partitioning is used)\n<xnox> is it normal that my confined snap does not have access to /tmp?\n<ogra_> xnox, no ... it should spin up its own /tmp dir\n<xnox> e.g. i would have expected for mkdtemp() calls to work, as they do with e.g. PrivateTmp= in\n<ogra_> it doesnt have access to the systems /tmp though\n<xnox> my code calls mkdtemp()\n<xnox> and i hoped that it would just work(tm)\n<xnox> ogra_, as in the execution envrionment should set-up per exec $tmpdir and set envrionemnt variables that would make mkdtemp() to work.\n<ogra_> well, that should work ... on a per-snap base though\n<ogra_> apps within the same snap should use the same /tmp ... if thats not the case, it is a bug\n<autonomouse> D$HmMo100709_ubu\n<tbr_> someone needs to change their p4ssw0rd\n<xnox> ogra_, right. I will experiment more and probably will open a bug report\n<popey> jdstrand: is there a plan to update click-reviewers-tools in xenial? I am getting different results in snap-review on my laptop than the store gives. e.g. results on this app gives me bug 1618123 locally, https://myapps.developer.ubuntu.com/dev/click-apps/6141/rev/1/\n<mup> Bug #1618123: Add a build grade attribute to snaps <Canonical Click Reviewers tools:Fix Committed by cprov> <Snapcraft:Fix Released by caio1982> <https://launchpad.net/bugs/1618123>\n<Elleo> I'm trying to implement an interface for download manager, and I'm wondering what the snappy equivalent of APP_PKGNAME and APP_ID_DBUS are for app armor rules; I managed to bodge something with SNAP_NAME, but that doesn't seem like a reliable approach\n<jdstrand> popey: eventually, yes. I'm working on a big update for snap declarations and figured I'd update it after\n<popey> jdstrand: ok, thanks.\n<mup> PR snapd#2155 opened: HACKING.md: fix spread command for reusing servers <Created by fgimenez> <https://github.com/snapcore/snapd/pull/2155>\n<mwhudson> morphis, ogra_: do we care about any wlan drivers that do *not* support nl80211?\n<ogra_> uuh, thats probably a kernel team question\n<ogra_> (but i'd guess wwe should care about all possible drivers)\n<mwhudson> i have a half-assed version of 'ip monitor' now\n<mwhudson> now to hack up something like what 'iw monitor' would be if that existed\n<mup> PR snapd#2156 opened: many: move from flags as ints to flags as structs-of-bools <Created by chipaca> <https://github.com/snapcore/snapd/pull/2156>\n<mup> Bug #1634088 opened: Cannot activate Chinese input method for Qt app <Snappy:New> <https://launchpad.net/bugs/1634088>\n<mup> Bug #1634089 opened: Cannot activate Chinese input method for Qt app <Snappy:New> <https://launchpad.net/bugs/1634089>\n<mup> PR snapd#2157 opened: read/write boot variables in a single operation <Created by mvo5> <https://github.com/snapcore/snapd/pull/2157>\n<dr1337> hey does anyone know of a commercial product that's currently on sale that uses snappy core?\n<mato_> Hi, I've created snapcraft.yaml for application which uses tesseract. Snap package is done, but application crashes because cannot access the files in /usr/share/tesseract-ocr/tessdata. Did I miss something in sanpcraft.yaml? (permissions)\n<mup> PR snapd#2158 opened: many: remove unnecessary snap name parameter from buying endpoint <Created by pete-woods> <https://github.com/snapcore/snapd/pull/2158>\n<mup> PR snapd#2159 opened: spread.yaml: dump apparmor denials on spread failure <Created by zyga> <https://github.com/snapcore/snapd/pull/2159>\n<mup> PR snapd#2160 opened: image: tweak the cloud-init configuration <Created by mvo5> <https://github.com/snapcore/snapd/pull/2160>\n<mup> PR snapd#2161 opened: interfaces/builtin: add dcdbas_control interface <Created by tonyespy> <https://github.com/snapcore/snapd/pull/2161>\n<mup> PR snapd#2091 closed: interfaces: tweak wording and comment <Created by zyga> <Merged by zyga> <https://github.com/snapcore/snapd/pull/2091>\n<mup> PR snapd#2159 closed: spread.yaml: dump apparmor denials on spread failure <Created by zyga> <Merged by zyga> <https://github.com/snapcore/snapd/pull/2159>\n<mariogrip> I edited the origin on https://wiki.ubuntu.com/snapcraft/parts but https://parts.snapcraft.io/v1/parts.yaml wont edit\n<mariogrip> oh! nevermind, that's the git for the source right! sorry about that\n<mariogrip> how can i access .ssh with plugs?\n<mup> PR snapd#2162 opened: interfaces: add system-power-control interface <Created by morphis> <https://github.com/snapcore/snapd/pull/2162>\n<mup> PR snapd#2155 closed: HACKING.md: fix spread command for reusing servers <Created by fgimenez> <Merged by mvo5> <https://github.com/snapcore/snapd/pull/2155>\n<mup> PR snapd#2163 opened: update dependency of ubuntu-core-launcher to snap-confine <Created by mvo5> <https://github.com/snapcore/snapd/pull/2163>\n<mup> PR snapd#2164 opened: many: add supports for keeping and finding assertions with different format iterations <Created by pedronis> <https://github.com/snapcore/snapd/pull/2164>\n<mup> PR snapd#2165 opened: snap: stop using ubuntu-core-launcher, use snap-confine <Created by mvo5> <https://github.com/snapcore/snapd/pull/2165>\n<blackboxsw> qengho, any idea what might cause a system to attempt looking for /var/lib/snapd/snaps/<my_snap>_x1.snap instead of the installed proper version \"12\" from the snap store.\n<blackboxsw> qengho, x1 seems to be a placeholder/indicator for locally installed snaps, which mine wasn't\n<blackboxsw> could it have something to do with intermittent network connectivity somehow? like validating w/ an unavilable snap store?\n<blackboxsw> I'm getting occasional errors from ureadahead as the system is starting up trying to access *_x1 files that don't exist\n<mup> PR snapd#2148 closed: many: introduce an assertion format iteration concept, refuse to add unsupported assertion <Created by pedronis> <Merged by pedronis> <https://github.com/snapcore/snapd/pull/2148>\n#snappy 2016-10-18\n<blackboxsw> hi folks, I've just started seeing failures based on the systemd triggered auto-update of installed snaps\n<blackboxsw>  cannot refresh snap-declaration for \"<mysnap>\": Get https://assertions.ubuntu.com/v1/assertions/snap-declaration/16/<myid>: dial tcp: lookup assertions.ubuntu.com on 127.0.1.1:53: server misbehaving\n<blackboxsw> have we changed something with the snap store recently that could cause some of the snap auto-refresh services to fall over?\n<mup> PR snapd#2166 opened: snap: stop using ubuntu-core-launcher, use snap-confine <Created by niemeyer> <https://github.com/snapcore/snapd/pull/2166>\n<mup> PR snapd#2163 closed: debian: update dependency of ubuntu-core-launcher to snap-confine <Created by mvo5> <Closed by niemeyer> <https://github.com/snapcore/snapd/pull/2163>\n<dr1337> hey guys, anyone know where the snappy builder repos are being pulled from?\n<dr1337> like this one ? https://github.com/alexgg/ccimx6sbc-snappy\n<qengho> blackboxsw: No idea, without looking in source code.\n<blackboxsw> qengho, no worries, it seems intermittent\n<blackboxsw> I've seen many clients already update our snap via the auto-refresh mechanism.\n<blackboxsw> so I don't know if it was a temporary 404 of some content during a rollout\n<dr1337> Does anybody know what SNAP_CONTEXT environmental variable is for?\n<qengho> https://github.com/snapcore/snapd/search?utf8=%E2%9C%93&q=SNAP_CONTEXT\n<mup> PR snapd#2165 closed: snap: stop using ubuntu-core-launcher, use snap-confine <Created by mvo5> <Merged by niemeyer> <https://github.com/snapcore/snapd/pull/2165>\n<mup> PR snapd#2166 closed: snap: stop using ubuntu-core-launcher, use snap-confine <Created by niemeyer> <Merged by niemeyer> <https://github.com/snapcore/snapd/pull/2166>\n<zyga> jdstrand: https://github.com/snapcore/snap-confine/pull/172/files\n<mup> PR snap-confine#172: Improve decoding of mount flags <Created by zyga> <https://github.com/snapcore/snap-confine/pull/172>\n<zyga> jdstrand: https://github.com/snapcore/snap-confine/pull/172/files\n<zyga> oh, sorry\n<jdstrand> zyga: heh, nice :)\n<jdstrand> I'm not going to review it right this second as I want to be more awake for the review, but added to my list\n<dr1337> qengho: thanks\n<mup> Bug #1621525 changed: classic environment variables for daemon snaps <Snappy:Fix Released> <https://launchpad.net/bugs/1621525>\n<ogra_> cjwatson, did some LP branch land last night or did the store change .... ?\n<ogra_> Launchpad uploaded this snap package to the store, but the store failed to\n<ogra_> scan it:\n<ogra_>   __all__: The upload does not appear to be a valid package.\n<ogra_> https://launchpad.net/~snappy-dev/+snap/core/+build/7240\n<ogra_> gotthat for all core and ubuntu-core builds tonight ...\n<cjwatson> ogra_: src/devportal/clickapp_forms.py:            msg = _(\"The upload does not appear to be a valid package.\")\n<cjwatson> ogra_: so this is an SCA problem I'll bet\n<cjwatson> last SCA rollout was Friday though\n<cjwatson> and this succeeded yesterday\n<ogra_> cjwatson, yeah, weird ... i spoke to cprov when smoking about it\n<ogra_> he is taking a look now\n<cjwatson> ogra_: could yet be that we're sending the wrong data in the form, but the \"__all__\" smells of a bug on the SCA side to me\n<ogra_> yeah, smells like it mis-takes the architecture for the name or some such\n<cjwatson> ogra_: I don't think that's architecture, I think that's more like the __all__ special name in Python\n<cjwatson> given the double underscores\n<ogra_> hmm, yeah, or that :)\n<cjwatson> but there is no good reason for that to leak into error messages absent a bug :)\n<mup> PR snapd#2167 opened: Do not remove seed <Created by chipaca> <https://github.com/snapcore/snapd/pull/2167>\n<kyrofa> enoch85, you trying to reach me?\n<mup> PR snapd#2168 opened: snap/squashfs: try to hard link instead of copying. Also, switch to osutil.CopyFile for cp invocation <Created by chipaca> <https://github.com/snapcore/snapd/pull/2168>\n<zyga> jdstrand: hey, can you please ack and land https://github.com/snapcore/snap-confine/pull/172\n<mup> PR snap-confine#172: Improve decoding of mount flags <Created by zyga> <https://github.com/snapcore/snap-confine/pull/172>\n<zyga> Pharaoh_Atem: hey\n<zyga> Pharaoh_Atem: can you perhaps get into the xdistro room if you are not in a session now\n<dr1337> ogra_ is the system-a and system-b partition structure with writable still apply to the /snap partition structure?\n<dr1337> what about /var/snap ?\n<ogra_> dr1337, thats dead since 15.04\n<dr1337> :/\n<dr1337> ogra_ where's the new documentation?\n<mup> PR snapcraft#777 closed: go plugin: don't put debugging symbols in generated binaries <Created by teknoraver> <Closed by teknoraver> <https://github.com/snapcore/snapcraft/pull/777>\n<cprov> ogra_: other LP built snaps are working fine, including store release. Come by, when you have time, so we can take a closer look on what's going on and how to improve the error message.\n<cjwatson> ogra_,cprov: c-r-t passes on that snap, at least; I wonder if the scan data is nonsense\n<cprov> cjwatson: what's the LP snap url ?\n<cjwatson> cprov: https://launchpad.net/~snappy-dev/+snap/core/+build/7241\n<cjwatson> cprov: well, ogra_ reported https://launchpad.net/~snappy-dev/+snap/core/+build/7240, but either way\n<cprov> cjwatson: yeah, same error\n<ogra_> yeah, i got a whole set of ten snaps that exposed it\n<cprov> cjwatson: the error is indeed coming from the store, src/devportal/clickapp_forms.py :-/\n<cjwatson> cprov: William pointed out that the __all__ bit probably means it's a django form-global error\n<cjwatson> was anything deployed yesterday?  CUD say?\n<cprov> cjwatson: which seems to be accurate.\n<Son_Goku> zyga: it begins... https://github.com/Conan-Kudo/snapcraft/commit/c960914b97440e2dca7a66c22c07438d809590fc\n<cjwatson> ogra_: the failure is because /var/lib/snapd/void changed from mode 0700 to mode 0000\n<cjwatson> ogra_: this appears to crash the review tools\n<ogra_> woah\n<ogra_> thats mvo'S fault then i guess. he changed something regarding the writable paths yesterday that could cause this\n<ogra_> hmm, he says it must be the review tools\n<cjwatson> the same version of the review tools seem to work for me\n<ogra_> with 0700 you mean ?\n<cjwatson> with 0000\n<ogra_> hmm, so why dont they work in the store then\n<cjwatson> but I don't know SCA well enough, maybe there's some confinement going on or something\n<ogra_> yeah, sounds like an environmental problem then\n<cjwatson> cprov: do you know if this error was directly from click-review, or if it was from the SCA task?\n<enoch85> kyrofa: I was, but I solved it with oparoz\n<qengho> Who approves new app names for Ubutu snap store? I thought it was automatic if not in a blacklist.\n<qengho> The FJKong tried to register something. It awaits some review or something.\n<ogra_> a  name that was already taken ?\n<ogra_> (usually it does not block)\n<qengho> I can not imagine it was taken.\n<ogra_> then it should just work i think ... (definitely did for me the last times i registered one, though admittedly that was a while ago)\n<qengho> Me too.\n<FJKong> ogra_: thanks I got the problem solved\n<FJKong> I got answer from cprov\n<qengho> Should all names be suffixed with a hyphen and a username? FJ wanted to register 'qrq'. There is no chance that there will be a conflict in names.\n<cprov> qengho: only in the case the requester is not the upstream or doesn't have a clear relation with it.\n<mup> PR snapd#2169 opened: interfaces/builtin: finish decl based checks <Blocked> <Critical> <Created by pedronis> <https://github.com/snapcore/snapd/pull/2169>\n<FJKong> cprov: I think this package is no longer maintained any more by upstream\n<qengho> FJKong: I guess you need to become upstream!\n<FJKong> ye, glad to do that\n<qengho> Okay, not a snappy problem then.\n<cjwatson> ogra_: narrowed down.  can you please file a bug against software-center-agent for this?\n<cjwatson> ogra_: working on a fix\n<ogra_> doing ...\n<ogra_> cjwatson, bug 1634443 (feel free to adjust summary/description to be  more accurate)\n<mup> Bug #1634443: changing directories like /var/lib/snapd  to 0000 mode causes review-tools to misbehave <Software Center Agent:New> <https://launchpad.net/bugs/1634443>\n<kyrofa> enoch85, good deal\n<ogra_> lool, https://bugs.launchpad.net/bugs/1621380\n<mup> Bug #1621380: console-conf should allow to configure a hostname <Snappy:New> <subiquity (Ubuntu):In Progress> <https://launchpad.net/bugs/1621380>\n<lool> ogra_: added to notes, thakns\n<bencc> do I need to install something to run snap packages on ubuntu 16.04 server?\n<Chipaca> bencc, \"apt install snapd\" should be enough\n<bencc> Chipaca: thanks\n<bencc> I'm considering packaging minio\n<bencc> https://github.com/minio/minio\n<Chipaca> bencc, nice!\n<mup> PR snapd#2170 opened: tests: use the snapd-control-consumer snap from the store <Created by fgimenez> <https://github.com/snapcore/snapd/pull/2170>\n<mup> PR snapd#2164 closed: many: add supports for keeping and finding assertions with different format iterations <Created by pedronis> <Merged by pedronis> <https://github.com/snapcore/snapd/pull/2164>\n<pstolowski> matiasb, ping\n<matiasb> pstolowski, o/\n<pstolowski> matiasb, hey, are you going to join store filtering session?\n<matiasb> pstolowski, I guess I can be there if it helps\n<pstolowski> matiasb, i think there is some confusion about what this session is about.. looks like client-side filtering and we may need to know what store is capable of et\n<pstolowski> etc\n<pstolowski> matiasb, it's in rembrandt\n<matiasb> pstolowski, ack\n<pstolowski> in 4 minutes\n<mup> PR snapd#2171 opened: tests: reenable ubuntu-core tests on qemu <Created by fgimenez> <https://github.com/snapcore/snapd/pull/2171>\n<fgimenez> hey om26er, i'm in potter, well now i'm heading to the coffee machine :)\n<om26er> fgimenez: was just going to ask if you have the TTL cable, now borrowed HDMI from IS.\n<desrt> Chipaca: hihi\n<Chipaca> desrt, o/\n<desrt> Chipaca: got a chance to chat about XDG_RUNTIME_DIR inside of snaps?\n<desrt> am happy to meet in a hallway somewhere if you have some minutes\n<Chipaca> desrt, in half an hour?\n<desrt> sure\n<desrt> i'm in the desktop room if you want to come get me\n<om26er> fgimenez: Hey! if you have a wifi dongle, please bring that as well\n<fgimenez> om26er: ok, are you on the unity8 room?\n<om26er> yes\n<om26er> fgimenez: yes\n<mup> PR snapd#2156 closed: many: move from flags as ints to flags as structs-of-bools <Created by chipaca> <Merged by niemeyer> <https://github.com/snapcore/snapd/pull/2156>\n<desrt> Chipaca: around?\n<mup> PR snapcraft#870 opened: sources: Add RPM source <Created by Conan-Kudo> <https://github.com/snapcore/snapcraft/pull/870>\n<mup> PR snapd#2151 closed: asserts,interfaces/policy: allow OR-ing of subrule constraints in plug/slot rules <Created by pedronis> <Merged by pedronis> <https://github.com/snapcore/snapd/pull/2151>\n<Chipaca> desrt, was around for a bit, missed your message here when i was out\n<Chipaca> desrt, want to come by Potter?\n<desrt> sure\n<lazyPower> lool you're my new best friend :)  *much fanfare*\n<lool> lazyPower: Hmmm?\n<lazyPower> that mail to the snap list about the docker snap being available for testing\n<lool> :-)\n<lazyPower> lool - its suspiciously well timed as well - http://imgur.com/a/7nKwM\n<lool> wow!\n<lazyPower> armhf lab, 6 ssd backed rpi2/3's\n<lazyPower> its not as fast as a proper ssd, but at least the storage is reliable ;)\n<lool> lazyPower: BTW do you know you can network boot rpi3?\n<lazyPower> i do but its a one way change, adn i wasn't ready to commit\n<lool> yeah, same here  :-)\n<lazyPower> i have been following the discussion on those addon wifi cards\n<lazyPower> sounds interesting enough\n<lazyPower> when we can maas enlist these boards, i'll be in nirvana\n<lool> lazyPower: is there a maas driver for devices without bmc?\n<lazyPower> i dont think so, but i'm not positive. I'd have to poke the #maas group\n<lool> lazyPower: how do you intend to drive power from maas for the rpis?\n<lazyPower> lool - well, the idea is that any time the board boots, it should read and attempt a pxe boot. maas will not re-pxe boot a provisioned machine so it should hten default to booting off the curtained disk\n<lazyPower> so i could in theory build a usb power brick with some additional love from a pi that can change power states on the ports\n<lazyPower> but thats WIP that has yet to be done, and that would be my first hardware hack in a heck of a long time\n<lazyPower> but i'm game to spend some weekends cycling on it\n<niemeyer> rharper: ping\n<rharper> niemeyer: here\n<niemeyer> rharper: Heya\n<rharper> hey\n<niemeyer> rharper: Looking into that cloud-init detail from PR snapd#2160\n<mup> PR snapd#2160: image: tweak the cloud-init configuration <Created by mvo5> <https://github.com/snapcore/snapd/pull/2160>\n<mup> Bug #1620442 changed: snap fails because XDG_RUNTIME_DIR is set to /run/user/1000 <snapd-interface> <Snappy Launcher:Triaged by zyga> <https://launchpad.net/bugs/1620442>\n<lazyPower> lool - i was actually looking for a programmable usb hub/power-brick, and the only one i found was intended for telescope equipment, and its to the tune of 250 USD which is quite expensive for what its doing.\n<mup> PR snapd#2172 opened: asserts,interfaces/policy: implement on-classic plug/slot constraints <Created by pedronis> <https://github.com/snapcore/snapd/pull/2172>\n<lazyPower> lool - so seems like we're also hitting an edge of a product market that doesn't exist yet\n<niemeyer> rharper: How does the logic take place when there is both a default cloud.cfg and something else on .d?\n<rharper> niemeyer: cloud-init does a dictionary based merging of all of the yaml cfg files present\n<rharper> so loading /etc/cloud/cloud.cfg and any *.cfg that's yaml in /etc/cloud/cloud.cfg.d\n<niemeyer> rharper: How do we take an option off if they're mergeD?\n<rharper> I believe setting the value to None, or empty should suffice\n<niemeyer> rharper: Ok, so in theory if we use the full cloud.conf, will it work the same way?\n<niemeyer> rharper: Well, in practice actually? :)\n<iliv_> is there a way to specify a target for make in the snapcraft.yaml file?\n<rharper> niemeyer: I can test that quickly by duplicating /etc/cloud/cloud.cfg and putting that in /etc/cloud/cloud.cfg.d/cloud.cfg\n<rharper> niemeyer: I expect it to work the same; yes\n<niemeyer> rharper: Thanks, it'd be nice to have some certainty about how this work as we'll be baking it into snapd proper.. if it's just a sum, then that's nicer indeed\n<lool> lazyPower: one of the old ones we used was http://www.digital-loggers.com/lpc.html\n<lool> lazyPower: but it's still fairly expensive and in my case the US power sockets are annoying\n<lazyPower> ah yeah i was hoping to avoid the AC power plug all together and get power-controlled USB ports instead\n<lazyPower> but this is a good lead, i should look into getting a managed power-switch\n<rharper> niemeyer: in general though, we'd like to avoid duplicating the default cloud.cfg in the gadget;\n<niemeyer> rharper: I'm still not entirely sure that's a good idea, but as long as the results of including a full cloud.cfg are the same, that should be okay\n<rharper> niemeyer: to be fair, the current cloud.conf file was never the full config; for example, it left off the 05_logging.cfg which is in /etc/cloud/cloud.cfg.d/ ... so current users of that miss configuring that and cloud-init.log remains empty\n<rharper> niemeyer: I'm interested in any scenario you think might not work ...  ;\n<lazyPower> lool but to be fair, i think i'll wait for that maas work first :) then i'll invest in a managed power switch\n<lazyPower> until then, the plugin will be \"manual\" - as in, i get off my bum and to plug/unplug the board.\n<lazyPower> s/to/go/\n<niemeyer> rharper: The problem is cloud.cfg changing behind the gadget's back, which is exactly the motivation for doing this\n<niemeyer> rharper: Somebody cooking an image for a particular environment will not expect these settings to magically change after an update\n<rharper> niemeyer: right, if the core snap (or cloud-init snap) updated;\n<niemeyer> rharper: Which it does all the time, right? :)\n<rharper> the cloud.cfg is pretty static actually\n<rharper> but the concern you raise is real\n<niemeyer> rharper: Right, but if the point is that it's okay because it doesn't change, then why are we doing this? :)\n<rharper> because almost zero folks copying in the correct cloud.cfg and it clobbered the default configureation\n<rharper> this meant that cloud-init ran but didn't do anything as the list of datasources and config modules to run was empty\n<niemeyer> rharper: Can you rephrase this?  I didn\n<niemeyer> 't get the real point behind the comment\n<rharper> sure:  previous behavior was:  gadget needs 'cloud.conf' or cloud-init is disabled;  if cloud.conf exists, copy cloud.conf to /etc/cloud/cloud.cfg;  the overlay of cloud.cfg requires extracting the default cloud.cfg and the contents of /etc/cloud/cloud.cfg.d/*.cfg to bundle the correct default configuration\n<rharper> ideally we'd not punish cloud-init users by requiring that assembly of configuration into a single file\n<niemeyer> rharper: In the previous phrasing you mentioned a bug (didn't do anything because ...).. what was the cause/consequence?\n<rharper> niemeyer: the bug was that the conf clobbers the default cloud-init config;\n<niemeyer> rharper: Okay.. I thought they were actually trying to clobber it\n<rharper> niemeyer: hrm; ok\n<rharper> niemeyer: I do think that puts almost too much burden on gadget creator to understand all of cloud-init's defaults (or at least to learn how to extract it all from cloud-init deb)\n<rharper> niemeyer: I agree that if a gadget wanted to disable the default config then overwriting the cloud.cfg in the core snap is the right way to do that;\n<rharper> niemeyer: I don't think folks would realize that they might also need the 05_logging.cfg and other defaults to get the same behavior one would get on a cloud-image\n<niemeyer> rharper: There's a grub.conf right next to it, and a gadget.yaml with a detailed specification of partitions..\n<niemeyer> rharper: I'm more concerned about behavior changing behind people's back than about them having to cargo cult a nice example\n<rharper> niemeyer: isn't that a general concern w.r.t conf files versus code in the core snap  ?\n<niemeyer> rharper: Hmm.. in which sense?\n<rharper> we could include a configuration file for  some other package in the core snap and an update could change behavior despite the config in the gadget\n<iliv_> is there a way to make snapcraft cd into a specific directory before calling the make plugin? in this case, a Makefile includes another Makefile and the path to the second file is relative.. so it never gets included as apparently snapcrafts cwd is not where the first Makefile resides.\n * iliv_ wondering if ogra_ might be able to help. He usually does :P\n<nacc> iliv_: i believe you might need to write a custom plugin then (pretty easy to do)\n<nacc> iliv_: it can probably inherit almost everything from the make plugin, except for the actual building step which knows about the details of your setup\n<iliv_> hmm\n<iliv_> alright\n<iliv_> thanks nacc\n<iliv_> where do I find make plugin's source code btw?\n<nacc> iliv_: that's what i've done in the past, at least\n<nacc> iliv_: it should all be in github (snapcraft iirc)\n<zyga> jdstrand: hey\n<zyga> jdstrand: I got notified about this bug earlier https://bugs.launchpad.net/snap-confine/+bug/1620442\n<mup> Bug #1620442: snap fails because XDG_RUNTIME_DIR is set to /run/user/1000 <snapd-interface> <Snappy Launcher:Triaged by zyga> <https://launchpad.net/bugs/1620442>\n<zyga> jdstrand: it looks easy technically but I wanted to ask you about your opinion first\n<mup> PR snapd#2171 closed: tests: reenable ubuntu-core tests on qemu <Created by fgimenez> <Merged by niemeyer> <https://github.com/snapcore/snapd/pull/2171>\n<mup> PR snapd#2173 opened: overlord/snapstate: move trash cleanup to a cleanup handler <Created by chipaca> <https://github.com/snapcore/snapd/pull/2173>\n<mup> PR snapd#2174 opened: store: send supported max-format when retrieving assertions <Created by pedronis> <https://github.com/snapcore/snapd/pull/2174>\n<Chipaca> jdstrand, whereabouts are you?\n<mup> PR snapd#2132 closed: interfaces/builtin: enable out of process providers for locationd <Created by vosst> <Merged by jdstrand> <https://github.com/snapcore/snapd/pull/2132>\n<Chipaca> jdstrand, dude we can tell you're not at the museum :-p\n<mup> PR snapd#2157 closed: boot,image,overlord,partition: read/write boot variables in single operation <Created by mvo5> <Merged by mvo5> <https://github.com/snapcore/snapd/pull/2157>\n<mup> PR snapd#2167 closed: snapstate, devicestate: do not remove seed <Created by chipaca> <Merged by chipaca> <https://github.com/snapcore/snapd/pull/2167>\n<mup> PR snapd#2174 closed: store: send supported max-format when retrieving assertions <Created by pedronis> <Merged by pedronis> <https://github.com/snapcore/snapd/pull/2174>\n<mup> PR snapd#2160 closed: image: tweak the cloud-init configuration <Created by mvo5> <Closed by niemeyer> <https://github.com/snapcore/snapd/pull/2160>\n<mup> PR snapd#2168 closed: snap/squashfs: try to hard link instead of copying. Also, switch to osutil.CopyFile for cp invocation <Created by chipaca> <Merged by chipaca> <https://github.com/snapcore/snapd/pull/2168>\n<mup> PR snapd#2154 closed: cmd/snap: make snap run not talk to snapd for finding the revision <Created by mvo5> <Merged by mvo5> <https://github.com/snapcore/snapd/pull/2154>\n<mup> PR snapd#2170 closed: tests: use the snapd-control-consumer snap from the store <Created by fgimenez> <Merged by pedronis> <https://github.com/snapcore/snapd/pull/2170>\n<jdstrand> Chipaca: yeah, not there\n<jdstrand> Chipaca: in my hotel room\n<Chipaca> jdstrand, we're in Potter, if you're feeling lonely\n<jdstrand> I'm feeling quite sleepy after last night tbh :)\n<Chipaca> jdstrand, but only if you have pants on\n<jdstrand> ya, you caught me there.  ;) I think I am going to call it a night in a few\n<jdstrand> zyga: I saw bug #1620442. on touch we set that to somewhere in /run and in snapd we currently allow: /{dev,run}/shm/snap.@{SNAP_NAME}.**\n<mup> Bug #1620442: snap fails because XDG_RUNTIME_DIR is set to /run/user/1000 <snapd-interface> <Snappy Launcher:Triaged by zyga> <https://launchpad.net/bugs/1620442>\n<jdstrand> zyga: actually that rule is irrelevant\n<jdstrand> zyga: but I don't think the bind mount is particularly necessary, we could just add an apparmor rule for /run/user/*/snap.$SNAP/**, set XDG_RUNTIME_DIR to point to that and mkdir\n<jdstrand> zyga: can you think of why it should be a bind mount? I mean, it is already honoring the envvar\n<jdstrand> zyga: (and this is something ubuntu-app-launch on Touch would set)\n<mup> PR snapd#2143 closed: overlord: check that the first installed gadget matches the model assertion <Created by pedronis> <Merged by pedronis> <https://github.com/snapcore/snapd/pull/2143>\n<mup> PR snapd#2172 closed: asserts,interfaces/policy: implement on-classic plug/slot constraints <Created by pedronis> <Merged by pedronis> <https://github.com/snapcore/snapd/pull/2172>\n<mup> PR snapd#2175 opened: overlord: checks for kernel installation/refresh based on model assertion and previous kernel <Created by pedronis> <https://github.com/snapcore/snapd/pull/2175>\n<mup> PR snapd#2123 closed: daemon: ensure `snap create-user --known` errors on classic (unless --force-managed is added) <Created by mvo5> <Merged by niemeyer> <https://github.com/snapcore/snapd/pull/2123>\n<mup> PR snapd#2173 closed: overlord/snapstate: move trash cleanup to a cleanup handler <Created by chipaca> <Merged by niemeyer> <https://github.com/snapcore/snapd/pull/2173>\n<k_> Hi, is there a way to test snap on centos 7?\n<mup> PR snapd#2122 closed: snappy: disable auto-import of assertions on classic <Created by mvo5> <Merged by niemeyer> <https://github.com/snapcore/snapd/pull/2122>\n<mup> PR snapd#2176 opened: store,daemon,overlord: download things to a partials dir <Created by chipaca> <https://github.com/snapcore/snapd/pull/2176>\n<ypwong> slangasek, you may want to look at https://bugs.launchpad.net/ubuntu-image/+bug/1634557\n<mup> Bug #1634557: The writable partition is corrupted using the latest ubuntu-image(0.8 ) <Ubuntu Image:New> <https://launchpad.net/bugs/1634557>\n<mup> PR snapd#2177 opened: many: use the new systemd backend for configuring GPIOs <Created by zyga> <https://github.com/snapcore/snapd/pull/2177>\n<mup> PR snapd#2178 opened: snap: spool assertion candidates if snapd is not up yet <Created by mvo5> <Conflict> <https://github.com/snapcore/snapd/pull/2178>\n<slangasek> ypwong: hi - I had seen the bug and was going to raise this with barry today.  This is listed as a regression vs. 0.7?  where does this version of the package (0.8+17.04ubuntu1) come from?  that's not a version that's in the archive\n<mup> PR snapd#2179 opened: remove silly stuff <Created by mvo5> <Conflict> <https://github.com/snapcore/snapd/pull/2179>\n<slangasek> ypwong: ok, reproduced and it seems to not be a regression - we were just being spared this being an issue on the pi3 because of the firstboot autoresizing from the initramfs fixes it before we ever mount the rootfs\n<adam__> hello, I am looking at using ubuntu core snappy as the OS of choice for a raspberry pi solution to communicate with a webserver and some connected hardware via a serial port. I already have a node app that I want to repackage as a snap, but I am struggling to find the information that I need online: 1) Can I publish snaps privately, e.g. with proprietary closed source code and still make use of the auto-update functionality? 2) Can I \n<rhollan> Is there a snappy package that has networking utils, specifically bridge-utils? I want to bridge two docker containers to the hosts interface and have them get internal IP addresses and gateways and dns servers therefrom\n<rhollan> I don't have any bridge utils on the host side in snappy\n<mup> PR snapd#2180 opened: overlord/snapstate: two bugs for one <Created by chipaca> <https://github.com/snapcore/snapd/pull/2180>\n<Chipaca> ^ fix for #1628914 :-D\n<mup> Bug #1628914: ubuntu-core edge image switched to stable channel unpredictably and became unusable <Snappy:In Progress by chipaca> <https://launchpad.net/bugs/1628914>\n * Chipaca ~> bed\n<mup> PR snapd#2179 closed: remove silly stuff <Created by mvo5> <Closed by chipaca> <https://github.com/snapcore/snapd/pull/2179>\n#snappy 2016-10-19\n<mup> Bug #1634730 opened: 500 error when installing snap package <Snappy:New> <https://launchpad.net/bugs/1634730>\n<jdstrand> jjohansen: here is your bug: https://bugs.launchpad.net/ubuntu/+source/linux/+bug/1634753\n<mup> Bug #1634753: srcname from mount rule corrupted under load <aa-kernel> <AppArmor:In Progress by jjohansen> <linux (Ubuntu):Triaged> <linux (Ubuntu Xenial):Triaged> <linux (Ubuntu Yakkety):Triaged> <https://launchpad.net/bugs/1634753>\n<jjohansen> zyga: debs for the fixed kernel are in http://people.canonical.com/~jj/snap/\n<ogra_> pitti, should /etc/netplan/00-snapd-config.yaml be world readable ? (i see my WEP password in there)\n<pitti> ogra_: I guess you just answered that yourself :)\n<ogra_> well, want a bug ?\n<ogra_> :)\n<pitti> ogra_: sure, sounds like a good idea (although it's not \"my\" bug)\n<pitti> what creates that, console-conf?\n<ogra_> oh, i thought netplan itself ...\n<ogra_> but yeah, might be console-conf\n * ogra_ files bug 1634775 ... for mwhudson \n<mup> Bug #1634775: /etc/netplan/00-snapd-config.yaml should not be world readable <Snappy:New> <subiquity (Ubuntu):New> <https://launchpad.net/bugs/1634775>\n<mup> Bug #1634775 opened: /etc/netplan/00-snapd-config.yaml should not be world readable <Snappy:New> <subiquity (Ubuntu):New> <https://launchpad.net/bugs/1634775>\n<mup> PR snapd#2181 opened: client: add a few explicit error types (around the request cycle) <Created by chipaca> <https://github.com/snapcore/snapd/pull/2181>\n<Son_Goku> zyga: https://github.com/zyga/snapcore-fedora/pull/7\n<mup> PR zyga/snapcore-fedora#7: Add SELinux policy module subpackage <Created by Conan-Kudo> <https://github.com/zyga/snapcore-fedora/pull/7>\n<cjwatson> ogra_: the store should be properly fixed now to handle mode 0 directories in snaps\n<ogra_> yay !\n<iliv__> hey ogra_. did you see by chance my question from yesterday about a Makefile included in a Makefile via relative path?\n<zyga> Son_Goku: thank you :)\n<mup> PR snapd#2180 closed: overlord/snapstate: two bugs for one <Created by chipaca> <Merged by chipaca> <https://github.com/snapcore/snapd/pull/2180>\n<ogra_> iliv__, yes, but i'mm at a sprint this week ... how does your \"source:\" entry look like ?\n<kyrofa> zyga, ping\n<mup> PR snapd#2182 opened: tests/lib/fakestore/cmd/fakestore: trivial typo fix <Created by chipaca> <https://github.com/snapcore/snapd/pull/2182>\n<chihchun> barry: hi, is there a xenial ppa for ubuntu-image?\n<ogra_> chihchun, you should really use the snap\n<chihchun> ogra_: if there is snap on macos and windows, yes, I will :-)\n<kyrofa> ogra_, I'd love to see a lightning talk on ubuntu-image\n<ogra_> fgimenez, http://paste.ubuntu.com/23347670/\n<ogra_> kyrofa, hmm\n<kyrofa> ogra_, not saying that should be you... but barry isn't here, so... ;)\n<ogra_> kyrofa, yeah ... i get it ... the issue is that the key setup, creating an assertion etc\n<ogra_> .... are rather complex ...\n<kyrofa> ogra_, time-intensive?\n<kyrofa> ogra_, are you going to the hacking session tonight?\n<kyrofa> ogra_, if so, how would you feel about just getting together and give me a tutorial?\n<ogra_> kyrofa, https://docs.google.com/document/d/1cJvRnpoQyLvY6pOLFPgUxMHrFVBCDNwAlrORARBiZlU/edit\n<ogra_> i could probably run a talk along that ...  but i'm not sure if it is fully up to date ( sergio is so fast improving things sometimes ;) )\n<mup> PR snapd#2182 closed: tests/lib/fakestore/cmd/fakestore: trivial typo fix <Created by chipaca> <Closed by chipaca> <https://github.com/snapcore/snapd/pull/2182>\n<dr1337> ogra_ is that a tutorial on building core snap?\n<ogra_> dr1337, no, building an image\n<fgimenez> ogra_: thx!\n<dr1337> ogra_ Nice - I'd love access to that please\n<ogra_> you dont have access ?\n * ogra_ though it is a public doc ... i dont own it\n<dr1337> ogra_ not to that google docs\n<dr1337> ogra_ Have you thought of building an image for QEMU arm?\n<mup> PR snapd#2183 opened: tests/lib/fakestore/cmd/fakestore: make it log, and fix a typo <Created by chipaca> <https://github.com/snapcore/snapd/pull/2183>\n<kyrofa> ogra_, ah, handy document, thank you!\n<ogra_> dr1337, i just noticed it is now in the snapcraft.io tree https://github.com/CanonicalLtd/snappy-docs/blob/master/core/images.md so you can read it from there\n<dr1337> ogra_ thanks!\n<mup> Bug #1634822 opened: Console-conf needs a cancel button <Snappy:New> <https://launchpad.net/bugs/1634822>\n<mup> PR snapd#2184 opened: tests/lib/fakestore: fix logic to distinguish assertion not found errors <Created by pedronis> <https://github.com/snapcore/snapd/pull/2184>\n<Chipaca> davmor2, wrt bug 1634822, I'm sorry your system is sore\n<mup> Bug #1634822: Console-conf needs a cancel button <Snappy:New> <subiquity (Ubuntu):New> <https://launchpad.net/bugs/1634822>\n<mup> PR snapd#2183 closed: tests/lib/fakestore/cmd/fakestore: make it log, and fix a typo <Created by chipaca> <Merged by chipaca> <https://github.com/snapcore/snapd/pull/2183>\n<mup> PR snapd#2181 closed: client: add a few explicit error types (around the request cycle) <Created by chipaca> <Merged by chipaca> <https://github.com/snapcore/snapd/pull/2181>\n<mup> PR snapd#2184 closed: tests/lib/fakestore: fix logic to distinguish assertion not found errors <Created by pedronis> <Merged by chipaca> <https://github.com/snapcore/snapd/pull/2184>\n<mup> PR snapd#2175 closed: overlord: checks for kernel installation/refresh based on model assertion and previous kernel <Critical> <Created by pedronis> <Merged by pedronis> <https://github.com/snapcore/snapd/pull/2175>\n<ogra_> ToyKeeper, http://www.transcend-info.com/Products/No-401 and something like https://www.amazon.com/SD-to-Micro-Adapter/dp/B0143QFXYO\n<ogra_> ToyKeeper, http://www.transcend-info.com/Products/No-401 and something like https://www.amazon.com/SD-to-Micro-Adapter/dp/B0143QFXYO\n<mup> PR snapd#2185 opened: interfaces/builtin: home base declaration rule using on-classic for its policy <Created by pedronis> <https://github.com/snapcore/snapd/pull/2185>\n<iliv__> ogra_, the source: entry looks like this. source: parts/app/src/modules/\n<mup> Bug #1634880 opened: Interface for accessing lxd <snapd-interface> <Snappy:New for kalikiana> <https://launchpad.net/bugs/1634880>\n<mup> Bug #1634885 opened: Removing /writable/ kills the system <Snappy:New> <https://launchpad.net/bugs/1634885>\n<mup> Bug #1634890 opened: File system not resized in Raspberry Pi 3 <Snappy:New> <https://launchpad.net/bugs/1634890>\n<barry> chihchun_afk, kyrofa good morning (here :).  we're using this ppa but i wouldn't necessarily count on it.  it's mostly for testing: https://launchpad.net/~canonical-foundations/+archive/ubuntu/ubuntu-image/+packages\n<kyrofa> barry, feels like morning here, too\n<barry> chihchun_afk, kyrofa but for xenial, i would also recommend just using the snap\n<barry> kyrofa: it's always morning somewhere!\n<mup> PR snapd#2186 opened: asserts: bump snap-declaration to allow signing with new-style plugs and slots <Created by emgee> <https://github.com/snapcore/snapd/pull/2186>\n<perrito666> hello people, I have a few doubts here, I am trying to build a snap for vim8 with a particular set of compile flags, how do I specify which packages this requires to run afterwards?\n<ogra_> perrito666, \"stage-packages\" if you mean the binaries you want installed alongside\n<perrito666> ogra_: yep, I had a feeling it was that but the wording in the docs is either not clear or beyond my english-fu\n<perrito666> ogra_: tx a lot\n<mup> Bug #1634909 opened: Disabling pc||pc-kernel||core should give a warning message <Snappy:New> <https://launchpad.net/bugs/1634909>\n<perrito666> and since I am here, lets say I specify a git repo as the \"source\" for the make plugin, is there a way to indicate the tag/checkout?\n<ogra_> ppisati, hmm, the kernel in -proposed looks good so far, but i did not get a wlan0 device in /proc/net/dev on first boot (second boot is fine)\n<ogra_> trying to repro that now\n<ppisati> ogra_: raspi?\n<ogra_> yep\n<ogra_> the uart error is gone at least\n<ogra_> and there was no wlan oops either\n<ogra_> probably it was just a glitch, lets see, trying the second time now\n<ppisati> ogra_: i remember there was a wlan in... console-conf\n<ogra_> yeah, i used wired though ... and there was no wlan0 in /proc/net/dev after i logged in via ssh\n<ppisati> ogra_: though i couldn't configure that (it kept timing out when trying to configure)\n<ppisati> ogra_: uhm k\n<ogra_> i have test images at http://people.canonical.com/~ogra/snappy/all-snaps/\n<ppisati> ogra_: did you run your script or did you rebuild the kernel.snap manually?\n<ogra_> ppisati, https://code.launchpad.net/~ogra/+snap/pi2-kernel/+build/7441 i got a hacked up version of the script running in a +junk tree now\n<ogra_> that forcefully pulls from -proposed\n<ppisati> ogra_: k\n<ogra_> GRR\n<ogra_> Network configuration timed out; please verify your settings.\n<ogra_> damned\n<ogra_> i wonder whyt consoole-conf does ...\n<ppisati> ogra_: yes, it's always like that\n<ogra_> before we had it and when i just used /etc/network/interfaces the wlan always worked\n<ppisati> ogra_: the funny thing is that on secondo boot, all the wifi details are there and it connects fine\n<ogra_> well, i blame either netplan or console-conf ...\n<ogra_> yeah\n<ogra_> as if there was some race\n * ogra_ tries a reset\n<mup> PR snapd#2187 opened: boot:no next boot to the same thing <Created by mvo5> <https://github.com/snapcore/snapd/pull/2187>\n<ppisati> ogra_: so you got the wlan interface this time\n<ogra_> it shows up but doesnt connect\n<ogra_> it did show up in the last try too in the UI but could not be found in /proc/net/dev after finishing the config\n<ppisati> ogra_: yes, that has always been my experience since console-conf entered the image\n<ogra_> right\n<ppisati> btw, how do you ssh if there's no user configure in that image?\n<ppisati> *ssh in\n<ogra_> lets see if it behaves after a reset\n<ogra_> you cant ...\n<ogra_> (which makes debugging console-conf a pain)\n<ogra_> LOL\n<ppisati> ogra_: right, but you said that you sshed in and checked /proc/dev/net/...\n<ogra_> heh\n<ogra_> so after reset the wlan0 interface comes up telling me it is connected in console-conf\n<ppisati> ogra_: yes, that's me experience too\n<ogra_> yes, i configured wired\n<ppisati> oh k\n<ogra_> well, seems to still time out\n<ogra_> sigh\n<ogra_> so i guess no wlan on pi3 for the RC image then\n<ppisati> ogra_: can you ssh in and check if the wlan is there?\n<ogra_> well, i can probably set up wired, lets see ... though usually if console-conf had one error you can forget about the whole thing\n<ppisati> ogra_: right, it usually loses its mind after a failed network config\n<ogra_> yep\n<ogra_> well, we still have two weeks :P\n<ogra_> ppisati, in general the kernel seems to be a lot better though ... something at least ... all oopses gone\n<ogra_> oh my\n<ogra_> now cosole-conf just crashed ... drops me back to \"please press enter\" and if i do that it prints python tracebacks\n<ppisati> ogra_: so, for the BBB panic bug, i tried to install console-conf on classic, reproduce the 'first boot' snappy boot environment and work from there\n<ppisati> ogra_: might be a strategy to debug this\n<ogra_> i did set BBB to verification-done for the sru kernel yesterday already\n<ogra_> ppisati, was the kernel from bug 1627643 the one in proposed ?\n<mup> Bug #1627643: oops on pi3 (seemingly wlan related) <Snappy:New> <linux-raspi2 (Ubuntu):New for p-pisati> <https://launchpad.net/bugs/1627643>\n<ppisati> ogra_: or we punch a hole in the dev image so we can login via the serial console and check what's really going on\n<ppisati> ogra_: yes\n<ogra_> well, i wanted to play with systemd console but didnt have time for that yet\n<ogra_> \\o/\n<ogra_> something at least ... that kernel looks fine\n<ppisati> ogra_: good to know\n<ogra_> do you have an SRU bug that i can tag verification-done ?\n<ogra_> (though i need to test pi2 still)\n<ppisati> ogra_: let me find it\n<ogra_> ogra@localhost:~$ cat /proc/net/dev\n<ogra_> Inter-|   Receive                                                |  Transmit\n<ogra_>  face |bytes    packets errs drop fifo frame compressed multicast|bytes    packets errs drop fifo colls carrier compressed\n<ogra_>   sit0:       0       0    0    0    0     0          0         0        0       0    0    0    0     0       0          0\n<ogra_>     lo:  166400    2080    0    0    0     0          0         0   166400    2080    0    0    0     0       0          0\n<ogra_>   eth0:   83971    1140    0    6    0     0          0         0    13042      83    0    0    0     0       0          0\n<ogra_> ogra@localhost:~$\n<ogra_> hmm\n<ppisati> ogra_: does dmesg say anything wrt wlan?\n<ppisati> ogra_: does it require a fw the wlan on rpi3? i think it does\n<ogra_> http://paste.ubuntu.com/23348754/\n<ogra_> yeah, we have that in the image PPA ... the kernel snap contains it\n<ogra_> (i pulled it from your embedded PPA ages ago)\n<ppisati> ogra_: i need to grab my rpi3, it's in my room\n<ogra_> well, link to the image is above\n * ogra_ needs to test pi2 now ... and if yu give me the SRU bug# i'll set it to verification-done\n<ogra_> (if it works :P)\n<ppisati> ogra_: lsmod?\n<ogra_> sorry, already on the pi2 now\n<ogra_> ah, but i have an lsmod output in my shell history\n<ogra_> one sec\n<ogra_> http://paste.ubuntu.com/23348784/\n<ogra_> ogra@localhost:~$ uname -a\n<ogra_> Linux localhost.localdomain 4.4.0-1028-raspi2 #34-Ubuntu SMP Mon Oct 17 09:44:39 UTC 2016 armv7l armv7l armv7l GNU/Linux\n<ogra_> ogra@localhost:~$\n<ogra_> :)\n<ogra_> pi2 looks GOOD !\n<ppisati> ogra_: ok, i don't have any way to login, nice\n<ogra_> well, wired works\n<ogra_> (we have a switch in the QA room that i use here)\n<ppisati> ogra_: k, i'm in the plenary room now\n<ogra_> yeah, i'll come too\n<mup> PR snapd#2188 opened: tests: wait for file written instead of log entries in the writable-areas test <Created by fgimenez> <https://github.com/snapcore/snapd/pull/2188>\n<Chipaca> davmor2, mksquashfs squashfs-root foo_$i.snap -noappend -comp xz -all-root -no-xattrs\n<mup> PR snapd#2189 opened: asserts,daemon: implement system-user-authority header/concept <Created by pedronis> <https://github.com/snapcore/snapd/pull/2189>\n<ogra_> Chipaca, unless it is a core snap ;) (then without -all-root)\n<Chipaca> ogra_, yeap\n<mup> PR snapd#2186 closed: asserts: bump snap-declaration to allow signing with new-style plugs and slots <Created by emgee> <Merged by pedronis> <https://github.com/snapcore/snapd/pull/2186>\n<mup> PR snapd#2169 closed: interfaces/builtin: finish decl based checks <Blocked> <Critical> <Created by pedronis> <Merged by pedronis> <https://github.com/snapcore/snapd/pull/2169>\n<mup> PR snapd#2185 closed: interfaces/builtin: home base declaration rule using on-classic for its policy <Critical> <Created by pedronis> <Merged by pedronis> <https://github.com/snapcore/snapd/pull/2185>\n<mup> PR snapd#2190 opened: overlord/ifacestate: setup security for slots before plugs <Created by zyga> <https://github.com/snapcore/snapd/pull/2190>\n<mup> PR snapd#2187 closed: boot:no next boot to the same thing <Created by mvo5> <Closed by mvo5> <https://github.com/snapcore/snapd/pull/2187>\n<mup> PR snapd#2191 opened: boot: do not set boot to try mode if the revision is unchanged <Created by mvo5> <https://github.com/snapcore/snapd/pull/2191>\n<mup> PR snapd#2149 closed: Finalize declaration based checks <Blocked> <Critical> <Created by jdstrand> <Closed by pedronis> <https://github.com/snapcore/snapd/pull/2149>\n<lotuspsychje> anyone knows howto list latest snap packages from terminal or ubuntu software on 16.04?\n<lotuspsychje> would be nice to know whats newly added\n<mup> PR snapd#2189 closed: asserts,daemon: implement system-user-authority header/concept <Critical> <Created by pedronis> <Merged by pedronis> <https://github.com/snapcore/snapd/pull/2189>\n<mup> PR snapd#2176 closed: store,daemon,overlord: download things to a partials dir <Created by chipaca> <Merged by chipaca> <https://github.com/snapcore/snapd/pull/2176>\n<mup> PR snapd#2178 closed: snap: spool assertion candidates if snapd is not up yet <Critical> <Created by mvo5> <Merged by chipaca> <https://github.com/snapcore/snapd/pull/2178>\n<mup> PR snapd#2188 closed: tests: wait for file written instead of log entries in the writable-areas test <Created by fgimenez> <Merged by mvo5> <https://github.com/snapcore/snapd/pull/2188>\n<mup> Bug #1635011 opened: /v2/changes/ is not documented in rest.md <Snappy:New> <https://launchpad.net/bugs/1635011>\n<mup> Bug #1635016 opened: Missing dependency on ca-certificates <Snappy:New> <https://launchpad.net/bugs/1635016>\n<mup> PR snapd#2190 closed: overlord/ifacestate: setup security for slots before plugs <Critical> <Created by zyga> <Merged by zyga> <https://github.com/snapcore/snapd/pull/2190>\n<perrito666> interesting, I made a snapcraft.yaml  (http://pastebin.ubuntu.com/23350368/) and it seems to build correctly but when I isntall it 1) my binaries are prefixed with vim-hduran. and 2) they complain of the lack of a .so.0 file which is included in one of the packages I explicitly added to stage-packages any ideas?\n<slangasek> morphis: hi, I see you've marked bug #1634540 as 'critical'; is there a deadline for this work?\n<mup> Bug #1634540: Configuring a static IP address generates a netplan file without a gateway <nplan (Ubuntu):New> <subiquity (Ubuntu):New> <https://launchpad.net/bugs/1634540>\n<mup> PR snapd#2177 closed: many: use the new systemd backend for configuring GPIOs <Critical> <Created by zyga> <Merged by zyga> <https://github.com/snapcore/snapd/pull/2177>\n<jjohansen> zyga: ppa for mvo or ogra_ to snap a kernel from https://launchpad.net/~apparmor-dev/+archive/ubuntu/apparmor-devel/+packages\n<rharper> ogra_: are you aware of any changes to live-build that now purge cloud-init ?  I've been rebuilding the core snap to include newer cloud-init to test out the system-user assertions; this worked last week, today however, in the build log, I see a purge  of cloud-init: The following packages will be REMOVED:\n<rharper>   cloud-init* locales* ubuntu-core*\n<rharper> looking for help in figuring out how to do builds of core snap that include cloud-init so we can get images that work in clouds\n<jgrimm> slangasek, ^^\n<slangasek> rharper, jgrimm: hrm\n<slangasek> I had not heard anything about this; certainly seems like a change we need to revert\n<rharper> slangasek: ok, last good build for me was on 10-13;  10-14 till now, the .manifest doesn't include cloud-init; https://code.launchpad.net/~raharper/+snap/core\n<slangasek> rharper: maybe worth a look at the history of the livecd-rootfs package in the snappy-dev ppa?\n<rharper> yeah, lemme look there\n<rharper> 2 http://ppa.launchpad.net/snappy-dev/image/ubuntu xenial/main amd64 livecd-rootfs amd64 2.420+ppa46 [47.0 kB]\n<rharper> that's the latest, published 10-10\n<rharper> used in both good builds and the current builds that purge\n<rharper> so something else is triggering it\n<eltigre> Hey, what's the state of \"snappy ubuntu core\" on raspberry pi devices? The documentation is outdated, the last available image is a year old, and does it support Raspberry pi 2?\n<eltigre> raspberry pi 3 , I mean\n<eltigre> I like the concept of snappy, but I'm a bit unsure about future device support etc\n<mwhudson> eltigre: pretty sure rpi 2 and 3 are target platforms\n<eltigre> I know rpi 2 is\n<mwhudson> eltigre: there has been some renaming of things recently though, where do you see things being a year old?\n<eltigre> first problem, when I go to https://developer.ubuntu.com/en/snappy/start/ and click the \"Get started on the Raspberry Pi 2 \u00e2\u0080\u00ba\"  the guide tells me to download a normal server image for arm\n<eltigre> I just found newer ubuntu-core images...\n<eltigre> ok, so the 16.04 snappy-core image boots, has an open ssh service, but it doesn't take ubuntu:ubuntu or root:ubuntu or ubuntu:snappy\n<mwhudson> eltigre: you need to configure a user on a vt or serial\n<eltigre> uhm...\n<eltigre> so vt means I need to attach hdmi+keyboard, not even sure how to do \"serial\"\n<eltigre> and I must really have the wrong documentation if this is the only way\n<mwhudson> eltigre: well having every device running ubuntu core having ubuntu:ubuntu be a sudoer is not ideal either!\n<eltigre> The server image has ubuntu:ubuntu and forces you to change the password at first login. For Raspberry Pi I think this security is enough, because you'd have an attacker in your home network scanning your network every minute for newly flashed rpis and then you'd still know because the password changed\n<eltigre> But that's just me. I can understand that. Would be nice to have documentation on this though.\n<mwhudson> yeah, documentation is definitely lacking\n<mwhudson> uh, why am i still waiting for a cloud-init timeout in a pc image?\n<mwhudson> i guess all the people who might know that are asleep\n<mwhudson> rharper: around?\n<mwhudson> this is infuriating\n<mwhudson> i guess i could try to understand what's going on\n#snappy 2016-10-20\n<dr1337> Hi guys is it possible to build an ubuntu image using local snaps defined in the model assertion instead of having to go through the snap store?\n<mup> Bug #1635101 opened: /snap/bin is not added to path for \"sudo su\" <Snappy:New> <https://launchpad.net/bugs/1635101>\n<dr1337_> mwhudson: most of the devs are in Europe so they would be asleep\n<dr1337_> mwhudson: and I agree the documentation is very patchy with lots of different components being constantly rewritten with out of date instructions. I'm almost at the point of giving up on Snappy and going with something easier like ResinOS.\n<ogra_> rharper, we do not purge, but snap prepare-image has a function that disables it if there is no cloud-init config in the gadget snap\n<ogra_> jdstrand, hmm, didnt you recently say you addded linux-generic-bbb to the kernel exceptions so it auto-lands ? https://myapps.developer.ubuntu.com/dev/click-apps/5912/review/rev/5/ is in manual review now\n<jdstrand> ogra_: I did but the store doesn't have it yet\n<ogra_> ah\n<jdstrand> ogra_: approved but not published\n<ogra_> yep, got the mail, thanks :)\n<jdstrand> np\n<ogra_> and published too ... :)\n<mup> PR snapd#2192 opened: snap: fix FTBFS because the buildds do not allow writing to syslog <Created by mvo5> <https://github.com/snapcore/snapd/pull/2192>\n<mup> PR snapd#2192 closed: snap: fix FTBFS because the buildds do not allow writing to syslog <Critical> <Created by mvo5> <Merged by mvo5> <https://github.com/snapcore/snapd/pull/2192>\n<mwhudson> ogra_: ah maybe i need to update my snapd then\n<mwhudson> pitti: yo\n<pitti> hey mwhudson, how are you?\n<mwhudson> pitti: i'm ok\n<mwhudson> pitti: netplan and nameservers, how much work does that sound?\n<pitti> mwhudson: ok, jumping back :)\n<pitti> mwhudson: not that much, I just moved it to the top of my list as it seems to become a blocker RSN?\n<mwhudson> pitti: seems so if https://bugs.launchpad.net/ubuntu/+source/subiquity/+bug/1634540 is critical\n<mup> Bug #1634540: Configuring a static IP address generates a netplan file without a gateway <nplan (Ubuntu):Invalid by pitti> <subiquity (Ubuntu):Fix Committed> <https://launchpad.net/bugs/1634540>\n<mwhudson> because if you configure static addresses and no nameserver you're going to have a hard time talking to the store..\n<mwhudson> i guess we *could* put login.ubuntu.com's ip address in /etc/hosts :-)\n<pitti> mwhudson: well, if you don't configure a nameserver, resolved defaults to 8.8.8.8, so it shoudln't completely fail\n<mwhudson> pitti: oh huh\n<pitti> mwhudson: but it's better to be able to configure it of course\n<mwhudson> pitti: it definitely failed for me in qemu\n<mwhudson> pitti: is that user mode networking being odd?\n<pitti> mwhudson: it would only work if you ... oh crap, this is xenial, so no resolved\n<pitti> nevermind :)\n<mwhudson> ha\n * pitti just doesn't live in stable releases\n<mwhudson> well we already backported netplan itself for this...\n<mwhudson> backporting resolvd does feel a bit large-hammer\n<pitti> nah\n<pitti> we really don't want to do that\n<pitti> mwhudson: both networkd and NM support manual nameservers, so it's just a matter of adding the glue to pass it on, and writing tests\n<pitti> mwhudson: I'll start on that now\n<mwhudson> yeah, networkd looked pretty straightforward at least\n<pitti> mwhudson: getting that into xenial-updates will take a bit longer, but you can park it in your PPA in the meantime\n<mwhudson> (i know nothing about NM really)\n<mwhudson> yeah ppas r us\n<pitti> mwhudson: is yakkety a thing for snappy at all? or just x (and zesty/devel of course)?\n * pitti hopes not -- please no non-LTS releases any more, EVAR\n<mwhudson> just xenial + ppas i think really\n<mwhudson> and of course xenial implies devel release first, not that that rule is being stuck too 100%\n<pitti> I just don't want to repeat the vivid pain :)\n<mwhudson> xnox is in the hague, he can attack anyone who suggests anything like that\n<xnox> pitti, sure.... would you like to maintain yakkety, or whould you like to SRU everything from yakkety to xenial?\n<ogra_> mwhudson, i was just wondering, is VPN support in console-conf on the roadmap ?\n<xnox> people are talking about SRUing all of systemd user session work, and all of perfonal/unity8 as SRUs into xenial for ever.\n<pitti> xnox: I want to forget that yakkety exists :) I want to backport necessary stuff from devel (i. e. z now) to x\n<mwhudson> i'd better get on with the ui for nameservers...\n<pitti> xnox: uh, ambitious :)\n<mwhudson> ogra_: noone has mentioned it to me\n<ogra_> xnox, we should really just SRU zesty altogether :P\n<pitti> it works great!\n<pitti> ship it\n<ogra_> mwhudson, yeah, just came to my mind that IoT setups might want to use it\n<mwhudson> ogra_: is openvpn-client even in core\n<mwhudson> ?\n<pitti> urgh, happy typing of X.509 certificates into your serial console :)\n<ogra_> mwhudson, nops, apparently not\n<mwhudson> sounds like using telnet to debug http/2\n<ahayzen> Hey, has anyone experienced a situation where building a snap in a yakkety container is different to a snap built from in a VM ?  As the snap i've built from the container doesn't work on the host, whereas the one from the VM does and they both have the same size but a different md5sum\n<mwhudson> ogra_: i guess the gadget snap can provide it somehow?\n<ogra_> yeah, well, i will try to discuss it with the team here\n<mwhudson> ogra_: anyway, sounds like a medium term thing ...\n<ogra_> right, not super urgent ... definitely not for the release ... for that getting wifi to work on the pi3 would be a bit more important ;)\n<mwhudson> ogra_: do you have any idea what's actually going wrong there?\n<ogra_> mwhudson, not the slightest .... wlan doesnt work at all ... when you try to configure it it times out ... when you *then* try to do anything else network related ... i.e. try to set up wired, that doesnt work either anymore ....\n<mwhudson> ogra_: but if you run through console-conf on wired, then wlan works?\n<ogra_> btw, i just talked to mvo, we'll seed openvpn stuff so you have something you can later attach to\n<ogra_> iirc (have to test that again) if you configure both, iit doesnt work\n<ogra_> it only works if i use wired only\n<ogra_> it also works if i manually bring up wlan after booting\n<ogra_> fgimenez might be able to give more details, he tests that stuff all day atm\n<mwhudson> pitti: http://paste.ubuntu.com/23352576/ <- does that match planned syntax\n<pitti> mwhudson: looks good; I'm writing test cases like this:\n<pitti>     enblue:\n<pitti>       addresses: [\"192.168.1.3/24\"]\n<pitti>       nameservers:\n<pitti>         search: [lab, kitchen]\n<pitti>         addresses: [8.8.8.8]''')\n<pitti> mwhudson: which is the same thing, just different YAML syntax\n<mwhudson> ogra_: can you do something like create /var/log/journal so the journal persists and then see what ends up in there\n<mwhudson> pitti: wait, it's per interface?\n<pitti> mwhudson: NM seems to have trouble with multiple search domains, argh\n<pitti> mwhudson: yes, it is; nameservers usually are\n<mwhudson> pitti: ok fine, but that's not what https://git.launchpad.net/netplan/tree/doc/netplan.md has :)\n<pitti> mwhudson: right, I'll fix that\n<pitti> that was obviously an error\n<pitti> thanks for pointing out\n * mwhudson rebases :)\n<pitti> mwhudson: http://paste.ubuntu.com/23352599/\n<mwhudson> pitti: looks plausible at least\n<pitti> mwhudson: as I said, NM does not actaully seem to properly configure multiple search domains (I just see \"search lab\" in /etc/resolv.conf), but I hope that won't block you\n<mwhudson> pitti: i don't think that's important here no\n<mwhudson> maybe morphis could say more\n<mwhudson> pitti: you're probably not the ideal person to ask this but do you think it makes sense to allow configuring nameservers when using DHCP for an interface?\n<pitti> mwhudson: it's technically possible to configure this; my gut feeling is that it doesn't make much sense to expose this corner case in the UI, though\n<mwhudson> pitti: ok\n<ogra_> pitti, mwhudson, seeding the openvpn package is enough for you guys to have everything you need to later implement something in netplan and console-conf ?\n<mwhudson> ogra_: i don't think that's something i can answer off the top of my head\n<pitti> ogra_: probably; but doesn't make much sense to seed it until we actually can use it\n<ogra_> well, we release in two weeks, i just want to have all the requirements there so you can get to it later\n<pitti> we can seed it if/once we support it; until then, it's just dead weight\n<pitti> also, I don't think we want to abstract this in any form\n<pitti> if you want to configure openvpn, then add an openvpn config file\n<pitti> this isn't related to different backends like networkd vs. ifupdown vs. NetworkManager\n<ogra_> ok\n<pitti> I mean, maybe we want to put it into the yaml some day, but that shouldn't be a blocker\n<mup> Bug #1631791 changed: ubuntu-core/core unconditionally switches to the stable channel on all-snap images <Snappy:Confirmed> <https://launchpad.net/bugs/1631791>\n<mwhudson> pitti: http://paste.ubuntu.com/23352666/ <- better?\n<ogra_> ppisati, hmm, the uart oops on pi3 is supposed to be fixed with todays -security/-update kernels, right ?\n<ogra_> ppisati, the QA team just showed me an oops that looks suspiciously like it\n<ogra_> ppisati, https://rocket.ubuntu.com/file-upload/E5QyRTm7Xq6nojq3E/photo_2016-10-20_10-39-04.jpg\n<mup> PR snapd#2162 closed: interfaces: add shutdown interface <Critical> <Created by morphis> <Merged by jdstrand> <https://github.com/snapcore/snapd/pull/2162>\n<zyga> Son_Goku: hey\n<zyga> Son_Goku: I pushed some small change\n<zyga> Son_Goku: let's try to run that for real\n<Son_Goku> I just pulled and it built\n<Son_Goku> don't know if it works, though\n<Son_Goku> ah, I'm missing that patch\n * Son_Goku pulls again\n<zyga> Son_Goku: I'm just rebuilding both to install now\n<ppisati> ogra_: cannot open that image\n<ppisati> ogra_: anyhow, >= 4.4.0-1028.34 should be fine\n<ogra_> 4.4.0-1029 is what we (should) have in the store\n<ogra_> hmm, https://launchpadlibrarian.net/290063684/buildlog_snap_ubuntu_xenial_armhf_pi2-kernel_BUILDING.txt.gz\n<ogra_> -1028 actually :)\n<mwhudson> cyphermox: https://github.com/CanonicalLtd/subiquity/pull/175\n<mup> PR CanonicalLtd/subiquity#175: add UI for entering nameservers <Created by mwhudson> <https://github.com/CanonicalLtd/subiquity/pull/175>\n<ogra_> ah, wrong log\n<ogra_> https://launchpadlibrarian.net/290161189/buildlog_snap_ubuntu_xenial_armhf_pi2-kernel_BUILDING.txt.gz\n<ogra_> that has actually -1029\n<ogra_> ppisati, hmm, but only:\n<ogra_> Get:5 http://ftpmaster.internal/ubuntu xenial-security/universe armhf linux-image-raspi2 armhf 4.4.0.1029.29 [2324 B]\n<ogra_> ppisati, where is .34 ?\n<ogra_> (also it would amke sense if you could come over to the snappy room, we are discussion uboot watchdog)\n<ogra_> *discussing\n<ppisati> ogra_: i'm here actually\n<zyga> Son_Goku: hmm, I dont see the snapd-selinux package\n<zyga> Son_Goku: ah, I'm a dork, noatch\n<zyga> noarch*\n<mup> PR snapd#2193 opened: add raw-usb iterface <Created by teknoraver> <https://github.com/snapcore/snapd/pull/2193>\n<zyga> Son_Goku: I need to redo the systemd units a little\n<zyga> Son_Goku: fingers crossed\n<Son_Goku> okay\n<mup> PR snapd#2194 opened: store: retry readyToBuy request <Created by stolowski> <https://github.com/snapcore/snapd/pull/2194>\n<zyga> Son_Goku: trying more\n<zyga> Son_Goku: so I see stuff that seems to imply the selinux policy is not loaded\n<zyga> Son_Goku: how do I reload it?\n<zyga> Son_Goku: I need a few more binaries, iterating\n<mup> PR snapd#2195 opened:  interfaces/builtin: add dcdbas-control interface <Created by mvo5> <https://github.com/snapcore/snapd/pull/2195>\n<alevipri> hello, I've installed libreoffice 5.2 via snap in xenial, then removed libreoffice 5.1 with synaptic\n<alevipri> however now the dash does not show LO icons\n<alevipri> how to fix this?\n<alevipri> I was thinking that the LO snap provides icons too\n<Simooon> Can anyone tell me how I'm supposed to verify that a snap package, made availible by some random developer I don't know, is the real deal, and not some sneaky way of installing a modified version of the program that sends all my data to haxx.ru?\n<Simooon> alevipri, well it is distributed by chanonical, so you would thing they have included everything. Have you tried restarting, to see if it is something that just needs to be reinitialized?\n<alevipri> Simooon already restarted\n<Simooon> alevipri, okay, I just started using snap yesterday, so I'm probably not the right person to help :-P\n<alevipri> before to remove LO 5.1 with synaptic, I notices icone were available for both deb and snap installed applications\n<alevipri> noticed* icons*\n<alevipri> so I can imagine I removed something with synaptic\n<Simooon> alevipri, I don't think synaptic is supposed to be able to touch the snaps\n<alevipri> however I was expected to install a snap containing all dependencies, icons too\n<Simooon> that seems to be the general idea\n<alevipri> Simoon yeah I think it too, however now LO launchers don't show icons\n<Simooon> if synaptics touched the snap by some weird bug or other interaction I don't understand, you can probably restore it to it's original form with the \"snap refresh\" command, however I think it is unlikely that synaptics have been able to touch it.\n<Simooon> worth a try though\n<mup> Bug #1635251 opened: /boot/efi/EFI/boot/ is writable as sudo <Snappy:New> <https://launchpad.net/bugs/1635251>\n<alevipri> Simooon tried but nothing changed\n<Simooon> alevipri, Well that is what I expected :-/\n<Simooon> alevipri,  Have you tried other applications where it worked?\n<mup> PR snapd#2195 closed:  interfaces/builtin: add dcdbas-control interface <Created by mvo5> <Closed by mvo5> <https://github.com/snapcore/snapd/pull/2195>\n<morphis_> pitti: ping\n<pitti> morphis_: pong\n<morphis_> pitti: while you're working on the DNS fix for netplan can you include https://launchpadlibrarian.net/290162595/nplan_0.12~16.04+ppa1_0.12~16.04+ppa2.diff.gz in your next upload as well (if you agree with that change)?\n<pitti> morphis_: no problem -- it's just a small change within that hack, so that doesn't make it any worse\n<morphis_> pitti: I can submit a proper MP as well if you want\n<morphis_> pitti: :-)\n<pitti> morphis_: we don't have the xenial version in VCS\n<morphis_> ah ok\n<morphis_> then nevermind :-)\n<pitti> morphis_: how far are we with dropping that hack?\n<morphis_> pitti: not much further, we're trying to hit deadlines for the final product right now\n<morphis_> but I wanted to check with mvo while being on the sprint in the hague what we can do about this\n<mup> Bug #1635258 opened: File system should 5% Ubuntu-image <Snappy:New> <https://launchpad.net/bugs/1635258>\n<alevipri> Simooon for example krita (snap) works with the correct icon\n<Simooon> alevipri, just installed the telegram app myself, and the icon shows up in the launcher, however the systray (or whatever that thing in the upper right conor is called) does not show the correct icon, but an error message icon instead. Perhaps there are just some general issues with icons still?\n<Simooon> alevipri, anyway I will reboot my system to see if that changes this minor issue\n<alevipri> Simooon the telegram-sergiuseng missing icon on the systray is a old bug\n<alevipri> s*\n<Simooon> alevipri, okay, will not reboot then :-P\n<alevipri> Simooon the point is, why before to remove LO 5.1 (deb) the icons os LO 5.2 (snap) were available?\n<alevipri> I suspect something is missing from the LO snap package\n<mup> PR snapd#2191 closed: boot: do not set boot to try mode if the revision is unchanged <Created by mvo5> <Merged by mvo5> <https://github.com/snapcore/snapd/pull/2191>\n<Simooon> alevipri, and it launched 5.2 before you removed 5.1?\n<Paz_> Hi. This is my first outing with Snappy and I'm trying to include a couple of libraries (.so files) to my snap package using the dump plugin, but having no joy.\n<qengho> Paz_: Where did the library files come from?\n<Paz_> Currently, they are pre-built. The final aim is to build them via snappy\n<qengho> Paz_: This is my long way of asking, why use the \"dump\" plugin? Are you sure that's what you need?\n<qengho> Hmm.\n<Paz_> No I'm not sure. Was using 'copy' plugin, but this is deprecated\n<qengho> Paz_: Okay, let's start at the beginning. What is the error message?\n<Paz_> During the Priming of the library I get the following message...\n<Paz_> No such file or directory: '/home/celldev/Development/snap-telegram-app/stage/moc_sessionmanager.cpp\n<john-mcaleely> awe_, https://docs.google.com/document/d/1a8eydCb_55M6FQdrdZDXZ1Figkh6rLrERMbWO2v2KzI/edit\n<alevipri> Simooon there were 2 .desktop launchers per app, i.e. 1 for calc-deb and 1 for calc-snap\n<qengho> Paz_: Pastebin the entire output, starting after \"snap clean\".\n<mup> Bug #1635264 opened: ufw rules created even though there is no ufw on the system <Snappy:New> <https://launchpad.net/bugs/1635264>\n<Paz_> ok, give me a sec...\n<alevipri> Simooon both worked launching both LO versions and both showed LO icons correctly\n<alevipri> Simooon re-installed libreoffice-gtk with its dependencies\n<alevipri> now icons are shown again\n<alevipri> Simooon my conclusion is that something is missing from the LO snap package\n<Chipaca> pitti, are you around?\n<pitti> Chipaca: yes\n<Paz_> qengho: http://pastebin.com/Cpj3xpeq\n<Chipaca> pitti, hiya. Do you know anything about https://www.freedesktop.org/wiki/Software/systemd/InitrdInterface/ (and in particular about requirements around the shutdown executable)\n<Chipaca> pitti, i mean, do we disable it or anything?\n<Paz_> qengho: This is my YAML file http://pastebin.com/T3ukAnyD\n<pitti> Chipaca: we don't use systemd in the initrd; you can by using dracut instead of initramfs-tools, but I don't have much experience with it\n<Chipaca> pitti, this isn't to use systemd in the initrd; it's a way for systemd to hand control back to initrd on shutdown\n<qengho> Paz_: Does this print two entries?  $ ls -ld snapcraft.yaml telegram/app/deps/libqtelegram-ae/build_desktop\n<ogra_> Chipaca, hmm, i think we throw away the initrd after boot\n<ogra_> so if you expect to do anything with the initrd itself that will likely not work\n<Chipaca> ogra_, one problem at a time :-D\n<ogra_> heh, k\n<pitti> Chipaca: I don't think it actually uses that in Ubuntu; AFAIK pid 1 just exec()s systemd-shutdown (to make sure that all open  fds to the root fd are closed), which then unmounts everything (or rather, remounts r/o)\n<ogra_> and then falls over :P\n<ogra_> pitti, the prob we have here is that we have a mount inception ... the readonly bit of the fs sits inside the rw bit ... both are mounted on shutdown so the writable bit can not be unmounted because the ro bit inside keeps the fd open\n<Paz_> qengho: Yes it does, one for the .yaml file and the other is the directory\n<qengho> Cool.\n<qengho> Paz_: Comment-out your line31, \"stage: [...]\"\n<Paz_> qengho: OK, then run clean and snapcraft again?\n<qengho> Yes please.\n<qengho> Paz_: I don't understand that \"stage: \" list any more. I can't explain what it's supposed to be doing there.\n<Paz_> qengho: I was playing around, so understand if some stuff is nonsensical. Basically, I have 2 pre-built .so files which are needed to build the 'telegram' part. How do I make this visible to that part?\n<Paz_> qengho: I was manually moving these .so files into /lib before to make them visible, but now need this to be done via the YAML file\n<mup> PR snapd#2195 opened:  interfaces/builtin: add dcdbas-control interface <Created by mvo5> <https://github.com/snapcore/snapd/pull/2195>\n<rharper> ogra_: right; I'm not yet building an image; I'm building a new core snap pointed to my PPA so I can get an updated cloud-init into the core snap;  last week the core snap build ended up with my cloud-init in the .manifest;  the last two days the build no longer has it; trying to understand why.\n<ogra_> can you show me your ppa ?\n<rharper> yeah\n<rharper> https://code.launchpad.net/~raharper/+snap/core\n<rharper> those are the snaps; the PPA I point to is here: https://launchpad.net/~raharper/+archive/ubuntu/snapbuilds/+packages\n<Chipaca> pitti, ogra_, so the good news is, it works\n<ogra_> and the bad news ?\n<Chipaca> pitti, ogra_, /run needs to lose the noexec flag, and now i need to figure out if i can write shutdown as a shell script or not :-D\n<Chipaca> ogra_, I'll write it in python just to keep you happy\n * pitti watches ogra explode in anger\n<ogra_> Chipaca, it doesnt need to \"lose the noexec\" completely though, have a shutdown unit that remounts it \"exec\" right before shutdown\n<Chipaca> true dat\n<Chipaca> ogra_, BTW we have /lib/modules and /lib/firmware mounted twice\n<ogra_> which shutdown did you use ? busybox ?\n<ogra_> yeah, thats a bug i guess\n<Chipaca> ogra_, mksh-static\n<ogra_> ah\n<hurricanehrndz> anyone here use the libreoffice snap?\n<Chipaca> ogra_, because the binary needs to be called \"shutdown\"; imagine what happens if I put busybox there\n<Chipaca> ogra_, (spoiler: nothing; the busybox i tried didn't have that applet)\n<ogra_> well, if you put busybox there and create a link called shutdown, it should DTRT\n<ogra_> ah\n<ogra_> right, i was assuming we have the applet enabled\n<Paz_> qengho: Here is the latest snapcraft output with the 'stage' key commented out. http://pastebin.com/4MaLq7qK\n<Chipaca> ogra_, busybox will try to run as the applet even when symlinked\n<ogra_> hurricanehrndz, perhaps you get better results asking in #ubuntu-desktop (where the libreoffice maintainer tends to hang around)\n<ogra_> Chipaca, indeed ... i was assuming the applet is enabled\n<Paz_> qengho: As you can see, it is unable to find the 2 libs, qtelegram-ae and telegramqml\n<Paz_> qengho: I can see the .so files in my parts/.../src directory, however\n<hurricanehrndz> anyhow, has anyone else noticed spell checking does not work in libreoffice snap\n<rharper> ogra_: the build on 10-13 has cloud-init from my PPA in the .manifest, but 10-14 and newer don't;\n<rharper> comparing the build logs, when it's not included, there is an explicit purge of cloud-init* locales* ubuntu-core*;  I we see a 'Removing cloud-init; Purging configuration, and finally Del cloud-init'\n<ogra_> rharper, hmm, your livecd-rootfs is the wrong one\n<rharper> in the working case; there's only the 'Del cloud-init' line; but the files remain present in the core snap (and cloud-init is listed in the manifest)\n<ogra_> rharper, just throw it out\n<rharper> ogra_: I have an older version in my PPA but the logs show I'm picking up the one from the snappy-dev PPA\n<rharper> ogra_: which version of livecd-roofs should I be using?\n<rharper> Get:2 http://ppa.launchpad.net/snappy-dev/image/ubuntu xenial/main amd64 livecd-rootfs amd64 2.420+ppa46\n<rharper> is that not the right one ?\n<ogra_> yeah\n<ogra_> do you also see it getting the ubuntu-core meta package from our PPA ?\n<rharper> let's see\n<rharper> Get:65 http://ppa.launchpad.net/snappy-dev/image/ubuntu xenial/main amd64 ubuntu-core amd64 1.7.2 [2274 B]\n<ogra_> that looks good\n<ogra_> that has a hard dependency on cloud-init\n<rharper> huh\n<rharper> and indeed it pulls it in; I see it get installed\n<rharper> it's the purge part that's new\n<ogra_> well, grab the livecd-rootfs package and take a look at the changelog ... but we ship cloud-init by default in the normal core image ... so i wouldnt see why in your builds it gets removed\n<Simooon> alevipri, You are probably right.\n<ogra_> rharper, do you add/change any dependencies vs the archive cloud-init in your package ?\n<ogra_> that removal looks like you have a dependency on something added\n<ogra_> (and your package gets removed along with this)\n<rharper> ogra_: interesting\n<rharper> we've been updating it to be more explicit about dependencies (for example the ssh-import-id package)\n<rharper> I wonder which dep triggered it ?\n<rharper> the removal ?\n<ogra_> note that new dependencies require really thoourough discussion ... we are at the edge of our size restrictions of the image (actually there is quite a bugnch that will soon be dropped)\n<ogra_> ssh-import-id ids definitely nothing we want in the image\n<rharper> oh, right\n<ogra_> like lsb-release (which recently got in by accident but will soon be removed again)\n<ogra_> i just didnt get to do another cleanup yet\n<rharper> ogra_: this was quite helpful;  thank you for pointing me in the right direction\n<rharper> ogra_: is there a list of packages in the livecd-rootfs build that it explicitly purges?\n<ogra_> well, we make sure that we initially dont seed that stuff usually ... livecd-rootfs calls apt autoremove at some point ... the packages we explicitly remove are only apt, dpkg and locales\n<ogra_> there are scripts for these three in livecd-rootfs in the live-build/hooks/ubuntu-core dir\n<rharper> ogra_: great; I'll look at that\n<rharper> thanks again\n<ogra_> np\n<hurricanehrndz> anyhow, has anyone else noticed spell checking does not work in libreoffice snap\n<hurricanehrndz> Opps sorry for the spam\n<morphis_> pitti: you already finished the work?\n<pitti> morphis_: yes; I built a xenial package, lcoal autopkgtests just succeeded, so I'll upload to the SRU queue and update the bug\n<pitti> morphis_: I included your path change\n<morphis_> pitti: awesome, does it include the mkwifi driver bind fix as well? if yes I can ask mvo to push that package directly to our ppa\n<pitti>    * Blacklist mwifiex_pcie from rebinds (work around LP: #1630285)\n<mup> Bug #1630285: mwifiex_pcie crashes after several bind/unbind <kernel-da-key> <originate-from-1623583> <plano> <HWE Next:New> <linux (Ubuntu):Triaged> <https://launchpad.net/bugs/1630285>\n<pitti> morphis_: I suppose you meak that one\n<pitti> morphis_: yes, that landed upstream too (in 0.13/zesty), so it's included in the  backport\n<pitti> morphis_: https://launchpad.net/ubuntu/xenial/+queue?queue_state=1&queue_text=nplan\n<mup> PR snapd#2161 closed: interfaces/builtin: add dcdbas-control interface <Critical> <Created by tonyespy> <Merged by mvo5> <https://github.com/snapcore/snapd/pull/2161>\n<mup> PR snapd#2195 closed:  interfaces/builtin: add dcdbas-control interface <Created by mvo5> <Closed by mvo5> <https://github.com/snapcore/snapd/pull/2195>\n<pitti> morphis_: I think the \"edge\" (or whatever) snappy images are built including -proposed, so if that gets reviewed/accepted soon, you might not even need a PPA upload\n<pitti> apw: ^ if you have a minute, maybe you can review the nplan xenial SRU\n<apw> pitti, sure\n<morphis_> pitti: I've justed checked with niemeyer and mvo and we decided to leave it out of RC\n<morphis_> pitti: so no hurry\n<pitti> morphis_: apw just accepted it, anyway\n<morphis_> pitti: so it will be in xenial-updates in a bit?\n<pitti> morphis_: in a week (assuming it gets verified in time, so please report back to the bug); but as I said, I believe snappy images are built with -proposed, so the next image should pick it up\n<morphis_> aye\n<slangasek> morphis_: leave it out of RC> but is this a requirement for GA?\n<morphis_> slangasek: yes\n<slangasek> ok\n<morphis_> otherwise static IP configuration does not make sense inside console-conf\n<morphis_> as you can never reach the SSO service\n<mup> PR snapd#2196 opened: debian: run our udev rule before the snap udev rules <Critical> <Created by mvo5> <https://github.com/snapcore/snapd/pull/2196>\n<mup> Bug #1635335 opened: main.go warning to stderr about syslog <Snappy:New> <https://launchpad.net/bugs/1635335>\n<mup> PR snapd#2196 closed: debian: run our udev rule before the snap udev rules <Critical> <Created by mvo5> <Merged by mvo5> <https://github.com/snapcore/snapd/pull/2196>\n<mup> PR snapd#2197 opened: debian: ensure missing dirs for auto-import and partial <Created by mvo5> <https://github.com/snapcore/snapd/pull/2197>\n<mup> PR snapd#2198 opened: tests: only check pc model for the ubuntu-core-16-64 system <Created by fgimenez> <https://github.com/snapcore/snapd/pull/2198>\n<mup> PR snapd#2197 closed: debian: ensure missing dirs for auto-import and partial <Created by mvo5> <Merged by mvo5> <https://github.com/snapcore/snapd/pull/2197>\n<mwhudson> ok so we\n<mwhudson> ok so we're not panicing to get the console-conf changes in right now now now?\n<mup> PR snapd#2199 opened: osutil: add chattr funcs <Created by chipaca> <https://github.com/snapcore/snapd/pull/2199>\n<mwhudson> pitti: hm\n<mwhudson> i got a netplan failure in testing with\n<mwhudson> 2016-10-20 19:36:29,021 subiquitycore.utils:130 run_command returning: {'status': 1, 'err': \"Error in network definition //etc/netplan/00-snapd-config.yaml line 7 column 17: address '8.8.8.8' is missing /prefixlength\\n\", 'output': ''}\n<mwhudson> surely you don't have to write the nameserver address as 8.8.8.8/32\n<mwhudson> i wonder what went wrong\n<slangasek> mwhudson: maybe cyphermox is currently fixing this?  there was a mismatch between console-conf and nplan about which level the dns server should be declared at\n<mwhudson> ah ok\n<cyphermox> err, what?\n<cyphermox> oh\n<mwhudson> oh yes\n<pitti> mwhudson: maybe you missed an identation?\n<mwhudson> yeah\n<cyphermox> mwhudson: that's because the nameservers are written in the wrong section\n<pitti> mwhudson: the per-interface addresses: needs prefix lenghts; the nameservers: addresses doesn't\n<mwhudson> yes i see it now\n<cyphermox> mwhudson: fixed in already in my local brandh\n<pitti> ok,\n<mwhudson> cyphermox: +1\n * mwhudson goes back to grinding email\n<cyphermox> mwhudson: I'll be pushing this in a minute, and preparing to build it in our PPA, along with a new image -- let me know if you have other fixes to land along with it\n<mwhudson> cyphermox: oh one thing\n<mwhudson> cyphermox: remove_ipv4_networks needs to clear gateway4 on Networkdev\n<cyphermox> ok\n<mwhudson> cyphermox: and, uh something needs to clear out the nameservers config when you enable dhcp too i guess\n<mwhudson> nameservers/searchdomains\n<cyphermox> mwhudson: here, pushed; please feel free to add your fixes now while I update the setup to use our PPA\n<mwhudson> cyphermox: pushing my fixes\n<mwhudson> cyphermox: i haven't tested in a kvm yet, just dry run\n<cyphermox> ok\n<mwhudson> oh yeah, when i make an image locally i have to wait for cloud-init to time out\n<mwhudson> which is very confusing\n<mwhudson> cyphermox: tested in kvm now, seems to work \\o/\n<cyphermox> ok, pushed your changes?\n<cyphermox> I see you did\n<cyphermox> ok, spinning a new release for the PPA\n<mwhudson> cyphermox: yay\n<rharper> mwhudson: you should be able to provide a seed so it won;t timeout looking for one (or disable cloud-init via cmdline or file in the image)\n<mwhudson> rharper: ok\n<mwhudson> i guess we do actually want it to run by default for the cloudy cases\n<mup> Bug #1635413 opened: newgrp doesn't work on classic <Snappy:New> <https://launchpad.net/bugs/1635413>\n<rharper> mwhudson: yeah; currently one has to create a new gadget which includes a 'cloud.conf' file in the gadget to prevent cloud-init from being disabled by default; so your \"hang\" seems strange to me\n<rharper> assuming your testing UC 16 recent images (from ~ogra 's people page)\n<mwhudson> rharper: i am making images myself\n<rharper> via ubuntu-build ?\n<mwhudson> ubuntu-image\n<rharper> err, yeah\n<rharper> snap prepare image should be disabling it\n<rharper> unless your gadget has cloud.conf in it\n<mwhudson> snap versoin 2.16ubuntu3\n<rharper> which the pc gadget doesn't\n<mwhudson> i'm just using the standard 'pc' gadget\n<rharper> very strange\n<rharper> from edge? or stable\n<hurricanehrndz> ogra_: Thanks for the heads up\n<mwhudson> rharper: edge\n<mwhudson> rharper: i'm using my own model assertoin but i don't see how that matters\n<rharper> mwhudson: very strange\n<rharper> you can inspect your image  (sudo kpartx -va <image>;  sudo mount /dev/mapper/loopNp3 /mnt;  find /mnt ) ; you should see /mnt/system-data/etc/cloud/cloud-init.disabled\n<rharper> which prevents cloud-init from running altogether;  if you see /etc/cloud/cloud.cfg; then the pc gadget you're using must have a 'cloud.conf' file in it\n<rharper> that's my experience building images with my own models for testing system-user assertions with newer cloud-init to inject those via user-data testing\n<mwhudson> mount: mount /dev/mapper/loop16p3 on /mnt failed: Structure needs cleaning\n<mwhudson> what\n<mwhudson> rharper: i don't really have anything in /mnt/system-data/ ?\n<mwhudson> rharper: or do you mean after i've booted the image?\n<mwhudson> i wonder if i should try ubuntu-image from the archive rather than snap\n<rharper> mwhudson: I'm using ubuntu-image from the beta channel\n<mwhudson> ubuntu-image          0.5+mvo8  15   canonical   devmode\n<rharper> it writes out .img file, which has 3 partitions , the 3 is the system-data/writable one; that includes the kernel, and core snaps\n<rharper> that's old\n<mwhudson> $ snap refresh --channel beta ubuntu-image\n<mwhudson> error: cannot refresh \"ubuntu-image\": snap \"ubuntu-image\" has no updates available\n<mwhudson> oh --devmode\n<rharper> ubuntu-image  0.5+mvo13  20   canonical  devmode\n<mwhudson> yeah ok\n<mwhudson> getting 22 from edge now\n<rharper> and I'm running snapd from xenial-proposed\n<rharper> 2.16, something, but I think you're there too\n<rharper> the new ubuntu-image + snapd prepare-image should get you going with a nocloud-net seed by default (and it's disabled by default)\n<mwhudson> rharper: looks happier indeed\n<rharper> cool\n#snappy 2016-10-21\n<hamptus> Hi everyone. I'm building an application using Kivy (https://kivy.org/) and it works on my laptop outside of a snap, but once I build it within a snap everything works except for the text input. Specifically, when I type into the application, it sees the keyboard events, but nothing shows up in the TextInput widget.\n<hamptus> I asked on the Kivy channel, but no one could help.\n<hamptus> This is the code for my snap: https://github.com/hamptus/kivy-snap\n<hamptus> If you run it, you can see that the key presses do print out to the console, but don't appear on my application. Can anyone think of a reason why?\n<mup> PR snapd#2200 opened: provide a human readable error message when download fails due to non purchase <Created by pete-woods> <https://github.com/snapcore/snapd/pull/2200>\n<ogra_> sil2100, https://github.com/CanonicalLtd/snappy-docs/blob/master/core/images.md\n<sil2100> ogra_: thanks!\n<sil2100> This is what I needed\n<ogra_> fgimenez, https://people.canonical.com/~ogra/snappy/all-snaps/daily/current/ has new pi images with the new kernel the kernel team built tonight ...\n<ogra_> davmor2, ^^\n<ogra_> (i'll test them myself the next session, but any extra data point helps)\n<davmor2> ogra_: thanks I'll let rvr know\n<Paz_> Hi. Does anyone know how to pull down a particular version of a source pointing to git. I have the commit hash\n<Paz_> I should add, I want to do this in my YAML file\n<mup> Bug #1635582 opened: inhibit snap refresh while console-conf is running <Snappy:New> <https://launchpad.net/bugs/1635582>\n<mup> Bug #1635584 opened: \"snap interfaces\" output hides some magical, essential package name <Snappy:New> <https://launchpad.net/bugs/1635584>\n<kyrofa> Paz_, for git, snapcraft supports source-branch and source-tag\n<kyrofa> Paz_, I don't think specific commit hashes are supported\n<Paz_> kyrofa: Thanks.\n<fasda> Can Snappy Ubuntu be installed on VirtualBox? I am running Windows host\n<Paz_> Anyone know how to include libraries (.so files) that I have staged into the build process for building my final part? They don't seem visible\n<mup> PR snapd#2201 opened: spread.yaml: Ensure ubuntu user has passwordless sudo for autopkgtests <Created by plars> <https://github.com/snapcore/snapd/pull/2201>\n<mup> PR snapd#2202 opened: image: work for a user <Created by chipaca> <https://github.com/snapcore/snapd/pull/2202>\n<Son_Goku> zyga: ping\n#snappy 2016-10-22\n<mup> PR snapcraft#865 closed: Add `init-plugin`  <Created by jaymell> <Closed by jaymell> <https://github.com/snapcore/snapcraft/pull/865>\n<hamptus> Hi. I'm building a Python desktop application that listens for SDL2 events. On my dev machine (Ubuntu 16.04) the SDL_TextInputEvent is fired (Along with the SDL_KEYDOWN event). But, when I build the app to use as a snap, the SDL_TextInputEvent is not fired (the other events are). Any ideas?\n<mup> Bug #1577472 changed: The remapped $HOME directory shows as read-only to applications running in a snap <snapd-interface> <Snappy:Expired> <https://launchpad.net/bugs/1577472>\n<manuki> Hello, I have a question that might look stupid but I couln't find the answer. How to I mount automatically a hard drive after startup ?\n<manuki> snappy is installed on an SDD nvme0n1 p1, p2, p3, p4, p5, and I would like to mount automatically /dev/sda1 to /writable/HDD\n<manuki> I can't touch /etc/fstab as there is a warning in the file: \"# DO NOT EDIT THIS FILE BY HAND, YOUR CHANGES WILL BE OVERWRITTEN\"\n<manuki> writable-path(5) doesn't help either as (source: http://manpages.ubuntu.com/manpages/wily/man5/writable-paths.5.html) the mount point must be a \"A  pre-existing  directory on the read-only root partition\"\n<lightuniverse> hi\n<lightuniverse> is anyone online?\n#snappy 2016-10-23\n<nhandler> I've been having an interesting time playing around with snapcraft. Managed to get Packer snapped up (https://uappexplorer.com/app/packer.nhandler). I have another snap just about ready to publish as well. I'm hoping to have some time tomorrow to write up a blog post about this experience.\n<mup> Bug #1635925 opened: Snappy Error - QOwnNotes Error with NTFS <ntfs> <qownnotes> <Snappy:New> <https://launchpad.net/bugs/1635925>\n<Simooon> How do you guys evaluate whether a snap package is trust worthy? For now I've been looking them up on uappexplorer.com and checking out the domain that issued their email, to get some sense of theor motivation, but that seems like a flawed mothod.\n<Elleo> has anyone hit this when creating opengl based snaps? \"MESA-LOADER: failed to retrieve device information\" followed by attempts and failures to load the wrong driver (i915_bpo_dri.so which doesn't exist), runs fine in devmode and other opengl snaps are fine\n<ahoneybun> well then: http://pastebin.ubuntu.com/23369719/\n<ahoneybun> rocketchat-server snap does this\n<Elleo> ahoneybun: are you using a non-ubuntu kernel?\n<mup> PR snapcraft#871 opened: Remove XXX comment from stage-packages <Created by nhandler> <https://github.com/snapcore/snapcraft/pull/871>\n<ahoneybun> Elleo: I think Linode compile their own\n<ahoneybun> since my 16.04 server is on 4.7\n<ahoneybun> they might have based it on a upstream one without the Ubuntu stuff in it\n<Elleo> ahoneybun: yeah, that'd be my guess; apparmor currently still requires some custom patches (I think someone's working hard on getting them into the mainline kernel at the moment though)\n<Elleo> ahoneybun: it looks like you could rebuild snap-confine with \"--disable-apparmor\" to make it work on such a system (albeit without any app confinement)\n<Elleo> ahoneybun: might also be able to install with --devmode without recompiling anything, not sure if that does enough to skip the whole apparmor processing or not\n<Elleo> ahoneybun: (again that'd result in no confinement)\n<mup> Bug #1636023 opened: Name registration fails with no helpful message <Snappy:New> <https://launchpad.net/bugs/1636023>\n<mup> PR snapcraft#872 opened: Add some further bash-completion <Created by cwayne18> <https://github.com/snapcore/snapcraft/pull/872>\n<not_MartinWimpre> hello, quick questions for anyone: is snapd working on Mint? is there a way to only get the \"release\" versions snaps like vlc versus the bleeding-edge git \"daily\" version?\n#snappy 2017-10-16\n<Son_Goku> sabdfl: so you're on this side of the pond now?\n<zyga-ubuntu> good morning\n * zyga-ubuntu does PR pass\n<zyga-ubuntu> mvo: o/\n<zyga-ubuntu> mvo: hey\n<zyga-ubuntu> mvo: I'm willing to do a deep dive on https://github.com/snapcore/snapd/pull/4030\n<mup> PR #4030: many: add internal squashfuse copy as \"snapfuse\" <Created by mvo5> <https://github.com/snapcore/snapd/pull/4030>\n<zyga-ubuntu> mvo: unless you are already doing that\n<Son_Goku> zyga-ubuntu\n<Son_Goku> that seems like a super-bad idea\n<zyga-ubuntu> Son_Goku: hey\n<zyga-ubuntu> Son_Goku: I know\n<zyga-ubuntu> Son_Goku: but if it's sufficient let's do it the best we can:\n<zyga-ubuntu> Son_Goku: I'd discard the generated files, discard uneeded code, integrate it into our build system, ete\n<zyga-ubuntu> Son_Goku: I haven't looked yet, maybe it is huge, maybe it will end up being a handful of files that we can just maintian\n<zyga-ubuntu> *maintain\n<zyga-ubuntu> Son_Goku: and good morning :)\n<zyga-ubuntu> Son_Goku: you're up early, it's barely sunrise here\n<Son_Goku> I'm about to pass out\n<zyga-ubuntu> my son is in a new school today\n<zyga-ubuntu> so I'm working from a coffee shop nearby\n<Son_Goku> zyga-ubuntu: I think it's a really bad idea to do this at all\n<zyga-ubuntu> Son_Goku: sure but what is the alternative?\n<zyga-ubuntu> Son_Goku: if we have to do it, we have to do it\n<zyga-ubuntu> Son_Goku: we canont just change apt defaults overnight (even though I agree they are bad)\n<zyga-ubuntu> Son_Goku: those should have been changed years ago\n<zyga-ubuntu> Son_Goku: but I think that now it is too late for that\n<Son_Goku> well, if people are updating graphically or using `apt upgrade`, they'd get it\n<Son_Goku> just fix apt-get upgrade's behavior\n<zyga-ubuntu> Son_Goku: yes but there is always a set that doesn't\n<zyga-ubuntu> Son_Goku: I think we've seen that already with snapd before (and we reverted a change that triggered that)\n<zyga-ubuntu> Son_Goku: it will also be a (I suspect) endless discussion in debian\n<zyga-ubuntu> Son_Goku: I think it's risky business to go and change that for snapd's sake\n<zyga-ubuntu> Son_Goku: (I'd still change it but on separate schedules)\n<zyga-ubuntu> Son_Goku: and once snapd can reliably depend on things, let's yank this\n<Son_Goku> then don't integrate it into the source tree\n<Son_Goku> just carry it as a separate tarball bundle\n<zyga-ubuntu> mmm\n<Son_Goku> that way it's harder to be lazy about it\n<zyga-ubuntu> that's interesting, perhaps that's a better idea indeed\n<zyga-ubuntu> Son_Goku: i'd require some tweaks to CI but yes, it's nicer this way\n<Son_Goku> zyga-ubuntu: I wish you'd do this with a vendor overlay tarball too\n<Son_Goku> basically, a tarball that only contains snapd-<version>/vendor/\n<zyga-ubuntu> Son_Goku: yes, I think that's a natural place to do this for releases\n<zyga-ubuntu> Son_Goku: I'll talk to mvo\n<Son_Goku> this would allow me to ship the snapd-<version>.tar.gz (or in debian parlance, snapd-<version>.orig.tar.gz) and snapd-<version>.vendor.tar.gz in distgit as sources while not using the vendor tarball on Fedora\n<Son_Goku> which would open the door to adding an EPEL build\n<Son_Goku> (aka CentOS)\n<mvo> zyga-ubuntu: a vendor tarball? we can do this easily\n<Son_Goku> I asked for this a year ago too, btw\n<mvo> :(\n<mvo> sorry\n<mvo> must have forgoten\n<Son_Goku> the experimental CentOS builds are super-brittle :(\n<Son_Goku> zyga-ubuntu: incidentally, for your amusement, with literally no expectation of anything working: https://copr.fedorainfracloud.org/coprs/ngompa/snapcore-el7/\n<mvo> Son_Goku: so snapd_2.28.5.{pristine,vendor}.tar.xz? a\n<Son_Goku> mvo: yep\n<Son_Goku> sounds fine with me :D\n<mvo> ok\n * mvo will update his release script\n<Son_Goku> mvo: basically, I need the base tarball to be closest to what git repo looks like, otherwise patches don't apply\n<Son_Goku> mvo: though you don't have to do weird underscores and whatnot :)\n<Son_Goku> unlike debian, I don't have such restrictions :)\n<mvo> Son_Goku: heh, ok\n<zyga-ubuntu> o/\n<Son_Goku> it can just be snapd-2.28.5.tar.xz and snapd-2.28.5.vendor.tar.xz\n<mvo> Son_Goku: ok, I may need to keep the current convention for people using our GH release page, so it might be snapd.vendor-only.tar.xz or I will just annouce the new format and assume that not a lot of people need to adjust their scripts\n<Son_Goku> sure\n<Son_Goku> that's fine\n<Son_Goku> I don't particularly care if you only just upload a vendor-only tarball\n<Son_Goku> as I can just get the regular one from the GitHub link as I do now\n<zyga-ubuntu> mvo: I think it's just a handful of people, we'll be fine\n<Son_Goku> I just need the vendor code in a separate tarball that I can extract\n<mup> PR snapd#4047 opened: snap-confine: init all arrays with `= {0,}` <Created by mvo5> <https://github.com/snapcore/snapd/pull/4047>\n<zyga-ubuntu> mvo: .5 looks good so far\n * zyga-ubuntu tweaks details on https://github.com/snapcore/snapd/pull/4008\n<mup> PR #4008: cmd/snap-update-ns: create missing mount points automatically <Created by zyga> <https://github.com/snapcore/snapd/pull/4008>\n<Son_Goku> zyga-ubuntu: test and give karma for Fedora snapd updates\n<Son_Goku> they're on 2.28.5 now\n<mvo> zyga-ubuntu: could you or pawel try to reproduce the error on the pi3 that sergio got? I'm still nervous about it. otoh I have no report other than from sergio about it and would love to get that confirmed\n<zyga-ubuntu> mvo: I cannot do that today, sorry, I won't be home until after 18\n<zyga-ubuntu> mvo: it seems the error cachio got was repeated on >1 SD card he had\n<zyga-ubuntu> maybe it's just bad luck but it does seem to indicate more than random issue\n<zyga-ubuntu> Son_Goku: only after I'm home, sorry :/\n<zyga-ubuntu> mvo: though my pi3 is still up\n<zyga-ubuntu> mvo: I could try to test something remotely\n<zyga-ubuntu> pstolowski: hey\n<zyga-ubuntu> pstolowski: is your pi3 operational?\n<zyga-ubuntu> mvo: my pi3-1 is operational, though I cannot reflash it remotely\n<pstolowski> zyga-ubuntu, morning! yes, it is\n<zyga-ubuntu> pstolowski: I think mvo needs a little bit of help and I'm not at my office today\n<zyga-ubuntu> 09:12 < mvo> zyga-ubuntu: could you or pawel try to reproduce the error on the pi3 that sergio got? I'm still nervous about it. otoh I have no report other\n<zyga-ubuntu>              than from sergio about it and would love to get that confirmed\n<zyga-ubuntu> pstolowski: I can only run spread tests on pre-installed remotely\n<zyga-ubuntu> pstolowski: last week cachio ran into a bug where smoehing got corrupted in the boot process\n<zyga-ubuntu> pstolowski: it might be related to the SD card he was using (he tried two)\n<zyga-ubuntu> pstolowski: we need hands on testing to see if we can reproduce it\n<pstolowski> zyga-ubuntu, sure, happy to help. i need to reflash with latest edge image correct?\n<zyga-ubuntu> pstolowski: I think so, ideally build the image as cachio did\n * zyga-ubuntu looks \n<zyga-ubuntu> pstolowski: look at this thread please: https://forum.snapcraft.io/t/snap-mode-try-on-raspberry-pi/2454\n<pstolowski> zyga-ubuntu, k\n<Guest92109> hello got stuck in network configuration can any one please help\n<zyga-ubuntu> Guest92109: hey, can you please ask a more precise question?\n<Guest92109> zyga-ubuntu: Sure\n<zyga-ubuntu> pstolowski: I commented on the thread with details of what I know\n<pstolowski> zyga-ubuntu, thanks\n<Guest92109> I got a machine with ubuntu core15.10\n<Guest92109> I need to configure eth0\n<Guest92109> I teied to edit /etc/network/interfaces file but it gives system is read-only message please help\n<zyga-ubuntu> Guest92109: 15.10 you say\n<zyga-ubuntu> hmmm\n<zyga-ubuntu> Guest92109: may I ask if you really want to use 15.10 or can you consider updating to ubuntu core 16?\n<pstolowski> zyga-ubuntu, what are the steps to build an image?\n<zyga-ubuntu> Guest92109: I don't think we support 15.10 anymore (apart from commercial contracts) as it was an early version and ubuntu core 16 has received immense fixes, features and improvements since\n<zyga-ubuntu> pstolowski: I think you need ubuntu-image and the pi3 model, one sec\n<zyga-ubuntu> pstolowski: $ sudo ubuntu-image -c beta -O pi3-beta.img pi3.model\n<Guest92109> <zyga-ubuntu> - I am using dell edge gateway 5000 series which comes with preinstalled snappy core 15.10 and need to configure same\n<zyga-ubuntu> Guest92109: it used to ship with 15.10 with the desire to update to 16-series, new releases are only using 16; in any case let me try to find someone who can help you\n<zyga-ubuntu> pstolowski: you need the pi3.model assertion\n<zyga-ubuntu> pstolowski: cachio sent a link somewhere to a repo with test scripts but I cannot find it\n<zyga-ubuntu> mvo: do you happen to remember how to fetch the pi3 model file\n<zyga-ubuntu> Guest92109: I've asked around but I don't know how soon I'll get an answer\n<zyga-ubuntu> Guest92109: may I suggest that you go to forum.snapcraft.io and ask your question there\n<Guest92109> zyga-ubuntu: thanks in advance would be a great help i am not getting any help onlien\n<zyga-ubuntu> Guest92109: please double check that you cannot upgrade your device to 16 series, then we can all help you easily\n<zyga-ubuntu> Guest92109: I think 15.10 is not supported anymore (apart from contractual obligations) and everyone is strongly encouraged to go to 16\n<Guest92109> zyga-ubuntu: Sure thanks but can u just answer is the read-only file system also persist in 16 series\n<Guest92109> While configuring /etc/network/interfaces file\n<zyga-ubuntu> Guest92109: yes although network configuration in 16 series is different and much much easier\n<zyga-ubuntu> Guest92109: apart from a menu-driven wizard we also use declarative YAML based nplan (netplan) configuration\n<zyga-ubuntu> Guest92109: while the system as a whole is read only the set of writable files is different\n<zyga-ubuntu> Guest92109: (between 16-series and 15.10)\n<zyga-ubuntu> kissiel: ^\n<zyga-ubuntu> kissiel: I think you are experienced with the dell gateways more than I am\n<Guest92109> zyga-ubuntu: Thanks can i get the steps of 16 series, i will get the idea regarding the configuration\n<zyga-ubuntu> Guest92109: it's a simple process you follow using the on-screen menu (also availale via serial port)\n<zyga-ubuntu> Guest92109: you can run \"console-conf\" after initial setup if you wish to change the configuration\n<kissiel> Guest92109: I'd poke around network-manager snap\n<zyga-ubuntu> kissiel: note, Guest92109 is using 15.10, I'm not sure we still ship that snap for 15.10\n<mvo> zyga-ubuntu, pstolowski sorry, was distracted, do you still need the pi3 model assertion ? i\n<mvo> pstolowski: \"snap known --remote model series=16 brand-id=canonical model=pi3\"\n<kissiel> zyga-ubuntu: ah, right. maybe joc will know more, I'll ping him when he gets online\n<zyga-ubuntu> mvo: thank you, I had a copy but I forgot how I got it\n<zyga-ubuntu> Guest92109: joc is in the UK timezone, he should be around soon\n<Guest92109> zyga-ubuntu: Thanks a lot for ur support one last thing how would i know if he comes online\n<pstolowski> mvo, zyga-ubuntu thanks! so, I'm going to rebuild the pi3 image, flash it, configure pi3, then add the assertion on it, then run ubuntu-core-upgrade spread test on it in a loop; did i miss anything?\n<zyga-ubuntu> pstolowski: the assertion is needed to build the image\n<pstolowski> ah!\n<zyga-ubuntu> pstolowski: you need to set up the pi for external backend\n<pstolowski> ok\n<zyga-ubuntu> pstolowski: this is described in tests/external-backend.md\n<zyga-ubuntu> pstolowski: have a look, you just flash & first-boot as usual\n<zyga-ubuntu> pstolowski: then run a few scripts\n<zyga-ubuntu> pstolowski: (from the tree)\n<zyga-ubuntu> pstolowski: and then you are ready for testing\n<zyga-ubuntu> pstolowski: ask if you need help, I did this on Friday\n<pstolowski> zyga-ubuntu, oh yeah, i know that, just unclear on building the image + assertion part\n<mvo> pstolowski: yes, what zyga-ubuntu said and good luck\n<__chip__> morning peeps\n<zyga-ubuntu> __chip__: hello, good morning\n<__chip__> i'm on the road today -- doing admin stuff wrt the boys' schooling\n<__chip__> got my tablet with me (thus the nick)\n<zyga-ubuntu> __chip__: I'm on the road too, and my son changed school (well, maybe, trial week)\n<zyga-ubuntu> __chip__: fingers crossed for both of us :\n<zyga-ubuntu> :)\n<__chip__> zyga-ubuntu: hah. this is about changing schools also (looking into a different school)\n<__chip__> so, yeah, good luck to us\n<pstolowski> mvo, zyga-ubuntu ok, all clear, i see where the assertion is needed now, thanks\n<zyga-ubuntu> mvo: if you want I can keep running that test on my pi3 but I think it depends on SD card model\n<zyga-ubuntu> mvo: and some models corrput something\n<zyga-ubuntu> mvo: otherwise why would it never fail vs always fail?\n<pstolowski> ok, got the image built, falshing\n<mvo> zyga-ubuntu: did you build the image yourself when you did the test? or download a pre-made one? maybe its a specific combination of the ubuntu-image cmdline/kernel/gadget or something\n<zyga-ubuntu> mvo: no, I ran the pre-made one\n<zyga-ubuntu> mvo: ah, indeed\n<zyga-ubuntu> mvo: could be!\n<__chip__> pedronis: are you working today?\n<zyga-ubuntu> morphis: Guest92109 here has a dell gateway with ubuntu 15.10 and need help, can you please try to render assistance?\n * zyga-ubuntu is on the move again, I'll be online in ~~ hour\n<zyga-ubuntu> ttyl\n<mup> Bug #1723881 opened: [Feature Request] Support pre-invoke and post-invoke commands as DPkg::Pre-Invoke and DPkg::Post-Invoke in APT <Snappy:New> <https://launchpad.net/bugs/1723881>\n<joc> Guest92109: hi, i see you had some questions about the 5000 series gateways\n<pstolowski> mvo, it failed for me, but with slightly different output http://pastebin.ubuntu.com/25751741/\n<pstolowski> Error: \"snap_mode\" not defined ?\n<pstolowski> mvo, it seems that re-running the test again after the above failure gives another unexpected failure, i assume the box is now in a bad shape and needs re-flashing before attempting tests again?\n<mvo> pstolowski: looking\n<mvo> pstolowski: could you please paste the other failure too?\n<mvo> pstolowski: this is very different from what cachio got, it went much further\n<pstolowski> mvo, the other failure after I re-run the tests: http://pastebin.ubuntu.com/25751799/\n<mvo> pstolowski: and a different error, I would love to compare the revisions of core/gadget/kernel you have and the revision of ubuntu-image to see where things are different\n<pstolowski> mvo, external:ubuntu-core-16-arm-32 .../tests/main/ubuntu-core-upgrade# snap list\n<pstolowski> Name        Version        Rev   Developer  Notes\n<pstolowski> core        16-2.28.5      3214  canonical  core\n<pstolowski> pi2-kernel  4.4.0.1075.75  43    canonical  kernel\n<pstolowski> pi3         16.04-0.5      6     canonical  gadget\n<mvo> pstolowski: maybe we can put it into sergios forum post? this way we can compare notes more easily\n<pstolowski> sure\n<mvo> pstolowski: the followup looks indeed just like a test issue with a strange state, might be enough to just \"rm curChg\" in the debug shell and run again\n<mvo> pstolowski: thank you, this looks promising, it does not fail in the omg-cant-explain-what-is-going on way at least (which is the case for sergios error, I can't make any sense of it)\n<pstolowski> mvo, I hope I didn't miss anything in the setup. will re-try from scratch in a while\n<mvo> pstolowski: if you could rm curChg and run again, that would be nice\n<mvo> pstolowski: miss something> well, if its really hard to reproduce it means its not wide-spread at least. i.e. we can't reproduce it with the pre-build images, we can't reproduce the same error with ubuntu-image, so it must be sometihng special\n<mvo> pstolowski: well, hopefully\n<kissiel> Guest92109: joc is online, you could consult him\n<jamespage> anyone else hitting https://bugs.launchpad.net/snapcraft/+bug/1723898 ?\n<mup> Bug #1723898: Unable to build snaps using python plugin - pypi.debian.net no longer accessible <Snapcraft:New> <https://launchpad.net/bugs/1723898>\n<jamespage> for the life of me I can't actually figure out where snapcraft is configured to use that\n<mvo> hrm, hrm, interfaces-cups-control test is busted\n<mvo> (in debian-unstable)\n<zyga-ubuntu> re\n<zyga-ubuntu> (and right on time)\n<mvo> zyga-ubuntu: heh :) debian-unstable cups control test is busted, that rings a bell, iirc we had artful broken as well recently. anyways, I'm debugging\n<Guest92109> kissiel: Thanks\n<Guest92109> joc: Hello I have a dell edge geteway with ubuntu 15.10 snappy core\n<Guest92109> I am having difficulty in configuring the network using the traditional ubuntu method in the interfaces file\n<Guest92109> as the system is read-only\n<joc> Guest92109: if i could first make a recommendation: if you are just beginning a project then zyga & kissiel were correct in urging you to update to Series 16 Ubuntu Core, we have been working with Dell to transition customers for serveral months to Series 16\n<joc> Guest92109: in addition I believe Dell announced that your version of Ubuntu Core would go End Of Life on September 30th so you will not receive further security updates\n<zyga-ubuntu> mvo: ack\n<zyga-ubuntu> mvo: let me know if I can help in some way\n<zyga-ubuntu> mvo: I'm updating my branches\n<joc> Guest92109: in the meantime the supported method for configuring the network is to use network-manager which should come preinstalled on your system\n<mvo> zyga-ubuntu: yeah, I keep you updated, waiting for a debug shell right now. a cheap way would be to simply disable the test\n<mvo> zyga-ubuntu: on debian\n<zyga-ubuntu> mvo: is there a thread?\n<mvo> zyga-ubuntu: otoh, it will probably come back to use for artful+1\n<mvo> zyga-ubuntu: not yet, I just noticed with my most recent PR that it fails\n * zyga-ubuntu was reading something while stuck in transit and is a bit freaked out about this: \n<zyga-ubuntu> ok\n<zyga-ubuntu> http://papers.mathyvanhoef.com/ccs2017.pdf\n<zyga-ubuntu> mvo: note, our spread image differs for linode and qemu\n<zyga-ubuntu> mvo: qemu uses, I believe, real sid, while linode is using stretch\n<zyga-ubuntu> mvo: I wanted to fix this a while ago but I wans't sure how\n<mvo> zyga-ubuntu: yeah, I'm running against linode just to be sure\n<mvo> zyga-ubuntu: however there was a new upstream release of cups to unstable yesterday so most likely fallout from that\n<Guest92109> joc: thanks for your valuable information\n<Guest92109> Will contact them and do the same\n<Guest92109> Can i get a doc where complete step is mentioned how to open network manager and configure\n<zyga-ubuntu> mvo: aha\n<zyga-ubuntu> mvo: that paper I linked to looks like a massive security issue that affects everything using wifi, expect surge of updates everywhere :/\n<Guest92109> I am new to core and tried various commands using snappy but could not get the setting . Thanks in advance\n<zyga-ubuntu> morphis: I think you need to update hostapd\n<joc> Guest92109: configuration should be via the \"nmcli\" command\n<zyga-ubuntu> pstolowski: can you try the test a few more times?\n<Guest92109> joc: sure will check and let u know :)\n<joc> Guest92109: there should be plenty of documentation for that in mangpages and on the internet, I would have to check with our Dell liasons whether there is some official docs for customers\n<Guest92109> joc: Thanks a lot would be a great help\n<mup> PR snapd#4048 opened: tests: fix interfaces-cups-control test for cups-2.2.5 <Created by mvo5> <https://github.com/snapcore/snapd/pull/4048>\n<zyga-ubuntu> mvo: +1 :)\n<mvo> zyga-ubuntu: ta\n<mvo> zyga-ubuntu: silly idea - could we simply govendor the squashfuse binary :) ?\n<mvo> zyga-ubuntu: it looks like govendor does not care if the git repo is go\n<zyga-ubuntu> mvo: mmm, dunno, how do you envision that? a go binary linking to something that is squashfuse itself or just a \"govendor sync\" repo that keeps all of squashfuse code but is unrelated to go\n<mvo> zyga-ubuntu: the later, just to have the git checkout and we do the building ourselfs\n<zyga-ubuntu> I like that much more than the PR\n * kalikiana coffee\n<mvo> zyga-ubuntu: its slightly crazy but maybe a nicer option than the massive embedding\n<zyga-ubuntu> mvo: yes, certainly nicer\n<zyga-ubuntu> *certainly\n<ogra_> mvo, urgh ... i think i found your reason for the upgrade test issues ...\n<ogra_> mvo, https://dashboard.snapcraft.io/dev/snaps/5596/configurations/\n<ogra_> candidate and beta use the stable gadget (ancient firmware and uboot)\n<ogra_> if you dont start from edge this wil most likely always fail with newer kernels\n<ogra_> pstolowski's last comment on the thread helped a great deal ...\n<ogra_> mvo, if you dont mind, i'll switch beta and candidate to the latest edge gadget\n<pstolowski> ogra_, oh, the versions?\n<ogra_> pstolowski, yeah, your pi3 is the stable one\n<ogra_> (pi3 snap)\n<mvo> ogra_: lets not change it just yet, lets see if cachio can refresh to edge gadget to make the issue go away\n<mvo> ogra_: but it sounds great\n<mvo> ogra_: I mean, great in the sense that it sounds like a plausible theory\n<mvo> ogra_: and also would explain all the oddness around the issue\n<ogra_> mvo, well, he'\u00c3\u0084d have to build an edge image and then downgrade kerne/coe to the espective target channels he wants to test\n<ogra_> mvo, what doesnt go well with that theory is that it only started recently\n<mvo> ogra_: yeah, he says it started recently, hm, hm\n<ogra_> there must be another aspect to it since the gadget channel setup has never changed after the first stable one\n<ogra_> but it is defintely one of the issues\n<pstolowski> ogra_, hmm, ok all the rpi3 stuff is new to me, so please bear with me... I didn't miss any setup test, did I?\n<ogra_> pstolowski, well, if i wanted to test beta i'*d also just builld a beta image, the issue is on ou side, not on yours\n<ogra_> *our\n<pstolowski> ok\n<pstolowski> ogra_, interestingly, i re-flashed and testing again, it a 3rd run of the test and so far so good\n<pstolowski> *it's a 3rd\n<mvo> pstolowski: ha!\n<ogra_> and pi3 is still at rev 6 ?\n<mvo> pstolowski: so you and cachio need to compare notes what is different\n<pstolowski> ogra_, yes, rev 6 still\n<ogra_> ++ fw_printenv snap_mode\n<ogra_> ## Error: \"snap_mode\" not defined\n<mvo> ogra_: lets try to find what this other factor is, then we need to fix the gadget to match the beta kernel. but lets try to get to the bottom of this first\n<ogra_> thats the thing that made me curious ...\n<ogra_> the stable gadget has still all the old variablle names\n<ogra_> the test should fail exactly there ...\n<ogra_> (from http://pastebin.ubuntu.com/25751741/)\n<zyga-ubuntu> github feature idea: mark a PR as \"unbreaks master\" and stop testing and landing all other PRs\n<zyga-ubuntu> could help us with cases like the one today\n<zyga-ubuntu> do we have any friends there?\n<mvo> ogra_: hm, things should be ok if snap_mode is not definied at all (unless I miss something). when it needs to get set, snapd will set it. in what line in http://pastebin.ubuntu.com/25751741/ should it fail you mean?\n<ogra_> mvo, sure, the point is that snap__mode doesnt even exist ... which is true for the ancient gadget but not true for all newer ones\n<ogra_> mvo, in the old gadget only \"snappy_mode\" is set\n<zyga-ubuntu> the price of renaming\n<ogra_> mvo, indeed just the missing variable isnt an issue but an indicator that yoou run old and incompatible binary bllobs and uboot\n<zyga-ubuntu> is eternal backwards compatibilty support code\n<mvo> ogra_: aha, yes\n<zyga-ubuntu> (said with the voice of malcom mcdowell)\n<zyga-ubuntu> *malcolm*\n<pstolowski> mvo, ogra_ ah, no, it eventually failed again http://pastebin.ubuntu.com/25752176\n<mup> PR snapd#4030 closed: many: add internal squashfuse copy as \"snapfuse\" <Created by mvo5> <Closed by mvo5> <https://github.com/snapcore/snapd/pull/4030>\n<zyga-ubuntu> Read error on /boot/uboot/uboot.env: Success\n<zyga-ubuntu> something is not setting errno\n<mvo> pstolowski: if you hexdump -C /boot/uboot/uboot.env - what happens?\n<ogra_> mvo, note that this can actuallly be a eal corruption issue due to the ancient uboot vfat version in stable (vs very new kernel in beta and candidate)\n<pstolowski> mvo, I exited the spread test shell, is it still useful if I do that after spread restored the stuff?\n<ogra_> pstolowski, just call fw_printenv alone\n<zyga-ubuntu> pstolowski: I think so\n<zyga-ubuntu> just ssh into it\n<mvo> pstolowski: I think so too\n<ogra_> the test proobably swallows output\n<mvo> ogra_: yeah, corruption of the vfat would make a lot of sense. what version of uboot do we have there and in edge? might be worthwhile to do a quick scan of the uboot git log to see if anything related to vfat is there\n<pstolowski> ogra_, mvo, zyga-ubuntu fw_printenv output: http://pastebin.ubuntu.com/25752195/\n<ogra_> mvo, some 2015 version iirc, we neve properlly documented it and it isnt built fom source\n<ogra_> that onlly changed in edge when we switched to actual uboot source builds\n<ogra_> pstolowski, well, that doesnt look corrupt at all\n<mvo> pstolowski: the first call looks very short\n<ogra_> mvo, seeing that i take back my vfat theory :P\n<pstolowski> mvo, yeah, ignore it, probably I made a mistake copying\n<ogra_> there must be some issue how the test uses fw_printenv instead\n<mvo> ogra_: well: \"+ fw_printenv\n<mvo> Read error on /boot/uboot/uboot.env: Success\" is the error from the test\n<mvo> pstolowski: anything in dmesg?\n<mvo> pstolowski: related to read error or so?\n<pstolowski> mvo, snappy_mode in there?\n<ogra_> mvo, yes ... but nmanualy it woks\n<ogra_> pstolowski, yeah, eftover\n<ogra_> *left\n<mvo> ogra_: yeah, still odd, how could the test use it incorrectly? also no errno set :/\n<ogra_> pstolowski, there should also be a snap_mode *if* you ae in any of try/trying ... it gets unset afterwards\n<mup> PR snapd#4048 closed: tests: fix interfaces-cups-control test for cups-2.2.5 <Critical> <Created by mvo5> <Merged by zyga> <https://github.com/snapcore/snapd/pull/4048>\n<ogra_> mvo, well, i dont know, but manually running it obviously works ... perhaps missing env ? or does the test unmont snappy-boot at some point ?\n<mvo> ogra_: I don't think it does\n<pstolowski> mvo, nothing stands out in dmesg.. except for [    6.989717] EXT4-fs (mmcblk0p2): couldn't mount as ext3 due to feature incompatibilities\n<pstolowski> [    7.004959] EXT4-fs (mmcblk0p2): couldn't mount as ext2 due to feature incompatibilities\n<mvo> pstolowski: what ogra said, snappy_mode= can be ignored\n<ogra_> pstolowski, thats /writable ;) and normal noise from the ext4 driver looping over fs capabilities\n<zyga-ubuntu> mvo: could it be (in any way) related to the fact that more recent ubuntu versions use incompatible feature set for ext4\n<ogra_> (i whish we could just quieten that)\n<zyga-ubuntu> csum_metadata\n<zyga-ubuntu> chsum_metadata*\n<ogra_> zyga-ubuntu, wrong path :P we talk about a vfat ;)\n<zyga-ubuntu> ogra_: p2 is vfat?\n<zyga-ubuntu> ogra_: I thought p1 is\n<ogra_> zyga-ubuntu, system-boot is\n<ogra_> everywhere\n<ogra_> mvo, the original test ooutput has \"mesg: ttyname failed: Inappropriate ioctl for device\" https://paste.ubuntu.com/25728858/\n<ogra_> mvo, i wonder if that could inflluence fw_printenv functionality somehow\n<mvo> ogra_: I think thats something from spread actually, but it might be, I am looking at fw_printenv from the uboot git now\n<ogra_> mvo, better look at the one fgrom the deb source\n<ogra_> thats what we use\n<ogra_> (and it might be far behind git)\n<mvo> ogra_: the xenial one?\n<ogra_> yep\n<ogra_> 2016.01+dfsg1-2ubuntu3 ... nearly 2y old\n<zyga-ubuntu> how can 2016 be nearly two years old?\n<zyga-ubuntu> well,\n<zyga-ubuntu> nearly ok\n<ogra_> january 2016 ...\n<ogra_> (i could have said 22 months if you'd prefer that :P )\n<pstolowski> my tests also had a couple of 'mesg: ttyname failed: Inappropriate ioctl for device' errors\n<ogra_> yeah\n<ogra_> must not be the issue but it might indicate that you tty is somewhat different to the one you have when running fw_printenv manually\n<ogra_> something is surelly with the env\n<mvo> pstolowski, ogra_ http://git.denx.de/?p=u-boot.git;a=blob;f=tools/env/fw_env.c;h=ab06415898c2f718e8a926879379b1f8d74ca55d;hb=HEAD#l760 is the only place where this error is produced (looks the same in the 2016 version)\n<zyga-ubuntu> too bad it doesn't display rc\n<mvo> pstolowski: I would argue the code in there is incorrect\n<zyga-ubuntu> it may be just a partial read\n<mvo> zyga-ubuntu: yeah, exactly\n<zyga-ubuntu> (truncated environment?)\n<mvo> zyga-ubuntu: you mean something else truncated the uboot.env?\n<zyga-ubuntu> mvo: last week we learned how error messages suck\n<zyga-ubuntu> mvo: well, not sure if really truncated\n<zyga-ubuntu> mvo: I didn't read the rest of the code\n<zyga-ubuntu> mvo: I meant that if you have a fixed buffer\n<zyga-ubuntu> mvo: and then read until EOF\n<ogra_> well, uboot.env isnt truncated if you manually run fw_printenv\n<zyga-ubuntu> mvo: then eventually you will get a partially complete buffer\n<mvo> zyga-ubuntu: there might be a signal\n<zyga-ubuntu> mvo: unless there's some assumption about the alignment of the file\n<zyga-ubuntu> mvo: \"alignment\" in blocks\n<mvo> zyga-ubuntu: but yeah, I think the code in there is slightly naive\n<zyga-ubuntu> mvo: might be but we don't know\n<mvo> zyga-ubuntu: yeah, sadly it does not print rc which is the crucial bit\n<mvo> s/is/would be/ :/\n<zyga-ubuntu> mvo: maybe we just need to patch snapd to always write the environment in multiples of some block size\n<ogra_> mvo, zyga-ubuntu, but why does it work manually then ?\n<zyga-ubuntu> mvo: and fill the rest with zeros\n<zyga-ubuntu> ogra_: I don't suppose it is corrected by that process somewhere\n<zyga-ubuntu> ogra_: maybe it fails, then gets fixed, and then is correct\n<zyga-ubuntu> ogra_: we don't have snapshots of the file during the process to say\n<ogra_> well, you could stop the test before it calls fw_pintenv the first time i suppose\n<ogra_> and then manually run the command to see\n<mvo> pstolowski: could you please rerun the test just to see if it fails in a similar way again? plus please update the forum post so that all the \"evidence\" is in a single place\n<zyga-ubuntu> ogra_: it doesn't fail for me, I cannot reflash beta sadly (AFK)\n<mvo> zyga-ubuntu: I still suspect a signal that might cause the short read, but what signal could it be? usually it would be something like SIGWINCH but that is probably not it on a spread run and no other signal springs to my mind\n<zyga-ubuntu> phone\n * mvo lunch\n<zyga-ubuntu> re\n<zyga-ubuntu> mvo: so I was thinking that it could be a signal _but_ I'm somewhat skeptical; let me check something\n<zyga-ubuntu>        SIGWINCH    28,28,20    Ign     Window resize signal (4.3BSD, Sun)\n<zyga-ubuntu> SIGWINCH is ignored by default\n<ogra_> i guess we dont call out to fw_setenv when writing thhe file but use our own write finction ?\n<ogra_> *function\n<ogra_> (from snapd that is)\n<zyga-ubuntu>    Interruption of system calls and library functions by signal handlers\n<zyga-ubuntu>        If a signal handler is invoked while a system call or library\n<zyga-ubuntu>        function call is blocked, then either:\n<zyga-ubuntu>        * the call is automatically restarted after the signal handler\n<zyga-ubuntu>          returns; or\n<zyga-ubuntu>        * the call fails with the error EINTR.\n<zyga-ubuntu> ogra_: I think so\n<zyga-ubuntu>        If a blocked call to one of the following interfaces is interrupted\n<zyga-ubuntu>        by a signal handler, then the call will be automatically restarted\n<zyga-ubuntu>        after the signal handler returns if the SA_RESTART flag was used;\n<zyga-ubuntu>        otherwise the call will fail with the error EINTR:\n<zyga-ubuntu>        * read(2), readv(2), write(2), writev(2), and ioctl(2) calls on\n<zyga-ubuntu>          \"slow\" devices.  A \"slow\" device is one where the I/O call may\n<zyga-ubuntu>          block for an indefinite time, for example, a terminal, pipe, or\n<zyga-ubuntu>          socket.  If an I/O call on a slow device has already transferred\n<zyga-ubuntu>          some data by the time it is interrupted by a signal handler, then\n<zyga-ubuntu>          the call will return a success status (normally, the number of\n<zyga-ubuntu>          bytes transferred).  Note that a (local) disk is not a slow device\n<zyga-ubuntu>          according to this definition; I/O operations on disk devices are\n<zyga-ubuntu>          not interrupted by signals.\n<zyga-ubuntu> so I think the C code for uboot env handling may not be setting SA_RESTART in any place\n * zyga-ubuntu looks\n<pstolowski> mvo, will do\n<zyga-ubuntu> mvo: still no idea which signal it might be :/\n<zyga-ubuntu> ideally we'd rebuild that old uboot\n<zyga-ubuntu> and set a breakpoint and see\n<zyga-ubuntu> but ...\n<zyga-ubuntu> well\n<zyga-ubuntu> maybe we can?\n<zyga-ubuntu> pstolowski: can you reproduce this?\n<zyga-ubuntu> pstolowski: or does it happen only once?\n<zyga-ubuntu> pstolowski: ideally we'd have a copy of the binary that has this problem and the file that causes it\n<zyga-ubuntu> pstolowski: and then see what gdb tells us\n<ogra_> it prints the build date as very first line duing boot on serial\n<zyga-ubuntu> ogra_: any chance we can grab debug symbols for that build somewhere/\n<ogra_> nly via re-building ... i thinbk it gets stripped by default (it is a bootloade optimized for size after all)\n<zyga-ubuntu> ogra_: any -dbg package equivalent?\n<ogra_> noot reallly\n<ogra_> with the new setup it would be easy since we now build from upsteam tags ... stable was random local builds originally ... we need the string it prints, with lluck that had the commit in the version\n<ogra_> *has\n<zyga-ubuntu> aha\n<zyga-ubuntu> well, that depends on if pstolowski can reproduce this :)\n<zyga-ubuntu> ogra_: could you provide a build for pawel to try\n<zyga-ubuntu> ogra_: just that command with debug symbols with ~~ similar version (as close as you can get it)\n<ogra_> https://www.denx.de/wiki/DULG/DebuggingUBoot\n<ogra_> seems it is actually not stripped (nothing theer says you need a debug build)\n<zyga-ubuntu> pstolowski: can you run gdb and see if that build has symbols?\n<ogra_> https://www.denx.de/wiki/view/DULG/Debugging is a bit more informative and llinks to tips and tricks\n * zyga-ubuntu breaks, I'll probably miss standup but I may show up if lucky\n<pstolowski> just re-flashed to retest\n<zyga-ubuntu> re\n<zyga-ubuntu> Pharaoh_Atem: hey, can you remind me that repo sync issue in fedora/linode\n<zyga-ubuntu> Pharaoh_Atem: linode operators are in #linode but on OFTC, not freenode\n<zyga-ubuntu> Pharaoh_Atem: if you can give me those details again I'll collect everything and open a ticket\n<mvo> zyga-ubuntu, pstolowski just finished reading backlog. lets see if it is reproducible and then we attack it\n<pstolowski> mvo, ... and i'm having issues now on 1st boot after flashing. it's taking forever on 'random: nonblocking pool is initialized'\n<pstolowski> not sure if this is entropy issue or what. console-conf doesn't show up\n<ogra_> no, thats a red herring\n<ogra_> it is simply the last thing the kernel prints before switching consoles\n<mvo> pstolowski: hm, is the network cable attached?\n<pstolowski> mvo, no\n<ogra_> that might then take 2min for the timeout\n<pstolowski> ogra_, i've been waiting much much longer already\n<ogra_> hmm\n<ogra_> mvo, i was actually wobndering if we should rip out the hardcoded DHCP default for eth0 that we add during build\n<ogra_> at least for physical images (probably cloud still needs it)\n<zyga-ubuntu> mvo: I'll be away from home for at least three hours, after that I can spend any time debugging and exploring this with hands on\n<zyga-ubuntu> mvo: I'll try to focus on coding but I can help pstolowski with gdb\n<mvo> zyga-ubuntu: thanks, I think we are good for now, if pstolowski can reproduce that is good enough for now\n<pstolowski> ok, i reflashed and this time it didn't hang on boot. weird.\n<zyga-ubuntu> pstolowski: does the uboot env CLI tool fail the same way?\n * zyga-ubuntu logs into ubuntu session, brb\n<pstolowski> zyga-ubuntu, not yet, the test is running\n<zyga-ubuntu> aha\n * zyga-ubuntu joins the standup\n<mup> PR snapcraft#1615 closed: schema: improve invalid app, hook, and part errors <Created by kyrofa> <Merged by sergiusens> <https://github.com/snapcore/snapcraft/pull/1615>\n<jamespage> sergiusens: hi - raised https://bugs.launchpad.net/snapcraft/+bug/1723945 based on the conversation we had last week\n<mup> Bug #1723945: provide support for use of DEB_HOST_MULTIARCH in environment variables <Snapcraft:New> <https://launchpad.net/bugs/1723945>\n<jamespage> does that sounds about right?\n<mup> Issue snapcraft#1445 closed: ROS user oriented story <docs> <Created by sergiusens> <Closed by sergiusens> <https://github.com/snapcore/snapcraft/issue/1445>\n<mup> Issue snapcraft#1446 closed: MOOS user oriented story <docs> <Created by sergiusens> <Closed by sergiusens> <https://github.com/snapcore/snapcraft/issue/1446>\n<mup> PR snapcraft#1577 closed: lxd: don't inject local snaps on a different arch <bug> <Created by kalikiana> <Merged by sergiusens> <https://github.com/snapcore/snapcraft/pull/1577>\n<mup> PR snapcraft#1610 closed: tests: reenable the cleanbuild integration test <Created by elopio> <Merged by sergiusens> <https://github.com/snapcore/snapcraft/pull/1610>\n<mup> PR snapcraft#1609 closed: tests: remove the duplicate nodejs integration tests <bug> <Created by elopio> <Merged by sergiusens> <https://github.com/snapcore/snapcraft/pull/1609>\n<sergiusens> jamespage yeah, that should cover it\n<jamespage> sergiusens: also what would you think of https://bugs.launchpad.net/snapcraft/+bug/1723957\n<mup> Bug #1723957: cleanbuild: add PPA sources <Snapcraft:New> <https://launchpad.net/bugs/1723957>\n<jamespage> I'm using cleanbuild to produce test binaries; currently hacking in my ppa sources using cloud-init in lxd user.user-data config\n<diddledan> I don't understand this behaviour at all: https://forum.snapcraft.io/t/cleanbuild-remote-on-pi-grabs-wrong-arch-lxc-image/691/17\n<diddledan> cleanbuild should not be forcing the version of snapd to anything EXCEPT \"the latest\" stable, unless the user specifically tells snapcraft otherwise\n<diddledan> and doing the forcing by injecting host-side snaps is just plain wrong\n<diddledan> IMO\n<diddledan> and no, that opinion is not humble in any way :-p\n<mvo> pstolowski: how is that test going? the second run of the core-refresh testing?\n<kalikiana> diddledan: snapd? do you mean the core snap? snapcraft attempts to install the same version in the container that's being used on the host\n<pstolowski> mvo, well..\n<diddledan> yeah, core\n<pstolowski> mvo, http://pastebin.ubuntu.com/25753195/\n<kalikiana> diddledan: so if eg. you're using beta on the host to test something, the container will be using that, same goes for snapcraft itself\n<pstolowski> mvo, last failure unrelated, probably wifi dropped or something\n<diddledan> I think it's wrong to be injecting at all, foreign arch or not. Core should be updated using snap processes not by injecting random snaps. We should not be designing weird behaviour for the edge case of \"I want to test something\" by default\n<diddledan> an \"I want to test something\" should be an opt-in not a default\n<mvo> pstolowski: do you have a monitor attached, i.e. can you actually see what is on screen when its in this \"2017-10-16 15:41:20 Error debugging external:ubuntu-core-16-arm-32:tests/main/ubuntu-core-upgrade : EOF\" state?\n<diddledan> the whole point of cleanbuild is that the build is in a clean environment. The moment you start injecting stuff to match the host it is no-longer \"clean\"\n<kalikiana> diddledan: I wouldn't agree it's \"random\". If you're using snapcraft natively without a container, it uses whatever core you are running. The experience should as much as possible be the same\n<kalikiana> You should of course be testing that your snap works with stable before you release it, in both cases\n<pstolowski> mvo, no, no monitor (but i've usb-serial). but hmm.. i cannot access this pi3 via wifi anymore\n<diddledan> maybe if you think we should be doing this, the name \"cleanbuild\" is wrong. So let's rename it to \"meh, frankenstein, YMMV\"\n<pstolowski> mvo, if serial console doesn't lie, then the last thing that happened was systemd[1]: Started Journal Service\n<mvo> pstolowski: hm, that looks harmless\n<mvo> pstolowski: I wonder why it stops responding\n<mvo> pstolowski: fwiw, cachio saw some of these errors too (EOF) but we never got to the bottom of it, might actually be multiple causes just showing the same error\n<pstolowski> mvo, wifi seems dead, no led blinking\n<diddledan> and let's change the documentation to say \"this is not a clean environment. any attempt to get a system as close to build service is never going to work. We made it this way on purpose because we hate consistency\"\n<kalikiana> diddledan: Can we take a step back and you tell me what your expectation of cleanbuild is? If this is your impression that's certainly not what anyone wants :-)\n<pstolowski> mvo, I just powered it again; on normal boot that Systemd Journal Service message is followed by brcmf initialization, which apparently didn't happen\n<diddledan> my expectation is that cleanbuild builds in a clean environment. Is it wrong to assume that when the documentation says \"cleanbuild       Create a snap using a clean environment...\" that it will build using a clean environment?\n<mvo> pstolowski: hm, do you think you could put it on a cable connection? to make tests more reliable?\n<pstolowski> mvo, yeah, that might be a good idea\n<diddledan> also, when the documentation says \"Create a snap using a pristine environment managed by lxd\" I expect the environment to be unaltered\n<diddledan> I certainly do NOT expect for implementation in my host to \"leak\" through into the LXD container\n<kalikiana> diddledan: So even if you're doing, say, `snap install core --edge`, you wouldn't want the container to use the same channel?\n<diddledan> no\n<kalikiana> diddledan: Would you apply the same reasoning to persistent containers?\n<diddledan> if I did that then I would want a switch to tell snapcraft to change to using a different channel\n<diddledan> yes, I would\n<kalikiana> diddledan: One thing we could look into is a prompt like `You're using the \"core\" snap from the \"edge\" channel. Do you want to use  the same in the container?`\n<diddledan> most people building snaps are NOT going to want to change the core snap to test things because they're not developing the core snap nor snapd nor snapcraft\n<diddledan> if they really need to test their snap builds against a different core then they will know that they want a specific core and should then be tasked with telling snapcraft that specifically\n<kalikiana> diddledan: Right. We have slightly different perspectives here. To my mind, the same core snap increases predictability. But I see the point you're making\n<kalikiana> diddledan: Would you mind opening a new forum topic for it?\n<diddledan> the problem that you wrote the PR in the link above with core being injected to foreign arch snaps is a symptom, not the cause. the cause is that we're assuming the user wants to match their host with their build. Now your PR says \"match the host EXCEPT on remote builds.\" where are these exceptions going to end? why not just allow the user to specify the core they want to use rather than guessing\n<kalikiana> diddledan: The PR applies to both the core and snapcraft. We have to do this anyway to be able to get the correct snapcraft version.\n<kalikiana> If we decide to not push the core snap out of the box, that's a separate decision\n<kalikiana> Or maybe add a way to choose the channel explicitly etc.\n<kalikiana> diddledan: To be clear, we have to push snapcraft because it's calling itself.\n<diddledan> kalikiana: https://forum.snapcraft.io/t/dont-match-the-core-snap-to-the-host-in-cleanbuild-environments/2486\n<kalikiana> diddledan: Thanks!\n<kalikiana> Will reply in a bit\n<diddledan> np\n<sergiusens> kalikiana just ensure it always comes from the stable channel\n<kalikiana> sergiusens: Yeah, that we can do. To be clear, though, we still want snapcraft itself to be injected from the host or same channel, right?\n<mup> Bug #1723974 opened: snap client doesn't work with Croatian language/characters <Snappy:New> <https://launchpad.net/bugs/1723974>\n<diddledan> kalikiana: I must apologise if I may have seemed aggressive above, I was just frustrated at my inability to articulate why I felt cleanbuild was behaving wonky\n<diddledan> group hug!\n<diddledan> :-p\n * kalikiana hugs diddledan \n<diddledan> yey\n<diddledan> for anyone who doesn't like hugs, as punishment I shall not hug you! :-D\n<sergiusens> kalikiana for persistent containers, most likely yes, for cleanbuild, only if it is in stable\n<kalikiana> Good point. Will think about how we can do that\n<pstolowski> mvo, 5 runs of pi3 ubuntu-core-upgrade test passed when on ethernet\n<ogra_> heh\n<ogra_> yay ?\n<mvo> pstolowski: interessting. so lets compare notes with cachio when he is back tomorrow and see what the differences are\n<mvo> pstolowski: thanks a lot for your test!\n<ogra_> this is starting to get curious ...\n<mvo> pstolowski: that gives me some peace of mind. this was an image produced with all bits from beta, right?\n<mvo> ogra_: to me it already was last week :) but yeah, it is very inconclusive\n<ogra_> did you bump the gadget in beta ?\n<ogra_> we should really do that\n<pstolowski> mvo, sudo ubuntu-image -c beta -O pi3-beta.img pi3.model, that's how I created it\n<mvo> pstolowski: great\n<mvo> pstolowski: lets see what sergio did - maybe it makes a difference if it was created without sudo or something else, also the revision of ubuntu-image. I'm sure we can now track it down better\n<pstolowski> ogra_, ethernet may have nothing to do here, it was just a re-test for yet another failure I pasted above where on the last run I lost access to my pi3 over wifi\n<mvo> ogra_: I did not touch the gadget\n<mvo> ogra_: I would like to wait until we solved this mystery, lets cange as little as possible\n<ogra_> mvo, well, then it is interesting that this kernel boots at all, since the dtb will be incomplete\n<ogra_> (i assume half the devices you have with the edge gadget wont simply be there or only half working)\n<mvo> ogra_: yeah, I think that is an interessting datapoint as well, the old dtb seems to be fine with most new kernels\n<ogra_> well\n<ogra_> the unstable wifi behavoiur might already be an indicator here\n<ogra_> (we only added the fully fixed wifi stuff after stable got released)\n<ogra_> it is like a lottery :)\n<mvo> ogra_: yeah, not saying its great, but interessting how uch apparently worked\n<ogra_> yeah\n<mvo> ogra_: yeah, maybe that is the answer, sergio just draw the short straw\n<ogra_> yep\n<mup> PR snapd#4049 opened: debian,vendor: import github.com/snapcore/squashfs and use <Created by mvo5> <https://github.com/snapcore/snapd/pull/4049>\n<kyrofa> sergiusens, kalikiana, elopio: someone _banned_ me. Who hates me today?\n<kyrofa> I can't rejoin :P\n<ogra_> have you been rude ?\n<ogra_> :)\n<elopio> kyrofa: sorry\n<kyrofa> ogra_, sometimes it slips\n<ogra_> haha\n<kyrofa> elopio, hahaha, was it you? Fess up\n<Chipaca> nice, we have a bug in the croatian translation that causes snap to panic\n<Chipaca> that's #1723974\n<mup> Bug #1723974: snap client doesn't work with Croatian language/characters <Snappy:Confirmed> <https://launchpad.net/bugs/1723974>\n<Chipaca> also: \u00e2\u0080\u009cPoku\u00c5\u00a1ajte \"snap install hello-world\".\u00e2\u0080\u009d\n<ogra_> i guess re-exec should better use C.UTF-8 ;)\n<zyga-ubuntu> re\n<Chipaca> mvo: do you know who I need to pester to fix a buggy translation?\n<sergiusens> elopio can we make that timing thing the default on tests or is that something you did manually?\n<kalikiana> this was a looong meeting :-D I need food now to re-ful\n<elopio> sergiusens: I added a timer in setup and teardown. It makes things verbose, and only the outliers are useful. As a second step after fixing the outliers, I was thinking to add a max time, and fail the tests that cross that line.\n<elopio> but if you want, I can get it printed in travis.\n<elopio> kyrofa: the ros unit tests should not connect to the server, right? https://launchpadlibrarian.net/341066726/buildlog_ubuntu-artful-amd64.snapcraft_2.34-201710161334-d0be68b~ubuntu17.10.1_BUILDING.txt.gz\n<kyrofa> elopio, huh, looks like it is\n * kyrofa looks\n<kyrofa> elopio, indeed, it seems that it is\n<kyrofa> But it shouldn't be...\n<kyrofa> Oh oh, wrong test\n<kyrofa> elopio, fixing now\n<mup> PR snapd#4050 opened: cmd/snap: tell translators about arg names and descs req's <Created by chipaca> <https://github.com/snapcore/snapd/pull/4050>\n<mark__> Hey guys, could you help me out making a snap? https://askubuntu.com/questions/965455/how-do-i-create-an-opengles2-and-glfw3-snap\n<mup> PR snapcraft#1614 closed: apt repo: allow insecure repos <Created by kyrofa> <Closed by kyrofa> <https://github.com/snapcore/snapcraft/pull/1614>\n<Chipaca> mark__: hello\n<mark__> hi\n<Chipaca> mark__: I think the most effective way forward for you will be to ask in the forum\n<mark__> I did\n<Chipaca> mark__: ah! ok then you're set :-)\n<mark__> Thanks.\n<kyrofa> elopio, fixed\n<elopio> thank you!\n<Chipaca> mark__: about your other issue though\n<Chipaca> mark__: what distro are you on?\n<mark__> lubuntu\n<sergiusens> elopio I am not so confident about killing tests that take too long. It is an extra burden and in practice doesn't work really well (considering that we already get our runners killed for long running test executions anyways)\n<Chipaca> mark__: what's the output of `which stopwatch`?\n<Chipaca> mark__: which -a stopwatch, even\n<mark__> of both commands\n<mark__> the output is \"/snap/bin/stopwatch\"\n<Chipaca> mark__: and if you run stopwatch, it complains about /usr/local/bin/stopwatch?\n<mark__> Actually it's fixed now. I don't know, maybe because after the question I make a new snap and installed/removed it multiple times.\n<Chipaca> mark__: did you used to have it in /usr/local ?\n<mark__> So now\" snap run stopwatch\" and \"stopwatch\" produce the same results\n * Chipaca mangles the english language for fun & profit\n<Chipaca> mark__: that error looks like at some point you had a /usr/local/bin/stopwatch, and bash cached it\n<mark__> yeah, I had it installed manually before\n<mark__> using custom install.sh and uninstall.sh scripts\n<Chipaca> mark__: for what it's worth, when that happens, bash has a builtini \"hash\" that lets you tweak that cache\n<Chipaca> hash -r, if memory serves, updated the entries in it\n<Chipaca> or maybe it reset it\n<Chipaca> one of those :-)\n<mark__> oh, so that's solved then...\n<mark__> thanks\n<Chipaca> no problem\n<Chipaca> glad it was that :-)\n<mark__> I still can't load the graphics drivers though :(\n<Chipaca> mark__: yep, that's something else (and you'll need a snapcrafter for it i reckon)\n<elopio> kyrofa: wait, that test hasn't landed in master?\n<Chipaca> mark__: have you looked at one of the sample snaps that use opengl?\n<Chipaca> mark__: (no idea, just trying to help)\n<kyrofa> elopio, ah, yes indeed it has\n<kyrofa> elopio, I can propose a quick PR to fix it rather than putting it in the ament PR if you like\n<kyrofa> It's two lines\n<kyrofa> I suppose autopkgtest is barfing on it huh\n<elopio> kyrofa: is the PPA recipe. I'd appreciate if you make the PR, so I can move on with the PPA.\n<kyrofa> elopio, easy peasy. Two seconds\n<mup> PR snapcraft#1619 opened: tests: don't hit internet in ros2 units <Created by kyrofa> <https://github.com/snapcore/snapcraft/pull/1619>\n<kyrofa> elopio, there you are ^^\n * sergiusens commutes to a location with something to eat lunch\n * zyga-ubuntu rests after a long day\n<mup> PR snapcraft#1620 opened: plugins: build-attributes is already in the state <Created by kyrofa> <https://github.com/snapcore/snapcraft/pull/1620>\n<diddledan> popey: can you review https://github.com/snapcrafters/corebird/pull/13 for me please? :-)\n<mup> PR snapcrafters/corebird#13: add wayland support for artful (17.10) <Created by diddledan> <https://github.com/snapcrafters/corebird/pull/13>\n<mup> PR snapcraft#1621 opened: integration tests: skip catkin test on non-xenial <Created by kyrofa> <https://github.com/snapcore/snapcraft/pull/1621>\n<kyrofa> elopio, take a look at that ^^ one when you get a sec as well\n<kyrofa> Hey elopio, I have another thought for our tests. What if we had a Docker container pre-configured with all our dependencies. That would save a lot of setup time, wouldn't it?\n<kyrofa> I mean, the static tests that take a few seconds on my machine take over 5 minutes in travis\n<gouchi> hi\n<gouchi> I was wondering why we have to connect manually some interfaces with snap connect xxxx:home for example ?\n<gouchi> why it is not done automatically ?\n<kalikiana> gouchi: some interfaces don't autoconnect for security reasons. Have a look at this wiki https://github.com/snapcore/snapd/wiki/Interfaces\n<gouchi> kalikiana: thank you\n<mup> PR snapcraft#1620 closed: plugins: build-attributes is already in the state <bug> <Created by kyrofa> <Merged by sergiusens> <https://github.com/snapcore/snapcraft/pull/1620>\n<Arthur_D> hi, noob question: how does Snapcraft interact with Github - if I give it access to my Github account, will it edit anything regarding the repo or Github presentation? For example create some sort of link to the Snap on the Snapcraft website\n<sergiusens> Arthur_D it shouldn't, the scope is a bit broad, but it is I think the no brainer one that allows webhooks\n<sergiusens> instructions on manually hooking it all up are being worked on to avoid this scenario, it would however require more manual interaction and setup\n<Arthur_D> the reason I ask is because I contribute a bit to a project but don't want to create some sort of official or official looking snap, mainly wanted to test\n<mup> PR snapcraft#1619 closed: tests: don't hit internet in ros2 units <Created by kyrofa> <Merged by sergiusens> <https://github.com/snapcore/snapcraft/pull/1619>\n<mup> PR snapcraft#1621 closed: integration tests: skip catkin test on non-xenial <Created by kyrofa> <Merged by sergiusens> <https://github.com/snapcore/snapcraft/pull/1621>\n<mup> PR snapcraft#1622 opened: schema: sync patterns with snapd <Created by kyrofa> <https://github.com/snapcore/snapcraft/pull/1622>\n#snappy 2017-10-17\n<mup> PR snapcraft#1568 closed: lxd: don't re-inject the same snaps <bug> <Created by kalikiana> <Merged by sergiusens> <https://github.com/snapcore/snapcraft/pull/1568>\n<mup> PR snapcraft#1618 closed: states: add scriptlets to build state <bug> <Created by kyrofa> <Merged by sergiusens> <https://github.com/snapcore/snapcraft/pull/1618>\n<zyga-ubuntu> o/\n<zyga-ubuntu> mvo: hey\n<zyga-ubuntu> just the man I wanted to see\n<zyga-ubuntu> mvo: https://github.com/snapcore/squashfuse/pull/1\n<mup> PR squashfuse#1: Tweak implementation of dummy go module <Created by zyga> <https://github.com/snapcore/squashfuse/pull/1>\n<mvo> hey zyga-ubuntu\n<mvo> zyga-ubuntu: hyes, thanks for this PR! did you test it, does that work? I also tried a subdir approach and go get would only checkout the actual dir, not any other dirs. if it works, that would indeed be very nice\n<mvo> zyga-ubuntu: (i was doing it the other way around, the C source in a subdir)\n<zyga-ubuntu> mvo: it go builds but I didn't test the full govendor sync with it (I'd have to change paths)\n<zyga-ubuntu> mvo: right but that failed for me\n<zyga-ubuntu> mvo: the linker part was not working\n<zyga-ubuntu> mvo: and govendor complained if nothing referenced that\n<zyga-ubuntu> mvo: now it's working locally, if you commit I will be able to sync\n<mvo> zyga-ubuntu: let me try quickly based on your branch, if it works, +100, very nice\n<zyga-ubuntu> if it doesn't work we can remove that patch from history\n<zyga-ubuntu> mvo: one sec\n<zyga-ubuntu> http://paste.ubuntu.com/25757470/\n<zyga-ubuntu> you want this in your snapd tree\n<mvo> zyga-ubuntu: oh, nice, yeah, this way around it works\n<mvo> zyga-ubuntu: \\o/\n<zyga-ubuntu> I can push this into your branch\n<mvo> zyga-ubuntu: please do, I will take care of the rest, that will simply some things\n<zyga-ubuntu> just say the word\n<zyga-ubuntu> done\n<mvo> zyga-ubuntu: thanks\n<mvo> zyga-ubuntu: (I guess that was the word your were looking for ;)\n * mvo hugs zyga-ubuntu \n<zyga-ubuntu> woot, I hope we can quickly solve this\n<zyga-ubuntu> do you want to make .6 with this feature?\n<mvo> zyga-ubuntu: no more 2.28 :) it will be part of 2.29\n<mvo> zyga-ubuntu: unless regression of course, then there will be a .6\n<zyga-ubuntu> hmmmm\n<zyga-ubuntu> Obtaining dependencies\n<zyga-ubuntu> Found unused ./vendor packages:\n<zyga-ubuntu>  vu github.com/snapcore/squashfuse\n<zyga-ubuntu> Please fix via 'govendor remove +unused'\n<zyga-ubuntu> darn, govendor is too picky\n<zyga-ubuntu> why doesn't it see the test reference?\n<zyga-ubuntu> is govendor really syncing sudirectories or nothing?\n<mvo> zyga-ubuntu: hm, it is not complaining here, strange\n<zyga-ubuntu> let me reset my tree\n<zyga-ubuntu> it didn't complain when I had the tree in $GOPATH\n<zyga-ubuntu> but now it does\n<mvo> now I just need to make autogen.sh work in squashfuse\n<zyga-ubuntu> darn govendor\n<zyga-ubuntu> maybe we can just make get-deps.sh not fail on that?\n<mvo> zyga-ubuntu: I removed everyting squashfuse from my GOPATH and ran tests again, no error\n * zyga-ubuntu thinks\n<zyga-ubuntu> well\n<zyga-ubuntu> if it works in the build I'll be happy\n<zyga-ubuntu> mvo: and you want to twaek autogen for local development?\n<zyga-ubuntu> mvo: I'm building the package now\n<mvo> zyga-ubuntu: it complains for me about SQ_WANT_HIGHLEVEL missing\n<mvo> eh, \"does not appear in AM_CONDITIONAL\"\n<mvo> (not missing)\n<zyga-ubuntu> mvo: the beauty of autohell\n<mvo> zyga-ubuntu: did this work for you?\n<zyga-ubuntu> yes\n<zyga-ubuntu> but something odd is going on\n<mvo> zyga-ubuntu: I'm on artful, maybe because of that?\n<zyga-ubuntu> mvo: I just saw your dummy-{gcc,ld} output\n<zyga-ubuntu> something must be cached somewhere\n<zyga-ubuntu> ah\n<zyga-ubuntu> man, we didn't change the hash in vendor.json\n<mvo> zyga-ubuntu: git pull\n<zyga-ubuntu> I'm on artful too\n<zyga-ubuntu> k\n<mvo> zyga-ubuntu: that will update the vendor.json\n<zyga-ubuntu> got that now\n<zyga-ubuntu> fatal: Could not parse object 'f066269fbbcd0ec6232cdffbc0fe48c7e2f7ad97'.\n<mvo> woah\n<zyga-ubuntu> # cd /home/zyga/go/.cache/govendor/github.com/snapcore/squashfuse; git reset --hard f066269fbbcd0ec6232cdffbc0fe48c7e2f7ad97\n<mvo> thats strange I just did \"govendor fetch github.com/snapcore/squashfuse\"\n<zyga-ubuntu> I'll kill that cache\n<zyga-ubuntu> now it worked\n<zyga-ubuntu> weird\n<zyga-ubuntu> maybe the cache was confused by my operations on the local tree earlier (I squashed/amended)\n<zyga-ubuntu> building in progress\n<mvo> zyga-ubuntu: yeah, just double checked, the hash i nthe vendor.json matches the git repo\n<zyga-ubuntu> it failed on three automake things now\n<zyga-ubuntu> Makefile.am:6: error: MAKE_EXPORT does not appear in AM_CONDITIONAL\n<zyga-ubuntu> Makefile.am:36: error: SQ_WANT_HIGHLEVEL does not appear in AM_CONDITIONAL\n<zyga-ubuntu> Makefile.am:48: error: SQ_WANT_LOWLEVEL does not appear in AM_CONDITIONAL\n<zyga-ubuntu> I think we are now in sync\n<mvo> yes\n<mvo> same that i get\n<zyga-ubuntu> brb, daughther goes to school\n<zyga-ubuntu> re\n<zyga-ubuntu> sorry, kids as usual :)\n<zyga-ubuntu> mvo: are you patching those?\n<zyga-ubuntu> I just started\n<mvo> zyga-ubuntu: hi, looks like issue #12 for squashfuse discusses the issue we are seeing\n<mup> PR #12: Bugfix/lp1480248 test reenable <Created by mvo5> <Merged by niemeyer> <https://github.com/snapcore/snapd/pull/12>\n<zyga-ubuntu> mvo: looking\n<mvo> zyga-ubuntu: I patched them but got stuck right after that :/\n<zyga-ubuntu> hehe, look who reported it\n<zyga-ubuntu> mvo: how does it build in the archive? maybe there's a patch\n<mvo> zyga-ubuntu: aha, good idea\n<mvo> zyga-ubuntu: fwiw, feel free to attach your patch :)\n<zyga-ubuntu> mvo: I don't have anything yet, just reading the configure script now\n<mvo> zyga-ubuntu: mehhhh\n<zyga-ubuntu> mvo: I find it sad/silly that a half a dozen C file project is so hard to build\n<zyga-ubuntu> wat?\n<mvo> zyga-ubuntu: the m4 subdir is missing I think\n<zyga-ubuntu> I see it here\n<zyga-ubuntu> missing as in not copied somewhere?\n<mvo> zyga-ubuntu: thats govendor again, its really annyoing about subdirs\n<zyga-ubuntu> ah\n<mvo> zyga-ubuntu: rm -rf the squashfs and get it again\n<zyga-ubuntu> mv dummy m4/\n<mvo> zyga-ubuntu: and then check the dir\n<zyga-ubuntu> ah, right, I was looking at the full git tree\n<zyga-ubuntu> did you get\n<zyga-ubuntu> extract.c:51:17: warning: implicit declaration of function \u00e2\u0080\u0098sqfs_makedev\u00e2\u0080\u0099; did you mean \u00e2\u0080\u0098sqfs_mode\u00e2\u0080\u0099? [-Wimplicit-function-declaration]\n<mvo> zyga-ubuntu: I wonder how to overcome the m4 subdir problem\n<zyga-ubuntu> mvo: mv dummy m4/dummy\n<zyga-ubuntu> done\n<zyga-ubuntu> we'll get the full set\n<zyga-ubuntu> (silly but, well it should work)\n<mvo> zyga-ubuntu: heh, smart\n<zyga-ubuntu> mvo: I'd say sad but I think we are in agreement :)\n * mvo hugs zyga-ubuntu again\n<zyga-ubuntu> mvo: I'll try something entirely different to see how crazy that would be\n<mvo> zyga-ubuntu: I update the trees for your approach in the meantime\n<zyga-ubuntu> ok\n<zyga-ubuntu> mvo: note that squashfuse uses a library now\n<zyga-ubuntu> mvo: where will we keep it?\n<zyga-ubuntu> mvo: it seems we need to link that statically\n<mvo> zyga-ubuntu: yes, we need to link statically\n<zyga-ubuntu> mvo: note, just the library, the rest can be dynamic\n<zyga-ubuntu> (to avoid hair-pulling in other distros0\n<mvo> zyga-ubuntu: hm, adding github.com/snapcore/squashfuse/ does no longer work for me without go files in it, it is just silently ignored\n<zyga-ubuntu> mvo: take a break from this problem for two hours please\n<zyga-ubuntu> mvo: if my approach fails we can go back to adding more hackery\n<mvo> zyga-ubuntu: ok\n<zyga-ubuntu> mvo: how are we calling the binary? snapfuse?\n<mvo> zyga-ubuntu: yes\n<mvo> zyga-ubuntu: https://github.com/snapcore/snapd/pull/4049/commits/bff17ef731ea8e2bc88a1ab2066b33a2bc8c0e31#diff-42c07ec7ffa970857b4e0db2614e482bR428\n<mup> PR #4049: debian,vendor: import github.com/snapcore/squashfs and use <Created by mvo5> <https://github.com/snapcore/snapd/pull/4049>\n<zyga-ubuntu> thank you!\n<knurd> Lo. Is it still possible somehow to set up your own snap store and configure snap to use it? Looks like https://github.com/noise/snapstore/ stopped working a while ago and was abandoned recently.\n<knurd> I already asked on https://plus.google.com/+ThorstenLeemhuis/posts/HyHfxaFQWz2 but got no reply\n<zyga-ubuntu> knurd: please look at forum.snapcraft.io, this has been extensively discussed there under the topic \"extenral repositories\"\n<knurd> zyga-ubuntu: thx for the pointer!\n<zyga-ubuntu> wa\n<zyga-ubuntu> mvo: almost there, I think\n<mwhudson> zyga-ubuntu: btw i poked at 2.28.5 in debian, i didn't do the dependency updates though\n<mwhudson> i should push what i have to alioth i guess\n<mwhudson> vendor.json diffs are hard to read :(\n<mvo> fwiw 4047 needs a second review\n<zyga-ubuntu> mwhudson: ack\n<zyga-ubuntu> mwhudson: I'll have a look, I cannot promise anything soon though (I need to trim my PR list)\n<mwhudson> yeah. o\n<mwhudson> bah\n<mwhudson> yeah, i'll try to poke at it over the next couple of days too\n<zyga-ubuntu> mvo: http://pastebin.ubuntu.com/25757771/\n<zyga-ubuntu> mvo: integrated into our build system\n<mvo> zyga-ubuntu: nice, I wonder if libfuse is installed by default\n<mvo> and 4028 (easy) needs a second review\n<mvo> zyga-ubuntu: curious what you did and how you overcame the m4 subdir issue\n<zyga-ubuntu> mvo: I can link that statically\n<mvo> zyga-ubuntu: I think we just need to check in the lxd base image\n<zyga-ubuntu> mvo: I just integrated that into our build, the whole set of m4 macros is needed for things we don't need\n<zyga-ubuntu> we can also drop code like non xz compression and windows support files\n<mvo> zyga-ubuntu: *nod*\n<zyga-ubuntu> mvo: shall I review 4028? :D\n<mvo> zyga-ubuntu: ;) I was hoping pstolowski or chipaca might have a look\n<zyga-ubuntu> mvo: I tweaked the build system to simplify what we need, I'll run a spread test if that works\n<zyga-ubuntu> mvo: I'll push this for reference but I want to re-do it so that we can import git history\n<zyga-ubuntu> mvo: we might be able to pull in fixes from squashfuse upstream this way\n<zyga-ubuntu> mvo: so far so good though\n<pstolowski> approved\n<zyga-ubuntu> mvo: we can also go through the code and simplify windows bits out\n<zyga-ubuntu> mvo: builds are ok, testing in spread\n<zyga-ubuntu> mvo: once this works I'll ask you to review and then let's see what to do about history, ok?\n<mvo> ok\n<zyga-ubuntu> mvo: https://github.com/zyga/snapd/tree/rfc/integrated-squashfuse\n<zyga-ubuntu> this is the code\n<zyga-ubuntu> mvo: and this is the new part essentially: https://github.com/zyga/snapd/commit/3545b115cb90e702779c43703f70db9e01b10cff\n<zyga-ubuntu> mvo: lxd test now running\n<zyga-ubuntu> fingers crossed\n<zyga-ubuntu> doh :)\n<zyga-ubuntu> silly mistake\n<zyga-ubuntu> fixed now, re-running tests\n<zyga-ubuntu> I didn't enable XZ\n<Chipaca> moin\n<zyga-ubuntu> Chipaca: hey\n<zyga-ubuntu> mvo: it works now, I think I need to expand this to cover more packaging\n<mvo> zyga-ubuntu: just cherry pick my bits from https://github.com/snapcore/snapd/pull/4030\n<mup> PR #4030: many: add internal squashfuse copy as \"snapfuse\" <Created by mvo5> <Closed by mvo5> <https://github.com/snapcore/snapd/pull/4030>\n<zyga-ubuntu> mvo: aha, thank you\n<mvo> zyga-ubuntu: I will revert 4049 back to the original state, lets see what niemeyer thinks about the two approaches as they have boths pros/cons\n<Tazmania> Hello, I have a Dell atom based mini PC came pre-installed with Ubuntu Core 16.  I would like to know if it is possible to install cmake and domoticz packages on it?  I am a newbie to Snappy, please pardon me.\n<mvo> zyga-ubuntu: but maybe/probably the govendor approach is doomed as it cannot statically link selectively via configure\n<zyga-ubuntu> mvo: fingers croessed\n<zyga-ubuntu> mvo: https://github.com/snapcore/snapd/pull/4051\n<mup> PR #4051: many: add integrated snapfuse <Created by zyga> <https://github.com/snapcore/snapd/pull/4051>\n<mup> PR snapd#4051 opened: many: add integrated snapfuse <Created by zyga> <https://github.com/snapcore/snapd/pull/4051>\n<zyga-ubuntu> mvo: I'll break for shower/coffee as I'm still in my pijamas today\n<mvo> Tazmania: if you want to develop its probably easiest if you \"snap install classic; classic\"\n<mvo> Tazmania: eh, \"sudo snap install --devmode --beta classic\" that is\n<mvo> zyga-ubuntu: heh, thank you!\n<zyga-ubuntu> Tazmania: and please look at forum.snapcraft.io, lots of friendly people there and lots of questions answered already\n<Tazmania> What's the difference between classic and the pre-installed?\n<Tazmania> zyga-ubuntu: thanks. I will check the forum\n<mvo> zyga-ubuntu: did you add a patch to fix the sqfs_makedev() error ?\n<zyga-ubuntu> mvo: compare diffstat in 4030 and 4051\n<zyga-ubuntu> automake is crazy\n<zyga-ubuntu> mvo: hmmmmm, I don't think I did\n<mvo> Tazmania: classic is a environment that makes it easy to develop using the classic tools\n<Tazmania> mvo: thanks\n<zyga-ubuntu> mvo: have a look at my branch please, let's see what we can cut from snapfuse/*.[ch]\n<mvo> zyga-ubuntu: interessting, I get a warning that is turned into an error here\n<zyga-ubuntu> mvo: hmm, spread passed for me, hmmm\n<mvo> zyga-ubuntu: cool\n<zyga-ubuntu> maybe I did but I didn't notice :)\n<zyga-ubuntu> anyway, afk for a moment\n<mvo> zyga-ubuntu: lets see what gustavo thinks, I personally would like to make snapfuse as much \"imported\" as possible and ideally not modify it but I see the advantages so lets see how gustavo feels about what approach should be taken\n<mvo> zyga-ubuntu: see you\n<zyga-ubuntu> mvo: shall we prepare an alt version that has working imported approach?\n<zyga-ubuntu> mvo: I mean, it might be even this code, we could just depend on a script that gets the debian .orig tarball\n<zyga-ubuntu> mvo: (via get-deps)\n<popey> diddledan: sorry for the delay, testing your corebird snap\n<mvo> zyga-ubuntu: lets talk after you had your shower, I'm not sure myself.\n<zyga-ubuntu> I'm back already\n<zyga-ubuntu> mvo: ok, I'll look at failing tests in one of my PRs and let's wait to see if 4051 is green\n<mvo> zyga-ubuntu: for when you are back - do you happen to know why none of our tests caught the typo https://github.com/snapcore/snapd/pull/3617/files#diff-ec8cacef522dbb27eeb9ceed25f03b22R249 ? I mean, we have a integration test for network-control, why does that not fail on invalid content? can we add that?\n<mup> PR #3617: interfaces/builtin: use udev tagging more broadly <Created by adglkh> <Merged by mvo5> <https://github.com/snapcore/snapd/pull/3617>\n<zyga-ubuntu> mvo: looking\n<zyga-ubuntu> aha, that typo\n<zyga-ubuntu> let me think\n<mvo> zyga-ubuntu: I'm breaking it on purpose now and run the spread test to see if our checks are insufficient\n<mvo> zyga-ubuntu: does udev not error when we write incorrect files?\n<zyga-ubuntu> mvo: are those tests checking tun devices?\n<zyga-ubuntu> mvo: I think the file was parsing OK, just not doing what we wanted\n<mvo> zyga-ubuntu: no, no checks for tun devices. hm, ok, if its valid syntax just the wrong one that is hard to test\n<zyga-ubuntu> mvo: maybe if the rules looks like `KERNEL==\"foo\", TAG+=\"...\",\\nKERNEL==\"bar\", TAG+=\"...\"` the rule is just a no-op\n<zyga-ubuntu> mvo: as in, it will never match both \"foo\" and \"bar\"\n<mvo> zyga-ubuntu: there was an extra \",\" at the end of the line\n<zyga-ubuntu> I can test that theory but I need to get to the bottom of something failing in my branch first\n<mvo> (in this particular case)\n<zyga-ubuntu> mvo: right but , is a separator for udev expressions\n<mvo> zyga-ubuntu: sure, I can chase this\n<mvo> zyga-ubuntu: aha, ok\n<zyga-ubuntu> mvo: we could build a simple safeguard\n<zyga-ubuntu> mvo: add a new api to udev.Specification\n<zyga-ubuntu> mvo: that has less flexibility in it\n<zyga-ubuntu> mvo: we could then rewrite vast majority of udev rules to use that\n<zyga-ubuntu> mvo: and maybe keep {modem,network}-manager as the only uses of the more powerful, type-unchecked api\n<zyga-ubuntu> mvo: essentially there's no type checking anywhere there\n<zyga-ubuntu> mvo: we could also have a test that parses all the snippets\n<zyga-ubuntu> mvo: and ensures that some simple impossible conditions are not present\n<zyga-ubuntu> mvo: like tests that attr == \"a\" and attr == \"b\" at the same time\n<zyga-ubuntu> mvo: I did something similar-ish for apparmor rules earlier (I was fully parsing them, there's still a branch somewhere I can find)\n<mvo> zyga-ubuntu: ok, thank you. sounds all like some work\n<zyga-ubuntu> mvo: sorry, it's not apparmor, it was seccomp,\n<zyga-ubuntu> mvo: the branch starts at 87826dc09a7a43357500329032185544b53c5c91\n<zyga-ubuntu> mvo: feature/typed-syscalls in my remote\n<zyga-ubuntu> mvo: that ensures that seccomp rules are well typed\n<zyga-ubuntu> mvo: udev rules are not too sopisticated, we could do something like that too\n<zyga-ubuntu> mvo: even if it's just for testing\n * Chipaca realises the time and runs to make it to physio\n<zyga-ubuntu> Chipaca: o/\n<zyga-ubuntu> run slowly and safely man\n * zyga-ubuntu fixed his other brnach\n<mvo> pstolowski, zyga-ubuntu: related, the lxd-demo-server stopped because we had lxd as reserved for the OS, when that started to fail we changed something else, right? more strict checking in the interfaces code, does anyone remember details?\n<mvo> hey Chipaca\n<mvo> (sorry for the many questions, writing the retrospect right now)\n<zyga-ubuntu> mvo: I don't remember, let me look\n<pstolowski> mvo, there was a change recently (the week after the sprint) to that interface\n<skjensen> Hi Guys, I'm trying to build Ubuntu Core for Nvidia TX1 it's a arm64 bit system. I'm following this guide: https://wiki.ubuntu.com/ARM64/FoundationModel  but the link to download ubuntu-core-13.10-core-arm64.tar.gz is broken. I have tried to find a more recent version of the core for arm64 but without luck..\n<zyga-ubuntu> mvo: I only found 042f9d0085bf6fe0ff82345cc58804d9e21eb318\n<skjensen> Does anyone know where I can find it, if it exist?\n<zyga-ubuntu> skjensen: ubuntu-core-13.10?\n<zyga-ubuntu> ogra_: ^\n<skjensen> I would like ubuntu-core-16.04\n<zyga-ubuntu> I think that's something for you\n<mvo> pstolowski: yes, we fixed the issue in that PR a week after the sprint. I wonder what commit/PR broke it though, it was reserved for the OS since forever afaik.\n<pstolowski> zyga-ubuntu, mvo yes, that's the change I meant\n<zyga-ubuntu> mvo: I think we just never tested that combination mvo\n<zyga-ubuntu> mvo: you added a test for this later\n<zyga-ubuntu> mvo: after the brekage occurred\n<mvo> zyga-ubuntu: stgraber reported lxd-demo-server used to work and started breaking with 2.28\n<mvo> zyga-ubuntu, pstolowski ok, I chase that, thanks for your input!\n<zyga-ubuntu> skjensen: ogra is the person for that question, I think there is (or might be) a model/gadget/kernel for TX1 but I'll let him answer with authority\n<zyga-ubuntu> wow, incredible, I can actually write a new feature now\n<zyga-ubuntu> and it's 11:56\n<ogra_> skjensen, the old ubuntu-core has been enamed to \"ubuntu-base\", tarballs can be found at http://cdimage.ubuntu.com/ubuntu-base/\n<ogra_> *renamed\n<skjensen> Great thanks.. :) Is there one for the TX1?\n<zyga-ubuntu> mvo: I spoke too soon, the fuse stuff, no fuse on 14.04\n<zyga-ubuntu> mvo: so packaging diverges\n<zyga-ubuntu> mvo: and this is now optional\n<zyga-ubuntu> mvo: meeh\n<zyga-ubuntu> skjensen: do you want classic ubuntu headless or the new snap-based ubuntu (aka ubuntu-core nowadays)\n<ogra_> skjensen, if you want an actual snap based UbuntuCore install then you need to create a gadget snap and use ubuntu-image to build an image for it ... the jetson tk1 is supported in the llinux-generic-bbb kernel (by selecting the tegra124-jetson-tk1.dtb devicetree froom the gadget snap)\n<skjensen> I want the new snap-based ubuntu due to the new features. It's for a IoT deployment\n<ogra_> skjensen, the -base tarballs are just root filesystems just pick the arm64 one\n<zyga-ubuntu> skjensen: I'd suggest you open a forum thread about TX1 core image\n<ogra_> skjensen, aha ... https://ograblog.wordpress.com/2017/05/30/building-u-boot-gadget-snap-packages-from-source/ and https://ograblog.wordpress.com/2017/06/13/patching-u-boot-for-use-in-an-ubuntu-core-gadget-snap/ ae what you want then\n<kalikiana> clobrano: hey\n<zyga-ubuntu> skjensen: you should familiarize yourself with some snappy concepts (models, gadget snaps, kernel snaps) to make a proper set of files needed to support this\n<c-lobrano> kalikiana: hi\n<kalikiana> c-lobrano: You wanted to work on bug 1722650?\n<mup> Bug #1722650: snapcraft requires optional VERSION_ID in os-release <bitesize> <Snapcraft:Confirmed> <https://launchpad.net/bugs/1722650>\n<zyga-ubuntu> skjensen: doing that on the forum is easier and many people can participate (across timezones)\n<ogra_> skjensen, create that gadget, make it use tegra124-jetson-tk1.dtb and once you have that ping me again and we'll talk abut how you get yur own kernel build fom the linux-generic-bbb snap\n<zyga-ubuntu> ogra_: btw, do you have the TX1 or the TX2?\n<zyga-ubuntu> ogra_: are they decent machines? I was thinking about getting one simply because it has oodles of ram (for an arm board)\n<ogra_> zyga-ubuntu, nope ... i stopped after tegra2 ...\n<c-lobrano> kalikiana: yes, but before pushing a change according to what you suggested, I'd like to see what kind of file snapcraft is looking for\n<zyga-ubuntu> ogra_: aha, thank you\n<ogra_> they shoudl be in the relam of a dragonbard\n<skjensen> I got the TX1 and actually got a TK1 as well.. But we decided we needed the TX1 to run out software since it uses TensorFlow and that's not supported anymore on the TK1\n<kalikiana> c-lobrano: Do you have a local checkout of snapcraft?\n<zyga-ubuntu> mvo: shall I change the snapfuse PR now or would you rather wait for gustavo's opinion first?\n<kalikiana> c-lobrano: You can have a look at the \"libraries\" folder\n<c-lobrano> kalikiana: yes, I've already branched the project for a previous PR\n<c-lobrano> *forked\n<skjensen> It's a work project, so I got the next 2 months to dive into the snap universe and get a proper version up and running on the TX1. Thanks for all the help to get started on this. I will let you know how I get on.. :)\n<mvo> zyga-ubuntu: either way is fine with me\n<zyga-ubuntu> skjensen: welcome aboard, the forum has a \"docs\" category with useful documentation\n<skjensen> Great :)\n<zyga-ubuntu> skjensen: there's also the \"device\" category for topics related to making and supporting new devices\n<zyga-ubuntu> https://forum.snapcraft.io/c/device\n<zyga-ubuntu> https://forum.snapcraft.io/c/doc\n<zyga-ubuntu> https://forum.snapcraft.io/t/the-gadget-snap/696\n<ogra_> skjensen, well, start with the gadget and for easiness i'd take the tk1 first ... the gadget between the two will only differ minimally so you can re-use it for tx1 with some minimal changes ... the difference between the tw is that you will need your own kernel for the tx1 so fr a start the tk1 will be easier ...\n<zyga-ubuntu> https://forum.snapcraft.io/t/the-kernel-snap/697\n<ogra_> skjensen, just folllow the blogposts i gave yu abve, they have a step by step guide and all links to alll docs yu need\n<skjensen> ogra_ thanks, I will get started on the TK1 to get some experience.. and then move onto the TX1\n<ogra_> iirc there was also some jetson work done initially by parrot ... not sure if they put that in github though\n<kalikiana> c-lobrano: Perfect. So if you see the \"libraries\" folder, there's a file \"16.04\" in there, which if you open it contains a lot of filenames.\n<kalikiana> That's the ones that get stripped from the snap\n<c-lobrano> kalikiana: oh, I see\n<skjensen> ogra_ super, and I can guarantee you my work will go up on github for everyone to use..\n<ogra_> \\o/\n<c-lobrano> kalikiana: so, if no VERSION_ID exists, there is no way to find \"another equivalent\" file, right?\n<kalikiana> c-lobrano: The code basically wants to know that it runs on Ubuntu 16.04 and do its thing. If VERSION_ID isn't there... it should probably be equivalent to a different version, like say 17.10, in which case there's no file\n<c-lobrano> kalikiana: perfect, so I can propose my PR\n<kalikiana> c-lobrano: Yeah. I think kyrofa made a good point there with regard to abstracting it, tho not sure it should be done in the same PR... unless you'd like to look into that as well?\n<ogra_> mvo, you might want to mention https://bugs.launchpad.net/ubuntu/+source/snapd/+bug/1724088 in the changelog for the release\n<mup> Bug #1724088: All snap packages fail to start with 'udev_enumerate_scan failed' <snapd (Ubuntu):Fix Committed> <https://launchpad.net/bugs/1724088>\n<c-lobrano> kalikiana: oh, I wasn't subscribed to the bug yet, and I missed kryofa's comment. What about doing two PR, one for the bug and one for the \"new feature\"?\n<mup> PR snapd#4052 opened: tests: check for invalid udev files during all tests <Created by mvo5> <https://github.com/snapcore/snapd/pull/4052>\n<kalikiana> c-lobrano: Yeah, that's what I was thinking as well. The fix itself is straight-forward\n<c-lobrano> kalikiana: alright. I'm in the middle of ./runtest.sh unit, then I can push the PR\n<kalikiana> c-lobrano: Awesome. Thanks for working on it!\n<c-lobrano> kalikiana: yw :)\n<zyga-ubuntu> mvo: there's a typo in tihs:\n<zyga-ubuntu> 2017-10-12 Bureport from 16.04 users about udev_enumerate_scan failure not fixed until the machine is reported. This is unacceptable so we added cleanup code into snap-confine to cleanup the state that caused libudev to be erroring (releated to the udev device tagging that was incorrectly applied to nvidia devices) - PR#4042.\n<zyga-ubuntu> s/machine/machine is rebooted/\n<zyga-ubuntu> mvo: otherwise great writeup, thank you!\n * zyga-ubuntu goes to pick up his son from new school. will probably miss the standup in traffice, be back in two+ hours\n<mup> PR snapcraft#1623 opened: Removed dependency on VERSION_ID in os-release <Created by clobrano> <https://github.com/snapcore/snapcraft/pull/1623>\n<kalikiana> c-lobrano: Could you add a unit test for your fix? Probably in snapcraft/tests/test_libraries.py\n<c-lobrano> kalikiana: sure\n<zyga-ubuntu> re, waiting for son in school\n<c-lobrano> kalikiana: just let me see how to do it :)\n<niemeyer> o\n<niemeyer> o/\n<Chipaca> \\o\n<sergiusens> o/\n<Chipaca> /o/\n<Chipaca> \\o\\\n<niemeyer> \\_o_/\n<niemeyer> mvo: What's up with snapfuse? (Wondering about zyga's comment above)\n<niemeyer> (and about the new PR)\n<ogra_> first rule of the snappy yoga club ... don't talkk about the snappy yoga club\n<niemeyer> ogra_: You just broke it\n<ogra_> yeah, the evil in me ... :)\n<mvo> niemeyer: its mostly about details in how we should do it. I was trying to use \"govendor fetch\" to get it. however its really fighting govendor more than anything else. the alternative is to embedd it, zygas approach is to integrate it pretty close (including putting it into our make files instead of using the upstream makefiles). I was mostly curious about your suggested approach\n<mvo> ogra_: thanks for the pointer to the bug about udev_enum_failed\n<ogra_> np\n<ackk> hi, could anyone kick a CI run on https://github.com/snapcore/snapd/pull/3916? I suspect there were some infrastructure issues on the previous run\n<mup> PR #3916: snap,wrappers: add support for socket activation <Created by albertodonato> <https://github.com/snapcore/snapd/pull/3916>\n<niemeyer> mvo: What happened with govendor?  I was hopeful as well\n<mvo> niemeyer: its still there in #4049, but open issues and I had to be quite creative to make it go getable (https://github.com/snapcore/squashfuse/commit/ed6f37bbee6537e0598aa7f4f5dafa379be0c73a)\n<mup> PR #4049: debian,vendor: import github.com/snapcore/squashfs and use <Created by mvo5> <https://github.com/snapcore/snapd/pull/4049>\n<kalikiana> c-lobrano: Feel free to pester me with questions as needed :-D\n<niemeyer> mvo: Oh, I see.. so govendor will still use go get\n<mvo> niemeyer: we can further explore this, we need to link some (or all) libs for snapfuse statically to ensure we don't add other hidden dependencies\n<c-lobrano> kalikiana: :D I'll do\n<mvo> niemeyer: yes, I could not make it just fetch my git tree, it was slightly confusing as you can add things and it will not err/warn but just silently ignore it if it does not look like a go repo\n<niemeyer> Hmmm\n<mvo> niemeyer: we can talk more in the standup, zygas PR is much much closer (and conceptually easier). the downside is that we need to track upstream\n<mvo> (closer)\n<niemeyer> mvo: If all we want is to get the tree and not compile, we might just drop a Go file somewhere\n * kalikiana time for a break\n<mvo> niemeyer: that is what I did, unfortuantely once there are C files in the tree it will try to compile them (it being go)\n<niemeyer> mvo: It won't try to compile any place that you don't explicitly get\n<mvo> niemeyer: so yeah, we can make it work its just a bit more hacky and we need to solve how to  statically linki in that PR\n<niemeyer> mvo: e.g. if you create a directory and drop a println(\"hi\") on a .go file on it, and get _that_ package path, it won't care about the rest\n<mvo> niemeyer: correct, but it will also only get that directory and leave parent dirs empty\n<niemeyer> mvo: No.. it fetches the whole repository\n<niemeyer> mvo: There's no way to tell git to fetch a subtree\n<mvo> niemeyer: you are right, this is what I see with go get too, I wonder why I had a different experience with govendor, I can try this again and understand the details\n<skjensen> ogra_ I'm trying to follow your beaglebone guide to build for the TK1, but I'm a bit unsure about the uboot.env.in file? Where did you get that from?\n<ogra_> skjensen, you start with \"printenv\" in the uboot shell to get the default env ... then you need the load* scripts to load the right files and all the snappy_* and snap_* vars (and scripts)\n * zyga-ubuntu is online but in super-noisy place\n<ogra_> and examples are at https://github.com/ogra1/beaglebone-gadget/blob/master/uboot.env.in ... or https://github.com/ogra1/pi3-gadget/blob/master/uboot.env.in\n<skjensen> okay, thanks..\n<ogra_> the essential bits are \"loadfiles\" and \"snappy_boot\"\n<skjensen> okay.. :)\n<c-lobrano> kalikiana: I'm using TestSystemLibsOnNewRelease as template, mocking get_os_release_info in order to return a dict without VERSION_ID, but somehow I still get the 16.04 list of .so, maybe you can spot my mistake http://paste.ubuntu.com/25759264/\n<kalikiana> c-lobrano: _get_system_libs uses a global variable. Can you try unsetting it in the setup method?\n<kalikiana> ie. `_libraries = None`\n<kalikiana> it's set and checked at the top of the _get_system_libs function\n<c-lobrano> I see, but it doesn't seem to work\n<kalikiana> you tried it like that?\n<c-lobrano> yes, with global _libraries first\n<kalikiana> c-lobrano: Hmmm maybe you can mock.pantch _libraries?\n<kalikiana> And give it .return_value = None\n<c-lobrano> kalikiana: good idea, let me try\n * c-lobrano haven't used unittest.mock much so far\n<c-lobrano> kalikiana: it was easier than expected \"libraries._libraries = None\"\n<kalikiana> Oh, nice\n<c-lobrano> saint StackOverflow ;D\n<c-lobrano> kalikiana: weird, can't see the PR updated\n<kalikiana> c-lobrano: I don't see it either. Did you `git push origin bug-lp1722650` the branch?\n<c-lobrano> kalikiana: I did `git push -f` actually, but I can see it on my repo\n<c-lobrano> https://github.com/snapcore/snapcraft/compare/master...clobrano:bug-lp1722650\n<kalikiana> Hmm. Even if you amended the commit it should have updated automatically\n<kalikiana> Or did you completely re-do the branch under the same name?\n<cachio_> pstolowski, mvo I have the same issue with the pi3 using 2.28.5\n<cachio_> I try to creata the image by using the deb ubuntu-image\n<pstolowski> cachio_, i've just finished preparations, about to run the test\n<mvo> cachio_: did you and pstolowski figure out in what way the test differed between you?\n<kalikiana> btw sergiusens did you want to have a one on one today? You mentioned it the other day, but I have none anymore in my calendar since you removed it last time\n<cachio_> mvo, a diff is the tool we used to create the image\n<pstolowski> mvo, i used ubuntu-image from the distro (not snap), however the version number is the same, so perhaps that's irrelevant\n<c-lobrano> kalikiana: just amended\n<kalikiana> c-lobrano: Hmm weird. It should just show up then\n<mvo> cachio_, pstolowski aha, thats very interessting\n<pstolowski> mvo, it's hard to compare the versions of other stuff, Sergio flashed his card already. this time we will generate beta images at the same time\n<mvo> pstolowski: \\o/\n<Chipaca> kalikiana, sergiusens, kyrofa, who's fielding questions along the lines of \"why does a snap built with this snapcraft.yaml throw these library errors\"?\n * kyrofa runs\n<kyrofa> Chipaca, hit me :)\n<kalikiana> haha\n * Chipaca picks up a 15kg wrench\n<zyga-ubuntu> Chipaca: are you going to mend the computer?\n<Chipaca> kyrofa: actually i'm asking on behalf of https://forum.snapcraft.io/t/how-do-i-create-an-opengles2-and-glfw3-snap/2488\n * zyga-ubuntu is in a bus, working like it's his office\n<Chipaca> zyga-ubuntu: put pants on, man!\n<kyrofa> Chipaca, alright I'll take a look, thanks for the ping :)\n<zyga-ubuntu> Chipaca: oh my!\n<zyga-ubuntu> and I thought I just looked good\n<zyga-ubuntu> all the people staring\n<sergiusens> Chipaca the title doesn't make me feel it would be easy as the text below it makes it\n<c-lobrano> kalikiana: alright, changed commit message a bit, now github recognized the update :D\n<Chipaca> sergiusens: users gonna use\n<sergiusens> Chipaca isn't all the gl stuff supposed to be mirrored into the snap through the snapd mounts?\n<sergiusens> zyga-ubuntu ^ ?\n<Chipaca> was about to say, i think some magic is done, but ask zyga-ubuntu :-)\n<Chipaca> this might just be a \"add the opengl interface\" or something\n * Chipaca no sabe\n<kalikiana> c-lobrano: One note on the test data. How about using something other than Xenial where it's normal to have no VERSION_ID field?\n<kalikiana> Otherwise it's potentially confusing to someone reading the test\n<Chipaca> kalikiana: c-lobrano: you know about os-release-zoo?\n<kalikiana> Chipaca: What's that?\n<Chipaca> kalikiana: like an animal zoo, but of os-release files\n<Chipaca> kalikiana: https://github.com/zyga/os-release-zoo\n<kalikiana> Oh, neat\n<kalikiana> MAybe this one https://github.com/zyga/os-release-zoo/blob/master/elementary/elementary-0.4.txt works for this test\n<Chipaca> kalikiana: note that one is wrong\n<Chipaca> as in, it's what they shipped, but it's invalid\n<Chipaca> they have since fixed it (i think0\n<Chipaca> )\n<kalikiana> Ah, it has the invalid ID. There was even a snapcraft bug about it\n<Chipaca> :-)\n * ikey sometimes thinks os-release needs an UPDATE_MECHANISM field to properly describe the core architecture\n<Chipaca> ikey: also a SUCKS_LIKE field\n<Chipaca> IS_AT_LEAST_AS_BAD_AS=...\n<ikey> lol\n<c-lobrano> kalikiana: I think you're right. I'm not familiar with os-release-zoo\n<zyga-ubuntu> c-lobrano: hey\n<zyga-ubuntu> c-lobrano: github.com/zyga/os-release-zoo\n<pstolowski> cachio_, it failed for me with snap_mode not defined again, http://pastebin.ubuntu.com/25759787/\n<pstolowski> mvo, ^\n<c-lobrano> hey zyga-ubuntu, thank you, I'll look into it\n<pstolowski> cachio_, my versions: http://pastebin.ubuntu.com/25759794/\n<pstolowski> cachio_, how about yours?\n<cachio_> pstolowski, one min please\n<cachio_> flasing the new one\n<cachio_> pstolowski, did you use the ubuntu-image snap?\n<pstolowski> cachio_, yes\n<cachio_> pstolowski, https://paste.ubuntu.com/25759837/\n<cachio_> this is mine\n<cachio_> flashed with deb ubuntu image\n<cachio_> the only diff is the rev for the core\n<cachio_> pstolowski, I am gonna run the test now\n<elopio> sorry for not replying kyrofa, I spent too much time fixing my wifi yesterday\n<pstolowski> cachio_, why is it different?\n<ogra_> cachio_, please check if there is actually any corruption by running fw_printenv manuallly after the test, we found yesterday that this actually works and there might be just an issue how fw_printenv is used in the test or a bug in fw_printenv itself but no actual corruption of uboot.env or the vfat ...\n<kyrofa> elopio, quite alright. Things working better today?\n<elopio> kyrofa: docker will speed things, we can go back to it. However, the problem we had was that nobody is developing in docker, so it was hard to reproduce the errors.\n<elopio> also, we can't install snaps.\n<ogra_> cachio_, all manual runs of fw_printenv returned proper results yesterday even if the test failed\n<cachio_> ogra_, ok\n<kyrofa> elopio, yeah I was mostly meaning for normal units/integrations\n<kyrofa> But if there are weird failures there, yeah that would explain it\n<elopio> kyrofa: if we publish a snap before running the integration tests, there will be no deps to install.\n<kyrofa> Very true\n<kyrofa> elopio, but again: talking about unit tests and stuff\n<elopio> kyrofa: I'm not worried about unit, but I have no problem moving those to docker.\n<kyrofa> elopio, yeah I really just mean as an overall speedup step\n<pstolowski> cachio_, please paste your error if it hppens again\n<elopio> kyrofa: we still have the docker scripts around, because I didn't get a chance to move the CLA to lxc. My plan was to have everything consistent in lxc, but we can go the other way, no big arguments from me.\n<cachio_> pstolowski, it works when I flash with the deb }ubuntu-image\n<kyrofa> elopio, I have no strong feelings. We all know lxd better. I was just thinking from a speed perspective\n<cachio_> did you run the test with the image flashed with the snap ubuntu-image?\n<kyrofa> Not sure it's worth it\n<cachio_> mvo, when I use an image flashing with the deb ubuntu-image the tst pass, when I use the snap ubuntu-image the test fails\n<cachio_> mvo, interesting\n<cachio_> ogra_, also for you\n<elopio> kyrofa: would it make sense to explore having a persistent lxc container and caching it?\n<kyrofa> elopio, caching it... in lxc?\n<kyrofa> Ugh, in s3 I mean, sorry\n<kyrofa> Not awake yet\n<elopio> caching it in travis\n<kyrofa> How would that work?\n<ogra_> cachio_, hmm, has the deb even been updated sinc ethe snap exists ?\n<ogra_> also ... the deb requires you to use the foundations PPA for it to get the ext4libs version that make you not require sudo\n<ogra_> though neither should have any influence here\n<cachio_> I ran with sudo\n<kalikiana> elopio: Where would the container be created/ destroyed in that case?\n<cachio_> ogra_, is it a problem?\n<ogra_> well, it is a difference ... :)\n<mvo> cachio_: yay\n<ogra_> the version differemce might/could be a prob though\n<mvo> cachio_: that is awesome news, we have a smoking gun now\n<pstolowski> mvo, cachio_ well, it doesn't match my results\n<mvo> cachio_: I bet its the embedded mtools (or whatever vfat tools) inside the snap then\n<mvo> pstolowski: what do you get?\n<pstolowski> mvo, http://pastebin.ubuntu.com/25759787/\n<pstolowski> mvo, it's from a few moments ago, i flashed with ubuntu-image from the snap (yesterday I was using ubuntu-image from the deb)\n<ogra_> pstolowski, ubuntu-image deb or snap ? (and did you use sudo or not)\n<ogra_> aha\n<ogra_> so a smoking red herring then :P not a gun ...\n<cachio_> ogra_, I always used sudo\n<pstolowski> ogra_, yes I used sudo\n<ogra_> wwith the snap you shouldnt need to ...\n<ogra_> and with the deb, only if you dont use the PPA\n<pstolowski> ogra_, but no harm either way?\n<ogra_> theoretically not\n<ogra_> practically ... i dont know :)\n<mvo> pstolowski: well, its the EOF again, thats slightly different than the error from cachio_\n<mvo> pstolowski: still interessting and something I would love to figure out why the connection is broken\n * kalikiana going to step out for a bit, to find some food\n<pstolowski> mvo, but first and foremost, it's snap_try_core and snap_mode not defined again, right?\n<mvo> pstolowski: it will get cleared after a successful boot, so its ok if you don't see it\n<mvo> pstolowski, cachio_ I need to interrupt your testing with 2.28.5 and push 2.28.1 with a wpa fix to beta now\n<cachio_> mvo, np\n<cachio_> should I validate it now?\n<kyrofa> Yikes... using github to update branches is not working\n<kyrofa> Something is broken here\n<mvo> cachio_: yes please, once its ready, I'm uploading right now\n<kyrofa> It actually does the merge, but doesn't update the PR or tests\n<cachio_> mvo, I'll have lunch now in that case\n<mvo> cachio_: sure\n<mvo> cachio_: enjoy!\n<cachio_> mvo, and I'll create the images with the deb ubuntu-image then :)\n<mvo> cachio_: \\o/\n<kyrofa> Meh. \"We continue to investigate a queue backlog. You may experience that commits take longer than usual to appear in pull requests.\"\n<mup> PR snapcraft#1624 opened: kernel plugin: use latest stable core snap <Created by alfonsosanchezbeato> <https://github.com/snapcore/snapcraft/pull/1624>\n<elopio> kyrofa, kalikiana: I don't know, just an idea that I would have to try. Maybe putting /var/snap/lxd in the cache, or something like that.\n<kyrofa> elopio, wait... I thought the cache required s3?\n<kyrofa> Maybe I'm mixing wires with other conversations we've had\n<elopio> kyrofa: you are talking about sharing files between stages. For that, they recommend not to use the cache, and use something external.\n<kyrofa> elopio, oh interesting. Wouldn't that be what we're doing if we cache lxd, though?\n<elopio> we want to share the snap between stages, it might be worth asking why they are recommending that.\n<elopio> yes. They also recommend not to cache images :)\n<elopio> but if there is no good reason, we can just ignore the recommendation.\n<kyrofa> Huh\n<ogra_> ppisati, sergiusens ... what is this ? https://github.com/snapcore/snapcraft/blob/master/snapcraft/plugins/kernel.py#L456 ... why was the kernel plugin not switched to download core ?\n<ogra_> (ubuntu-core has not been built since severeal months, all initrd scripts in there are definitely massively outdated)\n<mvo> cachio_: new beta core ready for testing, this is a cve fix, so feel free to bump to candidate as soon as we get ok from CE and we should also push to stable as QA allows\n<abeato> ppisati, sergiusens FTR: https://github.com/snapcore/snapcraft/pull/1624\n<mup> PR snapcraft#1624: kernel plugin: use latest stable core snap <Created by alfonsosanchezbeato> <https://github.com/snapcore/snapcraft/pull/1624>\n<cwayne> mvo: cert tests are under way, we'll keep an eye out and let you know as soon as they're ready\n<mvo> cwayne: \\o/\n<mvo> cwayne: thank you, this is very important so I appreciate it\n<ppisati> ogra_: i don't know, maybe when the rename 's/ubuntu-core/core/' was done they forget to check every plugin?\n<ogra_> heh, well, kernel is the only plugin that downloads core ...\n<ogra_> i dont get how we didnt notice this though\n<ogra_> doesnt it print \"downloading ubuntu-core\" somewhere when it does that ?\n<ppisati> uhm\n<ogra_> it snt *that* bad given that all official kernel snaps re-pack the deb anyway ... but people building their own kernels miss the last fixes in the initrd scripts\n<kalikiana> elopio: Do you know if I can mock.patch for an entire module? I'm trying to patch check_open which is used in different files - and I don't want to have several mocks for all of them\n<elopio> kalikiana: yes, just use the path to the module they are all importing\n<kalikiana> elopio: That's what I tried... it's telling me the functions don't exist\n<kalikiana> elopio: This is how I'm specifying it `snapcraft.internal.lxd.sleep`\n<kalikiana> lxd is the folder containing __init__.py\n<elopio> kalikiana: are you importing snapcraft.internal.lxd in the test file?\n<kalikiana> elopio: No\n<kalikiana> elopio: even with that, I'm getting `AttributeError: <module 'snapcraft.internal.lxd' from '~/bau/snapcraft/snapcraft/internal/lxd/__init__.py'> does not have the attribute 'check_call'`\n<kalikiana> It seems to be looking in __init__.py, not inside the module where it's being used\n<kalikiana> elopio: I'm guessing I'd have to import those functions in __init__.py then, rather than the individual files\n<cachio_> cwayne, are you already testing 2.28.5 with the wpa fix?\n<kalikiana> elopio: Well, doesn't seem like I can. I can't use functions  from __init__.py in the other files\n<cwayne> cachio_: if that's the core in beta currently, yes\n<cachio_> cwayne, perfect\n<cachio_> please tell me once it is ready\n<cwayne> cachio_: thats rev 3242 right?\n<cachio_> cwayne, 3247\n<elopio> kalikiana: I'm confused, because you are talking about sleep, check_call and check_open. Not sure which one you are trying to mock. If it's sleep, just import time and mock.patch('time.sleep')\n<kalikiana> elopio: Yes. And right now all of these are imported individually\n<cwayne> cachio_: ah, were there two pushes to beta today?\n<cachio_> cwayne, yes\n<cwayne> ok, it's ongoing\n<cachio_> cwayne, the last is the valid one\n<cwayne> cachio_: ack, some systems were still running on 3241, we'll cancel and start up 3247 on those now\n<kyrofa> snappy-m-o, autopkgtest 1603 artful:amd64 xenial:arm64 xenial:armhf zesty:arm64\n<snappy-m-o> kyrofa: I've just triggered your test.\n<kyrofa> You're the best\n<cachio_> cwayne, great, thanks\n<mup> PR snapcraft#1625 opened: tests: use the snapcraft snap for integration tests <Created by elopio> <https://github.com/snapcore/snapcraft/pull/1625>\n<ackk> uhm, https://travis-ci.org/snapcore/snapcraft/jobs/289097568 has a weird error\n<kalikiana> elopio: Alright, will see how far I get by not importing these by name. Already hit `open` not working. So that one I have to mock for the individual file, otherwise it silently fails\n<ackk> kyrofa, ^ beside that one, other tests on my PR are green\n<kyrofa> ackk, unfortunately, the other tests didn't even run due to that failure :P . I've poked it\n<ackk> kyrofa, thanks\n<kenvandine> nessita, i'm getting a 401 error trying to download a snap from the edge channel\n<kenvandine> - Download snap \"gnome-taquin\" (8) from channel \"edge\" (received an unexpected http response code (401) when trying to download https://api.snapcraft.io/api/v1/snaps/download/pyEMtK4uVBGIvCV2B1NHC1sb3c2bL7x6_8.snap)\n<kenvandine> nessita, is that something you can help with?\n<kenvandine> we saw this before with the same package, i released it to stable and it worked\n<kenvandine> but now there's a new revision in edge and seeing the same thing again\n<kenvandine> popey, ^^ it happened again, same package\n * sergiusens is always annoyed by our unittests requiring hg, svn and bzr\n<mup> PR snapcraft#1626 opened: lifecycle: split into its own package <Created by sergiusens> <https://github.com/snapcore/snapcraft/pull/1626>\n<nessita> kenvandine, checking\n<nessita> kenvandine, what arch?\n<kenvandine> amd64\n<nessita> kenvandine, are you logged in? (is not a requirement but if you are is a different debug path)\n<kenvandine> nessita, yes and no :)\n<nessita> in other words, what command were you executing?\n<kenvandine> i've tried it both ways\n<kenvandine> sudo snap install --edge gnome-taquin\n<kenvandine> a wget of the url fails too\n<kenvandine> popey had tried that last time it happened\n<nessita> kenvandine, let me involve more relevant people then\n<kenvandine> cool\n * kenvandine wasn't sure who to bug\n<nessita> cprov, hi hi\n<nessita> cprov, so \"sudo snap install --edge gnome-taquin\" is failing with - Download snap \"gnome-taquin\" (8) from channel \"edge\" (received an unexpected http response code (401) when trying to download https://api.snapcraft.io/api/v1/snaps/download/pyEMtK4uVBGIvCV2B1NHC1sb3c2bL7x6_8.snap)\n<kenvandine> last time i released it to another channel and it was fine in the other channel\n<nessita> cprov, I've checked and the snap is public and released to edge for revision 8\n<kenvandine> now that i rebuilt the snap in edge it happens again\n<popey> works for me\n<popey> i am logged into the store tho\n<nessita> popey, what snapd are you running?\n<kenvandine> oh right... you are special though :)\n<kenvandine> that's right\n<popey> 2.28.5\n<popey> oh, also, I am special\n<kenvandine> doesn't work for my login and not logged in\n<kenvandine> popey, remember we debugged this before ;)\n<nessita> popey, so you are on beta for snapd?\n<kenvandine> nessita, we ruled out snapd versions last time\n<kenvandine> it was his login\n<kenvandine> if popey logs out it fails for him too\n<nessita> popey, you are a reviewer, so that may be giving you special access\n<kenvandine> right\n<popey> i am tracking beta for core, yes\n<popey> because reasons\n<popey> confirmed I get 401 from another (not logged in, snap 2.28.1) machine\n<mup> PR snapd#3954 closed: snap: introduce structured epochs <Created by chipaca> <Merged by niemeyer> <https://github.com/snapcore/snapd/pull/3954>\n<cprov> nessita: yup, 401 comes from SCA, I will look in a bit\n<kenvandine> cprov, thx\n<nessita> cprov, if I login it works, and I'm guessing that's because I'm a reviewer, but I thought we killed all privileges for reviewers when downloading outside dashboard\n<cprov> nessita: right, works when I am logged in\n<kenvandine> i can download the snap via the browser\n<nessita> kenvandine, what do you mean?\n<nessita> kenvandine, from the dashboard site while logged in as you?\n<mup> PR snapcraft#1627 opened: lxd: split container classes into different files <Created by kalikiana> <https://github.com/snapcore/snapcraft/pull/1627>\n<nessita> what's the link you used in the browser?\n<kenvandine> dashboard logged in\n<nessita> cprov, so the above indicates that only publishers and reviewers are being able to download, not other users\n<kenvandine> oh, actually i can install it when logged in\n<kenvandine> but i can't when not logged in\n<kyrofa> nessita, isn't that by design?\n<kenvandine> i can install from the stable channel when not logged in\n<kenvandine> but only for this snap\n<kenvandine> weird... scratch that... i can't install from stable either when not logged in\n * kenvandine could have sworn i could \n<nessita> kenvandine, but the issue was with edge, no?\n<kenvandine> was... but it exists with stable too it seems\n<kenvandine> when not logged in\n<kenvandine> nessita, i noticed there is a distribution blacklist\n<kenvandine> that lists like all the countries\n * kenvandine hasn't seen that before\n<nessita> gah did I miss checking for country restrictins?\n<kalikiana> elopio: I was successful with not importing by name in the end :-D  You'll see the result in my new PR\n<kenvandine> nah, it says no restrictions\n<kalikiana> Now time to wrap up for today\n<kenvandine> nessita, if i edit that it gives me a huge list of course\n<kenvandine> to select form\n<kenvandine> from\n<nessita> kenvandine, I don't see any restrictions set\n<nessita> kenvandine, as in the whitelist and blacklist are not defined, so that means all countries can access\n<kenvandine> package is public too\n<kenvandine> yeah\n<cprov> nessita: snapident & revs data match what I see in dashboard (public, not country_black/white lists and released at least once)\n<nessita> cprov, so revision 8 is shown as published in the channel map?\n<cprov> nessita: yes, released | 2017-10-17 17:28:31.979241\n<mup> Issue snapcraft#1628 opened: record lxc image used <Created by sergiusens> <https://github.com/snapcore/snapcraft/issue/1628>\n<kyrofa> What the heck is wrong with Travis. We're getting all sorts of errors that we didn't get before\n<kyrofa> BlockingIOErrors, address space conflicts\n<kyrofa> kalikiana, elopio we're getting container-related autopkgtest failures: https://objectstorage.prodstack4-5.canonical.com/v1/AUTH_77e2ada1e7a84929a74ba3b87153c0ac/autopkgtest-artful-snappy-dev-snapcraft-daily/artful/amd64/s/snapcraft/20171017_173440_d185c@/log.gz\n<kyrofa> It looks valid, the raw.idmap assertion looks wrong\n<kyrofa> At least, it's obviously different than what we expect\n<elopio> both 1000 0/both 1234 0 Hum, this seems related to the change kalikiana did for running with sudo\n<mup> PR snapcraft#1622 closed: schema: sync patterns with snapd <Created by kyrofa> <Merged by sergiusens> <https://github.com/snapcore/snapcraft/pull/1622>\n<sergiusens> elopio how about retriggering adt for snapcraft#1602 ?\n<mup> PR snapcraft#1602: tests: add the slow tag for ros snapd integration test <Created by elopio> <https://github.com/snapcore/snapcraft/pull/1602>\n<sergiusens> elopio and what I mean about error prone is that in setUp I change the value we can easily confuse the whole thing. The text should say something like \"add it as a class attribute\"\n<kyrofa> sergiusens, that's the one I'm whining about now. Doesn't look like a retrigger will succeed\n<kyrofa> Actually I'm whining about its prereq\n<sergiusens> kyrofa which one is the prereq?\n<kyrofa> elopio, note that xenial amd64 passed, and is the only amd64 I ran\n<kyrofa> sergiusens, snapcraft#1603\n<mup> PR snapcraft#1603: tests: add /snap/bin to PATH in autopkgtests <Created by elopio> <https://github.com/snapcore/snapcraft/pull/1603>\n<sergiusens> kyrofa the github side of it worked fine\n<sergiusens> kyrofa the adts of it all failed though\n<elopio> sergiusens: I updated the wording. Please let me know if it's better now.\n<kyrofa> sergiusens, indeed\n<kyrofa> elopio, oh wait... what. Maybe I lied. github is still weird right now, the amd64 run disappeared\n<kyrofa> Oh, no, it failed as well\n<kyrofa> I think that was an artifact from the previous run. This is really bad today\n<elopio> well, it's clear there's an issue in that test. It mocks getuid, and returns the wrong value.\n<kyrofa> elopio, and it looks like it fails everywhere\n<kyrofa> Obvious fix? Or would you like me to investigate?\n<kyrofa> I think we should focus on getting autopkgtests to pass until they do :P\n<elopio> kyrofa: obvious fix is to also patch SUDO_UID\n<kyrofa> elopio, wait... these are unit failures. Why aren't they failing on travis?\n<kyrofa> (or locally)\n<kyrofa> Because they run as root in autopkgtest?\n<elopio> because we don't run with SUDO maybe?\n<elopio> I don't like this test :/\n<kyrofa> Ah, indeed, SUDO_UID I see what you're saying now\n<cwayne> cachio_: looks good so far, waiting on a few more devices\n<cachio_> cwayne, great, here also looks promising\n<cachio_> just known issues\n<kyrofa> sergiusens, pre/post stanzas: are you thinking we'll have those around stage/prime as well?\n<mup> PR snapcraft#1629 opened: lxd: fix the unit test for the ser id map <Created by elopio> <https://github.com/snapcore/snapcraft/pull/1629>\n<elopio> what do you kyrofa? snapcraft#1629\n<mup> PR snapcraft#1629: lxd: fix the unit test for the ser id map <Created by elopio> <https://github.com/snapcore/snapcraft/pull/1629>\n<kyrofa> elopio, I'd prefer to see it testing that SUDO_UID actually takes precedence\n<kyrofa> elopio, i.e. make them different values\n<kyrofa> And have an \"expected\" in the scenario\n<kyrofa> Thoughts?\n<kyrofa> sergiusens, also, do you intend them to include a third stanza that replaces the plugin's? e.g. pre-pull, pull, and post-pull?\n<elopio> kyrofa: please refresh the diff and see if you like it better.\n<kyrofa> elopio, much better, but I'd also like to see a third case where they're both set and SUDO_UID is used instead of getuid\n<kyrofa> Thoughts?\n<kyrofa> I feel like that precedence is probably important behavior to preserve\n<elopio> you are right.\n<elopio> I don't like this test, so I was trying to not touch it a lot. But well, that's a small change.\n<kyrofa> Hahaha\n<kyrofa> Go wash your hands after\n<elopio> hum, no kyrofa, this third test would be a duplicate. On the first one, the env var is set, and os.getuid is not called.\n<kyrofa> elopio, are we testing for that? Or could the test also pass if it tried to call os.getuid first, got None, and fell back to SUDO_UID?\n<elopio> on the second one, the env var is not set, and os.getuid is called. This third test is the same as the first one. I just set the os.getuid return value as None, to make it clearer. But apparently, it's not :p\n<kyrofa> I suppose getting None from getuid would be odd\n<kyrofa> elopio, works for me\n<elopio> well, I can replace getuid None for a value.\n<kyrofa> elopio, doesn't matter too much. I agree with you\n<elopio> snappy-m-o autopkgtest 1629 xenial:amd64\n<snappy-m-o> elopio: I've just triggered your test.\n<cwayne> cachio_: so the only change in this core is the krack fix right?\n<cachio_> cwayne, there are few changes compared with 28.4\n<cachio_> but the diff with the previous 28.5 is just the fix\n<cwayne> cachio_: shouldn't we have done just 2.28.1+krack fix since that's what's in stable today?\n<cachio_> cwayne, that was the original idea, but it was also needed to add some other important fixes that are included in the 2.28.5 such as the fix for machines with nvidia drivers\n<cachio_> cwayne, so it was decided to go with the 2.28.5\n<cachio_> cwayne, so far everything working properly on my side\n<cachio_> cwayne, how is it going in your side?\n<cwayne> cachio_: either way, it looks like we're having some issues with the last device (unrelated to core), so I think in interest of speediness, we can push 3247 to candidate\n<cwayne> everything looks pretty normal here, just waiting on that last device (been having problems with the hw lately)\n<cachio_> cwayne, ok, which device is it?\n<elopio> snappy-m-o autopkgtest 1629 xenial:amd64\n<snappy-m-o> elopio: I've just triggered your test.\n<mwhudson> how do you guys test that snap updates work correctly?\n<mwhudson> i have a bug where the snap being updated breaks things :/\n<mwhudson> oh revert i guess\n<kyrofa> mwhudson, it depends on the snap. I use capistrano for Nextcloud\n<kyrofa> *sigh* I mean capybara. Man what is the deal today\n<kyrofa> mwhudson, and manual testing-- install the stable version, then test refreshing to candidate\n<mwhudson> whoa snap revert blew up in an exciting way\n<mwhudson> i think that's probably the overlayfs fun and games\n<kyrofa> mwhudson, overlayfs? Do I wanna know?\n<mwhudson> kyrofa: the snap i'm working on is subiquity, the server installer\n<mwhudson> it runs out of a livecd environment so everything is strange :)\n#snappy 2017-10-18\n<kyrofa> mwhudson, oh yes that sounds fun\n<sergiusens> kyrofa about pre and post, there's a very long forum post about that!\n<sergiusens> kyrofa so what is the veredict on https://github.com/snapcore/snapcraft/pull/1626 ? Or maybe elopio...\n<mup> PR snapcraft#1626: lifecycle: split into its own package <Created by sergiusens> <https://github.com/snapcore/snapcraft/pull/1626>\n<zyga-suse> good morning\n<zyga-suse> Pharaoh_Atem: I'll start testing 2.28.5 update after breakfast\n<elopio> snappy-m-o autopkgtest 1630 xenial:amd64:integration\n<snappy-m-o> elopio: I've just triggered your test.\n<mup> PR snapcraft#1630 opened: tests: allow to select a suite when running autopkgtests <Created by elopio> <https://github.com/snapcore/snapcraft/pull/1630>\n<mup> PR snapd#4028 closed: interfaces/mount: don't generate legacy per-hook/per-app mount profiles <Created by zyga> <Merged by mvo5> <https://github.com/snapcore/snapd/pull/4028>\n<zyga-suse> hey, good morning mvo\n<zyga-suse> mvo: heads up, I need to pick up my son from school again at .. 15:00 exactly,\n<mup> PR snapd#4009 closed: tests: adding test for network-manager interface <Created by sergiocazzolato> <Merged by mvo5> <https://github.com/snapcore/snapd/pull/4009>\n<mvo> zyga-suse: good morning\n<zyga-suse> :-)\n<mvo> zyga-suse: do you mind if I merge 3999?\n<zyga-suse> looking\n<mvo> zyga-suse: there is one followup {0,}->{0} for the array init, but otherwise it should be fine, I can do this followup in my 4000 pr\n<zyga-suse> mvo: I think we need to wait for jamie's review\n<zyga-suse> as for {0.} vs {0} - I don't mind. whatever indent does is fine\n<mvo> yeah\n<zyga-suse> mvo, jdstrand should be back tomorrow AFAIR\n<mvo> zyga-suse: ok\n<zyga-suse> mvo: question about .5 promotion\n<zyga-suse> mvo: when do you envision that will happen\n<kalikiana> o/\n<mvo> zyga-suse: hey, not entirely sure, we should discuss in the standup. usually on mondays but given the cirumstance maybe earlier is better\n<zyga-suse> I think that earlier is better too, given that many people are affected by nvidia\n<mvo> zyga-suse: yeah, that too\n<zyga-suse> NB: I won't be at the standup\n<mvo> zyga-suse: also now that the pi3 mystery is traced to ubuntu-image\n<zyga-suse> mvo: aha? different versions of embedded tools?\n<mvo> zyga-suse: yeah, i suspect that\n<mup> PR snapd#4047 closed: snap-confine: init all arrays with `= {0,}` <Created by mvo5> <Merged by mvo5> <https://github.com/snapcore/snapd/pull/4047>\n<mup> PR snapd#3872 closed: preserve TMPDIR and HOSTALIASES across snap-confine invocation (LP: #1682308) <Created by mwhudson> <Merged by mvo5> <https://github.com/snapcore/snapd/pull/3872>\n<c-lobrano> hey kalikiana, sorry for disappearing yesterday. I updated the PR on LP 1722650 using Gentoo's os-release-info, which does not have VERSION_ID (thanks zyga-suse as well)\n<c-lobrano> ^bug #1722650\n<mup> Bug #1722650: snapcraft requires optional VERSION_ID in os-release <bitesize> <Snapcraft:In Progress by c-lobrano> <https://launchpad.net/bugs/1722650>\n<Chipaca> mvo: ping\n<mvo> Chipaca: pong\n<Chipaca> mvo: i'm lookinig into the translations thing\n<Chipaca> mvo: the translations are on the ubuntu package, not the snapd project\n<Chipaca> mvo: so i can't set up the branch to pull them back in\n<Chipaca> mvo: who knows this stuff?\n<mvo> Chipaca: I do\n<Chipaca> mvo: oh no :-)\n<mvo> Chipaca: its mostly sorted, expect a pr in a little bit\n<Chipaca> mvo: ah ok\n<mvo> Chipaca: I enabled translation on the project now\n<mvo> Chipaca: it was selected on the 15.04 branch\n<zyga-suse> Parlez-vous francais?\n<zyga-suse> will snapd now happily speak esperanto?\n<mvo> zyga-suse: yes\n<mvo> Chipaca: I was mostly adding the test we talked about\n<zyga-suse> mon dieu!\n<zyga-suse> mvo: will we now get perioidic imports of translations into github?\n<mvo> zyga-suse: yes, hopefully we can just pull from a LP git branch\n<mvo> zyga-suse: but that is not done yet\n<ogra_> pfft esperanto ...\n<ogra_> ... klingon is what we want !!!\n<mup> PR snapd#4053 opened: tests,po: sync translations from LP and add regression test for LP:1723974 <Created by mvo5> <https://github.com/snapcore/snapd/pull/4053>\n<mvo> Chipaca: -^\n<mvo> Chipaca: fwiw, this panics for other translations as well\n<mvo> Chipaca: feel free to merge into your branch\n<kalikiana> c-lobrano: Cool! No worries. I'm testing it now\n<Chipaca> mvo: you know what would be cool? if i18n could be compiled to look in a non-system dir, for unit-ish testing\n<mvo> Chipaca: that can be done\n<Chipaca> mvo: SMOP and all that\n<mvo> Chipaca: actally vSMOP\n<mvo> actually\n<mvo> Chipaca: I can make this happen, sounds like the right task before lunch\n<Chipaca> mvo: i've merged your branch and am building the package to test it, fwiw\n<mvo> Chipaca: what do you envision? a unit test for cmd.go?\n<mvo> Chipaca: in addition to the integration test? or should this supersede it?\n<mvo> Chipaca: the i18n might be easy, iirc the cmd.go go-flags stuff is harder to re-init, iirc it has some global state that is hard to get rid of :/\n<Chipaca> mvo: the integration test doesn't seem to do anything that of necessity needs to be integration-y\n<Chipaca> ah\n<Chipaca> bah\n<Chipaca> mvo: maybe it's for another time then\n<mvo> Chipaca: yeah, the i18n part is \"simple\", but let me quickly poke at it, maybe I misremember, but I think there is a bunch func init() in go-flags\n<Chipaca> mvo: it's sort-of-kinda a static check that run-checks could do if it knew how\n<Chipaca> but might as well leave it in spread \u00c2\u00af\\_(\u00e3\u0083\u0084)_/\u00c2\u00af\n<Chipaca> who do we know that speaks nb_NO?\n<Chipaca> fnordahl: ohi\n<fnordahl> Chipaca: jeg snakker norsk, hva trenger du?\n<fnordahl> Chipaca: What can I do for you today?\n<Chipaca> fnordahl: hello. I was just checking if there was a reason (beyond a typo) for \u00e2\u0080\u009c<assertion file>\u00e2\u0080\u009d to have been translated to \u00e2\u0080\u009cforutsetningsfil>\u00e2\u0080\u009d, i.e. for the missing opening <\n<zyga-suse> Chipaca: I was wondering why you didn't choose to add < > in go\n<zyga-suse> Chipaca: and just ask the translators to translate the markupless text\n<Chipaca> ...........................\n * zyga-suse implemented overlayfs hole-poking logic now, now the testing \n<zyga-suse> *lots* of tests to write\n<Chipaca> zyga-suse: that's my forehead hitting the keyboard\n<Chipaca> zyga-suse: I don't know either. Inertia?\n<Chipaca> OTOH, let's not fix it in that direction _right_ now (and lose the translations)\n<Chipaca> mvo: when we SRU, does that mean the language pack might also get updated? or is that separate?\n<fnordahl> Chipaca: the missing character does indeed look like a typo. To say anything about the actual wording used in the translation I need some context. In which files does the referenced sentences reside?\n<Chipaca> fnordahl: hmm, not sure if this answers your question: https://translations.launchpad.net/ubuntu/artful/+source/snapd/+pots/snappy/nb/+translate?batch=10&show=all&search=forutsetningsfil ?\n<mvo> Chipaca: its separate, the language-packs follow their own schedule\n<Chipaca> fnordahl: otherwise this https://github.com/snapcore/snapd/blob/master/cmd/snap/cmd_ack.go is the source file for that string\n<Chipaca> (but that might not help much either)\n<fnordahl> sure that was helpful, i'll have a look and leave any suggestion I might have on the referenced page and comment here.\n<ackk> mvo, a couple of autopkgtests still failed on  https://github.com/snapcore/snapd/pull/3916, but I'm not sure it's related to the changes\n<mup> PR #3916: snap,wrappers: add support for socket activation <Created by albertodonato> <https://github.com/snapcore/snapd/pull/3916>\n<mvo> ackk: you can ignore those, I will double check but those are unstable today\n<ackk> mvo, thanks\n<Son_Goku> zyga-suse: Yo\n<zyga-suse> Son_Goku: hey ho\n * Son_Goku sighs\n<Son_Goku> I'm disappoint\n<Son_Goku> I wanted 2.28.5 to be part of the Fedora 27 final freeze\n<Son_Goku> but no one bothered to give any karma for it\n<Son_Goku> I *hate* this\n<zyga-suse> :-/\n<Son_Goku> no one tests it, and I basically have to wait\n<Son_Goku> and twice I've been ruined by Ubuntu breakages and having to reset the counter\n<Son_Goku> because I *have* to move in lockstep or otherwise things break badly\n<Son_Goku> this is the really *not* fun part of snapd\n<zyga-suse> I don't disagree with other things but the whole 2.28.x release is not really broken just on ubuntu\n<Son_Goku> it's not really broken on Fedora\n<Son_Goku> all the problematic features are disabled\n<zyga-suse> I'm worried that nobody apart from sometimes me looks at fedora testing\n<zyga-suse> Son_Goku: udev is equally broken\n<zyga-suse> Son_Goku: most of the fixes were related to udev in one way or another\n<Son_Goku> you think you're worried? aside from myself, I don't think anyone actually looks at it or cares\n<Son_Goku> I have no numbers to prove any usage, since we don't have an equivalent to popcon in Fedora\n<Son_Goku> I do know that basically no one ever clicks the links on the snapcraft forum\n<zyga-suse> links for testing?\n<Son_Goku> yes\n<Son_Goku> I went through a ton of trouble to diagnose and fix static builds for snap-exec and snap-update-ns\n<Son_Goku> for base snaps\n<leocadio> Hello. Does anyone know if it's possible to make changes on the ath9k driver and compile it as a snap to be executed within a Ubuntu Core installation?\n<zyga-suse> re\n<Chipaca> leocadio: sounds like something for the forum\n<Chipaca> leocadio: AFAIK it's currently not possible -- i think currently you need to ship it in the kernel snap\n<zyga-suse> mvo, Chipaca: I'm going to pick up my son again, will miss standup.\n<zyga-suse> my update is simple, overlays work but I need to spend time on polishing fine details, fixing and writing tests\n<Chipaca> zyga-suse: i'm so excited about overlays :-)\n<zyga-suse> Chipaca: me too, it's a game changer in many ways\n<zyga-suse> I'm pushing a WIP branch but it's too early to even spread test (especially after what I just pushed)\n<zyga-suse> feel free to peek though :)\n<zyga-suse> with that note I'm off\n<mvo> zyga-suse: see you\n<Chipaca> mvo: wrt the translations thing, should i patch the nb_NO translation so the tests pass and we can land it?\n<Chipaca> mvo: or should we wait for launchpad to reflect the fixed translation?\n<mvo> Chipaca: do you have a link to nb_NO translation?\n<mvo> Chipaca: maybe I can fix myself or did you suggest a translation already?\n<Chipaca> mvo: i have suggested it\n<mvo> Chipaca: I think we should fix in git and land and not wait for LP. do you think you could contact the nb translation team? there must be a way to get in touch so that they can approve it?\n<Chipaca> mvo: once f.nordahl confirmed it was a sane suggestion :-)\n<mvo> Chipaca: heh, thanks to fnordahl then :)\n * Chipaca should've split that as fnord.ahl\n<Chipaca> yes indeed\n<Chipaca> but, launchpad hasn't accepted it yet\n<Chipaca> hence my question (as opposed to me pestering you to pull them again)\n<mvo> Chipaca: yeah, lets pester the nb team but also we should not block on it, we have a test so if this gets pullled in again we will know :)\n<Chipaca> mvo: so I hand edit the nb_NO.po?\n<Chipaca> nb.po actually\n<Chipaca> msgid \"-r can only be used with --hook\"\n<Chipaca> msgstr \"\u00c2\u00ab-r\u00c2\u00bb kan bare brukes sammen med \u00c2\u00ab--hook\u00c2\u00bb\"\n<Chipaca> oooohhhh\n<Chipaca> we need to fix quoting everywhere, and it always turns out to be huge. I'll probably do it on a plane six months from now :-)\n<Chipaca> (there's a bug along the lines of \u00e2\u0080\u009cuse double quotes for X, single quotes for Y\u00e2\u0080\u009d)\n<Chipaca> mvo: anyway, unless you say no, i'm pushing a fix to nb.po so my branch looks green again\n<mvo> Chipaca: +1\n<Chipaca> ok, i'm going off for a while\n<mup> PR snapd#4051 closed: many: add integrated snapfuse <Created by zyga> <Closed by niemeyer> <https://github.com/snapcore/snapd/pull/4051>\n<mup> PR snapcraft#1623 closed: Removed dependency on VERSION_ID in os-release <Created by clobrano> <Merged by sergiusens> <https://github.com/snapcore/snapcraft/pull/1623>\n<mup> PR snapcraft#1626 closed: lifecycle: split into its own package <Created by sergiusens> <Merged by sergiusens> <https://github.com/snapcore/snapcraft/pull/1626>\n<sergiusens> o/\n<sergiusens> In the end I decided to cancel my day off for today. There is just so much I want to get done\n<sergiusens> kalikiana mind looking at snapcraft#1480 ? The adt container test errors\n<mup> PR snapcraft#1480: beta <Created by snappy-m-o> <https://github.com/snapcore/snapcraft/pull/1480>\n<kalikiana> sergiusens: There's already a PR snapcraft#1629 for part of the failures - I'm actually looking into the one it doesn't fix that fails with \"no such file or directory\"\n<mup> PR snapcraft#1629: lxd: fix the unit test for the user id map <Created by elopio> <https://github.com/snapcore/snapcraft/pull/1629>\n<zyga-suse> me is home\n<zyga-suse> time for a small break, then to attack overlayfs with tests\n<zyga-suse> :-)\n<mup> PR snapcraft#1624 closed: kernel plugin: use latest stable core snap <bug> <Created by alfonsosanchezbeato> <Merged by sergiusens> <https://github.com/snapcore/snapcraft/pull/1624>\n<kyrofa> pstolowski, curious to get your thoughts on https://forum.snapcraft.io/t/restarting-services-from-configure-hook-race-condition\n<pstolowski> kyrofa, are you watching me?\n<kyrofa> pstolowski, ha!\n<kyrofa> Yes\n<ogra_> kyrofa, is that the webcam link you forwarded to me in PM (havent clicked it yet) ?\n<kyrofa> ogra_, who ELSE would it be?\n<ogra_> indeed\n<pstolowski> kyrofa, I was reading it for the 2nd time a moment ago. still thinking - the response you got already was kinda what I thought about too (creating a config file solves the \"problem\" of transactional nature of the hook; but on the other hand it's against the idea of using snapctl when possible\n<kyrofa> pstolowski, my thoughts exactly\n<pstolowski> kyrofa, so, I need to think some more. clearly the introduction of snapctl outside of hooks introduced this kind of issue\n<kyrofa> pstolowski, well, it exposed it anyway. I would never say that feature wasn't required-- it's one of my favorites actually. Saving a config file felt super hacky\n<kyrofa> But yeah, making use of it is difficult\n<pstolowski> kyrofa, right, exposed; bad choice of words on my side\n<kyrofa> pstolowski, at the same time, what we have is conceptually correct. I like the transactional manner of this\n<kyrofa> My lockfile is admittedly probably just as hacky as saving config files, haha\n<pstolowski> kyrofa, would it make sense to be able to commit changes to config explicitely? `snapctl commit`? but it feels suspicious, we loose all the benefit of reverting config changes on failure\n<pstolowski> feels like a hack too\n<pstolowski> nah\n<kyrofa> pstolowski, yeah I considered that as well. I agree that it defeats some of the niceties and adds complexity...\n<kyrofa> But it feels more intuitive than trying to design a way to queue service restarts\n<kyrofa> I don't even know what that would look like\n<kyrofa> It also makes documentation hard. If configuring the port for apache succeeded but configuring the memory limit for PHP failed, the hook fails. I think the user should be able to assume everything they just set failed\n<kyrofa> pstolowski, here's a question\n<kyrofa> pstolowski, this problem exists because I can't actually restart the service. I have to kill it, then systemd brings it up in its own env\n<kyrofa> pstolowski, once snapctl supports restarting services, and I use it inside the hook, won't it get the hook's snapctl transaction?\n<kyrofa> i.e. its configuration\n<kyrofa> The context/cookie should be the same\n<pstolowski> kyrofa, indeed, but it's just going to send a request to snapd to restart the service (which in turn just restarts it via systemd)\n<kyrofa> Ah, darn\n<kyrofa> pstolowski, okay, what if snapctl grew the ability to queue generic shell commands that ran after the hook completed successfully\n<kyrofa> Then one could use `snapctl queue -- snapctl restart apache`\n<kyrofa> (in the hook)\n<pstolowski> kyrofa, hmm, maybe.. what about a \"post-configure\" hook?\n<kyrofa> That ran when `configure` succeeded? That could work, but requires one to save old values to compare new vs. old and determine what needs to be restarted\n<kyrofa> i.e. the restart conditions need to be determined out of context\n<kyrofa> Which is a bit of a buden\n<kyrofa> burden*\n<pstolowski> right, good point\n<Chipaca> linode is being funny again?\n * Chipaca hits the AGAIN button\n<mup> PR snapcraft#1603 closed: tests: add /snap/bin to PATH in autopkgtests <Created by elopio> <Merged by sergiusens> <https://github.com/snapcore/snapcraft/pull/1603>\n<kyrofa> pstolowski, with the generic commands, we can build up a queue and then only run unique commands, so multiple service restart queues only end up restarting once, etc.\n<kyrofa> Well... maybe you don't want that as a generic feature. Hmm\n<pstolowski> kyrofa, atm I'm wondering if there is any way to expose cookie/context to the restarted service, so that it sees same transaction, and sapctl get from the service see yet-uncommited values. not sure that's easily doable though\n<kyrofa> pstolowski, that seems the simplest from the users point of view, certainly\n<mup> PR snapcraft#1631 opened: lxd: use FakeFilesystem in test_snap_containerized_remote <Created by kalikiana> <https://github.com/snapcore/snapcraft/pull/1631>\n<kyrofa> pstolowski, although that still breaks the transactional nature of setting a configuration. That means it's possible for a service to be running with a configuration that failed to apply in the end\n<pstolowski> indeed\n<kalikiana> sergiusens: snapcraft#1631 is the missing piece to get the autopkg tests green again\n<mup> PR snapcraft#1631: lxd: use FakeFilesystem in test_snap_containerized_remote <Created by kalikiana> <https://github.com/snapcore/snapcraft/pull/1631>\n<kalikiana> together with elopio's PR\n<elopio> together with two other PRs. We'll get there :)\n<kalikiana> Haha, true. I just meant the lxd ones, but yeah\n<kalikiana> elopio: your branch has conflicts btw\n<sergiusens> kalikiana can you just update elopio's branch with that PR as he moved the container tests into a new class\n<sergiusens> ?\n<kalikiana> sergiusens: That one doesn't test user id's so it wouldn't really benefit from the scenarios...\n<kalikiana> I can add it to his branch anyway\n<kalikiana> But not in the new class\n<elopio> conflict solved.\n<pstolowski> niemeyer, hey, any thoughts on the above discussion - I summarized it here: https://forum.snapcraft.io/t/restarting-services-from-configure-hook-race-condition/2513/5 ?\n<niemeyer> Looking\n<sergiusens> nhandler hey, do you know how long the talks are for ATO?\n<kyrofa> sergiusens, four hours. You didn't know that?\n<pstolowski> niemeyer, hold one for a sec, forgot to document one more case\n<kyrofa> sergiusens, they anticipate between 300-500 slides\n<sergiusens> kalikiana the thing is, one will have conflicts as soon as the other lands, won't they? They both touch test_snap\n<sergiusens> kyrofa lol, given that there are 8 talks in parallel I think the combined value would add up to that number\n<kyrofa> Haha\n<sergiusens> kyrofa I will just use slides with single words ;-)\n<kyrofa> sergiusens, those are called CEO talks\n<sergiusens> heh\n * sergiusens leaves the computer for a bit to practise some aikido and get lunch\n<pstolowski> niemeyer, ok, now, updated with item #4\n<niemeyer> pstolowski: Thinking\n<kyrofa> pstolowski, good summary, thank you\n<niemeyer> pstolowski, kyrofa: Responded\n<kalikiana> elopio: sergiusens pushed my fix to the existing branch now\n<mup> PR snapcraft#1631 closed: lxd: use FakeFilesystem in test_snap_containerized_remote <Created by kalikiana> <Closed by kalikiana> <https://github.com/snapcore/snapcraft/pull/1631>\n<elopio> snappy-m-o autopkgtest 1629 xenial:amd64\n<snappy-m-o> elopio: I've just triggered your test.\n<pstolowski> niemeyer, thanks\n<niemeyer> pstolowski: #3972 reviewed again\n<mup> PR #3972: interfaces: sanitize plugs and slots early in ReadInfo <Created by stolowski> <https://github.com/snapcore/snapd/pull/3972>\n<niemeyer> pstolowski: LGTM with those details sorted\n<pstolowski> niemeyer, cool, thank you\n<facubatista> sergiusens, elopio, how can I see stdout in snapcraft tests after I put a print() in the tests?\n<elopio> facubatista: in unit tests, there's a self.fake_terminal that swallows all stdout and stderr.\n<facubatista> elopio, is there an easy way to disable it?\n<elopio> I wouldn't use print to debug. I would put a self.assertThat to confirm my assumptions. But, you can self.fake_terminal.getvalue()\n<facubatista> elopio, I can not open a pdb either\n<facubatista> elopio, I need to start checking the subversion machinery to see why a test fails in my computer\n<elopio> facubatista: comment it out in the setUp.\n<facubatista> elopio, is this a standard procedure? how do you debug when run tests?\n<elopio> I put assertions.\n<facubatista> elopio, but an assertions is a way to check a variable to a value... how do you just *see* different values when making the machinery move?\n<elopio> But it's not a happy thing. We need to split our logic from our presentation. One day...\n<elopio> When I don't understand a test, I put multiple assertions to check if my assumptions are correct until I understand it.\n<elopio> Not saying that's what you should do. You can disable the setup things that break pdb, and debug\n<facubatista> elopio, ack, thanks\n<mup> PR snapd#4017 closed: store: add download caching <Created by mvo5> <Merged by niemeyer> <https://github.com/snapcore/snapd/pull/4017>\n<elopio> Probably sergiusens, kaliakiana and kyrofa have other methods.\n<facubatista> elopio, oh, subversion tests depends on machine's locale :/\n<kyrofa> elopio, facubatista yes I use a magical line: raise RuntimeError(<thing i want to see>)\n<kyrofa> The whole swallowing stdout/stderr for everything is awful\n<facubatista> kyrofa, that, like elopio's assert, makes possible to see ONE thing, not several\n<kyrofa> facubatista, you will hear no disagreement from me\n<elopio> Oh damn. That's a good finding, thanks facubatista\n<elopio> Please report a bug.\n<kyrofa> facubatista, sometimes that line becomes more magical: raise RuntimeError('{} {}'.format(<first thing>, <second thing>)) :P\n<facubatista> kyrofa, too much work error :p\n<kyrofa> Hahaha\n<facubatista> kyrofa, elopio, thanks!!\n<kalikiana> facubatista: You can also use the logger to read the output. Although it's slightly different depending on the test setup.\n<kalikiana> elopio: let me know if anything else comes up wrt autopkg tests, Travis is sadly slow to confirm... I'm headed to a pub now, but will check IRC later\n<elopio> Tx kalikiana\n<sergiusens> elopio you should alias autopkgtest to adt, some contracted and some expanded nouns gets me all the time ;-)\n<sergiusens> facubatista I use vs code and set breakpoints as a normal person :-P\n<elopio> Pitti renamed everything to autopktest. Adt is no more\n<sergiusens> elopio I really wish the unittest for subversion, hg and bzr tests were just removed or have fakes in place for those\n<sergiusens> facubatista you can blame kyrofa fo all the hidding, he always complained about leaked stdouts in the tests ;-)\n<sergiusens> kyrofa now that we are using click we could probably just mock the calls to click instead, just a hint for a rainy day :-)\n<elopio> Fakes + integration tests sounds good to me. Just integration doesn't sound so bad either\n<mwhudson> hooray for merging #3872  ;)\n<mup> PR #3872: preserve TMPDIR and HOSTALIASES across snap-confine invocation (LP: #1682308) <Created by mwhudson> <Merged by mvo5> <https://github.com/snapcore/snapd/pull/3872>\n<kyrofa> sergiusens, yes indeed\n<mup> PR snapcraft#1602 closed: tests: add the slow tag for ros snapd integration test <Created by elopio> <Merged by sergiusens> <https://github.com/snapcore/snapcraft/pull/1602>\n<sergiusens> kyrofa does my comment on snapcraft#1613 make sense?\n<mup> PR snapcraft#1613: cross compilation: enable cross compilation of i386 kernel on x86-64 \u00e2\u0080\u00a6 <Created by piso77> <https://github.com/snapcore/snapcraft/pull/1613>\n<kyrofa> sergiusens, yeah probably\n * zyga-ubuntu fell asleep\n<zyga-ubuntu> man, I need to sleep more regularly\n<zyga-ubuntu> just woke up\n<sergiusens> kyrofa do you have time to test a branch for me on your trustworthy trusty sytem?\n<sergiusens> *system\n<kyrofa> sergiusens, haha, I ran out of HD space and blew it away\n<sergiusens> kyrofa oh, well, I thought you might like this https://github.com/snapcore/snapcraft/compare/master...sergiusens:libc6-and-friends?expand=1\n<kyrofa> sergiusens, ooo, fancy! Let me shuffle a few files around and get back to you\n<sergiusens> kyrofa that is, libraries from the past; next the more complicated elf patching, but I am still pondering on that\n<facubatista> sergiusens, import pdb; pdb.set_trace(), if not commenting out the fake_terminal thing, crashes with TypeError: bad argument type for built-in operation\n<facubatista> elopio, https://bugs.launchpad.net/snapcraft/+bug/1724674\n<mup> Bug #1724674: Subversion test fails in a non-english locale <Snapcraft:New> <https://launchpad.net/bugs/1724674>\n<sergiusens> facubatista yeah, FakeTerminal might need what I mentioned above\n<sergiusens> kyrofa how is that going? I have a small refactor coming after that ;-)\n * sergiusens begins the relocation process\n<mup> PR snapcraft#1632 opened: libraries: exclude the full set of libc6 <bug> <Created by sergiusens> <https://github.com/snapcore/snapcraft/pull/1632>\n<kyrofa> sergiusens, haven't tested yet, clearing space now. Would be nice to be able to test the PR's snap... ;)\n<kyrofa> elopio, in gitlab ci I can specify artifacts and it displays them on the PR. Do you know if Travis supports somethin similar?\n<elopio> kyrofa: it does not.\n<kyrofa> Darn. Well, I discovered something neat today that might prove useful: transfer.sh\n<kyrofa> elopio, sergiusens we could upload every PR's snapcraft there\n<elopio> when I asked about sharing files between stages, they said that's the solution. But everything is slow here. After my first project in gitlab, I'm happy to move all our stuff there :D\n<kyrofa> There's even a snap for it made by someone awesome: snap install transfer\n<elopio> kyrofa: how much space do we get there for free?\n<kyrofa> elopio, 10 gigs for each transfer. It stays there for 14 days\n<elopio> $26 of $2,000 per month\n<elopio> When I reach $ 2000 a month, we can keep running Transfer.sh.\n<elopio> it sounds they need more support to be sustainable. I'm happy to change my PR to use that instead of the cache. We can always fall back to the cache if they have to suspend the service.\n<elopio> actually, we still need the cache to share the file id between stages. But the benefit is that we can manually install and test it. Not bad.\n<kyrofa> Inded\n<kyrofa> With another e in there somewhere\n<stgraber> zyga-suse, jdstrand: we recently noticed this: https://bugs.launchpad.net/snapd/+bug/1724697\n<mup> Bug #1724697: snap-confine shouldn't setup a seccomp policy if policy is @unrestricted <snapd:New> <https://launchpad.net/bugs/1724697>\n<stgraber> can you comment on the approach? I may be able to spare a bit of time from one of the LXD devs to change snap-confine.\n<sergiusens> kyrofa elopio while we can switch CI systems we cannot move away from github without contention\n<sergiusens> I would push for proper hook design to get PRs into build.snapcraft.io\n<kyrofa> sergiusens, nah, not making a play for github-ci, just thinking about how to get snaps available from PRs\n<kyrofa> sergiusens, oh definitely the preferred option. Plan B is just uploading the snap from travis. Moving to gitlab-ci is not on our radar AFAIK as much as I whine\n<sergiusens> JamieBennet btw, we talked about that during the Sprint but it did not reach any roadmap ^\n<kyrofa> JamieBennett, please please pretty please\n<sergiusens> kyrofa we certainly should have proper guidelines for folks on gitlab though\n<kyrofa> sergiusens, yeah, would be handy to see a build.snapcraft.io integration there, but an `enable-ci gitlab` option would be pretty easy as well\n<sergiusens> We should work on the latter\n<zyga-suse> stgraber: ack, checking\n<zyga-suse> stgraber: the change to what @unrestricted means was done a while ago, along with the introduction to snap-seccomp\n<zyga-suse> stgraber: before the seccomp profile was parsed each time\n<zyga-suse> stgraber: now the profile is parsed and compiled only when the policy is prepared\n<zyga-suse> stgraber: because the compiled policy is a BPF program we didn't have a way to say \"don't load anything\" without introducing some form of header or other special semantics in interpreting the file content\n<zyga-suse> stgraber: mvo implemented a permissive policy as a workaround\n<zyga-suse> stgraber: if this breaks LXD we can definitely change this\n<zyga-suse> stgraber: e.g. by encoding a little header or by interpreting tuncated file as unconifned\n<zyga-suse> stgraber: (or perhaps a file containing just the string @unconfined, not to be confused with a truncated file due to another bug)\n<zyga-suse> stgraber: I commented as such on the bug report now\n<zyga-suse> stgraber: I'll catch up with mvo tomorrow morning about this\n<zyga-suse> stgraber: please try to indicate urgency or importance, is this a 2.28.6 material?\n * zyga-suse -> EOD\n#snappy 2017-10-19\n<sergiusens> kyrofa and?\n<kyrofa> sergiusens, seems to work, but my test case is broken anyway (opencv) so I still want to poke at it some more tomorrow. Left some comments on the PR\n<stgraber> zyga-suse: not crazy urgent, not warranting a point release on its own, but it is something we need sorted to have LXD actually be at feature parity with the deb package. Custom seccomp policies is a feature we've had quite a bit of interest for lately and it's pretty unfortunate that it's not working with the snap.\n<sergiusens> kyrofa it would be nice to know how it is broken and what is the test case, I'll most likely be off tomorrow but all the info you can get would be good\n<kyrofa> sergiusens, it's the bug I logged about snapcraft on trusty\n<kyrofa> Details are there\n<zyga-suse> stgraber: I understand, I'll talk to mvo\n<morphis> stgraber: zyga-suse: not sure what I see here: https://paste.ubuntu.com/25770362/\n<stgraber> that's a snapd bug\n<stgraber> that got fixed in a 2.28 point release\n<morphis> ah good to know\n<morphis> which isn't yet in stable as it seems\n<morphis> stgraber: yeah, with latest candidate of core it seems to be fixed\n<zyga-suse> morphis: indeed, this is fixed in one of the point releases after 2.28, try .5 to be sure\n<elopio> snappy-m-o autopkgtest 1630 xenial:amd64:integration\n<snappy-m-o> elopio: I've just triggered your test.\n<sborovkov> ogra_: hi. Looks like psplash is not present in cm3? Is it like forgotten there?\n<zyga-suse> mvo: good morning\n<mvo> hey zyga-suse\n<mvo> zyga-suse: how ar ethings?\n<zyga-suse> mvo: sorry to start like that straight when you join\n<zyga-suse> https://bugs.launchpad.net/snapd/+bug/1724697\n<mup> Bug #1724697: snap-confine shouldn't setup a seccomp policy if policy is @unrestricted <snapd:Triaged> <https://launchpad.net/bugs/1724697>\n<zyga-suse> we need to solve this quickly\n<zyga-suse> mvo, stgraber said it's not a 2.28.6 thing but important for him\n<zyga-suse> mvo: I think the idea to keep the file and put a unique string into it is simple and should be enough\n<mvo> zyga-suse: ok, sounds reasonable\n<mvo> zyga-suse: I'm just reading the bugreport\n<mvo> zyga-suse: I can work on a fix this morning, just doing some pi2 related research but I'm almost done\n<zyga-suse> mvo: I can help too\n<zyga-suse> mvo: I'm working on loads of tests for the new overlayfs mount feature\n<mvo> zyga-suse: overlays are priority\n<zyga-suse> ok\n<mvo> zyga-suse: at least that is my understanding :)\n<mvo> zyga-suse: hey, if we could get that for 2.29 ...\n<mvo> zyga-suse: maybe as a experimental thing or so?\n<zyga-suse> I think it's too soon as neither gustavo nor jamie saw it yet\n<zyga-suse> but we'll see :)\n<zyga-suse> I need to land a prereq branch\n<zyga-suse> I may yet tweak it to move files around and shrink diff for future PRs but not my priority yet\n<kalikiana> o/\n<c-lobrano> morning :)\n<c-lobrano> kalikiana: thinking about hardening `get_os_release_info`, as suggested by kryofa. What about a little bit more robust `get_os_release_info` and some `get_os_release_fieldname` that wrap the first and provide fallback? Like `get_os_release_version_id()`. This way, the user does not need to know the actual dictionary key name\n<kalikiana> c-lobrano: Hmm maybe one step further and make it a little class?\n<c-lobrano> kalikiana: yes, that would be good\n<mup> PR snapcraft#1633 opened:  recording: record information from the image in container builds  <Created by elopio> <https://github.com/snapcore/snapcraft/pull/1633>\n<kalikiana> elopio: since you're awake: we hit the timeout again in snapcraft#1632 :-(\n<mup> PR snapcraft#1632: libraries: exclude the full set of libc6 <bug> <Created by sergiusens> <https://github.com/snapcore/snapcraft/pull/1632>\n<elopio> I'm working on the split.\n * zyga-suse -> coffee\n<kalikiana> awesome\n<Chipaca> pedronis: how're things?\n<Chipaca> mvo: has #4050 earned your +1?\n<mup> PR #4050: cmd/snap: tell translators about arg names and descs req's <Created by chipaca> <https://github.com/snapcore/snapd/pull/4050>\n<mvo> Chipaca: I look in a tiny bit\n<Chipaca> mvo: how's things?\n<mvo> Chipaca: I can foresee nitpicking about tidyNoticef, as the name gives no hint that it transforms into a panic under certain conditions. but I have not made up my mind much\n<mvo> Chipaca: otherwise things are good mostly, looking at pi firware stuff right now\n<Chipaca> mvo: do we have a reproducer for the insane flip-flops?\n<mvo> Chipaca: what flip-flops, do you have a reference to a forum post or a bugreport?\n<mup> PR snapd#4054 opened: snap-{confine,seccomp}: make @unrestricted fully unrestricted <Created by mvo5> <https://github.com/snapcore/snapd/pull/4054>\n<mvo> zyga-suse: and you may say \"told you so\" now :) I remeber we talked about fully unrestricted seccomp and iirc you suggested we should do it in the above way\n<jacekn> aaaaaaaaaaaaaaaaaaaaaaaaaaaaa3aaaaaaa\u0001d\n<jacekn> sorry\n<Chipaca> mvo: sorry, i meant the thing where sergio's pi3 would boot into one thing but think it's booting into another? something like that\n<mvo> Chipaca: we know it is caused by the ubuntu-image snap, once sergio uses the deb things are ok. my plan was to look into it more once I have a pi3 (should arrive today)\n<Chipaca> ah ok\n<mvo> Chipaca: which is a huge relief that its not a snapd issue\n<Chipaca> mvo: we can shake our fists at barry and move on :D\n<mvo> Chipaca: :-D\n<zyga-suse> mvo: impossible, I don't recall saying that ;-)\n * zyga-suse is progressing thrgough testing, with some nice simplifications and improvements to code in result of finding tiny details off\n<Son_Goku> mvo, zyga-suse: https://github.com/canonical-docs/snappy-docs/pull/138\n<mup> PR canonical-docs/snappy-docs#138: Update Fedora snapd to 2.28.5 <Created by Conan-Kudo> <https://github.com/canonical-docs/snappy-docs/pull/138>\n<Son_Goku> davidcalle ^\n<Son_Goku> zyga-suse: this will likely be the end of the line for Fedora 25\n<Son_Goku> as by the time 2.29 becomes available, Fedora 25 will EOL\n<Son_Goku> zyga-suse, you should reach out to pitti at some point to talk about downstream Fedora CI\n<Son_Goku> he's been working on a project to introduce the equivalent of autopkgtests in Fedora for a while now\n<mvo> zyga-suse: does \"cannot open current mount profile: /run/snapd/ns/snap.*<snap_name>*.fstab:permission denied\" ring any bell? we got a bugreport about this, I can forward\n * kalikiana break\n<mup> PR snapd#4055 opened: daemon: generate a forbidden response message if polkit dialog is dismissed <Created by jhenstridge> <https://github.com/snapcore/snapd/pull/4055>\n<mup> PR snapd#4056 opened: tests: improve revert related testing <Created by mvo5> <https://github.com/snapcore/snapd/pull/4056>\n<zyga-suse> mvo: hmmm, no, not immediately, looks like apparmor\n<zyga-suse> mvo: please forward\n<mvo> zyga-suse: I did\n<mvo> zyga-suse: its the mail from pierre, I don't have many details yet\n<zyga-suse> mvo: ePierre?\n<mvo> zyga-suse: yeah, I think so\n<mvo> zyga-suse: does http://paste.ubuntu.com/25771634/ ring a bell?\n<zyga-suse> mvo: that looks like a custom base snap with no /dev\n<mvo> zyga-suse: that is from core stable -> edge auto refresh test http://paste.ubuntu.com/25771638 has the debug\n<mvo> zyga-suse: anyway, I have a look\n<mvo> zyga-suse: but it looks like pierre foudn a bug\n<zyga-suse> mvo: this code didn't change\n<zyga-suse> mvo: I bet it's /dev missing\n<zyga-suse> mvo: FYI, I'm chatting with ePierre on #chekbox\n<zyga-suse> #checkbox\n<mvo> zyga-suse: aha, ok\n<zyga-suse> I want to collect some quick info since pierre is likely to EOD any time now\n<zyga-suse> mvo: can you forward the rport please?\n<mvo> zyga-suse: I did that already, you are in the CC\n<mvo> zyga-suse: message-id: 20171019102101.h7wlysxnpqjfufqk@bod\n<zyga-suse> I get 0 matches\n<zyga-suse> maybe gmail doesn't filter on those\n<zyga-suse> mvo: ok, I understand the issue now\n<zyga-suse> mvo: not sure why it happens but here's what happens:\n<zyga-suse> mvo: when we introduced snap-update-ns as the namespace initializer\n<zyga-suse> mvo: we removed the ability to read / process .fstab files from snap-confine\n<zyga-suse> mvo: after reverting we are running on the profile from the +next version\n<zyga-suse> mvo: I think it looks like a bug in the code that re-builds snap-confine's apparmor profile\n<zyga-suse> mvo: does that make sense?\n<zyga-suse> mvo: after revert we should immediately rebuild the profile\n<zyga-suse> mvo: what is curious here is that since the profile is *path based* it should not be a problem\n<zyga-suse> the old profile is around\n<zyga-suse> mvo: (around as in loaded in memory)\n<mvo> zyga-suse: well, we reboot in between in tests on core\n<mvo> zyga-suse: but yeah, it makes sense\n<zyga-suse> hmmm\n<mvo> zyga-suse: I mean, if its loaded in memory it will get lost accross the reboot\n<zyga-suse> this should not be an issue on core\n<zyga-suse> yes\n<zyga-suse> well\n<zyga-suse> no\n<mvo> zyga-suse: the report is about core afaict\n<zyga-suse> across reboot we'll keep the file in /etc/apparmor.d\n<zyga-suse> so it will get re-loaded\n<zyga-suse> was this on core on classic?\n<mvo> zyga-suse: from what I read its a regular core device (caracalla/stlouis9\n<mvo> )\n<zyga-suse> right\n * zyga-suse thinks\n<zyga-suse> it doesn't seem device specific\n<zyga-suse> so we should be able to reproduce it\n<mvo> yeah\n<zyga-suse> that was edge->stable?\n<mvo> I did a PR that tests some more things with reverts\n<mvo> yeah\n<zyga-suse> thank you\n<zyga-suse> do you want me to explore or shall I keep at layouts?\n<mvo> see the linked PR\n<zyga-suse> ack\n<mvo> I can work a bit on this and get a reliable test, then we can brainstorm again\n<mvo> zyga-suse: just wanted to double check that its not something obvious\n<mvo> (or known)\n<zyga-suse> no, nothing obviously smoking-gun-wrong\n<mvo> ta\n<zyga-suse> mvo: when we run reexecing snap-confine do we follow the current symlink?\n<zyga-suse> meh\n<zyga-suse> mvo: I'm dumb\n<zyga-suse> mvo: I understand now\n<zyga-suse> mvo: on core / is the core snap\n<zyga-suse> mvo: so when we get new core via update\n<zyga-suse> mvo: (and we don't reload the profile there)\n<zyga-suse> mvo: so when we get the new core, we must not follow any current symlinks and must use the old profile\n<zyga-suse> mvo: right?\n<zyga-suse> mvo: so we literally run /usr/lib/snapd/snap-confine\n<mvo> zyga-suse: correct\n<zyga-suse> mvo: so dump my other theories, the cause still is likely (we removed the right to touch .fstab profiles) but why it gets applied here is unclear\n<zyga-suse> mvo: (assuming before reboot)\n<zyga-suse> I'm getting hungry, let's break for some lunch\n<mvo> zyga-suse: good idea\n<kalikiana> mwhudson: Hey! I was wondering if we should discuss snapcraft#1557 a bit\n<mup> PR snapcraft#1557: cleanbuild: add a --image option to build in a different image <Created by mwhudson> <https://github.com/snapcore/snapcraft/pull/1557>\n<zyga-suse> re\n<Chipaca> kalikiana: you know it's 1am for mwhudson, yes?\n<kalikiana> Chipaca: Oh, I didn't realize. What timezone is he in?\n<zyga-suse> kalikiana: NZ\n<zyga-suse> \"the far side of the moon^Hearth\"\n<kalikiana> Heh\n<kalikiana> Thanks\n<kalikiana> I'll try to ping him at a better time then\n<Chipaca> kalikiana: that's not to say he isn't sometimes around at this time, but it's usually bad news :-)\n * zyga-suse works on 4008\n<zyga-suse> I can put some future code there to make eventual diff smaller\n<zyga-suse> hmm\n<zyga-suse> on go 1.9.1 I cannot \"go test\" stuff anoymre\n<zyga-suse> *anymore\n<zyga-suse> zyga@faroe:~/snapd/cmd/snap-update-ns> go test .\n<zyga-suse> # github.com/snapcore/snapd/vendor/gopkg.in/tomb.v2\n<zyga-suse> flag provided but not defined: -goversion\n<zyga-suse> niemeyer: ^ does this ring any bells?\n * zyga-suse reboots\n<zyga-suse> ok, all good now\n<zyga-suse> probably stale env after update\n<jdstrand> zyga-suse: overlayfs? I thought this was being done with bind mounts...\n<zyga-suse> jdstrand: with both\n<niemeyer> zyga-suse: No, I've never seen that flag either I think\n<zyga-suse> niemeyer: it's all good now\n<niemeyer> zyga-suse: Perhaps go tool was out of date with underlying tooling\n<zyga-suse> yes, I just updated; it's okay now, probably some stale stuff while I was logged in\n<cachio> mvo, I am creating a test for gsettings interface, an I am getting \"gsettings: not found\" when I execute a command\n<mvo> cachio: curious what this is about\n<mvo> cachio: it is installed and in /usr/bin/gsettings I pressume?\n<cachio> yes\n<cachio> mvo, it is just a wrapper for gsettings command\n<cachio> the snap makes gsettings \"$@\"\n<zyga-suse> mvo: just saw this from go vet\n<zyga-suse> cmd/snap-repair/runner.go:254: arg r.RepairID() for printf verb %d of wrong type: string\n<zyga-suse> cmd/snap-repair/runner.go:415: arg repair.RepairID() for printf verb %d of wrong type: string\n<zyga-suse> mvo: shall I fix?\n<zyga-suse> odd, I don't see the issue\n<zyga-suse> %d is printing int's\n<cachio> pedronis, hey, tests/lib/assertions/auto-import.assert  is expired, do you know how to generate a new one?\n<jdstrand> zyga-suse: I was unaware that layouts required overlayfs. when was the greenlight given on overlayfs? we can't guarantee it is going DTRT with apparmor in modern kernels or in backported apparmor to older kernels. overlayfs is unbackportable to older kernels. all the same arguments as always...\n<Chipaca> zyga-suse: in 451, it's doing (\"... %s/%d != %s/%d\", repair.BrandID(), repair.RepairID(), brandID, repairID)\n<zyga-suse> jdstrand: this is a new development (relatively), we plan to use overlayfs to poke writable holes over squashfs; I made a RFC branch that does this\n<zyga-suse> Chipaca: I know, I think go vet is wrong here\n<ogra_> sborovkov, i changed teams and all, i simply didnt get to cm3 yet, but should be ready before end of this week (i'm currently working on the remaining bits for cm3 and dragonbard splash support)\n<zyga-suse> Chipaca: especially after fixing it tests are failing\n<Chipaca> zyga-suse: RepairID() returns a string\n<zyga-suse> aha\n<jdstrand> zyga-suse: obviously it's a new development :) my question is where was it discussed? it seems to be ignoring the previous discussions\n<zyga-suse> jdstrand: I don't remember if it was a hangout recently or IRC recently\n<zyga-suse> jdstrand: I recall the earlier discussion but this is an experiment to see if we can use overlay for this purpose\n<jdstrand> zyga-suse: I thought things like this were supposed to be captured in the forum? this is a major technical decision\n<zyga-suse> jdstrand: as it presents simpler semantics and has easier undo story\n<zyga-suse> jdstrand: indeed, I wanted to talk to you about this because it's a big change but all the sprints/holidays were in the way\n<zyga-suse> jdstrand: the short summary is that we'd like to use overlayfs over squashfs\n<zyga-suse> jdstrand: as a hole-poking tool\n<zyga-suse> Chipaca: no, it's an int:\n<zyga-suse> ... error string = \"cannot fetch repair, repair id mismatch canonical/%!s(int=2) != canonical/4\"\n<zyga-suse> ... regex string = \"cannot fetch repair, repair id mismatch canonical/2 != canonical/4\"\n<zyga-suse> jdstrand: anyway, let's put that on hold now\n<zyga-suse> jdstrand: (the discussion)\n<Chipaca> zyga-suse: i was wrong \u00c2\u00af\\_(\u00e3\u0083\u0084)_/\u00c2\u00af\n * Chipaca tries to find out why he was wrong\n<zyga-suse> jdstrand: I'll have a thread and PR to review (very short) soon after https://github.com/snapcore/snapd/pull/4008 lands\n<mup> PR #4008: cmd/snap-update-ns: create missing mount points automatically <Created by zyga> <https://github.com/snapcore/snapd/pull/4008>\n<zyga-suse> (that's what I'd like to focus on now)\n<jdstrand> I understand that. I have little confidence it is going to work reliably with apparmor  considering people are backporting apparmor to older kernels (or even an unpatched kernel). I mean, it might work with a recent Ubuntu kernel. note that overlayfs wasn't even an official thing in the upstream kernrel til relatively recently. this makes snaps that utilize the feature impossible to use on older kernels where you can't backport overlayfs\n * Chipaca disappears again\n * zyga-suse nods\n<jdstrand> tyhicks: warning ^. the plan is to try overlayfs to poke holes in squashfs in an exploratory PR\n<jdstrand> tyhicks: (in support of layouts)\n<zyga-suse> jdstrand: I have the undo logic to tweak but it looks promising (so far)\n<zyga-suse> jdstrand: the diff is very small so far, which is also very very promising\n<zyga-suse> ohg\n<zyga-suse> standup\n<jdstrand> well, except the technologies you are utilizing have to actually work right\n<jdstrand> not to mention my point that overlayfs is new so its use means those snaps can't work on older kernels\n<mup> PR snapd#3972 closed: interfaces: sanitize plugs and slots early in ReadInfo <Created by stolowski> <Merged by stolowski> <https://github.com/snapcore/snapd/pull/3972>\n<jdstrand> zyga-suse: I should also stress that overlafs didn't land in its current form. it landed early and had lots of trouble with LSMs. It still has trouble with LSMs. this means that there is a huge test matrix to make sure  the feature even works for kernels that claim to support the feature\n * jdstrand still wonders why he or tyhicks weren't pulled into the conversation\n<jdstrand> or jj\n<ogra_> pobably zyga will simply fix all missing LSM bits with overlayfs on the go then ;)\n<ogra_> ... will just delay the ETA for the feature by a few years :)\n<skjensen> Hi guys, I'm trying to build an image for my Nvidia TK1. I made an attempt on a snap gadget for the device and have created the model.json. But to make it into a image I need the gadget snap to be available. I'm on Ubuntu 16.04 (amd64) but the device I'm building for is armhf.  So I can't use the snap install --dangerous to install the gadget snap I need. How do I build the image on my arm64 workstation?\n<ogra_> skjensen, you need to use the ubuntu-image tool (theer is a snap with it) and use the --extra-snaps optin to point to your local gadget\n<ogra_> skjensen, https://docs.ubuntu.com/core/en/guides/build-device/image-building\n<skjensen> I did try that but with little luck..\n<ogra_> see part 3\n<ogra_> sudo ubuntu-image -c edge --extra-snaps /path/to/your/gadget.snap /path/to/your/model.assertion\n<skjensen> Still can't find it..\n<ogra_> whats the exact error ?\n<skjensen> skj@laptop:~/Documents/snap/TK1$ sudo ubuntu-image -c edge  --extra-snaps /home/skj/Documents/snap/TK1/tk1_16-0.1_armhf.snap /home/skj/Documents/snap/TK1/tk1.model\n<skjensen> error: cannot find snap \"tk1_16-0.1_armhf\": snap not found\n<skjensen> COMMAND FAILED: snap prepare-image --channel=edge --extra-snaps=/home/skj/Documents/snap/TK1/tk1_16-0.1_armhf.snap /home/skj/Documents/snap/TK1/tk1.model /tmp/tmp904xzqti/unpack\n<skjensen> and I have defined the gadget like this in the model.json file \"gadget\": \"tk1_16-0.1_armhf\",\n<ogra_> ah\n<ogra_> you just want the name in there\n<ogra_> \"tk1\"\n<ogra_> change that and re-create the assertion\n<skjensen> Yes, that's working.. :)\n<ogra_> ;)\n<skjensen> I had it with only the name to start with, but because it couldn't find it I changed to the complete name of the file..\n<skjensen> Okay, so far so good.. Now I need the kernel snap.. ogra, did you say I can use the bbb kernel?\n<ogra_> yeah \"linux-generic-bbb\" is the name ...\n<ogra_> though ubuntu-image might complain that this isnt a \"canonical\" package ... in that case use snap download oor grab it from https://code.launchpad.net/~snappy-dev/+snap/linux-generic-bbb/+build/76303 and use the --extra-snaps arg for it as well\n<skjensen> It found it correctly..\n<ogra_> cool\n<ogra_> i knoow there is some builtin policy that the owner of the gadget must match the owner of the kernel snap ... unless the kernel is owned by canonical ... seems we dropped it\n<skjensen> Nope.. you are right.. Just a delayed error message..\n<skjensen> error: cannot use kernel \"linux-generic-bbb\" published by \"QfOqF7d2M1Pk2O0SbEKqTdB9Ry2aI0BP\" for model by \"bdSXYoRKHbnUgDeg0MU6rJIID8IODntX\"\n<ogra_> so just pull it from the LP build page and use --extra-snaps\n<ogra_> that should ignore the requirement\n<skjensen> It's downloading.. :)\n<ogra_> (i hope)\n<skjensen> Me too.. Unfortunately I got to go pick up my son.. so will have to wait before I can test the image.. I'm right in saying I can flash this image to a SD card and boot from that?\n<ogra_> yes\n<ogra_> (if your booard generally can boot from SD indeed)\n<skjensen> It's one of it's best features, if there is a bootable SD card it will boot from that by default..\n<skjensen> Okay, I'm gone.. Thanks a lot for the help again.. :)\n<ogra_> then it shoould just woork (if your gadget is correct :) )\n<zyga-suse> ok, stuff is reabsed\n<zyga-suse> now to tie overlay mount entries to things that use them\n<zyga-suse> so that undo works :)\n<zyga-suse> come to think of it, I think it's actually easier than I thought\n<zyga-suse> perhaps we don't need to annotate overlays\n<zyga-suse> we can just keep them IFF there's anything mounted underneath\n<zyga-suse> so yeah, less patches needed :)\n * kalikiana  lunch time\n<Son_Goku> zyga-suse: overlays?\n<Son_Goku> are we using overlayfs now?\n<zyga-suse> well, I'm trying to\n<sergiusens> zyga-suse if you have a discussion on irc or a hangout the \"minutes\" for it at least should really make their way to the forum\n<sergiusens> kalikiana kyrofa elopio et. al. reminder I am out today\n<zyga-suse> sergiusens: are you referring to overlays or something else?\n<sergiusens> zyga-suse yes, but anything really needs to go there if it \"matters\"\n<sergiusens> kyrofa mind looking at snapcraft#1607 and snapcraft#1583 ? Those are yours and getting those failures out of the way would be great! ;-)\n<mup> PR snapcraft#1607: python plugin: use extracted pip <Created by kyrofa> <https://github.com/snapcore/snapcraft/pull/1607>\n<mup> PR snapcraft#1583: ament plugin: new plugin <Created by kyrofa> <https://github.com/snapcore/snapcraft/pull/1583>\n<zyga-suse> yes, you are right; I wanted to describe this on the forum but I had a few crazy days and I spent most of the time on just coding this\n<zyga-suse> I'll write something now\n<Son_Goku> so for once, a feature that actually already has SELinux support :)\n<zyga-suse> Son_Goku: https://github.com/zyga/snapd/commit/f34aca5625013b3d02ee6dba384e9918770f94ef#diff-4480ffd44957efa3395867c929f88014R145\n<cachio> mvo, same error using devmode\n<cachio> to use gsettings\n<zyga-suse> cachio: any denials?\n<cachio> mvo, no\n<cachio> zyga-suse, I am using snap try\n<cachio> zyga-suse, could that affect?\n<Son_Goku> hmm\n<zyga-suse> yes, perhaps\n<kalikiana> kyrofa: mind taking another look at  snapcraft#1412 today? I hope I made it clearer now what's addressed there vs. the other PR\n<mup> PR snapcraft#1412: lxd: snapcraft refresh in containers <Created by kalikiana> <https://github.com/snapcore/snapcraft/pull/1412>\n<kalikiana> kyrofa, elopio: also snapcraft#1627 should be fairly straight-forward. I'm splitting lxd.py into different classes/ files to make the code more maintainable. It's getting a bit unwieldy :-D so might even be better to get this in first, since it probably makes other PRs easier to review\n<mup> PR snapcraft#1627: lxd: split container classes into different files <Created by kalikiana> <https://github.com/snapcore/snapcraft/pull/1627>\n<kyrofa> kalikiana, will do. Just want to fix my branches now that slow tests have landed etc.\n<zyga-suse> niemeyer: gentle ping about https://github.com/snapcore/snapd/pull/3958\n<mup> PR #3958: many: add support for /home on NFS <Created by zyga> <https://github.com/snapcore/snapd/pull/3958>\n<kalikiana> kyrofa: Aye, no rush. Let me know if you need another review from me there.\n<mvo> cachio: if you post your work-in-progress branch I can have a look\n<cachio> mvo, sure\n<cachio> mvo, this is the branch https://github.com/sergiocazzolato/snapd/tree/tests-interface-gsettings\n<kyrofa> Agh, test_list_plugins will be the death of me\n<cachio> niemeyer, I think the problem about the refresh core is that after I start the stable version I see https://paste.ubuntu.com/25773077/\n<niemeyer> zyga-suse: Ack\n<niemeyer> cachio: Looking\n<cachio> niemeyer, I am using the stable version from long time ago\n<niemeyer> cachio: Yeah, so exactly what we discussed\n<cachio> so it triggers a refresh to the current stable\n<cachio> reboots the device and then I start the tests\n<cachio> running against stable instead of using beta\n<niemeyer> cachio: Yeah.. it's a simple race with auto-refresh\n<niemeyer> cachio: As mvo predicted\n<cachio> niemeyer, I should wait until the autorefresh is done to trigger the refresh to beta\n<niemeyer> cachio: Yeah, that should work\n<cachio> niemeyer, nice, thanks for the support\n<niemeyer> cachio: np!\n<kyrofa> elopio, kalikiana I'm getting this a lot on the pip PR: https://travis-ci.org/snapcore/snapcraft/jobs/289625934\n<kyrofa> elopio, kalikiana have you guys seen that elsewhere?\n<kyrofa> It's definitely not my error, but it only surfaces when running pip stuff, which makes me think I'm doing something to surface it\n<kalikiana> kyrofa: Yeah, I've seen and mentioned that before... the answer I got in the past was \"Re-run\"...\n<kyrofa> kalikiana, oh really? Okay so maybe not this PR then\n<kyrofa> kalikiana, I wasn't seeing it elsewhere, so was starting to question myself\n<kalikiana> kyrofa: I try to add a comment these days quoting the last lines of such errors, so we can check other PRs for the same false negatives\n<kalikiana> Otherwise it really is difficult to keep track of\n<mvo> zyga-suse: fwiw, I can reproduce the issue the ePiere was describing, I think I have a test, my local spread is just unhappy, steps are pretty simple, will send via mail\n<mvo> zyga-suse: i.e. the error is: \"cannot open current mount profile: ....fstab: permission denied\"\n<mvo> zyga-suse: and I get an apparmor denied from /usr/lib/snapd/snap-confine\n<zyga-suse> mvo: aha\n<zyga-suse> mvo: right\n<zyga-suse> mvo: I'll check it out, let me look at the mail\n<mvo> zyga-suse: I have not written the mail yet\n<zyga-suse> mvo: if you have access to the shell there\n<zyga-suse> mvo: look at the profile in /etc/apparmor.d\n<zyga-suse> mvo: you can also collect the data about the loaded profile in sysfs\n<zyga-suse> mvo: can you paste the denial really quick please?\n<mup> PR snapd#4057 opened: interfaces: remove duplicated MockPlug/MockSlot helpers from interface tests <Created by stolowski> <https://github.com/snapcore/snapd/pull/4057>\n<pstolowski> zyga-suse, can you look at this trivial if you have a moment? ^\n<mvo> zyga-suse: http://paste.ubuntu.com/25773282/\n<zyga-suse> mvo: you can also poke at /sys/kernel/security/apparmor\n<zyga-suse> pstolowski: yes\n<mvo> zyga-suse: http://paste.ubuntu.com/25773287/ is the denial\n<zyga-suse> mvo: and the denial?\n<zyga-suse> ah\n<zyga-suse> oh\n<zyga-suse> mknod?\n<zyga-suse> that's odd\n<zyga-suse> that's totally unexpected\n<zyga-suse> can you run with SNAP_CONFINE_DEBUG=yes\n<mvo> zyga-suse: this is the strace (the last few lines) http://paste.ubuntu.com/25773303/\n<zyga-suse> open(\"/run/snapd/ns/snap.test-snapd-tools.fstab\", O_WRONLY|O_CREAT|O_TRUNC|O_CLOEXEC, 0666) = -1 EACCES (Permission denied)\n<zyga-suse> mvo: that looks like a bug in apparmor\n<zyga-suse> mvo: we get open and mknod\n<zyga-suse> mvo: that doesn't make sense\n<mvo> zyga-suse: and http://paste.ubuntu.com/25773306/\n<zyga-suse> jdstrand: ^\n<zyga-suse> pstolowski: why do you want that change?\n<zyga-suse> pstolowski: I wanted it the other way around but I didn't find a way to do it\n<zyga-suse> pstolowski: now we're keeping more test-only code in the real package\n<zyga-suse> mvo: thinking\n<jdstrand> is there actually an *apparmor* denial?\n<zyga-suse> mvo: `    /run/snapd/ns/*.fstab rw,` is the rule that should allow the open\n<pstolowski> zyga-suse, cause I need two other Mock* helpers like that in my other branch, so I thought I'd go ahead and change existing ones to avoid duplication\n<jdstrand> http://paste.ubuntu.com/25773282/ doesn't show there is anything in syslog/journalctl\n<zyga-suse> [  290.377428] audit: type=1400 audit(1508427272.862:36): apparmor=\"DENIED\" operation=\"mknod\" profile=\"/usr/lib/snapd/snap-confine\" name=\"/run/snapd/ns/snap.test-snapd-tools.fstab\" pid=4066 comm=\"snap-confine\" requested_mask=\"c\" denied_mask=\"c\" fsuid=0 ouid=0\n<zyga-suse> jdstrand: it's a separate pastebin\n<jdstrand> ok, yes, I see that\n<zyga-suse> pstolowski: can you make it so that we call one of the mock from the other and still use the test package rather than the main package?\n<zyga-suse> mvo: I don't have any theory yet\n<pstolowski> zyga-suse, i'm not totally clear on what do you mean? you don't want builtin.Mock*?\n<zyga-suse> pstolowski: no, I don't want builtin.Mock\n<zyga-suse> pstolowski: we can keep the mock in test-only code\n<zyga-suse> pstolowski: but becase we cannot do that yet there are two copies of the code\n<jdstrand> mvo: are you sure that the .real is what is being used and not snap.core....\n<zyga-suse> pstolowski: I was thinking one could call the other\n<zyga-suse> mvo: are there .real and plain profiles?\n<pstolowski> zyga-suse, ah, that. let me see\n<zyga-suse> pstolowski: and in general we should perfer test package to the main package\n<zyga-suse> pstolowski: thank you!\n<jdstrand> mvo: you pasted 'cat /etc/apparmor.d/usr.lib.snapd.snap-confine.real'\n<mvo> jdstrand, zyga-suse http://paste.ubuntu.com/25773336/\n<zyga-suse> mvo: (I mean are there both)\n<zyga-suse> mvo: good\n<mvo> zyga-suse, jdstrand so that is the only apparmor profile for snap-confine (this is on a core system)\n<jdstrand> mvo: what kernel are you using?\n<zyga-suse> yeah, my question exactly\n<jdstrand> cat /proc/version_signature\n<mvo> jdstrand: http://paste.ubuntu.com/25773342/\n<zyga-suse> mvo: that product may have a different kernel snap\n<zyga-suse> mvo: but I assume you have done this on generic\n<zyga-suse> aha\n<mvo> jdstrand: http://paste.ubuntu.com/25773346/\n<mvo> yeah, this is a stock (spread) core VM\n<zyga-suse> mvo: at this time I'd collect verbose apparmor debug data\n<zyga-suse> mvo: can you look at /sys/kernel/apparmor\n<mvo> zyga-suse: sure, what do I need to do ?\n<zyga-suse> mvo: and collect (cat + redirect) the profile for snap-confine\n<zyga-suse> just a moment\n<zyga-suse> cd /sys/kernel/security/apparmor\n<zyga-suse> cd policy/profiles\n<jdstrand> mvo: what if you downgrade the kernel to stable\n<zyga-suse> cd usr.lib.snapd.snap-confine.*\n<zyga-suse> mvo: collect everything there\n<zyga-suse> mvo: note that tar is silly and gets empty files\n<zyga-suse> you need a dumb cp -R copy\n<zyga-suse> then tarball\n<zyga-suse> then please send/attach that\n<zyga-suse> I'll have a look\n<zyga-suse> if you could, save the snap_confine profile text as well\n<zyga-suse> verbatim as it appears for you\n<zyga-suse> I know you pastebinned it but if it's in the same tarball it's more convenient\n<zyga-suse> mvo: after that you can experiment in any way, change the kernel as jdstrand suggeste\n<zyga-suse> *suggested, perhaps\n<mup> PR snapd#4057 closed: interfaces: remove duplicated MockPlug/MockSlot helpers from interface tests <Created by stolowski> <Closed by stolowski> <https://github.com/snapcore/snapd/pull/4057>\n<mvo> zyga-suse: on the way via mail\n<mvo> zyga-suse: jdstrand going to the stable kernel now and trying it again\n<zyga-suse> thank you\n<jdstrand> mvo: you said this is part of spread. what test?\n<pstolowski> zyga-suse, I can make the Mock* method from tests call the one from builtin, so we get rid of duplicated body, a little win..\n<mvo> jdstrand: its a new spread test I'm currently working on. we got a report from CE QA about this issue\n<jdstrand> I see a test for that file in  tests/main/snap-discard-ns, but that wouldn't be confined since calling snap-discard-ns directly...\n<pstolowski> but not the other way around\n<zyga-suse> pstolowski: yeah, that's good\n<zyga-suse> pstolowski: little by little :)\n<mvo> jdstrand: and we have no test yet that checks snap refresh stable->edge and revert back\n<pstolowski> ok..\n<mvo> jdstrand: fwiw, stable kernel shows the same message\n<jdstrand> mvo: how can I reproduce?\n<jdstrand> mvo: do you have a branch somewhere?\n<jdstrand> mvo: what is it that you are reverting btw?\n<mvo> jdstrand: I reverted core\n * jdstrand wonders if it is a timing issue\n<mvo> jdstrand: one sec, I'm writing a mail and will CC you\n<jdstrand> eg, if the policy gets updated but the snap-confine binary does not...\n<jdstrand> (eg, as part of the revert)\n<mup> PR snapd#4058 opened: interfaces: reduce duplicated code in interface tests mocks <Created by stolowski> <https://github.com/snapcore/snapd/pull/4058>\n<jdstrand> fwiw, I would be surprised if there is a bug in apparmor for file mediation. I am not saying it isn't possible, but I would expect we would see a ton more issues if there was\n<pstolowski> zyga-suse, ^\n<zyga-suse> jdstrand: yes, it's a bit mysterious why this happens\n<zyga-suse> jdstrand: remember when we once saw a case of apparmor profile staying stale after being loaded?\n<zyga-suse> mvo: is this reproducible or did you just get it once and didn't try again?\n<jdstrand> if it happens as a result of reverting core, I suspect we are loading the policy from the reverted core but using the snap-confine binary from the unreverted core, or something similar\n<zyga-suse> pstolowski: +1\n<zyga-suse> jdstrand: but note that on core we reboot and we don't have any core-derived profiles\n<pstolowski> tx\n<zyga-suse> mvo: maybe one more sanity check\n<jdstrand> I bet it is the cache file then\n<mvo> zyga-suse: I rebooted at least twice, manually loaded the profile to double check, definitely reproducible for me. but I have not done a full scenario yet\n<zyga-suse> mvo: reload that profile from disk\n<zyga-suse> mvo: and see if the data in sysfs changes\n<zyga-suse> mvo: and if the error goes away\n<zyga-suse> jdstrand: yes, that's a good idea\n<zyga-suse> mvo: hold on, you reloaded the profile manually and it still failed?\n<jdstrand> eg, boot into current core, generate the cache. reboot into an older core, the mtime check is older than the previous cache file\n<mvo> zyga-suse: apparmor_parse -r /etc... ? I did that, same failure\n<zyga-suse> mvo: yes\n<zyga-suse> holly molly\n<jdstrand> I need a reproducer\n<jdstrand> I strongly suspect there is something along these lines\n<mvo> jdstrand: what file is the cache? I think your theory is correct\n<zyga-suse> mvo: /var/cache/apparmor I think\n<mvo> jdstrand: I can touch the file and see\n<zyga-suse> mvo: for that file\n<jdstrand> /etc/apparmor.d/cache\n<mvo> zyga-suse: cool, let me try that\n<zyga-suse> jdstrand: oh, sorry\n<jdstrand> /var/cache/apparmor is for snaps. /etc/apparmor.d/cache is for system\n<mup> PR snapcraft#1591 closed: snapd integration tests: print stdout/stderr <Created by kyrofa> <Closed by kyrofa> <https://github.com/snapcore/snapcraft/pull/1591>\n<mvo> jdstrand: http://paste.ubuntu.com/25773431/ <- looks suspcious\n<jdstrand> mvo: a better test might be to rm -f /etc/apparmor.d/cache/usr.lib.snapd.snap-confine* before the reboot\n<zyga-suse> september 27th?\n<zyga-suse> wat?\n<jdstrand> mvo: exacctly\n<mvo> jdstrand: if I remove the cache file and reload the profile things are ok.\n<zyga-suse> the cache looks good though\n<jdstrand> ok\n<jdstrand> so, I think the revert needs to remove the cache file unconditionally\n<zyga-suse> mvo: is that september 27th the moment when the profile was loaded?\n<zyga-suse> er\n<zyga-suse> when the image was built\n<mvo> zyga-suse: yes\n<jdstrand> it'll be regenerated on reboot\n<zyga-suse> jdstrand: when is the cache not used?\n<jdstrand> it's always used as part of boot\n<zyga-suse> always even if stale?\n<zyga-suse> is there any staleness check?\n<jdstrand> no\n<jdstrand> yes\n<jdstrand> it doesn't use a stale cache. it has a check. it will regenerate it if stale\n<zyga-suse> what is the condition?\n<jdstrand> the problem is it doesn't look stale\n<jdstrand> mtime\n<mvo> could we rework the cache? I remember we had issues with this before, I vaguely remember some discussion to move to md5sum/sha1 or similar for cache comparing\n<zyga-suse> aha\n<zyga-suse> I see\n<jdstrand> the cache file is always going to be newer than the reverted core's profile\n<zyga-suse> jdstrand: I think this will explain what I saw earlier as well\n<zyga-suse> jdstrand: the issue that federico ran into right in front of my eyes\n<jdstrand> mvo: just remove the cache files on revert\n<zyga-suse> jdstrand: all of them? /var/cache/apparmor /etc/apparmor/cache ?\n<jdstrand> that is the fast and correct fix for today. if want to use checksums, that could come later\n<jdstrand> no\n<jdstrand> we are talking about snap-confine. just remove the /etc/apparmor.d/cache/*snap-confine* profiles on core revert\n<mvo> jdstrand: I just found something, it makes me weep a bit\n * zyga-suse hugs mvo and is curious to know\n<mvo> jdstrand: https://bugs.launchpad.net/snappy/+bug/1460152\n<mup> Bug #1460152: apparmor cache not updated when apparmor.d rules change (breaks 15.04/stable -> 15.04/edge updates) <patch> <Snappy:Fix Released by mvo> <Snappy 15.04:Fix Released by mvo> <apparmor (Ubuntu):Fix Released> <https://launchpad.net/bugs/1460152>\n<zyga-suse> oh my https://code.launchpad.net/~mvo/ubuntu/vivid/ubuntu-core-config/lp1460152-workaround/+merge/261179\n<zyga-suse> mvo: we barely notice this bug because the profile for snap-confine rarely changes in ways that newer revision can do *less* than the older revision\n<zyga-suse> mvo: where shall we change this?\n<zyga-suse> mvo: in request snapd restart?\n<zyga-suse> mvo: or in the apparmor backend?\n<zyga-suse> mvo: we could purge the cache whenever core is installed\n<zyga-suse> mvo: just in case\n<zyga-suse> jdstrand: is the apparmor cache location the same in various distros?\n<jdstrand> in thinking about this, on core, should rm -rf /etc/apparmor.d/cache/*\n<jdstrand> on refresh/revert of the core snap\n<zyga-suse> jdstrand: yeah, because new policy can be inside and we won't know\n<jdstrand> zyga-suse: we are talking about Ubuntu Core here. on classic, re-exec solves all this ith per-revision profiles\n<jdstrand> so on Ubuntu Core, we can depend on /etc/apparmor.d/cache\n<zyga-suse> jdstrand: yes, but what about !snap-confine profiles?\n<zyga-suse> jdstrand: well, we ge-gen those on startup now\n<jdstrand> what about them?\n<zyga-suse> jdstrand: I think you are right, those are fine\n * jdstrand is confused. I thought we were talking about snap-confine\n<zyga-suse> jdstrand: yes but I was thinking that the cache issue may affect other profiles too\n<zyga-suse> jdstrand: but I agree with you that it is just for this single profile\n<jdstrand> snap profiles?\n<mvo> jdstrand: what was the downside of https://bugs.launchpad.net/snappy/+bug/1460152/+attachment/4409034/+files/lp1460152-apparmor.diff  ? this syncs mtime of profile and cache, if there is a difference we re-generate. cheap and (at first glance) reliable, no?\n<mup> Bug #1460152: apparmor cache not updated when apparmor.d rules change (breaks 15.04/stable -> 15.04/edge updates) <patch> <Snappy:Fix Released by mvo> <Snappy 15.04:Fix Released by mvo> <apparmor (Ubuntu):Fix Released> <https://launchpad.net/bugs/1460152>\n<jdstrand> no-- cause of the overlord or whatever making sure if they are different they are regenerated\n<elopio> kyrofa: sorry, I didn't see the error and now that link is an execution in progress.\n<mvo> jdstrand: I can prepare something that \"rm -rf /etc/apparmor.d/cache/* on core devices when the core snap changes. but I still would to discuss how to make apprmor itself more reliable here\"\n<elopio> kyrofa: when I get repeated errors, I report them in a bug even if it's not clear if they are snapcraft's fault.\n<kyrofa> elopio, good idea. I'll do that again if I see it\n<mvo> jdstrand: if you think the syncing is ugly, just embedding the timestamp of the source file in the cache is also super cheap or putting an .aux file next to it with the timestamp\n<jdstrand> mvo: the downside is that apparmor would need an SRU everywhere. that will be too slow for you\n<mvo> jdstrand: *cough* dput ppa:snappy-dev/image apparmor_13371+ppa1_source.changes. problem solved until the SRU is in\n<mvo> jdstrand: it seems more correct to me and I'm happy to give it a shot\n<jdstrand> mvo: I'll defer to jjohansen on the best approach. It looks like he started to pick up that work\n<jdstrand> mvo: you know I very much hate that :P\n<jdstrand> mvo: I would very much prefer to not be ahead of upstream apparmor on this point\n<kyrofa> elopio, is snapcraft#1629 good to go?\n<mup> PR snapcraft#1629: lxd: fix the unit test for the user id map <Created by elopio> <https://github.com/snapcore/snapcraft/pull/1629>\n<elopio> yes, it even got a green autopkgtest execution\n<zyga-suse> mvo: so we need a .6?\n<mvo> jdstrand: thats ok, I can do both: add code to snapd and poke at apparmor (or poke you guys to do that)\n<zyga-suse> mvo: I think we need a .6 :/\n<mvo> zyga-suse: no, not a regression\n<zyga-suse> mvo: it breaks revert\n<zyga-suse> mvo: CE won't like that\n<kyrofa> elopio, excellent, I'm merging it. So tired of bad autopkgtests\n<mvo> zyga-suse: but its stable->edge so far, no?\n<zyga-suse> no, this is ever since we have snap-update-ns\n<elopio> thanks kyrofa.\n<mvo> zyga-suse: if its old-stable->stable thats different\n<zyga-suse> mvo: hmmmm\n<jdstrand> mvo: note that we are probably going to do an apparmor SRU for the af_unix issue, so maintaining an extra apparmor in a ppa makes that more complicated\n<zyga-suse> not sure\n * zyga-suse looks\n<jdstrand> mvo: yes, rm -rf in PR +1. working with upstream on better parser +1\n<mvo> jdstrand: my suggestion about the ppa is only to quicken the sru process, i.e. we would not maintain something, we would just upload something that you guys have already in the upstream git\n<mvo> jdstrand: let me know if I can help, happy to poke at this again, the fact that I worked on this 2y ago and it came back indicates to me that I don't want to do this again in 2y :/\n<jdstrand> mvo: right, but then we'd need to remember to include that in the SRU so it isn't dropped\n<mvo> jdstrand: agreed\n<jdstrand> I'm not saying it isn't impossible or anything, just, we need to think through coordination, etc\n<mvo> jdstrand: as long as we have a regression test in our tree things should be ok.\n<mup> PR snapcraft#1629 closed: lxd: fix the unit test for the user id map <Created by elopio> <Merged by kyrofa> <https://github.com/snapcore/snapcraft/pull/1629>\n<zyga-suse> mvo: dccfcb26c5fe59fb259a800a22208f355e79d6bd is the patch that changes the policy\n<jdstrand> mvo: looking at trunk, it seems like there were commits related to this\n<zyga-suse> mvo: I don't see it in 2.28 release branch\n<zyga-suse> mvo: so I think it's looking like a quiet weekend\n<mvo> zyga-suse: :)\n<mvo> zyga-suse: yay, big hugs to the CE QA team then\n<jdstrand> mvo: with a regression fix: https://bugs.launchpad.net/apparmor/+bug/1484178\n<mup> Bug #1484178: Policy cache file mtimes are not being set correctly <AppArmor:Fix Released by tyhicks> <apparmor (Ubuntu):Fix Released by jdstrand> <https://launchpad.net/bugs/1484178>\n<jdstrand> mvo: so it looks like a version of your patch made it in, but \"Starting in AppArmor 2.10, the policy cache file's mtime was meant to be updated to be equal to the newest mtime detected on the profile and abstraction files used to generate the policy cache file\"\n<jdstrand> mvo: this was something I was trying to think through. the include files are going to be a problem on revert\n<jdstrand> I think\n<jdstrand> so the parser is supposed to use the newest value of mtime between the profile and include files\n<tyhicks> that's correct\n<jdstrand> so if /etc/apparmor.d/tunables/global is newer than /etc/apparmor.d/*snap-confine*, the mtime of global will be used for the cache\n<jdstrand> if we revert but global did not change, then the mtime will be the same and the cache won't be stale\n<kyrofa> kalikiana, snapcraft#1412 has conflicts\n<mup> PR snapcraft#1412: lxd: snapcraft refresh in containers <Created by kalikiana> <https://github.com/snapcore/snapcraft/pull/1412>\n<tyhicks> jdstrand: sounds like the cache read should be skipped in such a situation\n<tyhicks> the '--skip-read-cache' option of apparmor_parser\n<jdstrand> tyhicks: which part are you talking about?\n<jdstrand> tyhicks: in snapd on refresh/revert?\n<tyhicks> jdstrand: yes\n<jdstrand> for core\n<tyhicks> yes\n<jdstrand> that would work too, but having the stale cache files around seems wrong too\n<jdstrand> so long as we use --write-cache, that would be ok\n<tyhicks> jdstrand: you're talking about stale cache files for app snaps?\n<zyga-suse> the parser could unlink them\n<jdstrand> tyhicks: no, snap-confine\n<jdstrand> zyga-suse: I don't think the parser is the place to do this. it is doing what everyone asked\n<jdstrand> it still has a concept of 'newer'\n<jdstrand> in terms of what it is including. if there is a concept of 'newer' then reverts are problematic to handle in the parser itself\n * zyga-suse feels that cache in apparmor is not as transparent as it should and needs hand-holiding\n * mvo dinner\n<jdstrand> tyhicks: the problem is on core revert, the newer cache file is still used but with an older snap-confine. that broke things\n<mvo> yeah, I think hashes or list of mtimes of the inputs would be more reliable\n * mvo vanishes\n * zyga-suse too\n<jdstrand> mvo: if you recall from the bug, hashes will slow things down\n<tyhicks> jdstrand: how about simply updating the mtime of the profile on revert?\n<jdstrand> tyhicks: that could work too\n<jdstrand> tyhicks: well, no. it is in rofs\n<tyhicks> imo, that's what needs to happen\n<tyhicks> oh\n<jdstrand> /etc/apparmor.d is read-only. /etc/apparmor.d/cache is rw\n<jdstrand> mvo: the cache is meant to be pretty much as fast as you can read them off the disk. if we add hashes, consider hundreds or more profiles\n<mvo> jdstrand: if hashes are slow we could store the [(input1,mtime1),...(inputN,mtimeN)] and compare those, that should be quick\n<zyga-suse> jdstrand: out of my PRs I'd like your review on https://github.com/snapcore/snapd/pull/4008 -- it's long but most of that is tests\n<mup> PR #4008: cmd/snap-update-ns: create missing mount points automatically <Created by zyga> <https://github.com/snapcore/snapd/pull/4008>\n<zyga-suse> jdstrand: it contains go's version of mkpath\n<jdstrand> zyga-suse: it is already on my list. I'll put it towards the top. I've seen commits as recent as today-- is it ready for another review?\n<zyga-suse> jdstrand: freeze/thaw logic that's new\n<mup> PR snapd#4059 opened: tests: add test that checks core reverts on core devices <Created by mvo5> <https://github.com/snapcore/snapd/pull/4059>\n<mvo> jdstrand: please don't get me wrong, I don't want to be pushy or anything, happy to help wit hthis stuff. but dinner now really :)\n<jdstrand> mvo: that would require changes to the format on disk and thus require jjohansen's input\n<zyga-suse> jdstrand: and small glue that uses mkdir when we want to mount something but target is gone\n<kyrofa> elopio, will python3 -m unittest discover -b -v -s integration_tests\" not run _all_ the integration tests, including the packages below?\n<zyga-suse> jdstrand: there's loads of unit tests and one comprehensive integration test\n<elopio> Not until tomorrow\n<kyrofa> elopio, isn't that how discover works?\n<jdstrand> mvo: checking and comparing the mtimes of everything is likely performant enough. I'm not sure of other ramifications. maybe it makes sense to bring up on the apparmor ML?\n * jjohansen reads backscroll to pickup context\n<tyhicks> jjohansen: don't spend time reading all of backscroll\n<tyhicks> jjohansen: I'll summarize\n<elopio> kyrofa: I'm moving some integration tests to a general suite, so we can properly filter.\n<zyga-suse> jjohansen: hey, long time no see :)\n<jdstrand> zyga-suse: I think I heard \"yes, it is ready for you to review\"?\n<jjohansen> hi zyga-suse\n<zyga-suse> jdstrand: hmm?\n<zyga-suse> jdstrand: I think it's ready now\n<zyga-suse> jdstrand: NB, this is the code without any overlayfs\n<jdstrand> 11:42 < jdstrand> zyga-suse: it is already on my list. I'll put it towards the op. I've seen commits as recent as today-- is it ready for another review?\n<zyga-suse> jdstrand: so should be non-controversial\n<zyga-suse> jdstrand: ah, I didn't notice\n<kyrofa> elopio, ah, integration_tests/snapd, integration_tests/store etc. aren't packages, I see\n<elopio> kyrofa: at some point, somebody, probably not me but maybe... removed the init.py from some subdirs, so they are not discovered.\n<zyga-suse> jdstrand: it's ready, the code today was more tests and shrinking the diff for next PRs\n<kyrofa> elopio, gotcha\n<tyhicks> jjohansen: on snap revert, snapd is rolling back profiles to old versions but there could be an include file that is newer so the mtime of the policy cache file isn't updated and the old cache file is loaded\n<jdstrand> zyga-suse: ok\n<niemeyer> zyga-suse: You've got a review\n<zyga-suse> niemeyer: thank you\n<niemeyer> zyga-suse: Thanks for the PR!\n<elopio> kyrofa: I'm moving everything around to make the split for Travis a little less painful.\n<niemeyer> zyga-suse: Ah, one more note, can we please drop the \"generated-\" prefix and use something more contextual?\n<niemeyer> zyga-suse: Every profile we have is generated\n<tyhicks> jjohansen: apparmor's policy cache implementation assumes that mtimes should only ever go forward but that's not the case when reverting back to older, read-only versions of a profile\n<jdstrand> tyhicks: that summarizes things ok, but more precisely, it is core snap revert, which includes system profiles in /etc/apparmor.d. non-core snap profiles are not affected because of how snapd manages them. there is an interplay with the /etc/apparmor.d profiles and the init script that is causing trouble\n<zyga-suse> niemeyer: whatever we want, we just need to have a prefix\n<tyhicks> jdstrand: sure but jj doesn't need that info\n<niemeyer> zyga-suse: What's common across all of the files?\n<tyhicks> at least, I didn't think he did :)\n<zyga-suse> niemeyer: so far we only have one file\n<jdstrand> tyhicks: I thought the system profile point was important, but ok\n<zyga-suse> niemeyer: but the theme is \"local tweaks to work around something\"\n<niemeyer> zyga-suse: How about nfs then?\n<niemeyer> zyga-suse: Or perhaps...\n<jjohansen> tyhicks: ? ah, so what you want is the hashing consistency check\n<zyga-suse> niemeyer: we need a glob to match the set we manage, we can juse use `*`\n<zyga-suse> niemeyer: then we can drop generated-\n<niemeyer> zyga-suse: If it's just one file, it'd be better to use that one file instead\n<jjohansen> which we started on ages ago, and never finished because its priority was dropped\n<jdstrand> jjohansen: I think what mvo wants is that if the profile or any included files are different, then regenerate the cache. how that is done I don't think he cares\n<tyhicks> jjohansen: I'm not asking for that but the snapd folks want something along those lines or for a list of profile and include file mtimes to be stored alongside the policy cache file\n<niemeyer> zyga-suse: nfs-support is a good name for the file\n<zyga-suse> ok\n<zyga-suse> I'll review the review comments and tweak this, I think it should land tomorrow\n<niemeyer> zyga-suse: The file is included/imported by name, right, not by glob?\n<zyga-suse> niemeyer: no\n<zyga-suse> niemeyer: everything in the directory is imported\n<zyga-suse> niemeyer: apaprmor includes are recursive\n<niemeyer> zyga-suse: Oh?\n<jdstrand> jjohansen: I speculated in the old bug that prompted the setting of mtime of the cache to that of the newest file patch that a hash of everything would be slow, so people thought about storiing of the list of all the mtimes and comparing those\n<niemeyer> zyga-suse: Okay, so the glob needs to be * indeed\n<jjohansen> jdstrand: well, its either store everything and compare. Or a hash and compare\n<niemeyer> Otherwise we may be including things we have no idea about\n<jdstrand> jjohansen: right\n<tyhicks> jjohansen: I'm currently of the opinion that snapd is subverting the policy cache, out from under apparmor_parser, and should be smart enough to use --skip-read-cache when appropriate\n<tyhicks> jdstrand: we could hash all the mtimes instead of hashing the profiles and include files themselves\n<jdstrand> it is true that snapd is moving forward and backward in time in arbitrary ways with the concept of revert\n<jdstrand> tyhicks: that's interesting\n<jjohansen> jdstrand: the hashing isn't that slow when you realize we read in those files already anyways, because we the time comparison is in the parse\n<tyhicks> and it doesn't have to be an cryptographic hash\n<jjohansen> right\n<kyrofa> snappy-m-o, autopkgtest 1627 xenial:amd64\n<snappy-m-o> kyrofa: I've just triggered your test.\n<jjohansen> I believe I was using murmer hash3, which is faster than a crypto hash but still fairly good\n<jdstrand> jjohansen: did you profile its performance?\n<tyhicks> jjohansen: I used djb2 for my old multiple policy cache implementation\n<jjohansen> jdstrand: it was never completed to the point where performance could be checked, but it should be at least a couple order of magnitudes faster than the disk read\n<jdstrand> cause while this is prompted by the system cache and the system profile in ro media, if we introduce a hash check I would expect it to be used for all profile loads (where we are considering the use of the cache), which could easily be hundreds of profiles\n<jjohansen> so I expect you won't even notice it\n<jjohansen> jdstrand: right, which brings us to another optimization that has never been finished. Calling the parser once with all the profiles to load and caching each file once (which means hashing them once)\n<jdstrand> just so it is understood why a crypto hash is not required, the idea is that if you can modify the files in /etc/apparmor.d{,/cache} to create a collision, you may as well just change them\n<tyhicks> jdstrand: speed is the #1 reason followed by what you just said\n<jdstrand> jjohansen: that would be quite nice since we are using templates, etc (we could actually optimize what snapd does to leverage that even more when the feature was there). I'm guessing that is quite far out though\n<jjohansen> jdstrand: we are hardening against an attack, this is just an optimization, and detecting files changes. A good hash makes that almost guarenteed\n * zyga-suse cannot find any bug reports about NFS and apparmor \n<jjohansen> a crypto hash would make the odds against an accidental collision even better, but for this, not worth the cost\n<tyhicks> if we do hashing, I'd think that we would want to use something very fast (djb2/murmur) and also continue to check the most recent mtime (like what we're doing today) to slightly reduce the chance of a collision under normal usage (doesn't help with snapd's revert situation)\n<jdstrand> right, I understand the reasoning, I just wanted it explicitly stated for posterity :)\n<jjohansen> zyga-suse: oh they have happened in the past, but you may need to file a new one. I am not sure there are any in launchpad, perhaps suse bugzilla\n<jdstrand> zyga-suse: let me check. I thought there was one\n<zyga-suse> jjohansen: aha, I'll look at suse then\n<zyga-suse> thank you!\n<jjohansen> tyhicks: yep that was the plan\n<zyga-suse> I looked at apparmor on LP and general google\n<tyhicks> jjohansen: do you agree that we just hash the mtimes rather than the file contents?\n<jjohansen> zyga-suse: I remember something around 2004-2006, can't remember the details, tony dealt with it\n<jjohansen> tyhicks: uh no\n<jdstrand> zyga-suse: I think I was only thinking of https://bugs.launchpad.net/ubuntu/+source/snapd/+bug/1662552, which you are familiar with\n<mup> Bug #1662552: snaps don't work with NFS home <snapd:In Progress by zyga> <snapd (Ubuntu):Triaged> <https://launchpad.net/bugs/1662552>\n<jjohansen> tyhicks: we can consider it, but its not something I have spent enough time with to agree\n<zyga-suse> hmm, it feels I should file a new bug on apparmor specifically\n<jjohansen> zyga-suse: please do\n<jdstrand> tyhicks, jjohansen: to be clear, this conversation is about a proper solution. mvo and the snapd team will implement something to work with what is currently there (maybe --skip-read-cache, maybe rm -f of the cache files, etc)\n<tyhicks> jdstrand, jjohansen: I think that this was a useful technical deep dive but we don't currently have plans to work on this for 18.04\n<jdstrand> mvo: ^\n<zyga-suse> jjohansen: https://bugs.launchpad.net/apparmor/+bug/1724903\n<mup> Bug #1724903: NFS access is not transparent to processes with apparmor profile containing network rules <AppArmor:New> <https://launchpad.net/bugs/1724903>\n<zyga-suse> jjohansen: if you have insight into how this works and why the workaround is needed could you pleaseadd it there\n<zyga-suse> I'm only aware of the surface of the issue\n<jjohansen> zyga-suse: hrmmm, my guess is because nfs is using the task asking the files cred instead of a kernel cred via the act as cb when doing the network stuff. But I will have to actually dig into it to be sure\n<jjohansen> zyga-suse: how about I distract you with the fedora kernel I gave stgraber instead ;)\n<zyga-suse> jdstrand: :D\n<zyga-suse> fedora kernel?\n<stgraber> :)\n<zyga-suse> jjohansen: note that that was just a gentle idea, I don't want you to drop what you are doing and work on that bug :)\n<jjohansen> hence the distraction to keep you occupied, so you don't realize I haven't worked on the bug :)\n<zyga-suse> I think I need to EOD now, kids are running unchecked here and I bet they have homework :)\n<mvo> jdstrand, tyhicks would you accept patches if there is agreement about the approach?\n<tyhicks> mvo (cc jjohansen): definitely :)\n<mvo> tyhicks: cool! and agreement is fast-hash+mtime? (cc jjohansen)?\n<jjohansen> zyga-suse: yes fedora kernel, its stack apparmor and selinux\n<jjohansen> mvo: give me a minute\n<mvo> jjohansen: sure :)\n<zyga-suse> jjohansen: oh, shiny!\n<zyga-suse> jjohansen: do you have RPM?\n<jjohansen> zyga-suse: for the kernel only atm\n<jjohansen> zyga-suse: http://people.canonical.com/~jj/fedora/\n<stgraber> jjohansen: one thing that was mentioned last week is that we could probably call the apparmor tools from within the core snap\n<zyga-suse> jjohansen: 1.1G?\n<jjohansen> give me a minute and I can send you an email with some instructions\n<stgraber> jjohansen: at which point we'd only really need apparmor support in the kernel, everything else would be coming from the core snap\n<jjohansen> zyga-suse: its all the rpms from the kernel build\n<jjohansen> stgraber: yep that is a possibility, just wanted to make sure zyga-suse understood there is no apparmor userspace rpm atm\n<zyga-suse> jjohansen: ack, I understand\n<cachio> niemeyer, is it any way to stop the auto-refresh?\n<kyrofa> cjwatson, any chance you're still around?\n<cjwatson> kyrofa: about to finish.  what is it?\n<kyrofa> cjwatson, quick question\n<Pharaoh_Atem> jjohansen: what is this?\n<kyrofa> cjwatson, back when we were discussing the `architectures` key at the sprint, we settled on using the grammar we already have\n<kyrofa> cjwatson, but this is something LP will need to parse\n<kyrofa> cjwatson, we discussed your using the grammar processing we already wrote, and I'd like to quickly discuss how you'd like to consume that\n<cjwatson> kyrofa: and I think what Sergio (or you?) said was that the relevant bit of the parser would be made available on PyPI as a thing we could use\n<Pharaoh_Atem> jjohansen: it's 1.1GB!\n<jjohansen> Pharaoh_Atem: development work towards LSM stacking, which will allow for multiple LSMs on a system at once. So if enabled, apparmor based snaps would work (in enforcing, not dev mode) on an selinux fedora\n<jjohansen> or you could use and Ubuntu container with apparmor on an selinux fedora\n<jjohansen> etc\n<kyrofa> cjwatson, that was my question: is that best for you? Or do you simply want it as part of the public API in snapcraft so you can import it, etc.\n<jjohansen> Pharaoh_Atem: its all the kernel rpms from a kernel build, you don't need all of them, just like an ubuntu kernel build you get lots of different debs out, but only need 1 or 2 for most things\n<cjwatson> kyrofa: PyPI would be much better for us; recall that LP is running in fairly tightly-controlled environments.\n<kyrofa> cjwatson, yep, good deal, that's all I needed! Just planning out tasks\n<kyrofa> cjwatson, thank you :)\n<cjwatson> kyrofa: And while we do still consume a few Python packages from the system, we want to move away from doing that.\n<Pharaoh_Atem> jjohansen: does someone want to start talking to the Fedora kernel team about this?\n<Pharaoh_Atem> because this is not something to enable lightly\n<Pharaoh_Atem> jjohansen: where's the src.rpm?\n<kyrofa> cjwatson, makes sense\n<jjohansen> Pharaoh_Atem: no, none of its upstream, its a work in progress. The selinux people are aware of it, we have been discussing LSM stacking for 5 years, slowly working towards it\n<jjohansen> Pharaoh_Atem: hrmm, if its not in the tarball then the build must have dropped it in a different location\n<Pharaoh_Atem> it's in SRPMS in the rpmbuild/ tree\n<jjohansen> I tared up the build dir\n<Pharaoh_Atem> looks like you archived rpmbuild/RPMS/*\n<Pharaoh_Atem> but not rpmbuild/SRPMS/*\n<jjohansen> Pharaoh_Atem: ack, so a different location, I didn't check, and its been a long time since I have dealt with rpm packaging\n<Pharaoh_Atem> jjohansen: you should get out more ;)\n<jjohansen> this was a quick one off for a demo, it wasn't meant for public consumption\n<jjohansen> well general public, people are welcome to play but I haven't even put together a good list of instructions\n<Pharaoh_Atem> jjohansen: feel free to set up something on https://copr.fedorainfracloud.org/\n<Pharaoh_Atem> it's not particularly hard ;)\n<jjohansen> the plan was to fix some bugs, and make the git tree public, along with some instructions\n<zyga-ubuntu> jjohansen: I can help\n<Pharaoh_Atem> the only thing I'm not particularly happy about is that the LSM stacking doesn't help anything for RHEL/CentOS users\n<jjohansen> zyga-ubuntu: thanks for the offer, I will take you up on it, but it will be a few days before I can get back to playing with this\n<Pharaoh_Atem> as in, even if we got AppArmor enabled in Fedora, and had the userspace utilities packaged (not particularly difficult), it won't help for RHEL/CentOS users who use the RHEL kernel\n<zyga-ubuntu> Pharaoh_Atem: we won't necessairly have to package them\n<Pharaoh_Atem> zyga-ubuntu: trust me, that *will* be a requirement of the kernel team\n<jjohansen> Pharaoh_Atem: hrmm, maybe apparmor was enabled in at one of those at one point. not default, and not supported but enabled\n<jjohansen> s/enabled/compiled in/ so some one could set it on the grub kernel line\n<Pharaoh_Atem> jjohansen: it's not currently enabled in the Fedora kernel or the RHEL7 kernel\n<Pharaoh_Atem> as in, not compiled in at all\n<Pharaoh_Atem> zyga-ubuntu: it's not an unreasonable requirement to package and maintain the userspace for AppArmor\n<jjohansen> Pharaoh_Atem: yep, that may change. stgraber did a demo of an ubuntu container running on fedora with selinux enforcing the host and apparmor the guest\n<jjohansen> being able to fully support other OS containers is a compelling use case\n<Pharaoh_Atem> well, LXD will be fine with SELinux across the board\n<Pharaoh_Atem> I fixed the SELinux policy to add the LXD binaries, so now LXD just has to use it\n<Pharaoh_Atem> jjohansen: most people are fine with security systems being disabled\n<Pharaoh_Atem> and historically, it's been a huge burden to be an AppArmor user\n<Pharaoh_Atem> though hopefully that is changing with the more upstream-y policy of AppArmor team\n<skjensen> Any where I can find the source for building this kernel? https://code.launchpad.net/~snappy-dev/+snap/linux-generic-bbb/+build/76303  Downloading it and using it as an extra snap still give me the with different signatures on the kernel and gadget.. :(\n<Pharaoh_Atem> so at some point soon, kyrofa and zyga-ubuntu will work with the lxd copr packager to bring those into Fedora mainline\n<cjwatson> kyrofa: (BTW I don't particularly object if this is a matter of dumping snapcraft onto PyPI, but I also don't know whether that would be a pain due to non-standard packaging or whatever)\n<kyrofa> cjwatson, haha, me neither\n<cjwatson> kyrofa: though I guess adding all of snapcraft to our dependencies would bloat our virtualenv a *lot*, so it might be better if there were a more focused dependency split off from it, if that isn't too much hassle\n<cjwatson> kyrofa: oh, err - also, LP is currently Python 2\n<kyrofa> cjwatson, oh nooooooo\n<kyrofa> Hahaha\n<cjwatson> kyrofa: making just the parser bilingual might be easier than making the whole thing bilingual\n<cjwatson> which I'm fairly sure you have no interest in\n<kyrofa> cjwatson, indeed, that's definitely a point in favor of refactoring into its own thing (which is what I was planning for anyway)\n<kyrofa> cjwatson, glad we talked, that changes my time estimate a little\n<cjwatson> I obviously want to get LP onto Python 3 eventually, but it's lots of code and lots of dependencies\n<Pharaoh_Atem> will LP become Python 3?\n<cjwatson> glad I thought of that, that obviously changes things\n<cjwatson> Pharaoh_Atem: ... as I just wrote :)\n<kyrofa> cjwatson, but not unreasonably so\n<Pharaoh_Atem> well, you want it to, doesn't mean that's actually planned :P\n<kyrofa> cjwatson, sure, no problem at all\n<Pharaoh_Atem> last time I talked to anyone about LP, they said the project is effectively dead :/\n<kyrofa> But I appreciate the heads up\n<cjwatson> Pharaoh_Atem: they were lying\n<cjwatson> or misinformed\n<kyrofa> Pharaoh_Atem, it's a huge part of our infra\n<cjwatson> that sort of thing makes me quite cross because it erases e.g. my work\n<Pharaoh_Atem> kyrofa: plenty of people run on dead projects :)\n<Pharaoh_Atem> cjwatson: it gets said *a lot*\n<cjwatson> Pharaoh_Atem: turns out that porting three-quarters of a million lines of Python with 200 dependencies to Python 3 is a ton of work, and when it has to be fitted around the edges of feature work, that's tough\n<Pharaoh_Atem> X_X\n<Pharaoh_Atem> it'll be impressive at the end :)\n<kyrofa> cjwatson, 200? That's all?\n<cjwatson> Pharaoh_Atem: it's significantly less funded than it used to be, certainly, but it is not dead and if you're hearing that I'd appreciate correcting the misapprehensions\n<Pharaoh_Atem> kyrofa: dude, GitLab has almost 600 dependencies\n<Pharaoh_Atem> you should be glad LP only has 200\n<kyrofa> Pharaoh_Atem, I know, I wasn't being sarcastic, I'm genuinely surprised\n<cjwatson> kyrofa: last exact count was 208 I think\n<cjwatson> though that's not counting .deb-packaged deps\n<Pharaoh_Atem> cjwatson: the last couple of times I've reported LP bugs, people have messaged me to say to not bother\n<cjwatson> bah\n<Pharaoh_Atem> so *shrugs*\n<Pharaoh_Atem> sorry\n<cjwatson> next time please tell me who they are so I can correct them\n<Pharaoh_Atem> will do\n<cjwatson> possibly just by fixing the bug in question :P\n<kyrofa> Hahaha\n<cjwatson> if they're Canonical people, then I think it's actually really unprofessional\n<Pharaoh_Atem> yeah, it was definitely Canonicalers\n<Pharaoh_Atem> last year or so\n<Pharaoh_Atem> and again after I filed this: https://bugs.launchpad.net/launchpad/+bug/1678486\n<mup> Bug #1678486: Enable watching Red Hat Bugzilla bugs <Launchpad itself:New> <https://launchpad.net/bugs/1678486>\n<cjwatson> I didn't notice that, but will look into the history\n<Pharaoh_Atem> the other time recently was when I asked about some of the incorrect project associations in LP\n<Pharaoh_Atem> I was told that no one maintains those and there's nothing anyone can do about it\n<cjwatson> That's not really about the LP codebase; those were always designed (rightly or wrongly) to be gardened by the community\n<Pharaoh_Atem> for example, the rpm5 guys hijacked the rpm registration on LP: https://launchpad.net/rpm\n<cjwatson> Pretty much anyone can change them, but the flip side is that pretty much anyone can change them back\n<Pharaoh_Atem> which means it's impossible to glue upstream rpm bugs to downstream issues\n<cjwatson> Oh, you don't mean the project/package associations, you mean metadata on projects?\n<Pharaoh_Atem> yeah\n<Pharaoh_Atem> as an example, this: https://bugs.launchpad.net/rpm/+bug/1475755\n<mup> Bug #1475755: rpmbuild auto provides not listing shared libraries <RPM:Invalid> <https://launchpad.net/bugs/1475755>\n<cjwatson> Somebody must've specifically asked for that\n<cjwatson> Honestly I think it might be best to register a new project name for upstream rpm\n<cjwatson> Or we could fight it out with ~rpm5 to get the project renamed to rpm5\n<Pharaoh_Atem> that's hard, since the \"rpm\" name is tied to the rpm package and all the tooling\n<cjwatson> The project name in Launchpad can't possibly be\n<cjwatson> I wasn't suggesting renaming rpm upstream ...\n<cjwatson> Just LP's view of it\n<Pharaoh_Atem> ah\n<Pharaoh_Atem> well, if the current \"RPM\" is renamed to RPM5 and kicked out of the associations, that'd fix it\n<cjwatson> Anyway, doesn't sound like you asked anyone who actually knew how this stuff is handled\n * Pharaoh_Atem shrugs\n<Pharaoh_Atem> I don't know anything\n<Pharaoh_Atem> all I know is what people tell me\n<Pharaoh_Atem> which apparently is 120% wrong :)\n<cjwatson> Can you (get somebody with suitable authority to) file a ticket on https://answers.launchpad.net/launchpad/+addquestion about the rpm issues with as much detail as possible?\n<cjwatson> It may take some archaeology to sort out what's been happening\n<Pharaoh_Atem> I can try\n<cjwatson> thanks\n<Pharaoh_Atem> no promises, as most of the rpm guys just want to stay the fuck away from rpm5 maintainer\n<Pharaoh_Atem> he's kind of a toxic asshole\n<cjwatson> well, LP by policy wants to stay away from that sort of thing, it's not our business; we just want to have a semi-reasonable modelling of what things are called\n<Pharaoh_Atem> yeah\n<cjwatson> Pharaoh_Atem: oh, re \"you want it to, doesn't mean that's actually planned\" - I landed a bunch of branches just today making concrete progress towards it, even if it does feel a bit drop-in-the-ocean sometimes :)\n<cjwatson> (lots of \"from __future__ import absolute_import, print_function, unicode_literals\" and associated fixups)\n<sergiusens> cjwatson and kyrofa snapcraft is already on pypi and yes we will split the package out as a stretch goal\n<kyrofa> sergiusens, you missed it: needs to be python2\n<kyrofa> Can't be a stretch goal :)\n<sergiusens> It can still be stretch.\n<niemeyer> cachio: Stop one in progress? snap abort\n<niemeyer> cachio: Prevent it from even getting started?  schedule the refresh\n<cachio> niemeyer, yes, testing that, because wait of the auto refresh is taking so long\n<niemeyer> cachio: The --last parameter of abort may come in handy\n<cachio> niemeyer, well the --last is not present inthe stable version so it makes the script fail\n<niemeyer> cachio: I'm pretty sure it is\n<niemeyer> cachio: It's been added a long while ago\n<cachio> niemeyer, https://paste.ubuntu.com/25774590/\n<cachio> this stable release is from mack I guess\n<cachio> march\n<niemeyer> cachio: lol\n<niemeyer> cachio: I'm sure *some day* stable didn't have it :)\n<cachio> niemeyer, :) sadly, np, I'll continue working with the change id instead\n<facubatista> sergiusens, push metadata to the store: https://github.com/snapcore/snapcraft/pull/1634\n<mup> PR snapcraft#1634: Push metadata to the Store <Created by facundobatista> <https://github.com/snapcore/snapcraft/pull/1634>\n<mup> PR snapcraft#1634 opened: Push metadata to the Store <Created by facundobatista> <https://github.com/snapcore/snapcraft/pull/1634>\n#snappy 2017-10-20\n<elopio1> snappy-m-o autopkgtest 1630 ubuntu:xenial:integration\n<snappy-m-o> Computer says nooo. See logs for details:\n<snappy-m-o>  Command '['/tmp/tmp5u8uatg8/retry_autopkgtest.sh', '1630', 'ubuntu:xenial:integration']' returned non-zero exit status 1\n<elopio1> snappy-m-o autopkgtest 1630 xenial:amd64:integration\n<snappy-m-o> elopio1: I've just triggered your test.\n<zyga-ubuntu> good morning\n<mup> PR snapd#4060 opened: interfaces: clean system apparmor cache on core device <Created by mvo5> <https://github.com/snapcore/snapd/pull/4060>\n<mvo> Chipaca: hey, good morning. how are you? a quick question, currently if you ddo \"snap install foo; snap refresh --edge foo; snap revert foo\" afterwards you have foo from stable but you still track edge. I was wondering if that is something that users expect, i.e. if we violate the principle of least surprise here\n<Chipaca> mvo: I don't know. Maybe?\n<Chipaca> mvo: but mostly, no\n<Chipaca> mvo: \"snap refresh --channel foo bar\" is two operations: \"snap switch --channel foo bar && snap refresh bar\"\n<Chipaca> mvo: snap revert just blacklists current and goes back to the previous revision, it does nothing around switch\n<Chipaca> mvo: if you're on stable and \"snap refresh --beta bar\" and beta has the same revision as stable, you're saying a user would expect snap revert to .... what?\n<Chipaca> mvo: mostly, if their mental model is wrong, we need to see why and address that; i think revert's behaviour is relatively well defined\n<Chipaca> (relatively being about flags that should be per revision but aren't)\n<mvo> Chipaca: thanks, thats fine, was mostly wondering\n<Chipaca> wrt how to fix that, we could make revert comment\n<Chipaca> not sure we currently have enough info to do so, but we could\n<Chipaca> something like \u00e2\u0080\u009creverted \u00e2\u0080\u0098foo\u00e2\u0080\u0099 to rev 232 (in channel stable), but still tracking beta\u00e2\u0080\u009d\n<Chipaca> not sure that wording in particular helps, but something like that?\n<mvo> Chipaca: aha, nice, I think that that would be a nice improvement\n<Chipaca> I suddenly have polkit-enabled snapd and it's magic\n * Chipaca hugs jamesh \n<jamesh> Chipaca: there's still more work to do, but the parts landed in 2.28 are probably most noticeable\n<Chipaca> mvo: we _do_ have the info to output that message\n<Chipaca> jamesh: is there / should there be a way for it to cache my password though?\n<Chipaca> ah, it is\n<Chipaca> just per op\n<Chipaca> ok\n<mvo> Chipaca: we show we reverted to what version but we don't show any channel info afaict\n<Chipaca> ah no it isn't\n<Chipaca> hm\n<Chipaca> the flow for login is weird\n<Chipaca> it asks for the passwords in the reverse order than before\n<Chipaca> mvo: correct\n<Chipaca> mvo: but we do store the channel from which we got each revision\n<jamesh> Chipaca: the policy is controlled by /usr/share/polkit-1/actions/io.snapcraft.snapd.policy plus and pkla files that modify the policy\n<jamesh> Chipaca: the policy should be auth_admin_keep for active users, so I'm not sure why that isn't happening\n<Chipaca> jamesh: \u00e2\u0080\u009cOperator of unix-session:c4 successfully authenticated as unix-user:john to gain TEMPORARY authorization for action io.snapcraft.snapd.login for unix-process:31007:75416645 [snap login jlenton@gmail.com] (owned by unix-user:john)\u00e2\u0080\u009d says the log\n<jamesh> Chipaca: the intent of the policy is to let an active user (i.e. logged in locally and without the screen locked) retain authorization, and require others to enter password every time\n<jamesh> I'm not sure why that isn't working\n<Chipaca> jamesh: is that just not working for me, or do you also see it?\n<jamesh> Chipaca: it seems to ask every time for me too.\n<jamesh> something to investigate, sure.\n<Chipaca> ok\n<mup> PR snapd#4061 opened: daemon, store: forward SSO invalid credentials errors as 401 Unauthorized responses <Created by jhenstridge> <https://github.com/snapcore/snapd/pull/4061>\n * kalikiana coffee break\n<cjwatson> sergiusens: can you elaborate on your comment that it can still be a stretch goal?  I don't see how we can do this without 2/3 bilingual parser code, and making all of snapcraft 2/3 bilingual sounds like considerably more work than splitting out the parser bits ...\n<cjwatson> (I don't want to dictate exactly how you do it, just making our reqs clear)\n<mup> Bug #1725208 opened: missing interface to exec cc <snapd-interface> <Snappy:New> <https://launchpad.net/bugs/1725208>\n<mup> PR snapd#4062 opened: cmd/snap: warn when a snap is not from the tracking channel <Created by chipaca> <https://github.com/snapcore/snapd/pull/4062>\n<Chipaca> mvo: ^\n<jjohansen> mvo: sorry, for the delay I was looking for the patch I had started years ago to do the profile hashing for cache consistency, it wasn't were I thought it was so it took me a while to find it\n<jjohansen> It looks like its 80-90% done but doesn't apply cleanly against the current tree\n<mvo> Chipaca: nice!\n<mvo> jjohansen: can I help in some way?\n * zyga-ubuntu -> afk, need a coffee\n<mvo> jjohansen: thanks for getting back to me :)\n<jjohansen> I'll refresh it, and poke at it a little more, at a minimum I'll kick it over to you, but I might play with it this weekend\n<mvo> zyga-ubuntu: for when you are back, is it just me or are the gnome-shell extension not really working? I tried to add a clock with times from different timezones and nothing works and its all dubious :/\n<mvo> jjohansen: great, thanks!\n<jjohansen> mvo: so basically, yeah fast hashes are good enough, just hashing the timestamp would be a little faster, and might be sufficient\n<mvo> jjohansen: great! there is no real rush, so I'm happy to wait until after the weekend. but I would really like to get this upstream fixed to avoid that we run into this again in 1-2y when we change something structual again :)\n<mvo> jjohansen: and I'm happy to help, just to be clear.\n<jjohansen> I like help :)\n<zyga-ubuntu> mvo: could be just lost in transition, I switched to my phone for stuff like that\n<mvo> zyga-ubuntu: aha, ok. yeah, the whole extensions story feels very weak, none of the ones I tried worked\n<zyga-ubuntu> mvo: I tried one that did work just now but it was ugly\n<mvo> zyga-ubuntu: and its super obscure how to add/manage them, apparently via the browser and a local service\n<mvo> zyga-ubuntu: which one was it?\n<zyga-ubuntu> https://extensions.gnome.org/extension/605/multiclock/ this one\n<zyga-ubuntu> but now that I try again I get an error\n<mvo> zyga-ubuntu: aha, this works indeed\n<mvo> zyga-ubuntu: anyway, not important\n<mvo> zyga-ubuntu: just annoying, I really liked my unity clock that told me what time .br .us etc have\n<zyga-ubuntu> mvo: yeah, I was using it too\n<zyga-ubuntu> mvo: as I said I switched to my phone for that, more consistency in features and more longevity\n * mvo nods\n * mvo nods sadly\n<Chipaca> \"oh boo hoo i cut myself on the bleeding edge with the big warning and the flashing lights\"\n * Chipaca grins evily\n<zyga-ubuntu> Chipaca: and the sign said \"fewer features, come right in\"\n<Chipaca> zyga-ubuntu: did the spinning blades around the entrance not give you a hint?\n<zyga-ubuntu> Chipaca: the conveyor belt was fused in the \"fast forward\" mode so like everyone else, I flew right in\n<ogra_> zyga-ubuntu, you get that wrong, the \"fewer features\" thing is a new feature ;)\n<Chipaca> ubunteros have been complaining about losing features since 6.06 at least\n * Chipaca included\n<zyga-ubuntu> http://images.uncyc.org/commons/4/4f/Gnomehint.png\n * zyga-ubuntu is sorry about this and gets back to work\n<Chipaca> zyga-ubuntu: sounds about right\n<zyga-ubuntu> mvo: niemeyer suggested I work with sergio on centralied package installation, do you know where that lives?\n<mvo> zyga-ubuntu: I get lunch now, but we can talk about this afterwards. its in prepare.sh I would assume\n<zyga-ubuntu> mvo: thank you, enjoy your lunch :)\n<zyga-ubuntu> cachio: hey :)\n<zyga-ubuntu> cachio: I just asked about something :)\n<zyga-ubuntu> 13:29 < zyga-ubuntu> mvo: niemeyer suggested I work with sergio on centralied package installation, do you know where that lives?\n<cachio> zyga-ubuntu, hey\n<cachio> zyga-ubuntu, yes, on minute\n * ogra_ notes that #3958 starts to have more traffic than most mailing lists he is subscribed to :P\n<mup> PR #3958: many: add support for /home on NFS <Created by zyga> <https://github.com/snapcore/snapd/pull/3958>\n<cachio> zyga-ubuntu, https://github.com/snapcore/spread-images/pull/9\n<mup> PR spread-images#9: Install dependencies on the images <Created by sergiocazzolato> <https://github.com/snapcore/spread-images/pull/9>\n<zyga-ubuntu> cachio: so this will take over the regular installation logic?\n<Chipaca> do we have the 'debug build' feature enabled in our travis?\n<zyga-ubuntu> cachio: can you please add nfs-kernel-server there\n<zyga-ubuntu> Chipaca: what does that feature do, out of curiosity?\n<Chipaca> zyga-ubuntu: lets us ssh into it\n<Chipaca> https://docs.travis-ci.com/user/running-build-in-debug-mode/\n<cachio> zyga-ubuntu, sure\n<zyga-ubuntu> cachio: thank you :-)\n<zyga-ubuntu> ohhh\n<zyga-ubuntu> shiny\n<cachio> zyga-ubuntu, we are not currently installing nfs-kernel-server\n<cachio> should I install it just in ubuntu?\n<zyga-ubuntu> cachio: yes, that will be fine, thank you\n<zyga-ubuntu> ogra_: indeed, that PR has exactly 100 comments now :)\n<ogra_> so crazy\n<zyga-ubuntu> ogra_: review it, you will get 101th comment\n<cachio> zyga-ubuntu, the test on linode failed, I am rexecuting\n<cachio> once it passes I'll push the change\n<zyga-ubuntu> cachio: thank you\n<cachio> zyga-ubuntu, change added\n * kalikiana break\n<sergiusens> good morning!\n<sergiusens> cjwatson let me rephrase privately\n<zyga-ubuntu> hey sergiusens\n<sergiusens> zyga-ubuntu how is it going?\n * sergiusens is procrastinating on presentations he needs to get done\n<zyga-ubuntu> sergiusens: working on layous and new mount features\n<zyga-ubuntu> sergiusens: sleepy morning, dind't sleep well but now it's good (feels like 10AM now :)\n<sergiusens> zyga-ubuntu and yet you are almost EOD :-P\n<zyga-ubuntu> no no, I'll stay now\n<zyga-ubuntu> pstolowski: I ran into a issue sometimes, can you have a look at this and tell me if it rings any bells\n<zyga-ubuntu> http://pastebin.ubuntu.com/25779014/\n<zyga-ubuntu> I'll debug, just want to see if you've seen it\n<pstolowski> zyga-ubuntu, wow, i've never seen this kind of issue\n<zyga-ubuntu> pstolowski: thanks, maybe it's an impact of my work :/\n<zyga-ubuntu> hah\n<zyga-ubuntu> qemu:ubuntu-16.04-64 .../tests/main/interfaces-hooks# cat /var/lib/snapd/mount/snap.basic-iface-hooks-consumer.fstab\n<zyga-ubuntu> /snap/basic-iface-hooks-producer/x1/etc /snap/basic-iface-hooks-consumer/x1/initialtarget none bind,ro 0 0\n<mup> Issue snapcraft#1437 closed: cross-compile i386 kernel <designed> <Created by sergiusens> <Closed by sergiusens> <https://github.com/snapcore/snapcraft/issue/1437>\n<mup> PR snapcraft#1613 closed: cross compilation: enable cross compilation of i386 kernel on x86-64 \u00e2\u0080\u00a6 <Created by piso77> <Merged by sergiusens> <https://github.com/snapcore/snapcraft/pull/1613>\n<zyga-ubuntu> qemu:ubuntu-16.04-64 .../tests/main/interfaces-hooks# ls -ld /snap/basic-iface-hooks-producer/x1/etc\n<zyga-ubuntu> ls: cannot access '/snap/basic-iface-hooks-producer/x1/etc': No such file or directory\n<zyga-ubuntu> qemu:ubuntu-16.04-64 .../tests/main/interfaces-hooks# ls -ld /snap/basic-iface-hooks-consumer/x1/initialtarget\n<zyga-ubuntu> ls: cannot access '/snap/basic-iface-hooks-consumer/x1/initialtarget': No such file or directory\n<zyga-ubuntu> pstolowski: so now those get created\n<zyga-ubuntu> pstolowski: did you mean for basic-iface-hooks-producer/ to have an $SNAP/etc directory?\n<pstolowski> zyga-ubuntu, let me check, i need to refresh my memory\n<zyga-ubuntu> pstolowski: it's specified in snap.yaml but not in the tree\n<zyga-ubuntu> pstolowski: maybe it needed a fake file to keep the directory around?\n<pstolowski> zyga-ubuntu, ok. the test doesn't are about what's in the filesystem. it just cares about reading the attributes of interface\n<zyga-ubuntu> pstolowski: ok, I'll probably tweak the test to contain more realistic content interface use\n<pstolowski> zyga-ubuntu, can be any other interface if you can find one that has attributes and can be used instead in the test, although afair i had some issues with that and found out that content interface could be \"abused\" for this test\n<zyga-ubuntu> pstolowski: well, you could use the network interface\n<zyga-ubuntu> pstolowski: and then add any set of attributes inside\n<zyga-ubuntu> (or any other simple interface)\n<zyga-ubuntu> ah wait, you need the pair\n<zyga-ubuntu> hmm\n<elopio1> sergiusens: kyrofa kalikiana here is my task breakdown: http://pad.ubuntu.com/snapcraft-18-04-elopio\n * zyga-ubuntu -> lunch\n<mup> PR snapd#4063 opened: tests: add new kernel refresh/revert test for spread-cron <Created by mvo5> <https://github.com/snapcore/snapd/pull/4063>\n<mup> PR snapd#4058 closed: interfaces: reduce duplicated code in interface tests mocks <Created by stolowski> <Merged by mvo5> <https://github.com/snapcore/snapd/pull/4058>\n<zyga-ubuntu> mvo: hey, can you look at https://objectstorage.prodstack4-5.canonical.com/v1/AUTH_77e2ada1e7a84929a74ba3b87153c0ac/autopkgtest-xenial-snappy-dev-image/xenial/amd64/s/snapd/20171020_131659_7c6aa@/log.gz\n<zyga-ubuntu> mvo: one test failed there\n<mvo> zyga-ubuntu: sanity timeout expired: Interrupted system call\n<zyga-ubuntu> mvo: this says that snap-confine held a lock for more than 3 seconds\n<zyga-ubuntu> mvo: (we have a sigalrm being sent to us)\n<mvo> zyga-ubuntu: is it just a very slow vm? can we try 12s?\n<zyga-ubuntu> mvo: I'd rather not change that amount yet, I just want to raise this in case there's something funny going on and we break in some D state in the kernel\n<zyga-ubuntu> mvo: I'll monitor tests for this\n<mvo> zyga-ubuntu: fair enough\n<zyga-ubuntu> mvo: it could be a slow VM but we usually grab this lock for tiny fractions of a second\n<mvo> zyga-ubuntu: is it in all tests? i have seen it before I think but not consistently\n<zyga-ubuntu> mvo: no, I just saw it now for the first time\n * zyga-ubuntu -> fetch water\n<zyga-ubuntu> man\n<zyga-ubuntu> I go to fetch some water into canisters\n<zyga-ubuntu> just to find they finished repairs and it's back on :)\n * zyga-ubuntu breaks, I'll ran into one problem and I need to think about it\n<mup> PR snapd#4064 opened: tests: new test for hardware-random-control interface <Created by sergiocazzolato> <https://github.com/snapcore/snapd/pull/4064>\n<niemeyer> mvo: The container based travis is flowing\n<niemeyer> mvo: For awareness, there were two different issues.. using the C language meant the checkout from git was done differently and paths didn't match anymore ($GOPATH semantics was gone).. then, the removal of the install section meant Travis cooked up a default install section for us while trying to help, but that broke things out as well\n<niemeyer> mvo: I'll write those notes in the forum so we don't lose it\n<niemeyer> Will just wait for tests to pass\n<mup> PR snapd#3960 closed: travis: switch to container based test runs <Created by mvo5> <Merged by niemeyer> <https://github.com/snapcore/snapd/pull/3960>\n<niemeyer> mvo: https://forum.snapcraft.io/t/ci-on-travis-now-using-containers/2547\n<mvo> niemeyer: nice, thanks for handling this\n<niemeyer> mvo: My pleasure, let's see if that kills the delays we've been observing\n<bashfulrobot> Are questions better in here, or in rocketchat?\n<kyrofa> bashfulrobot, here nowadays\n<bashfulrobot> ok, great.\n<kyrofa> Man, I do not know The Twitter. I never remember to make sure NOT to start a non-reply with a @\n<bashfulrobot> soooo.... for 18.04 I would really like tio use snaps for applets in Ubuntu Budgie. Now with V11 in dev, but no ETA, we are staying open at this point if it will be V10 vs V11. But with V10, applets have to reside in a certain folder location. Do snaps at this point have a mechanism to accomplish this? I know with confimenemtn, etc, this goes COMPLETELY against what snaps are...\n<popey> ogra_: have you attempted to get your nwjs snap working strictly? https://github.com/ogra1/nwjs\n<kyrofa> bashfulrobot, well, what ARE applets for budgie?\n<bashfulrobot> Essentially plugins and added features for teh Budgie Desktop.\n<kyrofa> bashfulrobot, so, like, .so ?\n<bashfulrobot> usually added to the panels, etc.\n<bashfulrobot> They can be written (currently) in vala, pythin and c++\n<nacc> are they themselves applications?\n<nacc> (things that run)\n<bashfulrobot> They do not\n<bashfulrobot> run on their own.\n<kyrofa> bashfulrobot, i.e. you wouldn't declare any `apps` for them?\n<bashfulrobot> kyrofa - they have to be run and written in a certain way to be consumed by the desktop\n<kyrofa> In that case, they aren't technically confined at all\n<nacc> kyrofa is probably a better expert here, then, but why is a snap a good idea for that?\n<bashfulrobot> nacc The idea is to make it easier for 3rd party people to package. Auto update. Solus in theory could take advantage of them too. We also try to push our core applets into Debian, so that requirement is moot in snaps.\n<nacc> bashfulrobot: i understand all that, but it does't sound like what you are packaging is actually a snap :)\n<nacc> (or at leasta  confined application in a snap)\n<bashfulrobot> Now you could be compeltely correct and maybe a snap is not the proper mechanism for this. But for the above reasons it \"seemed\" like it could be a good option (unless there is a reason technically to not do this).\n<bashfulrobot> nacc - this is true\n<bashfulrobot> It is kind of an odd edge case\n<bashfulrobot> I guess more so trying to use it as a delivery mechanism.\n<nacc> bashfulrobot: i'm curious what kyrofa things -- i have wondered how 'glue' fits into snaps myself. Things that are consumed by other applications. Perhaps what you want is to be a part?\n<kyrofa> Heh\n<bashfulrobot> exactly\n<kyrofa> Confinement is really only one aspect of snaps. There are a lot more, too\n<bashfulrobot> And as mentioned - I very well may be barking up the wrong tree where.\n<kyrofa> Bundling, updates, kind of the generic delivery method\n<bashfulrobot> But wanted to validate and see what the snap ecosystem thought of this.\n<kyrofa> bashfulrobot, nah, I hear where you're coming from, but I'll admit it's a bit unconventional\n<kyrofa> bashfulrobot, let's think this through\n<bashfulrobot> kryofa for sure. Has this type of thing come up before in discussion/\n<bashfulrobot> ?\n<kyrofa> Not in my experience, but I'm hardly the only snap dev\n<bashfulrobot> ah ha for sure\n<kyrofa> So: you have a specific directory where \"things\" need to be. What are those things? How are they called into?\n<kyrofa> e.g. does each applet have a single entry point?\n<bashfulrobot> disclosure... I am more of the packager, and not so much a developer of these applets. so I have to be cautious of what I say here so as to not stick my foot up my arse.\n<kyrofa> bashfulrobot, haha, everyone is an expert relative to their colleagues. In this room, I suspect you're the expert ;)\n<bashfulrobot> well a foot up the arse is uncomfortable either way. :-p\n<kyrofa> Yeah that sorta sucks\n<kyrofa> bashfulrobot, we can start on the other end of the discussion, and I can list possibilities\n<bashfulrobot> awesome. I'm just reviewing a few applets here to be clear on myanswer for your question.\n<kyrofa> So: snaps are a single squashfs image, as you know. They get mounted into e.g. /snap/snapname/version\n<bashfulrobot> yup.\n<kyrofa> A snap containing an applet would contain the applet itself as well as any of its dependencies\n<kyrofa> First question: would budgie itself be one of those dependencies?\n<kyrofa> Ignoring that question, I'll continue\n<kyrofa> Having applets in /snap isn't useful. You need some way to get the applets into the \"applet dir\" what is that, in /var somewhere?\n<bashfulrobot> Well budgie itself is needed, but is not a snap.\n<kyrofa> What if you made a symlink back to the applet in the snap?\n<bashfulrobot> That was a thought I had. But was concerned that it was a bit of tom folery and hacky.\n<bashfulrobot> fooler*\n<bashfulrobot> foolery*\n<kyrofa> Since you'd be using the snap solely as a delivery method, it's really just a lump of libs and assets\n<bashfulrobot> yeah\n<bashfulrobot> exactly that\n<kyrofa> You'd need to set up the LD_LIBRARY_PATH such that those things are found\n<kyrofa> It could also use the budgie on the system if you strip it out of the applet snaps\n<bashfulrobot> that is hte way it would need ot be today.\n<kyrofa> Yeah, I think you could make this happen. It does sound a bit hacky\n<bashfulrobot> kyrofa - also to loop back to an earlier question...\n<bashfulrobot> That you had\n<bashfulrobot> Each applet is a typical libpeas based applet - i.e. a .plugin file and and a module file. Both live in /usr/lib/budgie-desktop/plugins/applet-name/applet.plugin & applet_module\n<bashfulrobot> Each applet can have multiple instances - UUID for each applet.\n<kyrofa> So you'd need to symlink both of those out of the snap?\n<xan_IT> hi, can i ask noob question about snap packages inside ubuntu here?\n<kyrofa> xan_IT, always :)\n<bashfulrobot> kyrofa - yeah that is my concern (hacky). I don't want to do this \"just to do it\", but rather if it makes sense. And if it was a situation that the team had either looked at, or considered (glue code of sorts).\n<kyrofa> bashfulrobot, are they found recursively? e.g. could you symlink a dir?\n<kyrofa> bashfulrobot, I think it's interesting, snaps solve some of the problems you'd need to solve yourself otherwise\n<kyrofa> bashfulrobot, it's probably going to come down to weighting the pros and cons there\n<xan_IT> 1) snap packages are in sandbox area, true? so if i install same packages throught deb and snap, second will not overwrite first. true?\n<kyrofa> bashfulrobot, might be worth a prototype\n<bashfulrobot> yeah for sure.\n<bashfulrobot> I could work towards one.\n<xan_IT> 2) there is like https://packages.ubuntu.com/ for snap??\n<kyrofa> xan_IT, you're mixing terminology a bit, but yeah: when you install a snap, it typically doesn't mess with any debs\n<xan_IT> kyrofa what i mixing ? i want hunderstands :D\n<kyrofa> bashfulrobot, you know where to find us if you run into interesting issues there\n<bashfulrobot> xan_IT sandboxed yes, but if you use classic confinement, way more access (almost no confinement if I understand correctly)\n<roadmr> xan_IT: https://uappexplorer.com/snaps has a list of available snaps\n<bashfulrobot> xan_IT deb will not overwrite snap. snap is in a differnt location and a squashfs\n<kyrofa> xan_IT, when you say \"sandbox\" you're mostly talking about confinement, but what you seem to be asking is: \"will installing a snap interfere with a deb of the same thing\"\n<xan_IT> thz, so snap packages can access to all file system ?\n<nacc> xan_IT: it depends on the confinement of the snap\n<bashfulrobot> kyrofa - I just remembered. We did do sonme testing with symlinks....\n<bashfulrobot>  I know if you symlink /usr/lib/budgie-desktop/plugins/applet-name to somewhere else, then yes budgie-desktop is happy\n<bashfulrobot> BUT\n<xan_IT> nacc ?\n<bashfulrobot> updates broke because the link is tied to the version number\n<kyrofa> bashfulrobot, did you try symlinking through /snap/snapname/current ?\n<bashfulrobot> so I guess the snap YAML would need logic to recreate on each update\n<nacc> xan_IT: https://docs.snapcraft.io/reference/confinement\n<kyrofa> bashfulrobot, another symlink\n<kyrofa> snapd maintains that one\n<bashfulrobot> ahh - did not\n<bashfulrobot> Will ahve to try that\n<kyrofa> bashfulrobot, that could work really nicely actually. Snaps can be disabled as well, which removes that symlink (but leaves the snaps in place)\n<kyrofa> bashfulrobot, which would break the symlinks, thus ensuring those applets aren't loaded\n<nacc> (another use-case for current is that, e.g., you can find the core snap always at /snap/core/current)\n<nacc> that has some use for me, at least\n<xan_IT> so there is only 1 repository for snaps for all distributions?\n<kyrofa> xan_IT, indeed. Since snaps are designed to work on multiple distributions, there's not really a need for a store for each\n<bashfulrobot> kyrofa well you have given me something to think about. And that the path I was looking at is the way to do it today. I would be interested if more of this type of discussion pops up and what the overall community thinks of this methind and delivering something like a plugin via snap.\n<kyrofa> bashfulrobot, well, there are multiple facets to that\n<bashfulrobot> xan_IT just the store. Global to all distros that use snaps\n<kyrofa> bashfulrobot, I think we definitely want to support shipping plugins as snaps, the question is how they're consumed\n<kyrofa> bashfulrobot, we have a bug for a new interface for this\n<xan_IT> last question: who update snap packages?\n<kyrofa> bashfulrobot, but that requires the consumer to be a snap\n<nacc> yeah, it's itneresting. a pluginn is like between a part and app\n<nacc> xan_IT: the snap owner\n<kyrofa> bashfulrobot, having the consumer be not snapped is a different ballgame\n<kyrofa> Because interfaces don't help us\n<xan_IT> kyrofa, author of app, or a official mantainer for all packages?\n<bashfulrobot> right meaning the deps (like budgie desktop in this case)?\n<kyrofa> bashfulrobot, yep\n<bashfulrobot> right - yeah - somethign to consider for sure.\n<kyrofa> bashfulrobot, so yeah. Go snap that. You'll be done tomorrow, I expect\n<xan_IT> kyrofa, simply like debian repository or like play store/appstore ??\n<kyrofa> bashfulrobot, (kidding)\n<bashfulrobot> kyrofa - it's already done!\n<kyrofa> kyrofa, more like the play store\n<bashfulrobot> HA HA\n<kyrofa> Wow, sorry, that was for you xan_IT\n<kyrofa> Ha!\n<xan_IT> :)\n<kyrofa> xan_IT, there is no central packaging authority in the snap world\n<kyrofa> xan_IT, which means it's very easy to get YOUR app to YOUR users. Just release your update\n<kyrofa> xan_IT, in a more traditional packaging world this can be dangerous because you can break dependents, or your dependencies can break you\n<kyrofa> xan_IT, but since snaps bundle dependencies, we can skirt a lot of those issues\n<kyrofa> xan_IT, I don't mean to say that's a silver bullet, there are obviously tradeoffs there\n<bashfulrobot> xan_IT another perk, can hook up your github repo to build on push, etc too. See https://build.snapcraft.io/ and  https://docs.snapcraft.io/build-snaps/ci-integration\n<bashfulrobot> kyrofa - thanks a ton for all of your help and time! Excellent info as always!\n<kyrofa> bashfulrobot, yeah man, any time\n<bashfulrobot> I'll work on this and post back if I have success!\n<xan_IT> thz to all, so is like a store inside linux\n<xan_IT> or like npm\n<kyrofa> bashfulrobot, would also like to hear about utter and compete failure\n<bashfulrobot> ok, donlt you worry, my sorry arse will likely be back with questions!\n<bashfulrobot> hahah\n<kyrofa> xan_IT, yeah, kinda. Although what happens if you're distributing an npm package that has a system dependency?\n<bashfulrobot> kyrofa ^^\n<kyrofa> bashfulrobot, good\n<xan_IT> kyrofa i think npm not manage system dependency\n<kyrofa> xan_IT, right. So even with npm, you have to tell your users \"install these dependencies... now install npm... now install my package\"\n<kyrofa> xan_IT, with a snap, it's `snap install my-package` which contains npm, those dependencies, and your package\n<xan_IT> kyrofa i understands, is like npm++ :)\n<kyrofa> Hahaha, sure\n<xan_IT> :)\n<xan_IT> i need to go out, thz to all, i love all of you  :)\n<kyrofa> xan_IT, thanks for stopping by!\n<kyrofa> snappy-m-o, autopkgtest 1583 xenial:amd64\n<snappy-m-o> kyrofa: I've just triggered your test.\n<kyrofa> elopio1, I need your python and testing expertise\n<kyrofa> elopio1, help me brainstorm bug #1717921\n<mup> Bug #1717921: CI: BlockingIOError about 50% of the time <Snapcraft:New> <https://launchpad.net/bugs/1717921>\n<kyrofa> It's killing me\n * Pharaoh_Atem sighs\n<cyphermox> ogra_: can you help verifying 1712224 ?\n<cyphermox> bug 1712224\n<mup> Bug #1712224: netplan should not try to unbind brcmfmac (like brcmfmac-sdio) <patch> <verification-needed> <verification-needed-xenial> <verification-needed-zesty> <nplan\n<mup> (Ubuntu):Fix Released by cyphermox> <nplan (Ubuntu Xenial):Fix Committed by cyphermox> <nplan (Ubuntu Zesty):Fix Committed> <https://launchpad.net/bugs/1712224>\n<kyrofa> elopio1, unrelated question spawned by niemeyer's forum post: are we not using docker pretty much exclusively for our tests, now? Does that make getting off the VM system a possibility for us as well?\n<kyrofa> Or wait... maybe we only use docker to build the snap\n<bashfulrobot> refresh my memory $SNAPCRAFT_PART_INSTALL is reltive to what? teh snap dir?\n<kyrofa> bashfulrobot, I believe it's absolute\n<kyrofa> bashfulrobot, it's only used when building in snapcraft, and it points to that specific part's installdir\n<kyrofa> bashfulrobot, put files in there, and they'll be migrated into stage, prime, and finally the snap\n<kyrofa> bashfulrobot, that variable is not defined at runtime\n<bashfulrobot> kyrofa - thanks again!\n * bashfulrobot starting to refresh to finially finish mumble snap \n<sergiusens> bashfulrobot \\o/\n<sergiusens> kyrofa moving to docker won't help us as we need snapd; well we could move to docker with some hacks to have something running (snapd), but I don't really want to rely on that\n<sergiusens> the path to success elopio1 has layed out sounds better (dispatching though webhooks), but then we are at ground zero again with supporting our own infra\n * sergiusens heads to the train station\n<kyrofa> sergiusens, bin/snapcraft-classic still sets LD_LIBRARY_PATH\n<kyrofa> sergiusens, which I believe leaks into its calling environment, making cmake look there for libs as well\n<kyrofa> sergiusens, which on trusty results in cmake: /usr/lib/x86_64-linux-gnu/libstdc++.so.6: version `CXXABI_1.3.8' not found (required by /snap/snapcraft/x1/usr/lib/x86_64-linux-gnu/libicuuc.so.55)\n<kyrofa> Does that sound accurate?\n<kyrofa> I didn't think LD_LIBRARY_PATH was needed\n<kyrofa> I'll try blowing it away and see what happens\n<kyrofa> sergiusens, yes, that fixes things. Are you sure that LD_LIBRARY_PATH is still needed? I'm not seeing problems removing it in my limited tests\n<kyrofa> sergiusens, now I'm running into the issue that I think your PR fixes\n<kyrofa> Things are looking up in the world\n<kyrofa> sergiusens, yep, your PR officially works great\n<kyrofa> sergiusens, just built the ROS indigo snap, works great\n<kyrofa> I'm gonna propose removing the LD_LIBRARY_PATH\n<mup> PR snapcraft#1635 opened: snap: remove leaking LD_LIBRARY_PATH <Created by kyrofa> <https://github.com/snapcore/snapcraft/pull/1635>\n<bashfulrobot> sergiusens 0/\n<kyrofa> snappy-m-o, autopkgtest 1583 xenial:amd64 zesty:amd64 xenial:armhf\n<snappy-m-o> kyrofa: I've just triggered your test.\n * nacc wonders why steam isn't a snap yet\n<nacc> seems like the perfect target\n<nacc> and given that there is both an ubuntu and a valve repository, would allow some consolidation, and hopefully avoid all the breakage that ensues from people using the wrong .deb on the wrong system\n<mup> PR snapcraft#1636 opened: internal: more gracefully determine host OS <Created by kyrofa> <https://github.com/snapcore/snapcraft/pull/1636>\n<kyrofa> snappy-m-o, autopkgtest 1635 xenial:amd64\n<snappy-m-o> kyrofa: I've just triggered your test.\n<mup> PR snapcraft#1637 opened: repo: add elementaryOS (no spaces) to deb distros <Created by kyrofa> <https://github.com/snapcore/snapcraft/pull/1637>\n#snappy 2017-10-21\n<xan_IT> hi, i receive segmentation fault from snap ubuntu make\n<xan_IT> i found this, https://forum.snapcraft.io/t/segmentation-fault-in-python-snap/2218/4\n<mup> PR snapcraft#1635 closed: snap: remove leaking LD_LIBRARY_PATH <bug> <Created by kyrofa> <Merged by sergiusens> <https://github.com/snapcore/snapcraft/pull/1635>\n<kyrofa> snappy-m-o, autopkgtest 1583 xenial:amd64 xenial:armhf zesty:amd64\n<snappy-m-o> kyrofa: I've just triggered your test.\n<Son_Goku> TRIGGERED!\n<skjensen> Hi Guys, I have made a build from ogra's repository on launchpad.  The build status is successful, but where do I download the snap?\n#snappy 2018-10-15\n<mborzecki> morning\n<mborzecki> mvo: hey\n<mvo> hey mborzecki - good morning\n<mborzecki> mvo: when's the release?\n<mvo> mborzecki: 2.36~pre2 happend last friday but it looks like we need a 2.35.5 :/\n<mvo> mborzecki: why? anything important pending?\n<mborzecki> mvo: no, just checking if we could squeeze in https://github.com/snapcore/snapd/pull/5979\n<mup> PR #5979: install: don't start disabled services <Created by anonymouse64> <https://github.com/snapcore/snapd/pull/5979>\n<mvo> mborzecki: mark it for 2.36 please\n<mvo> mborzecki: and alsp please mark for squash merge to merge the cherry-pick/pr easier\n<mborzecki> mvo: marked\n<mup> PR snapd#5983 opened: interfaces/home: don't allow snaps to write to $HOME/bin (2.35) <Created by mvo5> <https://github.com/snapcore/snapd/pull/5983>\n<mvo> mborzecki: ta\n<mvo> zyga: 5974 has some comment improvement suggestions, could you do a followup with those? I will merge and pull into 2.35 so that things move here\n<mup> PR snapd#5974 closed: osutil: workaround overlayfs on ubuntu 18.10 <Created by zyga> <Merged by mvo5> <https://github.com/snapcore/snapd/pull/5974>\n<mvo> zyga: in case you didn't already, not sure if all points where addressed\n<mvo> mborzecki: jdstrand pushed a bunch of PRs that look important but he did not attach a milestone - do you happen to know what he needs? I tagged them as 2.36\n<mvo> mborzecki: but I'm not sure if we might even pull things into 2.35 (cc zyga)\n<mborzecki> mvo: i recall the one about scrubbing env on profile change, i see it's tagged for 2.36\n<zyga> re\n<zyga> good morning\n<zyga> sorry for starting late, very very rough night\n<zyga> mvo: looking at 5974\n<zyga> ah that, I need to digest those as, as we were discussing in on IRC, we were also talking in the pull request\n<zyga> mvo: I believe all the code there is correct, we can tweak the comment\n<zyga> mvo: I will look at Jamie's pr's now\n<zyga> jdrab: https://github.com/snapcore/snapd/pull/5982 this one is very important\n<mup> PR #5982: interfaces/many: conditionally use 'unsafe' with docker-support change_profile rules <Created by jdstrand> <https://github.com/snapcore/snapd/pull/5982>\n<mup> PR snapd#5983 closed: interfaces/home: don't allow snaps to write to $HOME/bin (2.35) <Created by mvo5> <Merged by zyga> <https://github.com/snapcore/snapd/pull/5983>\n<zyga> the k8s pull requests are something I was not tracking so I cannot asses those\n<pstolowski> mornings\n<mvo> zyga: thanks\n<mborzecki> zyga: pstolowski: hey\n<zyga> the unsafe PR is holly smokes long :)\n<zyga> mvo: I left some comments on https://github.com/snapcore/snapd/pull/5980#pullrequestreview-164581442 - I suspect we should rename the fields/methods to match go naming scheme but otherwise this is a very welcome improvement\n<mup> PR #5980: interfaces/apparmor: conditionally add explicit deny rules for ptrace <Created by jdstrand> <https://github.com/snapcore/snapd/pull/5980>\n<zyga> mvo: please let me know if you want to see those extra changes as additional patches in this PR directly or as a separate PR\n<mvo> zyga: ta, I have a look in a wee bit\n<zyga> British English wee bit :)\n<mvo> zyga: I don't know :) the wee as in little\n<zyga> exactly\n<zyga> that's what I meant :)\n<mvo> are there more meanings than this one?\n<zyga> not that I know of, I meant that it is specific to British English as a way to say little\n<sparkiegeek> https://en.wiktionary.org/wiki/wee#Adjective https://en.wiktionary.org/wiki/wee#Noun\n<sparkiegeek> oh, I meant to link to Etymology 2\n<zyga> lol\n<zyga> that's new :)\n<zyga> TIL wee things matter\n<zyga> pstolowski: is 5975 something we can land for 2.36?\n<zyga> it's +2 green right now\n<pstolowski> zyga: we could yes, but mvo wanted to have a look i think\n * zyga looks at k8s pull request\n<zyga> mvo: I would vote +1 on that since it makes everyday \"snap tasks\" much more understandable and accurate\n<zyga> mvo: but please do see it before merging\n<pstolowski> (let's squash merge then if we do)\n<zyga> sure, please set a tag there\n<mvo> zyga: yeah, I think its good, looking now (sorry, just had to finish the classic dimension forum post before it escapes my mind again :)\n<zyga> cool, thank you for doing that - I will gladly read it soon\n<Chipaca> good morning\n<zyga> good morning sir\n<Chipaca> zyga: are we there yet?\n<zyga> no, not quite\n<Chipaca> aww\n<mvo> pstolowski: 5975 looks great, please go ahead and squash merge it so that we can backport to 2.36\n<pstolowski> mvo: great, ty!\n<mvo> zyga: anything else we might need for 2.35.5 ? if not I will go ahead with this soon\n<zyga> mvo: I don't know of anything else but let me look at the full list of PRs\n<mup> PR snapd#5975 closed: ifacestate/hooks: only create interface hook tasks if hooks exist <Created by stolowski> <Merged by stolowski> <https://github.com/snapcore/snapd/pull/5975>\n<pstolowski> mvo: merged, shall i prepare PR for 2.36?\n<mvo> pstolowski: please do\n<pstolowski> sure\n<mvo> pstolowski: thank you\n<zyga> mvo: perhaps a subset of https://github.com/snapcore/snapd/pull/5696/files\n<mup> PR #5696: interfaces/opengl: add additional accesses for cuda <Created by anonymouse64> <https://github.com/snapcore/snapd/pull/5696>\n<zyga> where we have the extra directory but not the part that jdstrand pointed out (the mknod perm)\n<zyga> mvo: otherwise nothing else I see for 3.35.x\n<mup> PR snapd#5984 opened: ifacestate/hooks: only create interface hook tasks if hooks exist (2.36) <Created by stolowski> <https://github.com/snapcore/snapd/pull/5984>\n<mvo> zyga: thanks for double checking. I looked at 5980, it looks good, I agree with your comments about naming conventions though\n<zyga> I can push a patch to change it there and in the other PRs that are built on it\n<pstolowski> mvo, zyga ^ pr for 2.36 is up\n<mborzecki> pstolowski: did a pass on #5962\n<mup> PR #5962: ifacestate/hotplug: hotplug handlers <Complex> <Hotplug \u00f0\u009f\u0094\u008c> <Created by stolowski> <https://github.com/snapcore/snapd/pull/5962>\n<mvo> pstolowski: cool, thanks\n<mborzecki> heh github, if you search with query https://github.com/snapcore/snapd/pulls?utf8=%E2%9C%93&q=is%3Apr+is%3Aopen+%F0%9F%94%8C (using the hotplug emoji) it finds no PRs\n<pstolowski> mborzecki: thanks!\n<pstolowski> mborzecki: +1 for #5966, with one remaks (perhaps degville can help again)\n<mup> PR #5966: snap: overhaul validation error messages <Created by bboozzoo> <https://github.com/snapcore/snapd/pull/5966>\n<niemeyer> Yeah, the emojis are funny, but we should probably drop them\n<niemeyer> Morning all\n<mvo> good morning niemeyer\n<niemeyer> mvo: Yo\n<Chipaca> mborzecki: does searching by the contents of a tag find things? (doesn't work with 'complex' either)\n<mborzecki> Chipaca: probably not, seems like freetext search ignores labels\n<mvo> Chipaca: a while ago you looked into uc16 to ensure things cleanly unmount on stop/reboot, do you think you could you do the same for uc18 again?\n<Chipaca> mvo: I think I probably could :-) do you know it doesn't?\n<mvo> ppisati: did you had any luck getting to the bottom of the 4.15 pi3 b+ ethernet connection issues?\n<mvo> Chipaca: I suspect it might be :/\n<Chipaca> mvo: ok. Is there a working intel core18 i could look at?\n<mvo> Chipaca: http://people.canonical.com/~mvo/core18/\n<mvo> Chipaca: so http://people.canonical.com/~mvo/core18/core18-amd64-18-beta20180823.img.xz\n<Chipaca> thanks\n<mvo> Chipaca: should work, please do let me know if you notice anything\n<mvo> Chipaca: thank *you*\n<pstolowski> mvo: i think #5969 needs master merged, the base PR already landed\n<mup> PR #5969:  apparmor: add unit test for probeAppArmorParser and simplify code  <Created by mvo5> <https://github.com/snapcore/snapd/pull/5969>\n<mvo> pstolowski: thanks, done\n<pstolowski> thx\n<ppisati> mvo: the fix is already queued in bionic\n<mvo> ppisati: \\o/\n<mvo> ppisati: great to hear, do you have a rough eta for the snap? I guess its too much work to just do an edge build of the pi-kernel (?)\n<ppisati> mvo: as soon as the new SRU kernel is released - IIRC they cut a new kernel tomorrow, then it's 2 weeks after that\n<ppisati> mvo: but there was a respin of kernels last week, so the window might have slide a bit\n<ppisati> *slid\n<mvo> ppisati: ok. I wish we had git snapshots in the edge channel :) but I guess that is a wishlist item for another day. might actually be nice for you guys as well to get people testing/validating fixes\n<mvo> ppisati: thanks for this update!\n<mborzecki> Chipaca: i'm looking at snapshot file names, the code does not reverse the file name anywhere, so we sould be safe there wrt. parallel instances and extra _\n<Chipaca> mborzecki: yep, the filename is for the sysadmin, snapshots doesn't infer info from it\n<mborzecki> Chipaca: mhm, cool\n<Chipaca> mborzecki: only thing where it might be a problem is creating duplicate filenames, which we might not check for\n<Chipaca> mborzecki: but we use InstanceName so should be fine, afaik\n<mborzecki> Chipaca: yes, instance names are unique\n<Chipaca> i mean afaik we use instance name :)\n<Chipaca> mvo: how long does the 'resize partition' step take, usually? boot's been stuck there for a while now\n<mvo> Chipaca: probably entropy :(\n<mvo> Chipaca: just hammer at some keys\n<Chipaca> heh, that was it\n * mvo weeps a bit in the corner about this problem\n<mborzecki> heh, wonder what one will do when there's no keyboard attached\n<mborzecki> wiggle some gpios\n * Chipaca suddenly wishes for \"base: core | core18\n<Chipaca> huh\n<Chipaca> mvo: a 'snap install' got aborted by a refresh of core18; is that expected?\n<zyga> aborted?\n<zyga> can we even do that?\n<Chipaca> might've been just coincidence\n<Chipaca> 'snap tasks' say 'server misbehaving'\n<zyga> mvo: actually\n<zyga> mvo: perhaps https://github.com/snapcore/snapd/pull/5982#pullrequestreview-164628872 is a candidate for .5\n<zyga> mvo: but it is stacked on top of a pile of other things\n<zyga> so unsure\n<mup> PR #5982: interfaces/many: conditionally use 'unsafe' with docker-support change_profile rules <Created by jdstrand> <https://github.com/snapcore/snapd/pull/5982>\n<zyga> you marked that PR as targeting 2.36 so perhaps you know better\n<Chipaca> mvo: bad news: we're hitting a variant of https://github.com/systemd/systemd/issues/8155\n<mvo> zyga: I can wait for jamie to clarify\n<mvo> Chipaca: uhhh\n<Chipaca> mvo: maybe :)\n * Chipaca is still digging\n<Chipaca> but, yeah, we just see the nasty [  364.293811] systemd-shutdown[1]: Failed to wait for process: Protocol error\n<Chipaca> which seems to mean that systemd < 238\n<mvo> Chipaca: hrm, hrm, or would need to sru\n<Chipaca> yeah, systemd --version says 237\n<Chipaca> we could also backport https://github.com/systemd/systemd/pull/8429/files\n<mup> PR systemd/systemd#8429: sd-shutdown improvements <ci-fails/needs-rework \u00f0\u009f\u0094\u00a5> <merged-but-needs-fixing> <pid1> <Created by medhefgo> <Merged by keszybz> <https://github.com/systemd/systemd/pull/8429>\n<zyga> uh fun\n<zyga> (not)\n<Chipaca> mvo: but all that _really_ does is turn up the logging\n<Chipaca> bah, maybe :)\n<Chipaca> for our case it might be the only difference\n<Chipaca> i wonder if i can't turn up the logging without that\n<mvo> Chipaca: ok\n<Chipaca> mvo: so. we might not need that patch\n<Chipaca> mvo: it's just that our systemd-shutdown helper unit isn't getting triggered\n<Chipaca> digging continues\n<Chipaca> that is: if I set it up by hand, I get\n<mvo> Chipaca: oh, nice\n<Chipaca> Successfully changed into root pivot.\n<Chipaca> Returning to initrd...\n<Chipaca> snapd system-shutdown helper: started.\n<Chipaca> snapd system-shutdown helper: no reboot parameter\n<Chipaca> snapd system-shutdown helper: * unable to disassociate loop device /dev/loop0s: No such device or address\n<Chipaca> snapd system-shutdown helper: - was able to unmount writable cleanly\n<Chipaca> snapd system-shutdown helper: - halting.\n<mvo> Chipaca: so maybe just a missing symlink to activate it?\n<Chipaca> pr'aps\n<Chipaca> rebooting to see :-)\n<zyga> Chipaca: really /dev/loop0s?\n<mvo> Chipaca: I can look for this is that helps you :)\n<zyga> what even is that\n<Chipaca> $ systemctl is-enabled snapd.system-shutdown.service\n<Chipaca> enabled\n<Chipaca> mvo: so it's not that :-|\n<Chipaca> zyga: \u00c2\u00af\\_(\u00e3\u0083\u0084)_/\u00c2\u00af\n<Chipaca> zyga: /dev/loop0; the s is probably a typo\n<Chipaca> zyga: \t\t\tkmsg(\"* unable to disassociate loop device %ss: %s\",\n<zyga> ah\n<Chipaca> :)\n<zyga> good\n<zyga> at least\n<zyga> loop0 is probably the boot snap\n<Chipaca> it's probably fine;  disassociation is automatic after dunno-what-utils-linux-version\n<Chipaca> mvo: so,  the unit is enabled; it's not getting activated afaict\n<Chipaca> probably changes to systemd-shutdown\n<mvo> Chipaca: :/ hrm, hrm\n<Chipaca> ah\n<Chipaca> i think i might know why\n<Chipaca> mvo: the snapd snap does not ship sh\n<zyga> huh? why would we need to ship sh?\n<Chipaca> well, we don't, but we then create snapd.system-shutdown.service as if we did\n<zyga> is the service using shell?\n<Chipaca> sudo sed -i -e 's|/snap/snapd/659/bin/sh|/snap/core18/304/bin/dash|' /etc/systemd/system/snapd.system-shutdown.service && sudo systemctl daemon-reload -> works\n<Chipaca> zyga: ExecStart=/snap/core18/304/bin/dash -euc 'mount /run -o remount,exec; mkdir -p /run/initramfs; cp /usr/lib/snapd/system-shutdown /run/initramfs/shutdown'\n<zyga> ohohh\n<zyga> I see\n<mvo> Chipaca: oh woah - nice catch!\n<Chipaca> I don't remember why it does that instead of having multiple ExecStart= lines\n<Chipaca> let me try that instea\n<Chipaca> probably more portable\n * Chipaca tries\n<Chipaca> of course if I had 'vi' this would be slightly easier :-D\n<mvo> Chipaca: I thought we added this\n<mvo> Chipaca: maybe you need a newer core18?\n<Chipaca> mvo: I'll let it refresh\n<mvo> ok\n<Chipaca> mvo: which 'this' is this, btw?\n<mvo> Chipaca: I thought we added \"vi\" to core18\n<mvo> (vim.tiny to be exact)\n<Chipaca> mvo: ah, possibly, it seems the core image was ~200 revisions behind\n<zyga> brb, dog\n<Chipaca> ok\n<Chipaca> so\n<Chipaca> easy fix\n<mup> PR snapd#5985 opened: overlord/many: cleanup use of snapName vs. instanceName <Parallel installs \u00e2\u009b\u0093> <Simple \u00f0\u009f\u0098\u0083> <Created by bboozzoo> <https://github.com/snapcore/snapd/pull/5985>\n<mvo> Chipaca: I like the ring of \"easy fix\" \\o/\n<Chipaca> mvo: what creates snapd.system-shutdown.service?\n<Chipaca> mvo: found it\n<Chipaca> hmm\n<Chipaca> mvo: what changes /bin/sh to /snap/snapd/<revno>/bin/sh ?\n<Chipaca> mvo: found it\n<sil2100> mvo: I have uploaded the probert with the fix for db that mwhudson prepared to our PPA, once it's built I'll be triggering a new core18\n<sil2100> Once that's in would be nice to confirm that the probert crash is gone\n<sil2100> zyga: ^\n<mvo> sil2100: nice\n<mvo> sil2100: I will test with my pi-64bit\n<zyga> As will once back\n<mvo> sil2100: nice fix\n<mvo> sil2100: great that this is under control\n<mvo> Chipaca: fwiw, this fix sounds a lot like we want it in 2.35.5 just to be one the safe side (if its someting that needs to go into snapd)\n<Chipaca> k\n<mvo> Chipaca: ta\n<mvo> Chipaca: but don't worry about this, I can do the backporting etc\n<Chipaca> mvo: there is no worry; there is only do\n<mvo> :)\n<mvo> DO!\n * mvo hugs Chipaca \n<zyga> sil2100: is that the image from Friday good for testing?\n<zyga> mvo: release day is like xmas\n<zyga> everyone has a present\n<sil2100> No, not yet\n<sil2100> I mean, not anymore ;)\n<sil2100> I'll have a new one soonish\n<zyga> ok\n<sil2100> The packages  need to publish though\n<zyga> I'll grab lunch quickly then\n<mup> PR snapd#5986 opened: data/systemd, wrappers: tweak system-shutdown helper for core18 <Simple \u00f0\u009f\u0098\u0083> <Created by chipaca> <https://github.com/snapcore/snapd/pull/5986>\n<Chipaca> mvo, zyga: ^\n<Chipaca> ooh, lunch, a capital idea\n<pstolowski> mborzecki: +1 on  #5985, would be good to land it fast\n<mup> PR #5985: overlord/many: cleanup use of snapName vs. instanceName <Parallel installs \u00e2\u009b\u0093> <Simple \u00f0\u009f\u0098\u0083> <Created by bboozzoo> <https://github.com/snapcore/snapd/pull/5985>\n<mvo> Chipaca: thank you\n<zyga> Chipaca: reviewed\n<sil2100> mvo: ummm, could you re-build core18 snap? Since currently I guess the main snap recipe is owned by you for now\n<sil2100> probert is good\n<mborzecki> off to pick up the kids\n<jdstrand> mvo: hi!\n<jdstrand> mvo: I didn't tag those as 2.36 because I wasn't sure how suitable they were for it at this point in time and was going to let you decide (they are bigger than whatI (and probably you) were expecting last week\n<jdstrand> needless to say, they took more than 'a few hours'\n<jdstrand> mvo: I mean, I'm happy if they go into 2.36, but having them just in trunk is ok too\n<jdstrand> mvo: but I wanted to talk to you about this: audit: type=1400 audit(1539604887.557:452): apparmor=\"DENIED\" operation=\"exec\" profile=\"snap.hello-world.env\" name=\"/sbin/apparmor_parser\" pid=30864 comm=\"snap-exec\" requested_mask=\"x\" denied_mask=\"x\" fsuid=1000 ouid=0\n<jdstrand> mvo: it seems every snap run invocation is causing this. let me know when you have a moment\n<zyga> woah?\n<zyga> so snap-exec runs apparmor_parser\n<zyga> probably in the quest to compute system key\n<zyga> or something similar?\n<jdstrand> that is what I was thinking\n<zyga> what is worse\n<zyga> if apaprmor is updated\n<zyga> and we have a new apparmor parser\n<zyga> the system key will not match\n<zyga> but snapd doesn't care about the upgrade in the system\n<zyga> so it will always be wrong\n<jdstrand> so, release/apparmor.go init(), there is:\n<jdstrand> appArmorLevel, appArmorSummary = probeAppArmor()\n<zyga> until you reboot and snapd considers this\n<jdstrand> appArmorParserFeatures = probeAppArmorParser()\n<jdstrand> what is weird though, is if this is the issue, then why don't I see denials from probeAppArmor?\n<jdstrand> I only see denials for probeAppArmorParser\n<zyga> I think we allowed the former\n<jdstrand> I looked in the template. let me look again\n<zyga> oh, in that case I don't know\n<jdstrand> also, I was really surprised that snap run is doing all these checks\n<jdstrand> it isn't like it can do anything with the result\n<zyga> I think we d\n<zyga> we spin and wait\n<zyga> that's the purpose of system key there\n<jdstrand> and we are adding a bunch of stat()s and an exec() to the snap run\n<jdstrand> hmm\n<jdstrand> I definitely didn't mean for apparmor_parser to be called every time that an app was run\n<zyga> right\n<jdstrand> quite the opposite. I didn't even want it run every time a profile was compile\n<zyga> I think this falls under the idea I had a while ago with \"facts\" in /var/lib/snapd/facts - that would be written by snapd and interrogated by other parts of the stsack\n<jdstrand> I wanted it precisely once when snapd started :)\n<jdstrand> and I thought that was what happened with system-key\n<zyga> mmm, not quite\n<zyga> you need to be able to compute the system key\n<jdstrand> well, clearly\n<zyga> in snap-run\n<zyga> and quickly too as you now learned\n<jdstrand> we need to short circuit this or move it\n<jdstrand> I mean we could add a rule, but blech, I don't want this-- it is only useful for profile generation\n<zyga> I agree\n<zyga> hmmm hmm\n<jdstrand> snap run can literally do nothing with the information\n * pstolowski lunches\n<zyga> jdstrand: if you need me for this just ask, otherwise I'll be going through per user mount namespaces\n<jdstrand> yeah, I don't see /sys/kernel/security/apparmor/features in the template\n<jdstrand> zyga: thanks, I'll discuss with mvo and we can decide from there\n<jdstrand> it is definitely denied: $ ls /sys/kernel/security/apparmor/features/\n<jdstrand> ls: cannot open directory '/sys/kernel/security/apparmor/features/': Permission denied\n<jdstrand> so, probeAppArmor() is not getting called, but probeAppArmorParser() is...\n<jdstrand> which makes no sense cause they are both only called via init()...\n * jdstrand is confused\n<zyga> perhaps probe apparmor is really lazy?\n<jdstrand> huh\n<jdstrand> ./interfaces/system_key.go:sk.AppArmorParserFeatures = release.AppArmorParserFeatures()\n<jdstrand> ./interfaces/apparmor/backend.go:parserFeatures        = release.AppArmorParserFeatures\n<jdstrand> so in system_key, we assign '()' but in backend.go we do not\n<jdstrand> that is the same with AppAmorFeatures though...\n<zyga> !\n<mborzecki> re\n<jdstrand> maybeWaitForSecurityProfileRegeneration() does call interfaces.SystemKeyMismatch()\n<jdstrand> I'm really puzzled that I'm not seeing denials from release.AppArmorFeatures() but I am for release.AppArmorParserFeatures()\n<mvo> sil2100: sure\n<mvo> jdstrand: hi, reading backlog (looks like there is a lot of it :)\n<jdstrand> mvo: yes, halp :)\n<zyga> (insert 5th element quote0\n<jdstrand> I wonder what ioutil.ReadDir() is doing\n<jdstrand> maybe it doesn't trigger the apparmor denial\n<jdstrand> but then that would be a bug in system-key detection\n<jdstrand> hmm, it is just an os.Open\n<Chipaca> jdstrand: ls /sys/kernel/security/apparmor/features/ triggers the denial, but does stat on its own?\n<jdstrand> Chipaca: it would not, no\n<zyga> stat is not mediated anywhere AFAIK\n<Chipaca> jdstrand: maybe whatever's triggering the denial is not one of the required features that we stat in probeAppArmor\n<jdstrand> yes, that is what it is Chipaca\n<Chipaca> ah\n<jdstrand> probeAppArmor only does an isDirectory() which is just a stat\n<Chipaca> yup\n<Chipaca> and a rather dumb stat at that :)\n<zyga> aaah\n<jdstrand> ok, so mystery solved on the why probeAppArmor() doesn't trigger denials\n<zyga> man, that's magic\n<jdstrand> mvo: ^\n<mvo> jdstrand: I just finished reading backlog - indeed, we compute the system-key in snap run, sorry that I did not realize during the review about the implication of the apparmor parser test\n<jdstrand> so, the question is how to fix probeAppArmorParser\n<mup> PR snapd#5987 opened: cmd: refactor IPC and lifecycle of the helper process <Created by zyga> <https://github.com/snapcore/snapd/pull/5987>\n<mvo> jdstrand: let me quickly look at this (its 5min until our standup)\n<zyga> standup time but I'll be 3 min late\n<zyga> brb\n<jdstrand> mvo: so, on the one hand, it does make sense that we might wait for profile regeneration for the unsafe, but on the other, I'd *way* much prefer we *not* exec apparmor_parser in every snap run\n<mvo> jdstrand: from the top of my head: probe once and then save the result in e.g. /run/snapd\n<jdstrand> mvo: that's what I was trying to do :)\n<jdstrand> mvo: you mean, just touch a file?\n<mvo> jdstrand: yeah\n<jdstrand> mvo: ok, let me work through that\n<mvo> jdstrand: thanks, the other option would be to simply not make it part of system-key and hope that something else triggers a re-run\n<jdstrand> mvo: which do you prefer?\n<mvo> jdstrand: let me quickly look at what goes into system-key already\n<mvo> jdstrand: it partly depenends on your preferences as well, if we remove it from the system-key worst case is that the profile is only re-generated with the next snapd refresh\n<jdstrand> it would be fast to add a touch at the end of probeAppArmorParser and then stat for it at the top\n<jdstrand> mvo: I think that is least correct\n<mvo> jdstrand: yeah, and cheapest :)\n<jdstrand> mvo: no, I meant removing and hoping is least correct\n<jdstrand> mvo: but is is also not correct to touch the file. cause, well, in theory the parser could've been updated in the mean time (that was always true with the intent of the original PR\n<jdstrand> )\n<mvo> jdstrand: we could use the mtime of apparmor_parser as input\n<mvo> of system-key\n<jdstrand> mvo: so, mtime and touch?\n<mvo> jdstrand: mtime of /usr/bin/apparmor_parser and if that changes the system-key changes and we re-generation apparmor. and when doing that we check apparmor features\n * jdstrand doesn't see how mtime is enough\n<jdstrand> that would require redoing system key generation a bit, no?\n<jdstrand> well wait\n<jdstrand> ok, I add mtime to the systemKey struct. then I always just check for that\n<jdstrand> so, that is a stat, and we only call probeAppArmorPaarser if they are different\n<jdstrand> ok, let me look at that\n<mvo> jdstrand: thank you! in the standup right now so I may be a bit slow replying\n<Chipaca> jdstrand: dunno if it helps, but i've got this in my bash history: grep -rl --include \\*.go --exclude \\*_test.go '^func init()' | xargs perl -pi -we 's/(^func init\\(.*)/\\1\\nprintln(\"$ARGV\")/'\n<Chipaca> jdstrand: adds a print to any and all init, so you can easily spot unexpected inits\n<zyga> jdstrand: offtopic, I think you should enqueue https://github.com/snapcore/snapd/pull/5885\n<mup> PR #5885: Adding DPDK interface for DPDK Snap <Created by wililupy> <https://github.com/snapcore/snapd/pull/5885>\n * Chipaca hugs mborzecki \n * mvo hugs mborzecki as well well\n<mborzecki> why the hugs?\n<mvo> jdstrand: standup over, anything I can help with?\n<Chipaca> niemeyer: dunno if you saw but at least mborzecki isn't here in 1h\n<Chipaca> mborzecki: no, that you said the above just as we wrapped (and I feel guilty because I said \"yes\", for myself, but know how that can be taken as a for all so I should've waited)\n<mvo> mborzecki: because Chipaca started it :) *grouphug*\n<Chipaca> :)\n<mvo> Chipaca: I think its fine, we just skip the bits from mborzecki  and talk about them tomorrow, no?\n<niemeyer> Chipaca: Ah, I didn't realize.. well, we can get together either way and just finish that list.. tomorrow we can review the whole thing again\n * Son_Goku hugs mborzecki \n<mborzecki> works for me\n<Son_Goku> I'm just happy someone besides me actually bothers to investigate SELinux stuff, so you deserve hugs from me anyway :D\n<jdstrand> mvo: not yet\n<mvo> ok\n<Son_Goku> mborzecki, when 2.36 becomes available, I'm going to push out for epel7 at the same time as fedora\n<zyga> mborzecki: hey, I pushed a few tweaks to snap-confine, would you be willing to look\n<zyga> it's nothing major really, and not that long\n<zyga> mostly a switch to pipe\n<jdstrand> Chipaca: that's interesting. thank you\n<mborzecki> Son_Goku: nice, thank you!\n<mup> PR snapd#5988 opened: cmd: rename ns_group to mount_ns <Simple \u00f0\u009f\u0098\u0083> <Created by zyga> <https://github.com/snapcore/snapd/pull/5988>\n<zyga> mvo: if you can, please land that, that's just a rename\n<zyga> ^\n<mvo> zyga: sure, I have a look\n<zyga> thank you!\n<niemeyer> zyga: You coming?\n<zyga> ah, sure\n<zyga> niemeyer: same URL?\n<degville> zyga: yep\n<mup> PR snapcraft#2353 opened: tests: remove dependency on snapcraft for integration tests <Created by sergiusens> <https://github.com/snapcore/snapcraft/pull/2353>\n<ackk> hi, can classic snaps run deamons as specific system users?\n<smoser> zyga: is there expected to be a new snapd upload before release  of 18.10 ?\n<zyga> smoser: I defer to our release manager, mvo\n<zyga> I don't know\n<zyga> ackk: not at present\n<zyga> unless said daemons do that themselves\n<ackk> zyga, meaning, you can \"su\" as a different user from classic, right? IOW a daemon could run as \"nobody\" in that case?\n<kyr0> Hi, I have a snap package that when I launch it from the terminal, nothing happens. Where should I start to troubleshoot?\n<zyga> re\n<zyga> ackk: correct\n<zyga> kyr0: hello\n<zyga> kyr0: it depends on the software but you may have some good idea what is happening in general by using:\n<zyga> kyr0: SNAPD_DEBUG=1 snap run ...\n<zyga> (or just the program name)\n<kyr0> zyga: Thank you, ill start my investigation.\n<zyga> kyr0: you can also run \"snap run --shell\" to enter a shell with the same confinement\n<zyga> kyr0: but note, not the same environment\n<zyga> some of the environment is set by wrapper scripts in $SNAP\n<zyga> cd $SNAP to look around\n<zyga> you can run those scripts directly to execute the same command\n<zyga> hmm\n<zyga> Chipaca: still hear?\n<zyga> here*\n<kyr0> zyga: Thanks, i'll start looking into it\n<Chipaca> zyga: yes\n<zyga> oh god why :)\n<zyga> ok\n<zyga> I was thinking about taking the accounts service test manual for a moment\n<Chipaca> zyga: finished dinner, came to eod\n<zyga> it's failing all the time\n<zyga> wanted to discuss ideas\n<zyga> but can wait\n<zyga> not urgent :)\n<Chipaca> zyga: i've left it looping here to see if i can catch the failure\n<zyga> I caught it once\n<Chipaca> on iteration 20 with no failures\n<zyga> forgot about it\n<zyga> closed terminal\n<zyga> yes ;)\n<zyga> I would suggest adding ps aux to debug\n<zyga> I bet there's something very odd running then\n<zyga> (not accounts service)\n<Chipaca> yeap\n<Chipaca> zyga: instead of 'gdbus monitor --session --dest yadda', i'd do 'dbus-monitor --session' which is a lot more chatty\n<Chipaca> but, that assumes I can reproduce the issue :-D\n<zyga> Chipaca: is your unmount fix ready?\n<Chipaca> zyga: well, its spread is red, if that's what you're asking\n<Chipaca> or was when i looked last\n<Chipaca> zyga: https://api.travis-ci.org/v3/job/441628807/log.txt\n<Chipaca> zyga: the last run, degraded and snap-repair failed, which \u00e2\u0080\u00a6 not sure what those are about\n<zyga> I see\n<Chipaca> suspect something is actually broken\n<zyga> ah\n<zyga> I was just chatting with mvo about a possible release tonight\n<Chipaca> that'd be nice but integration tests aren't cooperating\n<Chipaca> and i don't know enough about those two tests to know if they're real or not\n<Chipaca> they're failing on core 18\n<Chipaca> are you seeing them fail there as well?\n<zyga> I see the error log now\n<zyga> hmmm\n<zyga> Chipaca: is ExecStart= ... ordered?\n<zyga> seems so according to manual pages\n<mup> PR snapd#5989 opened: interfaces/system-key: add parser mtime and only discover features on write <Created by jdstrand> <https://github.com/snapcore/snapd/pull/5989>\n<Chipaca> zyga: yes, it's ordered\n<Chipaca> zyga: and yes it stops as soon as one fails, unless it starts with -\n<kyrofa> How is the possibility for a 2.36 release looking this week?\n<Chipaca> kyrofa: 0.47\n<Chipaca> kyrofa: but i'm probably overly pessimistic, so maybe it's .87\n<kyrofa> Chipaca, I'll take your earlier assessment :P\n<Chipaca> kyrofa: I hope I'm wrong, because I'm itching to update the brew formula so it no longer neads --HEAD\n<mup> PR snapcraft#2349 closed: extensions: use extension docstring <Created by kyrofa> <Merged by sergiusens> <https://github.com/snapcore/snapcraft/pull/2349>\n<popey> Chipaca: fyi, that person you conversed with was a spammer, i removed them\n<popey> (on the forum)\n<Chipaca> popey: they were? their question seemed relevant\n<Chipaca> booo\n<popey> it was a copy/pasta from a reddit thread a year ago\n<Chipaca> oh\n<popey> they do that to get credit on the forum, then slip a url edit in a few days later\n<Chipaca> right\n<popey> i didnt spot it until the edit\n<Chipaca> how isn't there an emoji for spam\n<popey> trademarks i guess\n<Chipaca> \u00f0\u009f\u00a5\u00ab came so close\n<Chipaca> anyhoo, it's a relief as the \"why do i need to log in\" thing should be well dead\n<popey> Yeah, i recently requested an edit to the appimage wiki because it claimed we still needed to login\n<popey> xkcd 386\n<mup> PR snapcraft#2354 opened: Preflight missing multipass <Created by evandandrea> <https://github.com/snapcore/snapcraft/pull/2354>\n<mup> PR snapcraft#2350 closed: extensions: parse all declared extensions before applying <Created by kyrofa> <Merged by sergiusens> <https://github.com/snapcore/snapcraft/pull/2350>\n<mup> PR snapcraft#2355 opened: extensions: cleanup and generic tests <Created by kyrofa> <https://github.com/snapcore/snapcraft/pull/2355>\n<mup> PR snapcraft#2246 closed: packaging: cleanup extension usage in setup.py <Created by sergiusens> <Closed by kyrofa> <https://github.com/snapcore/snapcraft/pull/2246>\n#snappy 2018-10-16\n<mup> PR snapcraft#2353 closed: tests: remove dependency on snapcraft for integration tests <Created by sergiusens> <Merged by sergiusens> <https://github.com/snapcore/snapcraft/pull/2353>\n<mborzecki> morning\n<mborzecki> ugh, travis jobs unhappy again\n<zyga> good morning\n<zyga> mborzecki: the dreaded accounts service test\n<mborzecki> zyga: hey\n<mborzecki> yeah, not repeating in isolation :/\n<zyga> I reproduced it but didn't noice and closed the session\n<mborzecki> ayy\n<mup> PR snapd#5990 opened: tests: do not run degraded test in autopkgtest env <Created by mvo5> <https://github.com/snapcore/snapd/pull/5990>\n<mvo> hey zyga\n<mvo> and hey mborzecki\n<mborzecki> mvo: hey\n<zyga> hey mvo\n<zyga> good morning\n<zyga> I haven't seen infinity yet\n<mvo> zyga: I just asked him in #ubuntu-release\n<zyga> I kicked off main again, I will try to hunt the accounts service failure\n<zyga> thanks!\n<mborzecki> hm maybe it's something about gce being slow or sth, that online accounts service is dbus activated, isn't it?\n<mvo> zyga: thank you - all autopkgtest are good except for the degraded one\n<mvo> zyga: I do the proper release now (without the umount fix sadly)\n<zyga> mborzecki: unlikely, bus activated services get the socket from systemd, right?\n<zyga> mborzecki: so you'd race with systemd\n<zyga> well - we shall see really\n<mup> PR snapd#5966 closed: snap: overhaul validation error messages <Created by bboozzoo> <Merged by bboozzoo> <https://github.com/snapcore/snapd/pull/5966>\n<mup> PR snapd#5991 opened: release: 2.35.5 <Created by mvo5> <https://github.com/snapcore/snapd/pull/5991>\n<mup> PR snapd#5992 opened: release: merge 2.35.5 changes into the 2.36 branch <Created by mvo5> <https://github.com/snapcore/snapd/pull/5992>\n<zyga> https://blogs.gnome.org/tbernard/2018/10/15/restyling-apps-at-scale/ <- interesting for theming\n<mborzecki> heh pushed a commit with some additional debug to the PR that failed consistntly due to interfaces-accounts-service, and it's failing no more\n<mborzecki> why am i even suprised\n<zyga> brb\n<zyga> mborzecki: it's just an ordering issue\n<mborzecki> zyga: i'm not so sure, the testt that executed before this one do not seem reelvant\n<zyga> mborzecki: I sent a trivial PR, we'll see\n<mborzecki> zyga: are debug sections meged together?\n<mup> PR snapd#5993 opened: tests: show list of processes when ifaces-accounts-service fails <Created by zyga> <https://github.com/snapcore/snapd/pull/5993>\n<pstolowski> mornings\n<mborzecki> pstolowski: hey\n<zyga> Oh! No\n<mborzecki> pulled logs from 6 failed runs, dropped into python to check if there's a test common to all failed jobs that ran before, seems there's no connection there\n<mborzecki> maybe we shuld just switch this test to manual to unblock prs\n<mborzecki> zyga: this is what i'm trying with here https://paste.ubuntu.com/p/Ktcj47ZDqh/\n<mup> PR snapd#5991 closed: release: 2.35.5 <Created by mvo5> <Merged by mvo5> <https://github.com/snapcore/snapd/pull/5991>\n<mup> PR snapd#5990 closed: tests: do not run degraded test in autopkgtest env <Created by mvo5> <Merged by mvo5> <https://github.com/snapcore/snapd/pull/5990>\n<pedronis> mborzecki: the failure mode of that test look like the are different services that provide similar but different apis for something, it's quite weird\n<mup> PR snapd#5994 opened: tests/main/interfaces-accounts-service: more debugging <Created by bboozzoo> <https://github.com/snapcore/snapd/pull/5994>\n<mborzecki> https://www.reddit.com/r/linux/comments/9oddtb/flatpaks_sandboxes_and_security/ another *pak & sandbox thread\n<mup> PR snapd#5984 closed: ifacestate/hooks: only create interface hook tasks if hooks exist (2.36) <Created by stolowski> <Merged by mvo5> <https://github.com/snapcore/snapd/pull/5984>\n<zyga> woot, that's great\n<zyga> thank you again pstolowski\n<zyga> I will try to optimise apparmor use next week\n<pstolowski> zyga: sounds awesome!\n<zyga> man, reading reddit is a waste of time\n<mborzecki> zyga: heh, usual bs in the comments\n<zyga> BS is one thing, I really cannot stand people that claim to know something but are clearly clueless about it\n<mborzecki> btw. on the topic of desktop themes, anyone running kde? do gtk apps from snaps have breeze properly applied to them?\n<zyga> mborzecki: sorry, I'm on gnome usually\n<zyga> but on the bright side, we will always have Adwaita\n<zyga> eh\n<zyga> not a great morning\n<mvo> sil2100: bad news, probert seems to be still crashing, I have a theory (only tested on my pi3-64)\n<zyga> question, what is probers?\n<zyga> probert\n<Chipaca> we need a \"this topic provides no added value\" thing for the forum :-|\n * zyga hugs Chipaca \n<zyga> what topic is that?\n<Chipaca> zyga: today, it's https://forum.snapcraft.io/t/gnome-calendar-is-not-in-spanish/7866/11\n<Chipaca> if it were a support ticket, i wouldn't mind\n<Chipaca> also, ps, spanish is not a regional language :)\n<sil2100> mvo: oh no\n<sil2100> Let me check if the right version has been pulled in\n<sil2100> Yeah, it looks like it\n<sil2100> mvo: so it's still crashing at the same place in console-conf? On startup?\n<Chipaca> zyga: has anything reached master since yesterday?\n<zyga> not that I know of :/\n<zyga> let me look\n<zyga> Chipaca: actually, I'm mistaken\n<zyga> 063f83e687d1fa2d339bc123ff5c37a2030afb50 landed\n<Chipaca> zyga: hello mistaken, i'm Chipaca\n<zyga> I'm Zygmunt if I'm not mistaken\n<zyga> ;-)\n<zyga> (or both, knowing me)\n<Chipaca> mborzecki: does 'gdbus monitor' work withouot --dest?\n<Chipaca> $ gdbus monitor --session\n<Chipaca> Error: Destination is not specified\n<sil2100> zyga: did you try a new image on your dragonboard?\n<Chipaca> mborzecki: go with dbus-monitor --session\n<zyga> sil2100: I only have the image from Friday\n<zyga> shall I re-download http://people.canonical.com/~lzemczak/dragonboard.img.xz ?\n<mup> PR snapd#5995 opened: tests/main/interfaces-accounts-service: switch to manual while we debug the test <Created by bboozzoo> <https://github.com/snapcore/snapd/pull/5995>\n<mborzecki> Chipaca: see #5994\n<mup> PR #5994: tests/main/interfaces-accounts-service: more debugging <\u00e2\u009b\u0094 Blocked> <Created by bboozzoo> <https://github.com/snapcore/snapd/pull/5994>\n<Chipaca> mborzecki: better :)\n<Chipaca> mborzecki: or was it always like that, and I'm in need of more coffee?\n<zyga> meh, now travis is not doing much\n<zyga> ohhh coffee\n<mborzecki> Chipaca: no, i mistyped it, had it `dbus monitor` before\n<zyga> I could use that\n<Chipaca> hah, even more fun\n<mborzecki> did eavesdrop need to be expliclitly enabled for session bus?\n<zyga> not that I recall\n<Chipaca> mborzecki: what about checking the package version of accountsservice?\n<mborzecki> Chipaca: that should be the same as if you spin up the test image\n<Chipaca> hm, tru\n<Chipaca> e\n<mborzecki> Chipaca: gnome-online-accounts                 3.18.3-1ubuntu2\n<mborzecki> btw. pushed a repo with a minimal spread setup i use to spin up images, faster and smaller than doing the same from snapd tree https://github.com/bboozzoo/spread-mini\n<Chipaca> mborzecki: also: gdbus introspect --session --dest=org.gnome.OnlineAccounts --object-path=/org/gnome/OnlineAccounts/Manager\n<Chipaca> WTF, travis\n<Chipaca> mborzecki: zyga: as travis is kinda stuck, would you mind merging #5994 and #5993 into a single one?\n<mup> PR #5994: tests/main/interfaces-accounts-service: more debugging <\u00e2\u009b\u0094 Blocked> <Created by bboozzoo> <https://github.com/snapcore/snapd/pull/5994>\n<mup> PR #5993: tests: show list of processes when ifaces-accounts-service fails <Created by zyga> <https://github.com/snapcore/snapd/pull/5993>\n<mborzecki> hahah\n<Chipaca> oh wait one of them is already running\n<Chipaca> \u00c2\u00af\\_(\u00e3\u0083\u0084)_/\u00c2\u00af\n<mborzecki> ok, hm last time we were debugging this test the observation was that the signature returned as 'expected' is correct and matches that of AddAccount\n<sil2100> zyga: I'll rebuild it in a moment\n<sil2100> (the image)\n<zyga> sil2100: ok\n<mborzecki> looking at my notes i was digging into gdbus to see if there's some parsing error\n<sil2100> I'm on the release sprint right now and we need to fix ubiquity first\n<zyga> sure\n<mvo> sil2100: sorry for the delay, had a call - my mistake, console-conf is working!\n<Chipaca> mborzecki: ISTR gdbus was funny about how it interpreted arguments\n<mborzecki> Chipaca: i switched to busctl now, will push a commit in a minute\n<Chipaca> mborzecki: but you can specify the type\n<mborzecki> at least this one is explicit about the types\n<Chipaca> mborzecki: ah, good\n<zyga> mborzecki: what is the chance that with more debugging it will no longer fail ;-) ?\n<mborzecki> zyga: high :)\n<zyga> still, I'd love to merge it\n<zyga> to see what is wrong\n<zyga> I'm wary of merging your branch with extra kills and what not just because we don't know the problem yet\n<mborzecki> the upside is we'll know more the next time it appears\n<zyga> yes, exactly\n<mborzecki> zyga: i'll drop pkills\n<sil2100> mvo: \\o/\n<sil2100> mvo: sweet!\n<sil2100> I'll prep a quick image for zyga in a moment for the db and upload it somewhere, since I'm at the office it should be a fast upload\n<zyga> cool\n<mborzecki> zyga: while pipe2 instead of socketpair in your pr?\n<zyga> no preference really\n<zyga> also no need to use sockets :-)\n<mborzecki> zyga: Chipaca: please take a look at #5994\n<mup> PR #5994: tests/main/interfaces-accounts-service: more debugging <\u00e2\u009b\u0094 Blocked> <Created by bboozzoo> <https://github.com/snapcore/snapd/pull/5994>\n<zyga> what is in dbus.env?\n<mborzecki> zyga: when you dbus-launch it spits some stuff you can eval in the shell to set the environment variables, now it's dumped to a file in case i need to use it in debug section\n<zyga> right\n<zyga> I know that,\n<zyga> what is there in practice :)\n<zyga> is it just a variable definition?\n<Chipaca> DBUS_SESSION_BUS_ADDRESS='unix:abstract=/tmp/dbus-QvYL1sZnrl,guid=78c09efa6f3ce976cbffb0a35bc5bc72';\n<Chipaca> export DBUS_SESSION_BUS_ADDRESS;\n<Chipaca> DBUS_SESSION_BUS_PID=25966;\n<Chipaca> DBUS_SESSION_BUS_WINDOWID=119537665;\n<mborzecki> zyga: https://paste.ubuntu.com/p/TTh392C3Bb/\n<zyga> aha, I see\n<zyga> thanks!\n<mborzecki> oh, windowid?\n<mborzecki> wonder why i don't have it\n<Chipaca> mborzecki: probably because I did it from within X and you didn't\n<zyga> mborzecki: my PR passed\n<zyga> let's merge it\n<zyga> man, I knew this would happen\n<mborzecki> Chipaca: hm did it in tmux, which was in turn started by systemd user session, maybe that's why\n<zyga> sil2100: flashing now\n<Chipaca> an extra downside of this accounts service silliness is that it took me a day to see a trivial bug in my shutdown pr\n<zyga> now let's reproduce the f*r\n<mup> PR snapd#5993 closed: tests: show list of processes when ifaces-accounts-service fails <Created by zyga> <Merged by bboozzoo> <https://github.com/snapcore/snapd/pull/5993>\n<sil2100> zyga: thanks! Fingers crossed it's all resolved here as well\n<zyga> we will know soon\n<mup> PR snapd#5996 opened: [RFC] daemon: support `snap logs snapd` to get snapd logs <Created by mvo5> <https://github.com/snapcore/snapd/pull/5996>\n<mvo> cachio: good morning! new snapd 2.35.5 in beta - sorry for yet another dot release :/\n<mvo> cachio: but .4 is fine, this is just yet another fix on top\n<mup> PR snapd#5997 opened: ifacestate: simplify task chaining in ifacestate.Connect <Created by stolowski> <https://github.com/snapcore/snapd/pull/5997>\n<pstolowski> mborzecki: ^ the simplification you suggested in previous PRs\n<pstolowski> *PR\n<zyga> nice pstolowski :)\n<mborzecki> pstolowski: nice\n<zyga> sil2100, mvo: booting ...\n<zyga> fingers crossed\n<zyga> sil2100, mvo: no more crashes!\n<zyga> woot\n<mvo> zyga: yay\n<zyga> sil2100: what was the issue?\n<zyga> sil2100, mvo: although it does not crash I cannot actually connect to wifi\n<zyga> it times out all the time\n<zyga> (wifi dit not change)\n<mvo> zyga: same for me on my pi3-64\n<mvo> sil2100: -^\n<zyga> bor0en\n<zyga> or just broken\n<Chipaca> mvo: want me to give the appInfosFor a stab? I'm blocked waiting for spread otherwise :-)\n<Chipaca> bah, i've got other things i could do\n<Chipaca> like lunhc\n<Chipaca> lunch\n<Chipaca> but that's boring\n<zyga> sil2100: do you need that reported?\n<mup> PR snapd#5998 opened: osutil: tweak handling of error adduser errors <Created by mvo5> <https://github.com/snapcore/snapd/pull/5998>\n<mvo> Chipaca: app infos for as in 5996?\n<Chipaca> mvo: ah, yes :-)\n<mvo> Chipaca: I would not mind - but note its still an RFC PR that needs approval from gustavo\n<Chipaca> mvo: actually we could expose a pseudo-snap 'snapd' in /v2/snaps\n<mvo> Chipaca: that works for me\n<mvo> Chipaca: no strong opinion either way\n<Chipaca> mvo: snapInfosFor calls allLocalSnapInfos, if we make that one pseudo-snapd-aware, we get a consistent pseudo-snapd in the api (except you can't remove/refresh/etc it sometimes)\n<Chipaca> (the latter makes it awkward, i guess)\n<Chipaca> bah :)\n<Chipaca> it depends on what we want\n<Chipaca> i'll comment on the rfc\n * mvo nods\n<mvo> thank you!\n<pedronis> Chipaca: we have system and snapd (as pseudo but not quite things),  should snap logs system do the same,  do something?\n<pedronis> all of this is cute but without a plan it will get messy\n<zyga> snap logs system giving just snapd logs feels weird though\n<pedronis> yea, agreed\n<pedronis> also snapd will be a snap\n<zyga> but without services\n<zyga> so all kinds of weirdness\n<sil2100> zyga: yeah, not sure what's the reason for that not working, I think I also had wifi issues on my regular armhf rpi3 core18 last time\n<Chipaca> pedronis: zyga: FC on the RFC\n<sil2100> Not sure if that got reported somewhere\n<sil2100> I guess Paolo was looking at something like that?\n<pedronis> Chipaca: my C  is mostly that it probably needs a forum topic\n<Chipaca> sergiusens: what was the env var that dropped snap/snapcraft.yaml and manifest.yaml into the snap?\n<pedronis> Chipaca: I think  SNAPCRAFT_BUILD_INFO=1  from here:  https://forum.snapcraft.io/t/notifications-for-out-of-date-stage-packages/5161\n<Chipaca> thanks\n<sergiusens> Chipaca: I see you found it\n<Chipaca> sergiusens: yes, thanks\n<pstolowski> we're at the brink of opening 3rd page of PRs... would be good to land some\n<Chipaca> grep took me to the tests, and then samuele confirmed it :)\n<Chipaca> pstolowski: har har\n<sergiusens> Chipaca: hah, I thought you would have done a forum search first \u00f0\u009f\u0098\u0089\n<Chipaca> pstolowski: dunno if you noticed but we've been fighting the spread tests since at least yesterday\n<mborzecki> pstolowski: well, stuff is blocked by travis atm\n<pstolowski> Chipaca: yes i'm aware\n<Chipaca> pstolowski: almost everything in the first page is red\n<mborzecki> hopefully we can land #5994 soon\n<Chipaca> so, i mean, sure it'd be nice to land stuff\n<mup> PR #5994: tests/main/interfaces-accounts-service: more debugging <\u00e2\u009b\u0094 Blocked> <Created by bboozzoo> <https://github.com/snapcore/snapd/pull/5994>\n<zyga> mborzecki: it failed in my PR\n<mborzecki> zyga: hm, which one?\n<zyga> https://www.irccloud.com/pastebin/OuTgkBZz/\n<zyga> https://github.com/snapcore/snapd/pull/5988\n<mup> PR #5988: cmd: rename ns_group to mount_ns <Simple \u00f0\u009f\u0098\u0083> <Created by zyga> <https://github.com/snapcore/snapd/pull/5988>\n<mborzecki> zyga: is that goa using 100MB of mem/\n<zyga> apparently\n<mborzecki> anyone willing to look at #5959 while we wait for PRs to be green again?\n<mup> PR #5959: systemd: extend Status() to work for socket and timer units <Created by bboozzoo> <https://github.com/snapcore/snapd/pull/5959>\n<zyga> mborzecki: done\n<mborzecki> zyga: thanks!\n<cachio> mvo, hi\n<cachio> sure\n<cachio> mvo, I'll make a run\n<zyga> mborzecki: I pushed https://github.com/snapcore/snapd/pull/5999\n<mup> PR #5999: tests: ensure that goa-daemon is off <Created by zyga> <https://github.com/snapcore/snapd/pull/5999>\n<zyga> not sure if this is a red herring or real\n<cachio> mvo, should we promote 35.4 to stable?\n<mup> PR snapd#5999 opened: tests: ensure that goa-daemon is off <Created by zyga> <https://github.com/snapcore/snapd/pull/5999>\n<pstolowski> Chipaca: #5961 gtg\n<mup> PR #5961: snap/pack, snap/squashfs: use type to determine mksquashfs args <Created by chipaca> <https://github.com/snapcore/snapd/pull/5961>\n<mborzecki> zyga: i'm not sure it's a problem though, the original error is Error: GDBus.Error:org.freedesktop.DBus.Error.InvalidArgs: Type of message, '(ssssa{ss})', does not match expected type '(sssa{sv}a{ss})', so the expected type is correct and matches what busctl introspect shows\n<mborzecki> zyga: the mystery is why gdbus came up with (ssssa{ss})\n<mborzecki> zyga: it's like it's treating '{}' as s instead ov a{..}\n<mborzecki> and only occasionally\n<mborzecki> off to pick up the kids\n<dot-tobias> Hi everyone\n<zyga> hey\n<sil2100> mvo, zyga: another good news - we seem to have everything for enabling core18 dailies, so I'll do that once we spin out latest RC images for cosmic\n<sil2100> As I don't want to eat up precious resources before we're done with those\n<zyga> sil2100: ok let me know if you need any more testing\n<mup> PR snapcraft#2355 closed: extensions: cleanup and generic tests <Created by kyrofa> <Merged by sergiusens> <https://github.com/snapcore/snapcraft/pull/2355>\n<mup> PR snapd#6000 opened: snap,client: use a different exit code for retryable errors <Created by mvo5> <https://github.com/snapcore/snapd/pull/6000>\n<mvo> cachio: yeah, 2.35.4 can go to stable\n<Chipaca> mvo: do you need #5986 squashed?\n<mup> PR #5986: data/systemd, wrappers: tweak system-shutdown helper for core18 <Simple \u00f0\u009f\u0098\u0083> <\u00e2\u009a\u00a0 Critical> <Created by chipaca> <https://github.com/snapcore/snapd/pull/5986>\n<mvo> sil2100: nice, thanks!\n<mvo> sil2100: did our 2.35.5 snapd upload from cosmisc-proposed made it?\n<Chipaca> also dunno what makes gdbus go ssssa{ss} instead of sssa{sv}a{ss} but it looks like it's over it for a bit\n<Chipaca> :-(\n<mvo> Chipaca: yes, please squash 5986 it will be needed for 2.36\n<mvo> Chipaca: and thanks for this PR, nice job!\n<Chipaca> mvo: should i retarget it? (it's currently targetted to 2.35)\n<Chipaca> targeted*\n<mvo> Chipaca: yeah, I really really job we are done with 2.35\n<Chipaca> :)\n<mvo> pedronis: I pushed a PR for the retryable errors, iirc field was askign for this in the context of auto-connect (just fyi)\n<dot-tobias> ogra: I'm trying to rotate the HDMI display connected to my Pi 3B running Core edge (edge because I need the mir-kiosk snap). setting pi-config.display-rotate=1 and then rebooting seems to bog the system, it does not boot up at all anymore. Removing the option from config.txt (SD inserted into the reader on my main machine) allows proper boot again. This does not occur on Core stable. Is this known or should I open a forum thread? Couldn't find\n<dot-tobias>  anything there.\n<mup> PR snapd#5986 closed: data/systemd, wrappers: tweak system-shutdown helper for core18 <Simple \u00f0\u009f\u0098\u0083> <\u00e2\u009a\u00a0 Critical> <Created by chipaca> <Merged by chipaca> <https://github.com/snapcore/snapd/pull/5986>\n<mup> PR snapcraft#2356 opened: nodejs plugin: add support for bases <Created by sergiusens> <https://github.com/snapcore/snapcraft/pull/2356>\n<Chipaca> pstolowski: thanks for the review! I'll add a comment to Alike in a followup (but note it's only there for tests)\n<pstolowski> Chipaca: k, yes, i know it's for test\n<pedronis> mvo: ah, I see, was confused for a second (too many problems with similar terms)\n<mup> PR snapd#5961 closed: snap/pack, snap/squashfs: use type to determine mksquashfs args <Created by chipaca> <Merged by chipaca> <https://github.com/snapcore/snapd/pull/5961>\n<jdstrand> mvo: hey, do you want a 2.36 branch for PR 5989?\n<zyga> error: cannot communicate with server: Post http://localhost/v2/snaps: write unix @->/run/snapd.socket: write: broken pipe\n<mup> PR #5989: interfaces/system-key: add parser mtime and only discover features on write <Created by jdstrand> <https://github.com/snapcore/snapd/pull/5989>\n<zyga> man, my trivial PR is red for 40 hours over random stuff\n<jdstrand> zyga: hey, I know the feeling\n<zyga> yeah :|\n<jdstrand> \"do I really want to fix that typo?\" ;)\n<zyga> mvo: the graceful restart thing, is that a thing?\n<zyga> graceful restart breaking snap install (perhaps) https://www.irccloud.com/pastebin/6cblPVl4/\n<zyga> jdstrand: \"let's start with this simple PR\"\n<jdstrand> zyga: \"I'll just merge from trunk\"\n<zyga> jdstrand: I actually tried to debug various failures\n<jdstrand> zyga: I see you are looking at the accounts-service ones. thanks!\n<zyga> but this is not the very best of Tuesdays\n<jdstrand> been seeing those a lot\n<mvo> jdstrand: yes please - 2.36 for 5989\n<mvo> zyga: hm, the graceful stop breaks? or start? the log you pasted looks harmless?\n<mborzecki> re\n<zyga> snap install died on unix socket hangup\n<zyga> error: cannot communicate with server: Post http://localhost/v2/snaps: write unix @->/run/snapd.socket: write: broken pipe\n<mvo> zyga: oh? do you have more details?\n<mborzecki> zyga: got journactl of snapd?\n<zyga> doesn't look transparent\n<zyga> https://api.travis-ci.org/v3/job/441691823/log.txt\n<mvo> zyga: thanks, let me look\n<zyga> look for \"error executing\" please\n<zyga> save the log guys, I really want to land and iterate :/\n<zyga> so I want to restart that job\n<zyga> just tell me when please\n<mvo> zyga: right, I see the error\n<zyga> mborzecki: ready?\n<mborzecki> zyga: yeah\n<zyga> restarting job\n<mborzecki> mvo: isn't that just snap (the client) polling and hitting /run/snapd.sock with some unfortunate timing?\n<mvo> mborzecki: the log looks odd, it looks like core got installed\n<mvo> mborzecki: and with a snap snapd should not go into stop mode\n<mvo> mborzecki: aha, no - just the core configureation, hm\n<mvo> mborzecki: maybe it is just unfortunate timing\n<mvo> mborzecki: which still sucks :/\n<zyga> mvo: I'm more and more convinced we should do something with systemd to ensure we can shut down gracefully\n<zyga> (that is, pass the fd back and exit)\n<zyga> and then let systemd handle the grace period where we are going down\n<mvo> zyga: right, I'm not sure how to do that race-free yet, I am looking into a test to reproduce the current issue now\n<mborzecki> zyga: afaiu this is a remote end doing shutdown on a connection\n<pedronis> niemeyer: mvo: hi, reminder that I have a conflict with the standup\n<zyga> mvo: did you look at sd_pid_notify_with_fds ?\n<niemeyer> pedronis: Ack, thanks\n<mvo> zyga: I did not\n<mvo> zyga: thank you, I have a look now\n<mvo> zyga: aha, neat, that looks interessting\n<mborzecki> https://github.com/snapcore/snapd/pull/5994 is green, land it?\n<mup> PR #5994: tests/main/interfaces-accounts-service: more debugging <\u00e2\u009b\u0094 Blocked> <Created by bboozzoo> <https://github.com/snapcore/snapd/pull/5994>\n<mup> PR snapcraft#2357 opened: scons plugin: add support for bases <Created by sergiusens> <https://github.com/snapcore/snapcraft/pull/2357>\n<mup> PR snapd#6001 opened: interfaces: typo 'allows' for consistency with other ifaces <Created by zyga> <https://github.com/snapcore/snapd/pull/6001>\n<mup> PR snapd#5994 closed: tests/main/interfaces-accounts-service: more debugging <Created by bboozzoo> <Merged by zyga> <https://github.com/snapcore/snapd/pull/5994>\n<mup> PR snapd#5988 closed: cmd: rename ns_group to mount_ns <Simple \u00f0\u009f\u0098\u0083> <Created by zyga> <Merged by zyga> <https://github.com/snapcore/snapd/pull/5988>\n<mborzecki> https://paste.ubuntu.com/p/3D95h34pXs/\n<mborzecki> heh, so i broke dbus/gdbus/goa https://paste.ubuntu.com/p/4bF95krMWf/\n<mup> PR snapd#5995 closed: tests/main/interfaces-accounts-service: switch to manual while we debug the test <Created by bboozzoo> <Closed by bboozzoo> <https://github.com/snapcore/snapd/pull/5995>\n<mup> PR snapd#6002 opened: interfaces/system-key: add parser mtime and only discover features on write - 2.36 <Created by jdstrand> <https://github.com/snapcore/snapd/pull/6002>\n<Chipaca> mborzecki: the dbus snakes are attacking\n<pstolowski> zyga: might be worth re-running the tests on 5170, they were last run 19 days ago\n<zyga> pstolowski: great point\n<zyga> pstolowski: they will fail on accounts service ;-)\n<pstolowski> :)\n<mup> PR snapd#5998 closed: osutil: tweak handling of error adduser errors <Created by mvo5> <Merged by mvo5> <https://github.com/snapcore/snapd/pull/5998>\n<jdstrand> mvo: fyi, https://github.com/snapcore/snapd/pull/6002/\n<mvo> jdstrand: thank you!\n<mup> PR #6002: interfaces/system-key: add parser mtime and only discover features on write - 2.36 <Created by jdstrand> <https://github.com/snapcore/snapd/pull/6002>\n<jdstrand> mvo: fyi, I'll let you decide on PR 5980, PR 5981 and PR 5982 for 2.36 (I'm not pushing for it-- might be nice to have more testing), but it would be nice if they were in trunk by SLC\n<mup> PR #5980: interfaces/apparmor: conditionally add explicit deny rules for ptrace <Created by jdstrand> <https://github.com/snapcore/snapd/pull/5980>\n<mup> PR #5981: interfaces/many: updates to support k8s worker nodes <Created by jdstrand> <https://github.com/snapcore/snapd/pull/5981>\n<mup> PR #5982: interfaces/many: conditionally use 'unsafe' with docker-support change_profile rules <Created by jdstrand> <https://github.com/snapcore/snapd/pull/5982>\n<jdstrand> mvo: that's just an fyi for what I'm thinking about. I know you're busy, so whatever you decide\n<sergiusens> mvo: cachio are are your travis pull requests just stalled? A quick check on your PR run tells me so, our are too \u00f0\u009f\u0098\u00a2\n<cachio> sergiusens, we have several on the queue\n<sergiusens> but none are running right? just waiting?\n<cachio> 2 running\n<cachio> the rest waiting\n<cachio> 3 running\n<sergiusens> ah, I see, closer to the bottom https://travis-ci.org/snapcore/snapd/pull_requests\n<cachio> :)\n<sergiusens> mvo: what is the ETA for core16 coming to stable? Not rushing, just getting my ducks aligned \u00f0\u009f\u0099\u0082\n<zyga> Chipaca, mvo: shall we land the .po update?\n<Chipaca> zyga: I'm not sure I can +1 it at this point :)\n<mvo> sergiusens: thats a sil2100 question now :)\n<mvo> sergiusens: foundations works on this\n<mvo> zyga: yes\n<mvo> Chipaca: no? why not?\n<Chipaca> zyga: mvo: but I +1 the ones mvo committed\n<Chipaca> mvo: 5 commits,  4 by me\n<mvo> Chipaca: haha\n<mvo> Chipaca: ok\n<Chipaca> there, I +1'ed it :)\n<mup> PR snapd#5935 closed: po: sync translations from launchpad <Created by mvo5> <Merged by chipaca> <https://github.com/snapcore/snapd/pull/5935>\n<mvo> thanks zyga\n<mborzecki> hm i can reproduce the problem with dbus when goa-daemon is in the process of dying and a call is made, at least in that situation busctl delivers more meaningful error message\n<mborzecki> still, we do not kill goa-daemon in the test\n<mvo> mborzecki: nice\n<zyga> mborzecki: my PR has kills it\n<Chipaca> zyga: mvo: #5980 has two +1's (from you two), is green, but jdstrand said it was ready for re-review. Seems to me to be a quick one :)\n<mup> PR #5980: interfaces/apparmor: conditionally add explicit deny rules for ptrace <Created by jdstrand> <https://github.com/snapcore/snapd/pull/5980>\n<sil2100> mvo, sergiusens: aaaaa, for core16 it's well, not foundations as far as I know\n<sil2100> mvo, sergiusens: since I don't have upload access for core16 in the store or even snap recipe access (AFAIK)\n<mvo> sil2100: for core16 it is - for \"core\" (without the 16) we are still in charge\n<sergiusens> mvo feels like it might still be your problem if only to transition correctly \u00f0\u009f\u0098\u0085\n<mvo> sil2100: sounds like we need to fix the access :)\n<Chipaca> I could use reviews on #5957 (it unblocks #5955)\n<mup> PR #5957: overlord/snapshotstate/backend: fall back on sudo when no runuser <Snapshots \u00f0\u009f\u0093\u00b8\u00f3\u00a0\u0081\u009f> <Created by chipaca> <https://github.com/snapcore/snapd/pull/5957>\n<mup> PR #5955:  cmd/snap, tests: snapshots for all <Snapshots \u00f0\u009f\u0093\u00b8\u00f3\u00a0\u0081\u009f> <\u00e2\u009b\u0094 Blocked> <Created by chipaca> <https://github.com/snapcore/snapd/pull/5955>\n<mvo> sil2100: snap recipe is here https://github.com/snapcore/core16\n<mvo> sil2100: and you should have store access now :)\n<sil2100> mvo: thank you!\n<mvo> sil2100: let me know if I can help, sorry if my earlier reply to sergiusens  sounded strange, I think for core16 we need the same mechanisms as for core18, i.e. a watcher that scans for package changes and that then triggers a core16 build plus some (auto) testing\n<sil2100> mvo: sure! The script for core18 is ready btw., just waiting for some time to poke Steve about a nice comfy place for it to be on\n<sil2100> Hopefully I won't have to create a new instance for it, my mojo mojo is weak\n<mvo> sil2100: cool\n<mvo> sil2100: yeah, I had the same problem with my cnf-extractor-charm - fortunately I was rescued by IS\n<mvo> sil2100: speaking of this, thats something I need to talk to steve about as well :)\n<mvo> sil2100: anyway, none of your concerns (most likely)\n<tomwardill> hello! A question, what happens if a snap pre-refresh hook fails? Can it abort the refresh and continue with the existing installed version?\n<Chipaca> tomwardill: yes\n<pstolowski> tomwardill: it should work that way yes, are you experiencing something else?\n<tomwardill> Chipaca, pstolowski: We've not tried yet, was just checking if it worked that way\n<tomwardill> is it just a case of exit(1) from the hook?\n<Chipaca> tomwardill: yep\n<tomwardill> excellent, thanks.\n<Chipaca> at least that's what the integration test uses :-)\n<sil2100> sergiusens: anyway, we weren't looking at core16 recently yet\n<sil2100> sergiusens: so I guess it\n<sil2100> argh, I guess it\n<sil2100> (keyboard errors)\n<sil2100> I guess it'll still take a bit\n<sil2100> Since you mentioned it now, I'm doing an image test build to see what's the current state\n<mup> PR snapd#6003 opened: cmd/snap: block 'snap help <cmd> --all' <Simple \u00f0\u009f\u0098\u0083> <Created by chipaca> <https://github.com/snapcore/snapd/pull/6003>\n<Chipaca> hmm, hmm, snap refresh --offline\n<pedronis> Chipaca: what would that do ?\n<Chipaca> pedronis: remember apt-zip?\n<pedronis> no\n<Chipaca> https://wiki.debian.org/AptZip\n<pedronis> I see\n<Chipaca> pedronis: context is a person in the forum in 'the heart of africa' (says their profile), 3rd world with intermittent energy and connectivity, wanting to only talk to the store once and get everything for multiple devices\n<Chipaca> pedronis: I tagged you in one of the topics on this, there's a second (linked to that one)\n<Chipaca> anyway, i'm off for a bit\n<mup> PR snapd#6004 opened: cmd/snap-confine: reduce verbosity of debug and error messages <Created by zyga> <https://github.com/snapcore/snapd/pull/6004>\n<jdstrand> mvo: I think this is what sergiusens may have been reporting. it looks like my 5981, 5989 and 6002 PRs are 'stuck'. 'Details' show all green for 5981, shows spread at 6 minutes for 5989 (did that restart?) and show nothing started for 6002\n<jdstrand> mvo: let me know if I should do something\n<zyga> dpkg-deb: error: <compress> from tar -cf subprocess was killed by signal (Illegal instruction), core dumped\n<zyga> that's a new error\n<mup> PR snapd#5992 closed: release: merge 2.35.5 changes into the 2.36 branch <Created by mvo5> <Merged by zyga> <https://github.com/snapcore/snapd/pull/5992>\n<mvo> jdstrand: sorry for the slow reply - \"stuck> not sure what we can do, I poke around a bit\n<zyga> hey mvo\n<zyga> back from sports?\n<mvo> zyga: yes\n<zyga> mvo: I wonder if I can and 6001 today\n<zyga> mvo: there's a deadlock in one of the tests: https://api.travis-ci.org/v3/job/442145572/log.txt\n<mvo> zyga: urgh\n<zyga> look for PC=0x5626a1bf1aa1\n<mvo> zyga: hrm, hrm, its not even clear where it hangs\n<jdstrand> mvo: no worries. let me know if I need to mash any buttons or anything\n<zyga> mvo: if still here can I land 5999\n<zyga> jdstrand: I know there are other priority things on your plate but gentle ping about the oldest open PR: https://github.com/snapcore/snapd/pull/5170\n<mup> PR #5170: interfaces/builtin: add adb interface <Created by zyga> <https://github.com/snapcore/snapd/pull/5170>\n<mup> PR snapcraft#2357 closed: scons plugin: add support for bases <Created by sergiusens> <Merged by sergiusens> <https://github.com/snapcore/snapcraft/pull/2357>\n<jdstrand> yes. it seems like it, but it isn't forgotten\n<zyga> that's great, I'll try to review your PRs tomorrow\n<zyga> jdstrand: I sent a rewording PR for snap-confine but it's just about making the debug and error messages more consistent so I didn't request your review on anything\n<zyga> there's a 2nd PR about IPC tweak (upgrading eventfd to a full pipe) so that the helper can do more\n<zyga> I don't think this is security critical either but if you want I can request your review\n<zyga> though I'd rather not really since it's just the start and I have more after that and it would probably not land this week\n<jdstrand> zyga: are they all static messages or is there string handling in the debug/error messages that changed?\n<jdstrand> s/is there/are there/\n<zyga> nothing new\n<zyga> just changing existing strings\n<zyga> no more string manipulation\n<zyga> (actually less, I remove some of the repeating arguments we keep saying over and over, like snap name)\n<zyga> In general I tried to make it more terse and more useful\n<mup> PR snapd#5980 closed: interfaces/apparmor: conditionally add explicit deny rules for ptrace <Created by jdstrand> <Merged by zyga> <https://github.com/snapcore/snapd/pull/5980>\n<zyga> jdstrand: can you please merge master into 5982\n<zyga> mvo: FYI: another PR had a deadlock in cmd/snap, something to be wary of\n<zyga> jdstrand: and 5981 please\n<zyga> ok, I gotta go\n<zyga> promised to watch Han Solo with my son :)\n<zyga> ttyl\n<jdstrand> zyga: nice, thanks! :)\n<jdstrand> zyga: enjoy :)\n * jdstrand wonders why 5981 is showing changes to master that were merged in 5980\n<jdstrand> after merging master\n<jdstrand> oh, it idn't have it yet\n<jdstrand> weird\n<mup> PR snapcraft#2358 opened: dotnet plugin: add support for bases <Created by sergiusens> <https://github.com/snapcore/snapcraft/pull/2358>\n<mvo> zyga: same package the deadlock?\n<mvo> zyga: might be worth running it with go test -count 1000\n<Chipaca> zyga: deadlock?\n<Chipaca> ah\n<Chipaca> han solo wins\n<slvn_> Hey, my 10 snaps games are published for a while. Only two of them appear in the listing of snapcraft.io\n<mup> PR snapd#6005 opened: snap/pack, snap/squashfs: remove extra copy before mksquashfs <Created by chipaca> <https://github.com/snapcore/snapd/pull/6005>\n<mup> PR snapd#6006 opened: tests: move spread-shellcheck to run-checks --static <Created by chipaca> <https://github.com/snapcore/snapd/pull/6006>\n<mup> PR snapcraft#2359 opened: [WIP] extensions: add glib <Created by kyrofa> <https://github.com/snapcore/snapcraft/pull/2359>\n#snappy 2018-10-17\n<mup> PR snapd#5969 closed: apparmor: add unit test for probeAppArmorParser and simplify code  <Created by mvo5> <Merged by chipaca> <https://github.com/snapcore/snapd/pull/5969>\n<mup> PR snapcraft#2356 closed: nodejs plugin: add support for bases <Created by sergiusens> <Merged by sergiusens> <https://github.com/snapcore/snapcraft/pull/2356>\n<mborzecki> morning\n<zyga>  Good morning\n<mborzecki> zyga: hey\n<zyga> Cold morning\n<mvo> hey zyga\n<zyga> Hey, how are you?\n<mvo> zyga: good, thank you - how are you?\n<mborzecki> mvo: morning\n<zyga> Good, last evening was fun :-) we loved the movie\n<mvo> hey mborzecki\n<mvo> lots of green tests today?\n<mborzecki> finally :)\n<mup> PR snapd#5948 closed: asserts, image: ensure kernel, gadget, base and required-snaps use valid snap names <Parallel installs \u00e2\u009b\u0093> <Created by bboozzoo> <Merged by bboozzoo> <https://github.com/snapcore/snapd/pull/5948>\n<mup> PR snapd#6003 closed: cmd/snap: block 'snap help <cmd> --all' <Simple \u00f0\u009f\u0098\u0083> <Created by chipaca> <Merged by mvo5> <https://github.com/snapcore/snapd/pull/6003>\n<mup> PR snapd#6005 closed: snap/pack, snap/squashfs: remove extra copy before mksquashfs <Created by chipaca> <Merged by mvo5> <https://github.com/snapcore/snapd/pull/6005>\n<mup> PR snapd#5999 closed: tests: ensure that goa-daemon is off <Created by zyga> <Merged by mvo5> <https://github.com/snapcore/snapd/pull/5999>\n<slvn_> Hey, my 10 snaps games are published for a while. Only two of them appear in the listing of snapcraft.io when searching in \"Games\", but appears in \"All snaps\". It seems Categories Game is not correctly detected. It happens also for many other Snaps.\n<zyga> Hey, slvn_ - I would recommend to ask in the four of you don\u00e2\u0080\u0099t get a reply here. It is still early and store people are in other time zones as well\n<mborzecki> slvn_: s/four/forum/\n<zyga> But do come back if you don\u00e2\u0080\u0099t get a reply! Thank you for making snaps :-)\n * zyga responds from a phone\n<pstolowski> mornings\n<zyga> Dzie\u00c5\u0084 dobry\n<mup> PR snapd#5997 closed: ifacestate: simplify task chaining in ifacestate.Connect <Created by stolowski> <Merged by stolowski> <https://github.com/snapcore/snapd/pull/5997>\n<slvn_> thanks, ok! I'll repost in a few hours\n<mborzecki> pstolowski: cze\u00c5\u009b\u00c4\u0087 :)\n<zyga> guten tag mvo :)\n<zyga> (not to force one minority language upon others)\n<mborzecki> https://www.reddit.com/r/linux/comments/9ool14/xdgportal_support_landed_on_firefox_nightly/\n<zyga> that's cool\n<mborzecki> Download (curl) error for 'http://download.opensuse.org/update/leap/42.3/oss/x86_64/libgcrypt20-32bit-1.6.1-45.1.x86_64.rpm':\n<mborzecki> heh\n<slvn_> zyga, btw, who should be contacted for http://snapcraft.io issue ?\n<sparkiegeek> slvn_: if you look in the footer, you'll see links to where to file bugs\n<mup> PR snapd#5979 closed: install: don't start disabled services <Squash-merge> <Created by anonymouse64> <Merged by mvo5> <https://github.com/snapcore/snapd/pull/5979>\n<zyga> mvo: could you please review https://github.com/snapcore/snapd/pull/5727 - this is affecting Firefox in the wild and it would be good to have in 2.36\n<mup> PR #5727: interfaces/builtin, cmd/snap-seccomp: Allow read-only ptrace, for the Breakpad crash reporter <Created by jld> <https://github.com/snapcore/snapd/pull/5727>\n<mvo> zyga: this is waiting for a security review, no? happy to do a review but it seems we need jamie, no?\n<zyga> yeah, I suppose you are right\n<zyga> https://github.com/snapcore/snapd/pull/6004 is green and I'd love to land it - it is just tweaking debug messages\n<mup> PR #6004: cmd/snap-confine: reduce verbosity of debug and error messages <Created by zyga> <https://github.com/snapcore/snapd/pull/6004>\n * zyga goes to bring a heater into the office\n<zyga> I miss the days of Pentium 4 heaters\n<sil2100> mvo, zyga: hey, could you fill in a bug for the non-working wifi here if you have a moment? https://bugs.launchpad.net/snap-core18\n<zyga> sure\n<zyga> wow\n<zyga> no bugs\n<zyga> must be some decent software!\n<mborzecki> Chipaca: what if we move static checks to a separate job?\n<sil2100> (/me deletes all bugs after they pop up)\n<mvo> sil2100: added a bug (cc zyga)\n<mborzecki> Chipaca: unit tests already take ~8 minutes, so the stage is 8+ minutes anyway\n<zyga> oh\n<zyga> do you want both? :)\n<zyga> I just wrote mine but haven't sent it\n<zyga> well, you have two now\n<mvo> :)\n<mvo> sorry!\n<Chipaca> mborzecki: 1/8th is still a serious chunk in the wrong direction\n<Chipaca> mborzecki: static checks in a separate job would work, but I worry about using too many jobs\n<mborzecki> Chipaca: if you take the 1-2m off unit tests & static checks, and put it in a separate job, the total of the 1st stage should not be significantly affected\n<mborzecki> Chipaca: probably only way to know is to arrange it that way :)\n<Chipaca> mborzecki: I'll do it, and then we see :-)\n<mborzecki> Chipaca: ok\n<Chipaca> static checks shouldn't need the build-dep\n<mborzecki> hm we do run some go tools as static checks though\n<mborzecki> misspel, vet?\n<Chipaca> a lot\n<Chipaca> but go is there already\n<Chipaca> we need the build deps for the c libs\n<mborzecki> oh, btw. i had that branch with gometalinter a while ago\n<Chipaca> also we could move the travis-sie unit tests to 1.10 and it might be a little bit faster\n<Chipaca> travis-side*\n<Chipaca> and, yes i can install shellcheck from snap, will need to tweak the python to look there first\n<Chipaca> or fiddle with PATH\n<Chipaca> hm\n<mborzecki> you can set SHELLCHECK=/some/path for spread-shellcheck\n<mborzecki> uh, or not\n<Chipaca> :-)\n<mborzecki> ok, that should be a trivial change :P\n<mvo> sil2100: added one more for you in snap-core18 bugs :)\n<mborzecki> there's SHELLCHECK_SHELL which is kind of useless because spread does bash anywya\n<sil2100> mvo: thanks! ;)\n<sil2100> The more bugs the merrier, right?!\n<Chipaca> mborzecki: doesn't spread run with -u on also?\n<mup> PR snapd#6001 closed: interfaces: typo 'allows' for consistency with other ifaces <Simple \u00f0\u009f\u0098\u0083> <Created by zyga> <Merged by stolowski> <https://github.com/snapcore/snapd/pull/6001>\n<sil2100> mvo, zyga: btw... core18 dailies! http://cdimage.ubuntu.com/ubuntu-core/18/pending/\n<zyga> thanks pawel!\n<sil2100> (didn't check if they actually work yet, since still sprinting)\n<zyga> I can check later today\n<mvo> sil2100: nice! build from what channel?\n<mvo> sil2100: good stuff in any case\n<sil2100> mvo: edge by default as for 16\n<mborzecki> Chipaca: yup, looks like -u is set\n<mvo> sil2100: interessting, thats a pretty high risk level. I wonder if we should reconsider this as the default (more so if that the default for uc16)\n<mvo> sil2100: but not now :)\n<sil2100> It's a daily, it's like how we usually build regular images with PROPOSED enabled\n<sil2100> But yeah, we can have a discussion about that, right now an edge-build is just what we need for testing purposes!\n<mvo> sil2100: ok, if it matches then thats ok I guess. edge is very edgy, probably more so than proposed. but not supper important right now\n<mvo> sil2100: +1 :)\n<sil2100> Like the edge is edgy idea ;)\n<mvo> sil2100: in the (very) old days the term was \"crack of the day\" :P but of course for our stuff the CI is a huge and effective filter so that term does no longer make sense (still amusing though)\n<mvo> sil2100: anyway, great progress, thank you!\n<mvo> sil2100: does it also include detection of changes in the core18 packageset? or is that something that will come later?\n<alocer> i m having font problems. no fonts are availble when using colibri or flock-chat in snap. i m on fedora 28 selinux disabled.\n<alocer> tryed to mount the font directories as specified in mount-snap.fstab but not succeeded.\n<alocer> any idea\n<Chipaca> mborzecki: hehe, if I run the checks using apt-provided shellcheck on 16.04, that shellcheck has no -x option, so the lack of a stdout lock makes it look like it's had too many mushrooms\n<Chipaca> mborzecki: e.g.,\n<Chipaca> el l =SHELL-NAeM CEO  D E1 , C O D E2Sp..e c ify-- edxicalluedce=tC (ODbEa1s,hC,OsDh,Ek2.s.h )\n<mvo> Chipaca: lol\n<zyga> mborzecki: thanks for the review, updated\n<mborzecki> Chipaca: haha\n<zyga> https://github.com/features/actions <- missing a \"push to snap store\"\n<niemeyer> Yo\n<Chipaca> Wa\n<niemeyer> zyga: Yeah, I thought the same thing when I saw it.. this opens up some nice possibilities\n<zyga> I don't know if this is powered by or simply integrated with hashicorp tech though\n<zyga> but something to look at for sure\n<zyga> Chipaca: did you see https://bugs.launchpad.net/snapd/+bug/1796125\n<mup> Bug #1796125: services in a snap with dependencies aren't started in correct order on install <snapd:New> <https://launchpad.net/bugs/1796125>\n<mborzecki> anyone up for a review of #5959?\n<mup> PR #5959: systemd: extend Status() to work for socket and timer units <Created by bboozzoo> <https://github.com/snapcore/snapd/pull/5959>\n<zyga> looking\n<zyga> ah\n<zyga> I did :<\n<zyga> sorry\n<zyga> mborzecki: it has a conflict\n<Chipaca> I could really use reviews on #5957\n<mup> PR #5957: overlord/snapshotstate/backend: fall back on sudo when no runuser <Snapshots \u00f0\u009f\u0093\u00b8\u00f3\u00a0\u0081\u009f> <Created by chipaca> <https://github.com/snapcore/snapd/pull/5957>\n<mborzecki> zyga: didn't notice, thanks\n<mborzecki> and pushed\n<pstolowski> zyga: commented on ipc/helper pr\n<zyga> thanks\n<zyga> pstolowski: replied, thank you\n<niemeyer> zyga: I think it's completely unrelated to HashiCorp.. they just reused the HCL, which is a JSON-like format that is nicer to type by hand\n<zyga> ah, I didn't know that\n<mborzecki> zyga: Chipaca: left a note in #1796125, looks like this is a problem in systemd but i has gone unnoticed for years now, doesn't change the fact we should do something about that\n<niemeyer> It's a nice format..\n<mup> Bug #1796125: services in a snap with dependencies aren't started in correct order on install <snapd:New> <https://launchpad.net/bugs/1796125>\n<alocer> just trying to figure out what fonts does and snap app use ?\n<mborzecki> zyga: Chipaca: btw. https://github.com/systemd/systemd/pull/7947 is fun to read\n<mup> PR systemd/systemd#7947: man: systemctl doesn't operate multiple units in a single transaction <documentation> <Created by johnlinp> <https://github.com/systemd/systemd/pull/7947>\n<mborzecki> fwiw https://lists.freedesktop.org/archives/systemd-devel/2018-January/040122.html is fun too\n<Chipaca> alocer: sorry, what's that again?\n<Chipaca> mborzecki: sounds like we need to work around the systemd bug by ordering things ourselves as well\n<Chipaca> mborzecki: zyga: either of you have a fedora 28 so you could look into reproducing alocer's issue?\n<mborzecki> Chipaca: either that or adding Requires/RequiredBy\n<Chipaca> mborzecki: requires/requiredby means you can't stop one without t'other\n<zyga> Chipaca: hmm? which issue is taht\n<mborzecki> Chipaca: yeah\n<Chipaca> alocer: what's the output of 'snap version'?\n<Chipaca> zyga: no fonts in colibri\n<mborzecki> zyga: fonts ^^ ~10:53\n<zyga> mborzecki: wow, I don't see that message, can you paste it again\n<zyga> IRC WTH?\n<Chipaca> zyga: search for alocer?\n<zyga> Chipaca: I looked\n<Chipaca> zyga: IRC is fine, your async client is wacko\n<mborzecki> 10:55:20      alocer | any idea\n<Chipaca> <alocer> i m having font problems. no fonts are availble when using colibri or flock-chat in snap. i m on fedora 28 selinux disabled.\n<Chipaca> <alocer> tryed to mount the font directories as specified in mount-snap.fstab but not succeeded.\n<Chipaca> zyga: ^\n<zyga> thanks\n * zyga looks\n<zyga> alocer: hold on please\n<zyga> alocer: so just install colibri and run it?\n<Chipaca> zyga: seriously it's not the first time i see irccloud mess up basic message delivery on you\n<zyga> alocer quit on ping timeout here\n<zyga> :/\n<Chipaca> zyga: here as well\n<zyga> hmm https://www.irccloud.com/pastebin/uC4kEeDp/\n<zyga> I see a gazillion fonts in /usr/share/fonts\n<zyga> when I do snap run --shell colibri I cannot get the app to start\n<zyga> desktophelpers quit\n<zyga> as I cannot reproduce the issue and I suspect the desktop-launch is at fault I would recommend someone that maintains it to look deeper\n<zyga> I can launch colibri by running the real command though\n * zyga sighs that pastebinit is broken out of the box for several releases on fedora :/\n<zyga> willcooke: hey, do you know who maintains desktop-launch?\n<zyga> https://paste.ubuntu.com/p/bCfTD2k65M/ <- shellcheck on the desktop helpers\n<zyga> I didn't investigate what failed\n<willcooke> zyga, kenvandine\n<zyga> thanks!\n<willcooke> zyga, well, desktop team, but Ken is the main man\n<zyga> kenvandine: hey, could you give me a hand debugging app startup issue on fedora\n<zyga> I can run the app just fine manually in snap run --shell\n<zyga> but when invoked through desktop-launch it doesn't start at all\n<zyga> willcooke: super, I'll work with ken on this\n<willcooke> oSoMoN, are you able to offer any advice there too? ^\n<oSoMoN> zyga, maybe I can help, how does it fail?\n<zyga> oSoMoN: prints nothing at all\n<zyga> let me see if I can massage it to run with set -x\n<zyga> oSoMoN: https://paste.ubuntu.com/p/cjHb2cGhMg/\n<zyga> this is from snap run --shell\n<zyga> oSoMoN: if I just run ./colibri it does start\n<zyga> but fonts look wrong\n<zyga> and it shows this text:\n<zyga> colibri invoked without desktop helpers on fedora 28 https://www.irccloud.com/pastebin/XP18dwTR/\n<oSoMoN> zyga, so it looks like it's going through the entire desktop-launch script fine, and then fails on the exec?\n<zyga> dunno\n<mborzecki> zyga: the fonts look a bit odd here too, a bit fuzzy i'd say\n<zyga> I see huge fonts\n<zyga> btw I have a hi-dpi setup\n<mborzecki> and the size is off too\n<oSoMoN> zyga, can you comment out all of the contents of desktop-launch but the last line (exec), and see if that works?\n<zyga> pstolowski: can you look at https://github.com/snapcore/snapd/pull/6004#discussion_r225866841 please\n<mup> PR #6004: cmd/snap-confine: reduce verbosity of debug and error messages <Created by zyga> <https://github.com/snapcore/snapd/pull/6004>\n<zyga> oSoMoN: sure\n<zyga> oSoMoN: done, what did you expect to happen?\n<zyga> I got https://paste.ubuntu.com/p/BbTqzyXmCt/\n<pstolowski> zyga: replied\n<zyga> ++ cat /home/zyga/snap/colibri/8/.config/user-dirs.dirs.md5sum\n<zyga> + [[ 7b7b9530d5860d479bc2941ec3351c69  - != \\7\\b\\7\\b\\9\\5\\3\\0\\d\\5\\8\\6\\0\\d\\4\\7\\9\\b\\c\\2\\9\\4\\1\\e\\c\\3\\3\\5\\1\\c\\6\\9\\ \\ \\- ]]\n<zyga>  \n<zyga> this looks ... od?\n<zyga> odd\n<pstolowski> sorry for confusion ;)\n<zyga> thanks, will do :)\n<zyga> oSoMoN: I'n not an expert on the desktop stack but since this is a shell script and I am terrible with shell I started by running shellcheck on it, perhaps it would be good to look at the list and see if anything could be a factor\n<oSoMoN> zyga, I'm not a shell script expert either\n<oSoMoN> zyga, I meant to comment out everything except for the last line, looks like you did the opposite\n<zyga> wait, what?\n<zyga> so just exec?\n<zyga> if so then I tried that and then the application does start\n<zyga> so something set along the way makes it not start\n<mvo> niemeyer: could you please add github.com/snapcore/classic-snap to the list of things that mup watches?\n<niemeyer> mvo: Of course\n<mvo> thank you\n<mvo> https://github.com/snapcore/classic-snap/pull/20 is the PR that made me ask about it. reviews welcome :)\n<mup> PR classic-snap#20: port classic to UC18 <Created by mvo5> <https://github.com/snapcore/classic-snap/pull/20>\n<niemeyer> mvo: That's done\n<mvo> ta\n<niemeyer> Woah...\n<niemeyer> https://usercontent.irccloud-cdn.com/file/WHV6Qd8P/image.png\n<niemeyer> That makes the day...\n<mvo> niemeyer: yeah! Chipaca already used it to fix typos :)\n<niemeyer> Super cool\n<Chipaca> :-)\n * Chipaca wonders if \"you will be attributed in the commit\" is satisfied by a commit log of \"$you is a fool\"\n<zyga> mvo: reviewed\n<zyga> niemeyer: yeah, I saw that too, it's awesome to have that :)\n<zyga> perfect for typo and other things\n<Chipaca> mborzecki: snaps work on travis, but snapd isn't there by default. shellcheck on travis is 0.46, which is sufficiently new i think?\n<Chipaca> mborzecki: it's not 0.50, but 0.50 isn't even out yet :)\n<oSoMoN> zyga, can I easily reproduce in a fedora VM, or does this require some preliminary set-up?\n<zyga> oSoMoN: just install and run\n<oSoMoN> ok, I'll try that\n<zyga> thanks! let me know if I can help\n<oSoMoN> I'm downloading a fedora ISO, I'll let you know when I reproduce the issue and start investigating it\n<zyga> ok\n<mborzecki> Chipaca: any chance of getting a more recent version? iirc 0.5 i had here was more picky about out code than the version in 18.04 which is 0.4.6\n<Chipaca> mborzecki: grmbl. ok.\n<Chipaca> indeed 0.4.6 not 0.46\n<mborzecki> hm to do start the after/before services correctly then, we'd need to do the topo sort again\n<mborzecki> s/to do/to/\n<mborzecki> wonder if we could make that sort generic, iirc zyga will need something like this for mounts\n<zyga> yes please\n<zyga> we shoud\n<zyga> lattice or whatever\n<Chipaca> mborzecki: remind me, do we validate before/afters?\n<Chipaca> for cycles, i mean\n<mborzecki> Chipaca: yes, we do the 'sorting' but we're more interested in finding cycles\n<Chipaca> ah ok\n<mborzecki> Chipaca: but the algo is there\n<mborzecki> iirc we're using kahn\n<Chipaca> hah, validateAppOrderCycles\n<Chipaca> \"m\u00c3\u00a1s claro, echale agua\"\n<mborzecki> i added it so i should probably be the one to fix it now :)\n<Chipaca> mborzecki: it's a lovely little algo tho\n<Chipaca> _please_ can i have reviews of #5957\n<mup> PR #5957: overlord/snapshotstate/backend: fall back on sudo when no runuser <Snapshots \u00f0\u009f\u0093\u00b8\u00f3\u00a0\u0081\u009f> <Created by chipaca> <https://github.com/snapcore/snapd/pull/5957>\n<Chipaca> pedronis: what's #5712 waiting for?\n<mup> PR #5712: overlord: make InstallMany work like UpdateMany, issuing a single request to get candidates <Reviewed> <Created by pedronis> <https://github.com/snapcore/snapd/pull/5712>\n<pedronis> Chipaca: more tests and a refactoring\n<pedronis> Chipaca: related to the Validate*Flags helpers, if you remember I used them more uniformly now\n<Chipaca> pedronis: ah. Should it get marked Blocked?\n<Chipaca> otherwise a trigger-happy me might merge it :)\n<pedronis> Chipaca: well, it wouldn't hurt anything\n<pedronis> it would just need a follow up\n<Chipaca> hmm\n<pedronis> sorry, I always hope to have that 30mins\n<Chipaca> :-D\n<pedronis> to do the thing\n<pedronis> but hasn't happened yet\n<pedronis> if it's annoying I can also temporarely close it\n<zyga> Chipaca: done\n<Chipaca> pedronis: no planning to have 30 minutes around ubuntu release time\n<zyga> brb, coffee time\n<mup> PR classic-snap#21 opened: create: improve user information <Created by mvo5> <https://github.com/snapcore/classic-snap/pull/21>\n<mvo> yay, thanks mup!\n<zyga> mvo: done\n<mvo> ta\n * mvo hugs zyga\n<zyga> I didn't get the coffee\n<zyga> ok, really coffee\n<Chipaca> jdstrand: #5727 could use a once-over from you i think\n<mup> PR #5727: interfaces/builtin, cmd/snap-seccomp: Allow read-only ptrace, for the Breakpad crash reporter <Created by jld> <https://github.com/snapcore/snapd/pull/5727>\n<mborzecki> off to pick up the kids\n<zyga> re\n<zyga> coffee expanded into lunch\n<Chipaca> lunch? so early?\n<Chipaca> \u00e2\u0080\u00a6 oh wait\n<Chipaca> drat\n<Chipaca> i had a morning, once\n<Chipaca> zyga: should I do the rename I mention in #5957?\n<zyga> Chipaca: looking\n<mup> PR #5957: overlord/snapshotstate/backend: fall back on sudo when no runuser <Snapshots \u00f0\u009f\u0093\u00b8\u00f3\u00a0\u0081\u009f> <Created by chipaca> <https://github.com/snapcore/snapd/pull/5957>\n<Chipaca> zyga: the 'unify' comment\n<zyga> thinking\n<zyga> I added an idea but really this is bike shed hue now :)\n<zyga> Chipaca: is 2PM early for lunch?\n<pstolowski> it's not\n * pstolowski lunches\n<axino> hi\n<axino> is there a \"snap\" command knob to tell me if an installed snap has \"strict\" or \"classic\" confinement ?\n<ijohnson> axino: `snap info snap-name --verbose` and under \"notes\"\n<axino> ijohnson: nice, thanks !\n<niemeyer> Hey folks, we've got a conflict today in our standup, but would be nice to run that exercise for defining the features for the upcoming cycle.. should we/can we postpone the meeting today for an hour?\n<Chipaca> axino: if it's installed,  'snap list snap-name', if it's classic it says 'classic' in the Notes column\n<axino> Chipaca: ack, thanks\n<pstolowski> niemeyer: fine by me\n<mvo> niemeyer: works for me\n<niemeyer> Thanks, I've moved the calendar event\n<jdstrand> Chipaca: ack, yes\n<zyga> uh\n<zyga> did standup move?\n<zyga> ah, I see\n * zyga gets back to coding\n<Chipaca> jdstrand: thanks! :-)\n<mup> PR snapd#5959 closed: systemd: extend Status() to work for socket and timer units <Created by bboozzoo> <Merged by bboozzoo> <https://github.com/snapcore/snapd/pull/5959>\n<sergiusens> zyga: oSoMoN I wouldn't put too much effort in the shellcheck stuff, you might as well copy over from the extensions work (which has been shellchecked) https://github.com/snapcore/snapcraft/pull/2359/files\n<mup> PR snapcraft#2359: [WIP] extensions: add glib <Created by kyrofa> <https://github.com/snapcore/snapcraft/pull/2359>\n<zyga> sergiusens: nice, thank you for the tip!\n<mup> PR snapd#6007 opened: tests/lib: add an @mozilla.com exception to the CLA checker <Simple \u00f0\u009f\u0098\u0083> <\u00e2\u009b\u0094 Blocked> <Created by chipaca> <https://github.com/snapcore/snapd/pull/6007>\n<mup> PR snapd#6008 opened: client, daemon, cmd/snap: indicate that services are socket/timer activated <Created by bboozzoo> <https://github.com/snapcore/snapd/pull/6008>\n<mborzecki> Chipaca: something you may want to look at ^^\n<Chipaca> will do\n<mborzecki> it's passing the status of activators to the client, so now we can play with the ui all we want\n<mup> PR snapd#6009 opened: cmd: use relative file names in locking APIs <Simple \u00f0\u009f\u0098\u0083> <Created by zyga> <https://github.com/snapcore/snapd/pull/6009>\n<mborzecki> i suppose `snap stop` `snap start` should also DTRT wrt after/before\n<Chipaca> mborzecki: as suppositions go, that's a solid one\n<mup> PR snapd#6010 opened: cmd/snap-discard-ns: add support for per-user mount namespaces <Created by zyga> <https://github.com/snapcore/snapd/pull/6010>\n<mborzecki> having 2 separate paths to call sysstemctl is so much fun :)\n<oSoMoN> sergiusens, I'm not planning on applying shellcheck fixes to the desktop helpers, but I want to understand why this doesn't work under fedora\n<sergiusens> oSoMoN: I will not get in your way there \u00f0\u009f\u0099\u0082\n<Chipaca> mborzecki: let's fix that\n<Chipaca> mborzecki: i forget why we have two :-)\n<zyga> new standup time :)\n<Chipaca> mborzecki: once upon a time, everything systemd went via systemd-the-package\n<Chipaca> meaning reimplementing things for runit or whatever was just writing a systemd-the-package-alike\n<zyga> mborzecki: can you please give a final vote on https://github.com/snapcore/snapd/pull/6004\n<Chipaca> today it's probably less true :-D\n<mup> PR #6004: cmd/snap-confine: reduce verbosity of debug and error messages <Created by zyga> <https://github.com/snapcore/snapd/pull/6004>\n<mup> PR classic-snap#22 opened: make snapcraft.yaml architecture specific <Created by mvo5> <https://github.com/snapcore/classic-snap/pull/22>\n<niemeyer> pedronis: Yeah, that's the code we were just discussing.. some more digging and testing is needed\n<niemeyer> pedronis: Have a good one\n<niemeyer> Chipaca: So, back to media, sorry for the detail\n<niemeyer> derail\n<mup> PR snapcraft#2361 opened: schema: remove deprecated plugin pull and build-properties <Created by sergiusens> <https://github.com/snapcore/snapcraft/pull/2361>\n<pstolowski> i'll dig in in the morning and see if we're missing normalization somewhere\n<Chipaca> niemeyer: \u00e2\u0080\u00a6 ?\n<niemeyer> Chipaca: Sorry... I suggest going forward with the plan and preserving the current shape of our API, having \"icons\" as an independent entry\n<zyga> re\n<zyga> somewhat related https://github.com/snapcore/snapd/pull/6012\n<mup> PR #6012: interfaces: fix NormalizeInterfaceAttributes, add tests <Created by zyga> <https://github.com/snapcore/snapd/pull/6012>\n<zyga> Chipaca: ^\n<mup> PR snapd#6012 opened: interfaces: fix NormalizeInterfaceAttributes, add tests <Created by zyga> <https://github.com/snapcore/snapd/pull/6012>\n<cachio> mvo, 2.35.4 is stable now\n<cachio> mvo, smoke test in progress\n<Chipaca> niemeyer: wait, what for?\n<niemeyer> Chipaca: We can also add banners when we have a clear idea of how they look like, but we should clarify the discrepancies that exist between the spec and the dev API spec\n<Chipaca> niemeyer: there's never more than one icon AFAIK\n<Chipaca> niemeyer: is there going to be?\n<niemeyer> Chipaca: Oh my.. I thought we were missing it.. so that's *also* duplciate\n<niemeyer> duplicated\n<niemeyer> Chipaca: We just the banner then.. I wonder if we need more htan one\n<niemeyer> Chipaca: Either way, we should clarify if it's the dev API doc or the spec that is right\n<niemeyer> Chipaca: The dev API doc mentions \"key\", and \"filename\"\n<Chipaca> niemeyer: isn't the dev api the one snapcraft talks?\n<niemeyer> Chipaca: The comment is likely just bogus.. it mentions a filename, and provides an example without a URL\n<niemeyer> Chipaca: Well, or maybe not.. it's indeed storing the content, in which case it's the \"url\" parameter in the API that is unnecessary\n<mup> PR snapd#6013 opened: Revert \"snap, client, daemon, store: use and expose \"media\" more (#5906)\" <Created by chipaca> <https://github.com/snapcore/snapd/pull/6013>\n<Chipaca> niemeyer: I'm sure your statements make sense in the context of whatever it is you're looking at, but without that context I'm lost\n<zyga> mvo: if still around please look at 6012\n<niemeyer> Chipaca: https://dashboard.snapcraft.io/docs/api/snap.html#get--dev-api-snaps-(snap_id)-binary-metadata\n<zyga> I had a look at how Normalize is used as well\n<Chipaca> niemeyer: that's not an api we talk to, is it?\n<niemeyer> Chipaca: Yeah, it's somewhat irrelevant, other than for understanding how we get what we get. On our end the problem is simpler.. we just need to support banners, and banner icon... the one question we need answered still is what's the use for those values.. can we have multiple banners, and why\n<niemeyer> Chipaca: Same thing for banner icon\n<Chipaca> a confirmation over icon being single would be nice\n<Chipaca> as well\n<Chipaca> niemeyer: in any case, #6013 reverts #5906\n<mup> PR #6013: Revert \"snap, client, daemon, store: use and expose \"media\" more (#5906)\" <Created by chipaca> <https://github.com/snapcore/snapd/pull/6013>\n<mup> PR #5906: snap, client, daemon, store: use and expose \"media\" more <Squash-merge> <Created by chipaca> <Merged by chipaca> <https://github.com/snapcore/snapd/pull/5906>\n<niemeyer> Chipaca: The obvious reasons for having multiple icons is format and size\n<Chipaca> niemeyer: pending confirmation of these things, a related question: should I make client standalone, and could I make snap use client instead of viceversa\n<Chipaca> and if yes, should I do that after the 1.10 move so we can use aliases\n<niemeyer> Chipaca: I think we had that agreement at some point, to avoid duplication by having the rest of the code importing client, which is okay. I can't remember if we ever discussed reasons for breaking that assumption with the \"snap\" package..\n<Chipaca> niemeyer: I think we just never got to it. It's a fair amount of work.\n<niemeyer> Chipaca: There are only two imports of \"snap\" inside the client, but that doesn't change what you just said\n<Chipaca> heh\n<Chipaca> i mean,  it's changing snap.Revision to client.Revision everywhere\n<Chipaca> that sort of thing\n<niemeyer> Chipaca: The alternative would be defining \"snap\" to be part of the client too\n<niemeyer> Chipaca: Which is reasonable to a degree..\n<Chipaca> client/snap/...\n<niemeyer> Chipaca: I mean just semantically, not necessarily the location itself\n<Chipaca> niemeyer: i got that, but we can have both\n<Chipaca> bah, i dunno\n<tomwardill> Hi, just to let you know the store is responding slowly / erroring, on both api and dashboard. We're working on it :)\n<Chipaca> and it's too late in the day to go poke\n<niemeyer> Chipaca: We have a bunch of *util packages in a similar category.. wouldn't be nice to have client/<everything>\n<niemeyer> tomwardill: Thanks for the note\n<niemeyer> Chipaca: And agreed, a bit late\n<zyga> tomwardill: thank you for the notice!\n<Chipaca> niemeyer: but there are things in snap that aren't client, so splitting it might be a good exercise\n<mvo> zyga: \\o/ you rock\n<zyga> mvo: I don't know if that is the problem though\n<zyga> I did not reproduce it\n<zyga> Chipaca: back now, sorry, the young one wanted food\n<mvo> zyga: it probably is not but still nice\n<zyga> Chipaca: reviewed https://github.com/snapcore/snapd/pull/5957#pullrequestreview-165744410\n<mup> PR #5957: overlord/snapshotstate/backend: fall back on sudo when no runuser <Snapshots \u00f0\u009f\u0093\u00b8\u00f3\u00a0\u0081\u009f> <Created by chipaca> <https://github.com/snapcore/snapd/pull/5957>\n<jdstrand> roadmr: hi! can you pull r1141 of the review-tools?\n<zyga> hey jdstrand\n<roadmr> jdstrand: sure, will do!\n<zyga> sorry for not doing more reviews\n<jdstrand> roadmr: it would be nice if it was in before SLC, but not mandatory\n<zyga> I'll try to tomorrow, I'm just about to wrap it\n<jdstrand> zyga: hey :) no worries. belive, I know how that can happen\n<zyga> jdstrand: I sent one interesting PR but not security critical\n<jdstrand> believe me*\n<zyga> still I wrote it as tightly as I could\n<zyga> jdstrand: do you remember MNT_DETACH and unmount\n<zyga> jdstrand: and the case that if a dentry is mounted in one mount namespace it is EBUSY to remove it in another\n<zyga> jdstrand: that got fixed in the kernel since\n<zyga> jdstrand: it's not fixed on CentOS or RHEL ... :-(\n<zyga> jdstrand: we very much rely on that so bummer\n<jdstrand> well, still progress\n<roadmr> jdstrand: I'll do my best :)\n<Chipaca> niemeyer: client uses store uses overlord/auth btw\n * zyga EODs\n<niemeyer> Chipaca: /o\\\n<niemeyer> zyga: Have a good night\n<jdstrand> roadmr: thanks :)\n<Chipaca> niemeyer: http://r.chipaca.com/snap.png\n<Chipaca> niemeyer: http://r.chipaca.com/client.png\n<Chipaca> niemeyer: osutil is orange just because it's cgo\n<mup> PR snapd#6014 opened: ifstate: fix decoding of json numbers <Created by mvo5> <https://github.com/snapcore/snapd/pull/6014>\n<Chipaca> updated those pngs with splines\n * zyga sends gentle reminder for someone to look at https://bugs.launchpad.net/snapd/+bug/1796125\n<cachio> mvo, https://paste.ubuntu.com/p/Sh4Zf7TyVc/\n<zyga> and really goes to play\n<mup> Bug #1796125: services in a snap with dependencies aren't started in correct order on install <snapd:New> <https://launchpad.net/bugs/1796125>\n<cachio> mvo, this is the issue what we see snapd.socket failing\n<cachio> mvo, sorry, this error is caused by systemd\n<zyga> mvo: reviewed your pr\n<zyga> and I'm gone for real\n<mvo> zyga: thank you! and totally agree, we may need to think about this in a deeper level :) enjoy your evening!\n<cachio> mvo, this is the error\n<cachio> https://paste.ubuntu.com/p/KQjX3SYNXz/\n<cachio> at least one error easy to reproduce\n<cachio> seem to be a race\n * cachio afk\n<zyga> kenvandine: hey\n<zyga> kenvandine: just FYI there's an issue with desktop-launcher on Fedora\n<kenvandine> zyga: what kind of issue?\n<kenvandine> i tested the GNOME snaps recently on fedora\n<zyga> kenvandine: calibri doesn't start with it\n<zyga> I spent some time debugging\n<zyga> if the launcher runs and sets up stuff the app doesn't start, just quits (I didn't strace it)\n<zyga> if I run the app directly it runs but some stuff is wonky (fonts)\n<zyga> kenvandine: oSoMoN also looked at it I believe\n<zyga> kenvandine: the script is full of shellcheck warnings, not sure if related\n<kenvandine> zyga: do other snaps work?\n<kenvandine> like gnome-calculator?\n<zyga> kenvandine: I haven't tried many snaps, let me look\n<kenvandine> zyga: those are just places where we could quote variables\n<kenvandine> but shouldn't effect this\n<zyga> kenvandine: perhaps but maybe there are real bugs in the noise\n<kenvandine> perhaps\n<zyga> installing now\n<zyga> kenvandine: it runs\n<kenvandine> ok, interesting\n<zyga> kenvandine: I'll leave the rest to you though, it's far too late for work now :)\n<kenvandine> i can't debug right now, working on release stuff\n<zyga> ack :)\n<kenvandine> zyga: i'll look at it soon though\n<zyga> snapd gets killed on fedora ...\n<zyga> snapd gets killed on fedora by systemd https://www.irccloud.com/pastebin/3VlZmBvX/\n<oSoMoN> kenvandine : I managed to observe the issue described by zyga in a fedora VM, but I'm afraid  I didn't go much further\u00e2\u0080\u00a6 chromium runs, and I've compared the desktop-launch scripts for chromium and colibri, the one for colibri appears to be a much older version, I\u00c2\u00a0wonder if rebuilding with a recent version would make things better?\n<kenvandine> maybe\n<mup> PR snapcraft#2362 opened: python plugin: add support for bases <Created by sergiusens> <https://github.com/snapcore/snapcraft/pull/2362>\n<oSoMoN> hrmmm, snapcraft is not available in fedora, and installing classic snaps doesn't appear to be supported :/\n<kenvandine> oSoMoN: nope\n<oSoMoN> kenvandine, I'm rebuilding the snap with a more recent desktop-launch script and will test in my fedora VM, will let you know how that goes\n<oSoMoN> kenvandine, zyga: a more recent desktop-launch script didn't change anything, the snap still won't run\n<oSoMoN> I wonder what's so special about that snap\n<koala_man> are there any snaps written in Haskell that I can look at? I can make my build work locally with 'snapcraft cleanbuild' but not on snapcraft.io\n<oSoMoN> kenvandine, zyga: I'm going offline and won't be around until Monday, if there hasn't been progress on that issue by then I can pick it up and continue investigatingq\n<mup> PR snapcraft#2361 closed: schema: remove deprecated plugin pull and build-properties <Created by sergiusens> <Merged by kyrofa> <https://github.com/snapcore/snapcraft/pull/2361>\n<mup> PR snapcraft#2363 opened: {make,cmake,autotools} plugin: add support for bases <Created by kyrofa> <https://github.com/snapcore/snapcraft/pull/2363>\n#snappy 2018-10-18\n<mup> PR snapcraft#2360 closed: plainbox-provider plugin: add support for bases <Created by sergiusens> <Merged by sergiusens> <https://github.com/snapcore/snapcraft/pull/2360>\n<mup> PR snapd#5957 closed: overlord/snapshotstate/backend: fall back on sudo when no runuser <Snapshots \u00f0\u009f\u0093\u00b8\u00f3\u00a0\u0081\u009f> <Created by chipaca> <Merged by chipaca> <https://github.com/snapcore/snapd/pull/5957>\n<mwhudson> what's the story with libseccomp and trusty and arm64 and ppc64el?\n<mwhudson> snapd is stuck in trusty-proposed because of this\n<mwhudson> oh wait no that's not why\n<mborzecki> morning\n<zyga> Hey\n<zyga> Did\n<zyga> Haha\n<zyga> My phone just fell and wrote this\n<mborzecki> zyga: hey\n<mborzecki> must be ai\n<zyga>  Hey mvo\n<mborzecki> mvo: hey\n<mvo> hey zyga and mborzecki\n<mvo> how is life today?\n<mborzecki> mvo: all red\n<mvo> urgh\n<mvo> do we know why?\n * mvo looks\n<zyga> It is all red because summer is over\n<mborzecki> mvo: random stuff afaict, there was some store hiccup yday too, maybe somewhat related\n<zyga> Well, that is one theory\n<zyga> Store was broken\n<zyga> So perhaps that is why\n * mvo nods\n<mborzecki> didn't we disable gccgo?\n<mvo> we can now, we got agreement we no longer need to support it\n<mborzecki> https://api.travis-ci.org/v3/job/442894803/log.txt the gccgo unit tests died in most mysterious way here\n<mborzecki> this PR https://github.com/snapcore/snapd/pull/5989\n<mup> PR #5989: interfaces/system-key: add parser mtime and only discover features on write <Created by jdstrand> <https://github.com/snapcore/snapd/pull/5989>\n<mborzecki> uhh, restarted the job, the log is gone :/\n<mwhudson> mvo: golang-1.10 is in proposed everywhere now \\o/\n<mvo> mwhudson: awesome, thank you so much!\n<pstolowski> mornings\n<pstolowski> mvo: thank you for getting to the bottom of decoding issue! i've left a comment\n<pedronis> pstolowski: is normalize enough though, any number ends up out of state as float, no?\n<mvo> pstolowski: thank you! also to pedronis for his comments. I figured this would need more discussion :)\n<mvo> pstolowski: if you know what to do, feel free to just take my PR (or just cherry pick the commit if its useful) and go wild\n<pstolowski> pedronis: hmm but not with json.DecodeWithNumbers as mvo proposed?\n<pedronis> pstolowski: indeed, but we still need to massage that\n<pedronis> I mean there is still a missing link\n<pedronis> one approach would be to teach normalize about json.Number I suppose\n<pstolowski> mvo: sure, i'll dig into it\n<zyga> pedronis: yeah, I think we should do exactly that\n<pedronis> we probably want to call normalize before NewConnection though\n<pstolowski> it's annoying this is a second instance of such issue (first was around configuration afair)\n<mup> PR classic-snap#22 closed: make snapcraft.yaml architecture specific <Created by mvo5> <Merged by mvo5> <https://github.com/snapcore/classic-snap/pull/22>\n<pedronis> carrying around Numbers\n<pedronis> is a bit strange\n<mvo> pedronis: yeah, I was thinking that (normalize learns about json.Number), I have something local but its so trivial that I'm not sure its worth pushing\n<mvo> (on top of the UseNumbers PR)\n<zyga> mvo: shall I merge https://github.com/snapcore/snapd/pull/6012 ?\n<mup> PR #6012: interfaces: fix NormalizeInterfaceAttributes, add tests <Created by zyga> <https://github.com/snapcore/snapd/pull/6012>\n<zyga> do you want it squashed?\n<mborzecki> damn, was checking out a problem with apparmor profiles not being loaded on arch, turns out i forgot to enable snapd.apparmor.service\n<mvo> zyga: I get the feeling we will need it squashfs yes\n<mvo> zyga: please do\n<mup> PR snapd#6012 closed: interfaces: fix NormalizeInterfaceAttributes, add tests <Created by zyga> <Merged by zyga> <https://github.com/snapcore/snapd/pull/6012>\n<mvo> zyga: thanks, I will cherry-pick into 2.36\n<zyga> thank you!\n<mvo> thank *you*\n<mvo> pstolowski: keep me updated please, I will go back to core18 (unless you want me to help of course)\n<mup> PR snapd#6009 closed: cmd: use relative file names in locking APIs <Simple \u00f0\u009f\u0098\u0083> <Created by zyga> <Merged by zyga> <https://github.com/snapcore/snapd/pull/6009>\n<pstolowski> mvo: will do, thanks\n<pstolowski> mvo, pedronis we could maybe make getAttribute reflect check smarter, if you convert to int if that's what caller requested, wdyt?\n<pstolowski> sorry, mistyped\n<pstolowski>  we could maybe make getAttribute reflect check smarter and convert to int if that's what caller requested\n<pedronis> pstolowski: it's a bit too different from what we do everywhere else\n<pedronis> pstolowski: I think the result of getConns\n<pedronis> needs to be sane\n<pstolowski> i see, fair point\n<pedronis> pstolowski: btw, do we have a similar problem with dynamic attributes?\n<pedronis> I know we normalize but is a bit unclear if that's enough\n<pedronis> pstolowski: we can reboot in the middle of an op and then dynamic attributes would also come from state on disk\n<pstolowski> pedronis: i'm not sure anymore tbh, possibly yes, i trusted normalization but missed that json decoding/encoding problem\n<pedronis> pstolowski: we might want to write some kind of test about that\n<pstolowski> pedronis: yes, this what i'm aiming at first\n<pedronis> needs to serialize and unserialize state with dynamic attrs\n<pedronis> in it\n<mup> PR classic-snap#20 closed: port classic to UC18 and put into \"18\" branch <Created by mvo5> <Merged by mvo5> <https://github.com/snapcore/classic-snap/pull/20>\n<mup> PR snapd#6015 opened: tests/unit/gccgo: drop gccgo unit tests <Created by bboozzoo> <https://github.com/snapcore/snapd/pull/6015>\n<mvo> hey sil2100 - happy release day\n<sil2100> mvo: hey! Happy release day o/\n<zyga> is today 18.10 day?\n<mup> PR snapd#6016 opened: [RFC] move various name validation helpers to snap/name package <Created by bboozzoo> <https://github.com/snapcore/snapd/pull/6016>\n<mborzecki> pedronis: hi, the snap name split proposal ^^\n<zyga> mborzecki: did you see https://forum.snapcraft.io/t/snapd-2-35-2-error-run-hook-configure-cannot-set-core-schedule-unsupported-system-option/8051\n<mborzecki> zyga: core.schedule?\n<zyga> mborzecki: didn't look at this more than \"looks like something you might know\"\n<mup> PR classic-snap#23 opened: create,classic: make the classic snap work on classic distributions (for 18) <Created by mvo5> <https://github.com/snapcore/classic-snap/pull/23>\n<mborzecki> opensuse mirrors at it again :(\n<mvo> zyga: I updated classic snap PR (21) you commented about. I will do shellcheck next and tests after that (need to think a bit about the tests)\n<zyga> mvo: can we use classic to run a script?\n<mvo> zyga: now we can\n<zyga> so that we could test \"running scripts inside classic\" via spread?\n<mvo> zyga: it was broken before\n<zyga> apt-get install && run something would be useful :)\n<zyga> perhaps a cli and a service?\n<mvo> zyga: sounds good, services are not supported (deliberately) but that needs a test too\n<zyga> ah I see\n<Chipaca> mvo: not supported as in won't install, or won't start?\n<Chipaca> did we come to an agreement about having 'install' not error if a service didn't start?\n<Chipaca> actually, before i get carried away: i need to go get a new phone :-(\n<zyga> oh\n<zyga> what happened?\n<mvo> Chipaca: correct, not starting\n<Chipaca> screen cracked, including the touchscreen, so no unlocking, so no 2fa\n<mvo> Chipaca: it will install fine (the service) but there will be a message that it won't run\n<Chipaca> mvo: nice\n<niemeyer> Chipaca: There's a Go app that generates the 2fa if you can still login.. it's quite convenient\n<niemeyer> Moins\n<mvo> good morning niemeyer\n<niemeyer> I'm a bit under the weather today, but feeling better compared to the night.. my voice just sounds like someone that shouldn't try to sing did some really hard singing\n<mup> PR classic-snap#24 opened: add shellcheck and fix warnings <Created by mvo5> <https://github.com/snapcore/classic-snap/pull/24>\n<zyga> mborzecki: hey, do you have a second\n<mborzecki> zyga: hm?\n<zyga> I'm looking at a bit of shell and not sure why it is structured like that\n<zyga> mborzecki: please look at snap-mgmt.sh.in, line 122\n<zyga> mborzecki: why do we do first a find\n<zyga> and then a for loop over a what looks like identical glbo\n<zyga> *glob\n<zyga> why not just iterate over find results?\n<zyga> is this fixing something?\n<mborzecki> zyga: don't know, i see it's the same in postrm in debian packaging, probable made its way from there\n<pedronis> zyga: probably the find and the glob fail differently\n<pedronis> zyga: it has a note in the postrm that some bits of that might not be mounted\n<pedronis> zyga: try  for a in /nonexisting/* ; do echo $a ; done  for example\n<zyga> right but the find would behave correctly?\n<zyga> could we not just iterate over results from find?\n<pedronis> zyga: the find fails too\n<pedronis> but the wc -l\n<pedronis> makes it work\n<zyga> ah, I see\n<zyga> right\n<zyga> because set -e is not active for pipe chains\n<zyga> makes sense, thank you pedronis\n<pedronis> but yes, maybe those needs for comment\n<pedronis> is usual shell fun\n<zyga> yes :)\n<pedronis> s/for/more/\n<mborzecki> the whole block should use find, `for mnt in $(find /run/snapd/ns -maxdepth 1 -name '*.mnt'); do ... done` or just find with -exec\n<mborzecki> heh, actually find is used properly in the file in some places, just not everywhere\n<mvo> mborzecki: yeah, I think it was just a suboptimal fix, looking at git history\n<mvo> mborzecki: go ahead and make it great :)\n<pedronis> mborzecki: ?\n<pedronis> mborzecki: that doesn't work if /run/snapd/ns doesn't exist\n<zyga> pedronis: I tested it just now\n<pedronis> zyga: ?\n<pedronis> do you have /run/snapd/ns ?\n<zyga> for i in $(find /nonexistent); do echo $i; done.\n<zyga> it says that the directory doesn't exist but exits successfully because of the sub-shell\n<pedronis> yea, that error is not nice though\n<zyga> yeah, I think we can make it better still, let me experiment\n<pedronis> anyway not sure it's the best time spent\n<pedronis> at this moment\n<pedronis> the current code is weird but not wrong or insane\n<zyga> I'm looking because I got a odd failure in that area\n<mborzecki> test -d .. && for .. ?\n<zyga> but perhaps 14.04 specific\n<zyga> it seems a symlink confused the inner parts of the loop\n<Chipaca> niemeyer: wrt #5906, what about: we keep the old behaviour, but also add a zeroth implementation of fields=,  just to cover media?\n<mup> PR #5906: snap, client, daemon, store: use and expose \"media\" more <Squash-merge> <Created by chipaca> <Merged by chipaca> <https://github.com/snapcore/snapd/pull/5906>\n<Chipaca> niemeyer: e.g. fields=+media\n<Chipaca> niemeyer: this assumes media is the end game tbh, which i'm not sure is what you meant\n<Chipaca> niemeyer: but I got conflicting messages yesterday as to whether it was the shape, or the duplication that you objected to\n<Chipaca> maybe it's both \u00c2\u00af\\_(\u00e3\u0083\u0084)_/\u00c2\u00af\n<niemeyer> Chipaca: It's both the shape and the duplication.. my concern is that we can't change our minds regularly once we have an API in the wild.. the best scenario is that the API is self-consistent, so we have a line of design that we can be truthful towards..\n<niemeyer> Chipaca: I wish we had media on day one, but we don't.. even if we agree this is the way to go, adding the field means being neither here nor there. If we keep this kind of design mindset, soon this will be a huge mess.\n<Chipaca> niemeyer: which is the design mindset you object to?\n<niemeyer> Chipaca: The mindset that it's okay to make the API inconsistent with itself everytime an idea that looks better than the prior one shows up\n<Chipaca> niemeyer: ok\n<greyback> quick qn: I have qemu-kvm installed but spread still fails for me with: https://pastebin.ubuntu.com/p/WxVpFGrJwD/ (selected qemu image exists and was created using adt-buildvm-ubuntu-cloud). Any idea what I'm doing wrong?\n<Chipaca> niemeyer: how do we evolve the api, then? is the only way to have big versioned jumps?\n<Chipaca> greyback: is 'kvm' actually in PATH?\n<greyback> Chipaca: yes\n<pedronis> Chipaca: we need to design how to evolve the api\n<niemeyer> Chipaca: Yeah, that's generally what I try to do in other cases that resembled that kind of evolution. Learn, write down potential ideas, and once there is a great reason to break up, introducing a whole new API, and then reset the idea of what the current design is\n<Chipaca> greyback: all spread does is exec.Command(\"kvm\",  ...), which looks for \"kvm\" in $PATH\n<pedronis> Chipaca: I don't think keeping its shape as it is is tenable for much longer either\n<greyback> Chipaca: the $PATH specified in the spread.yaml?\n<niemeyer> pedronis: What's the potential deal breaker\n<niemeyer> ?\n<niemeyer> I haven't observed many complaints about the API yet\n<niemeyer> (which doesn't mean they don't exist)\n<pedronis> niemeyer: we already had to introduce duplication\n<pedronis> niemeyer: the flat top-level that mixes namespaces we don't fully control or have to control for not the best is not great either\n<niemeyer> pedronis: If the duplication you mention is developer/publisher, these are not actually duplicated, in the sense they were supposed to potentially represent different people.. we do have a problem which is not using the same structure for both, so indeed an inconsistency\n<niemeyer> pedronis: What's the flat top-level about?\n<pedronis> niemeyer: I understand that you think we can keep under control but an api that has at top level ,  left-corner-hero-icons is not great\n<niemeyer> pedronis: Sorry, I'm still missing what you really mean. If we can't keep the API under control, we're in the wrong business. :)  What's left-corner-hero-icons?\n<Chipaca> greyback: I don't think so, that's the one 'inside'; it uses the outside path to find that\n<Chipaca> greyback: e.g. i have  ~/bin/kvm because I like to monkey with the args (adding -smp 4 for ex)\n<Chipaca> greyback: and that just works\n<Chipaca> niemeyer: adding a toplevel entry per media type\n<greyback> Chipaca: ack. I'm reading spread code now, I see what you mean. I think my issue is permissions and kvm, trying to sort that out\n<Chipaca> niemeyer: will end up with e.g. left-corner-hero-icons at the top level\n<pedronis> or not\n<niemeyer> Chipaca: Only if that's how we design it\n<Chipaca> well, but that's what we're proposing now isn't it?\n<niemeyer> Chipaca: That sounds like a pretty terrible design\n<pedronis> we should not be designing that\n<pedronis> we have lots of thinks to design\n<Chipaca> we're saying:  don't do media, let's just have a toplevel per media type\n<niemeyer> Chipaca: That's why I one of the first things I asked is what are the media types we have\n<pedronis> niemeyer: btw there are a meeting about exactly desiging those types, and nobody of us has been invited\n<Chipaca> niemeyer: there's a meeting next week to decide that\n<niemeyer> Chipaca: If we have several icons, we can have an \"icons\" field\n<pedronis> niemeyer: I let you meditate on that, I have zero energy for this\n<pedronis> (which is sort of the point)\n<Chipaca> i just don't get why we care. the consumers of our api need something, the providers of the data we consume offer that something, why would we not funnel it across untouched\n<Chipaca> i mean, i get that we don't want duplication\n<Chipaca> and we don't want it to be ugly\n<niemeyer> Chipaca: Alternatively, we can have a plan to obsolete the other fields.. we'll need to figure who uses them and what events we need to wait for in order to kill them\n<pedronis> which was my point\n<pedronis> we need to think how to evolve\n<pedronis> the api\n<Chipaca> but that just means we have a chat to make sure we're on the same page (i thought we were) and just pass it through\n<pedronis> non-evolving it\n<pedronis> is not a path either\n<niemeyer> Chipaca: My main complaint here is the lose way to evolve the API\n<niemeyer> loose\n<Chipaca> i thought your main complaint was the shape and the duplication\n<pedronis> I'm happy to have a conversation how not-loosely evolve the api, I'm less api to be forced to be in all conversation because our api is too set in its way\n<Chipaca> sigh\n<Chipaca> niemeyer: i thought fields= gave us a way to evolve the api\n<pedronis> Chipaca: on that I agree with niemeyer, is too flaky\n<pedronis> annoying\n<pedronis> I mean it can be part of the picture\n<pedronis> but cannot be the whole solutions\n<pedronis> also because we have zero control on when we can drop stuff\n<pedronis> that way\n<Chipaca> i haven't heard a proposal that gives us any amount of control on when we can drop stuff\n<niemeyer> Chipaca: That is my main complaint... the shape and the duplication are symptoms of a loose API\n<niemeyer> \"Chipaca: Yeah, that's generally what I try to do in other cases that resembled that kind of evolution. Learn, write down potential ideas, and once there is a great reason to break up, introducing a whole new API, and then reset the idea of what the current design is\"\n<pedronis> Chipaca: we can discuss some\n<pedronis> maybe\n<Chipaca> niemeyer: introducing a whole new api is not what i thought of as evolving the api\n<niemeyer> and\n<niemeyer> \"Chipaca: Alternatively, we can have a plan to obsolete the other fields.. we'll need to figure who uses them and what events we need to wait for in order to kill them\"\n<pedronis> niemeyer: that works only if you control all the pieces around the api\n<niemeyer> Chipaca: Both of these are proposals for how to keep an API tight while allowing for changes over time\n<niemeyer> Chipaca: Incompatible changes, that is.. changing is easy\n<Chipaca> and saying we can have a plan is not a plan :-)\n<pedronis> Chipaca: one idea is to have versions for different consistent views of/on a snap\n<pedronis> (views = set of fields if you want)\n<niemeyer> Chipaca: Heh.. I'm not sure how to satisfy that kind of snarky request for plans.\n<Chipaca> apologies if I'm coming across as grumpy or overly confrontational\n<niemeyer> Chipaca: I've been trying to explain what the main issue in my view is, and what potential ideas for solving it could be\n<pedronis> anyway at the moment we have two solutions that are problematic, don't care duplications, and forcing something that is loose into the top-level\n<Chipaca> niemeyer: it's ok to admit we don't have a plan and that we need one\n<pedronis> both *are* problematic\n<pedronis> and one will also create potentially tensions\n<pedronis> for which is unclear we have time to spend\n<niemeyer> Chipaca: I don't know what you want, honestly. I'm offering two alternatives, both of them are real ways to work together and evolve the API. Just repeating that you want a plan or want people to admit to not have a plan is completely irrelevant.\n<pedronis> I want a plan to be able to obsolete fields\n<niemeyer> pedronis: The only way to do that is to evaluate the impact... once we stop providing a field, we break people that depend on that field being there.\n<mup> PR classic-snap#25 opened: Add simple spread tests <Created by mvo5> <https://github.com/snapcore/classic-snap/pull/25>\n<pedronis> so this is much easier on servers, but we there should be a way for us to track field\n<pedronis> usage without being nosy\n<niemeyer> pedronis: The alternative of reving up the API allows us to have a consistent new API without breaking the old one. It won't remove the old one, but it does obsolete the field as a side effect.\n<niemeyer> pedronis: Right\n<pedronis> yes, of which a variant is to rev the response format only\n<pedronis> if that's is enough\n<niemeyer> pedronis: Right.. that's the /v3/\n<pedronis> or using Accept\n<pedronis> or something\n<pedronis> we do have options\n<pedronis> not sure we can find a solution today and tomorrow\n<pedronis> but we do have options\n<niemeyer> pedronis: Yeah.. as mentioned earlier, in those situations I try to pack up a few high-profile changes that are clear reasons for the effort of breaking the API apart between vN and vN+1\n<Chipaca> so, I want two things: I want to not block gnome software from getting the media they need today, and I want to be able to ditch the current response format entirely soon after we move to v2 search\n<Chipaca> a clear reason for breaking the api is that we're moving to not conflating per-revision and per-snap information\n<Chipaca> and our current structure does not allow for it\n<niemeyer> Chipaca: Is there a place I can read more about the second issue?\n<Chipaca> niemeyer: not sure if there's info on the issue; there's info on the solution\n * Chipaca looks\n<zyga> mvo: reviewed\n * pedronis needs to have lunch + errand\n<niemeyer> Chipaca: That's a big document.. is there a particular issue or header I should be looking at?\n<Chipaca> niemeyer: yeah, and as I say it doesn't describe the issue, just the solution, under the \"Response\" header\n<Chipaca> niemeyer: there's a \"snap\" object with per-snap members, and at the same level a \"channel-map\" list with per-revision objects\n<niemeyer> Chipaca: If we don't have a clear problem being solved, in general I'd be tempted to not introducing the breaking API change\n<niemeyer> Chipaca: and instead pack it next to other ideas for the time it's rev'd up\n<Chipaca> niemeyer: the problem is that we conflate per-snap and per-revision, so for example 'snap info' lies (to the best of its ability)\n<Chipaca> of course one could argue that lying in this way is the only sane approach\n<niemeyer> Chipaca: Yeah, I remember these discussions when we redesigned the original API.. but I have memories of the issue going beyond the representation of the result, and into actual usability, in the sense it's convenient for the user to have \"snap info foo\" doing the right thing\n<niemeyer> Chipaca: Right, what you just said\n<Chipaca> :)\n<Chipaca> niemeyer: I've got to move on to other things now\n<zyga> mborzecki: I added debug, doesn't reproduce :)\n<zyga> same seed\n<zyga> same tree\n<zyga> two runs in parallel\n<zyga> I hope I can get to the bottom of this\n<mvo> zyga: thanks for the review\n<niemeyer> Chipaca: Me too.. tasty things\n * zyga -> walk\n * pstolowski lunch\n<zyga> mborzecki: ha\n<zyga> reproduced that same behavior\n<zyga> mborzecki: I think I know what's going on\n<zyga> and it does look exactly like the centos case\n<zyga> let me spawn a more regular VM and try\n<mborzecki> mhm\n<mborzecki> centos was failing in the same place when calling snap-mgmt purge\n<zyga> EBUSY https://www.irccloud.com/pastebin/1eVl6UTk/\n<zyga> mborzecki: look at that please\n<zyga> waoh wait\n<zyga> it's ever more mysterious!!!\n<zyga> that makes totally no sense!\n<zyga> feels more and more like a kernel bug?\n<zyga> + umount -l /run/snapd/ns/test-snapd-tools.mnt\n<zyga> umount: /run/snapd/ns/test-snapd-tools.1000.mnt: not found\n<zyga> I'll add more debug, I wonder if there are some interesting processes running in parallel with postrm\n<zyga> and what's the full content of that directory before we loop over it\n<Chipaca> why would 'common' not get created, on opensuse and fedora?\n<mborzecki> Chipaca: just common? which test?\n<Chipaca> actually opensuse might be a different issue\n<Chipaca> mborzecki: https://api.travis-ci.org/v3/job/442964462/log.txt\n<Chipaca> mborzecki: second failure there\n<Chipaca> mborzecki: sorry,  third\n<Chipaca> first is shellcheck, second opensuse, third fedora\n<Chipaca> snapshot fails if common is missing\n<Chipaca> and, common is missing, wtf\n<greyback> Chipaca: I had permission errors with kvm, which caused the issue. Binary was there, just failing. Working now. Thanks for the help\n<Chipaca> greyback: np\n<Chipaca> greyback: was the error misleading, or was that what the os was reporting?\n<mborzecki> Chipaca: selinux?\n<mborzecki> Chipaca: there were some changes in creating snap dirs, but we have tests that verify that those are present iirc\n<Chipaca> mborzecki: it's not consistently reproducible\n<greyback> Chipaca: misleading error. strace showed me the kvm binary was being run, but printing an error\n<zyga> Small break\n<Chipaca> greyback: what was the error?\n<greyback> Chipaca: \"need to run as root or suid\"\n<Chipaca> greyback: ah, not an error from exec?\n<greyback> Chipaca: right\n<greyback> I'll log a bug\n<Chipaca> greyback: looks like a bug in go\n<Chipaca> greyback: is that because you weren't in the kvm group or something?\n<greyback> Chipaca: essentially yeah (modulo some other group error I'd made)\n<Chipaca> greyback: do you happen to have the strace?\n<greyback> Chipaca: unfortunately not, sorry. I'll see if I can repro, once my spread run finishes\n<Chipaca> greyback: thank you. I tried to repro locally and couldn't.\n<Chipaca> greyback: (running spread as \"nobody\" just hangs, which is weird but different)\n<Chipaca> #6007 could use reviews\n<mup> PR #6007: tests/lib: add an @mozilla.com exception to the CLA checker <Simple \u00f0\u009f\u0098\u0083> <Created by chipaca> <https://github.com/snapcore/snapd/pull/6007>\n<mborzecki> off to pick up the kids\n<mup> PR snapcraft#2363 closed: {make,cmake,autotools} plugin: add support for bases <Created by kyrofa> <Merged by sergiusens> <https://github.com/snapcore/snapcraft/pull/2363>\n<jdstrand> mvo: ok, after *many* retries I finally got PR 6002 to pass spread. continuing to mash restart restart for PR 5989\n<mup> PR #6002: interfaces/system-key: add parser mtime and only discover features on write - 2.36 <Created by jdstrand> <https://github.com/snapcore/snapd/pull/6002>\n<mup> PR #5989: interfaces/system-key: add parser mtime and only discover features on write <Created by jdstrand> <https://github.com/snapcore/snapd/pull/5989>\n<mvo> jdstrand: thank you\n<jdstrand> I'm not sure what is going on. the failures are timeouts in some dbus code (totally unrelated to my PR)\n<jdstrand> anyway, will continue to keep mashing\n<jdstrand> mvo: if there was time, it would be great to get 5981 and 5982 reviewed and in trunk (cc zyga). if not, I understand\n<mvo> jdstrand: let me have a look\n * zyga is a bit indisposed now, sorry :|\n<zyga> mvo: is 2.36 today?\n<zyga> I will review it but I need to break for some time, food poisoning :(\n<zyga> mvo: my update for today: I updated adb interface again, worked on snap-update-ns per-user support, which is looking good, expect PRs today, digging into the weird issue with unmount I talked to mborzecki about\n<zyga> jdstrand: https://www.irccloud.com/pastebin/1eVl6UTk/ FYI\n<zyga> jdstrand: carefully read lines 26 and 27\n<mup> PR classic-snap#23 closed: create,classic: make the classic snap work on classic distributions (for 18) <Created by mvo5> <Merged by mvo5> <https://github.com/snapcore/classic-snap/pull/23>\n<zyga> this is on a 4.5 kernel\n * zyga goes away again\n<Chipaca> mvo: see my note on #6013 being a blocker for 2.36\n<mup> PR #6013: Revert \"snap, client, daemon, store: use and expose \"media\" more (#5906)\" <\u00e2\u009b\u0094 Blocked> <Created by chipaca> <https://github.com/snapcore/snapd/pull/6013>\n<mvo> Chipaca: 'k\n<mvo> Chipaca: we have at least one more blocker\n<jdstrand> mvo: speaking of blockers. I know we discussed the bug, and I think it was implied, but PR 6002 should be a blocker too\n<mup> PR #6002: interfaces/system-key: add parser mtime and only discover features on write - 2.36 <Created by jdstrand> <https://github.com/snapcore/snapd/pull/6002>\n<mvo> jdstrand: +1\n<ackk> hi, I'm having an issue with a snap that stages jq from the deb. it seems snapcraft stopped pulling in libjq1.so, so jq doesn't work anymore\n<ackk> (I'm using snapcrafat edge)\n<ackk> *snapcraft\n<ackk> https://github.com/CanonicalLtd/candid/blob/master/snap/snapcraft.yaml is the snapcraft config\n<ackk> ah, n/m I figured it out\n<Chipaca> mborzecki: polish is hard, let's do roadmap planning\n<mborzecki> heh :)\n<zyga> mborzecki: I know what is was!\n<mborzecki> zyga: umounts?\n<zyga> yes\n<zyga> I'll share after meeting\n<mborzecki> ok\n<Chipaca> #5955 is green; plz review\n<mup> PR #5955:  cmd/snap, tests: snapshots for all <Snapshots \u00f0\u009f\u0093\u00b8\u00f3\u00a0\u0081\u009f> <Created by chipaca> <https://github.com/snapcore/snapd/pull/5955>\n<zyga> brb\n<zyga> mborzecki: I have a fix\n<mborzecki> zyga: diff?\n<ppisati> ogra: FYI - https://lists.ubuntu.com/archives/kernel-team/2018-October/096147.html\n * cachio lunch\n<mvo> zyga, cachio thanks for your classic snap review(s) - I updated 25\n<zyga> mborzecki: I just tested it manually, the fix is to avoid lib mount in a test I changed\n<zyga> mborzecki: I'll ping you for review :)\n<pstolowski> mvo: i've pushed my additions to json issue fix to https://github.com/stolowski/snapd/pull/new/fix-conn-attributes-numbers ; i've added normalization, one more test and updated hooks spread test. would you like to merge this into your PR or shall I re-propose a new one?\n<mvo> pstolowski: either way is fine\n<greyback> Chipaca: aaand naturally I cannot reproduce the bug now\n<pstolowski> mvo: ok i'll propose a new PR\n<mvo> pstolowski: ok\n<mup> PR snapd#6017 opened: interfaces: fix decoding of json numbers for static/dynamic attributes <Created by stolowski> <https://github.com/snapcore/snapd/pull/6017>\n<zyga> pstolowski: sent a quick comment there\n<pstolowski> zyga: yep, ty\n<mup> PR core18#85 opened: Add wpa-supplicant to the list of installed packages <Created by sil2100> <https://github.com/snapcore/core18/pull/85>\n<mup> PR core18#85 closed: Add wpa-supplicant to the list of installed packages <Created by sil2100> <Merged by sil2100> <https://github.com/snapcore/core18/pull/85>\n<zyga> jdstrand, niemeyer: cool interaction observation: on macOS doing find $HOME triggers an interactive question from the system \"terminal wants to access your contacts\" - rejecting that I get a denial to enter a particular folder on disk; that would be an interesting way to manage system connections\n<niemeyer> zyga: If only the kernel offered us a way to make these decisions...\n<zyga> yes, that's true\n<zyga> I was just surprised to see this\n<Chipaca> zyga: niemeyer: we did have a plan to almost get there\n<Chipaca> but it was a lot of work, and not prioritised\n<zyga> I could use a coffee\n<zyga> but let me wrap one thing up first...\n<jdstrand> zyga, niemeyer: fyi, the apparmor prompting work is still being worked on. jjohansen made a good bit of progress\n<zyga> mborzecki: I fired another round of tests now, with the fix in place\n<slvn_> slvn\n<slvn_> hi, I have an issue with snapcraft.io\n<slvn_> the website does not seem to take care of categories\n<slvn_> hence the search engine is not working correctly\n<slvn_> I have 10 snaps games that are published for a while. Only two of them appear in the listing of snapcraft.io when searching in \"Games\", but appears in \"All snaps\".\n<noise][> slvn_: we have some upcoming feature work to allow for publishers to self-select categories, but in the meantime if you can provide a list of your game snaps that need to be categorized in a forum post I can get someone from our advocacy team to review and get them associated to the category\n<slvn_> ok great !\n<mup> PR classic-snap#25 closed: Add simple spread tests <Created by mvo5> <Merged by mvo5> <https://github.com/snapcore/classic-snap/pull/25>\n<niemeyer> mvo: classic-snap#20 already went in, but fwiw thanks for the explanation. Sounds reasonabe\n<mup> PR classic-snap#20: port classic to UC18 and put into \"18\" branch <Created by mvo5> <Merged by mvo5> <https://github.com/snapcore/classic-snap/pull/20>\n<cyphermox> mvo: ping\n<cyphermox> mvo: I have just tested rev 445 of core18; adding wpasupplicant fixes the wifi connection issues (I can connect fine now)\n<cyphermox> (this is armhf+raspi3)\n<zyga> cyphermox: if you have an image I can test the dragon board\n<cyphermox> zyga: it was pre-testing, sil2100 will kick off a real build to get you a dragon image.\n<zyga> cool, sil2100 just let me know\n<sil2100> Will be kicking off a new image soonish\n<zyga> great, just let me know (with the URL, I never remember those)\n<sil2100> zyga: sure!\n<mvo> cyphermox: yay, thank you\n<sil2100> mvo: strange, I was sure we had that installed, but then I checked and we only *discussed* it being installed on the forums\n<zyga> mborzecki: back\n<zyga> mborzecki: the fix is https://github.com/snapcore/snapd/pull/6010/commits/b803e1c62350e76e7f62fd937ea443191cc496f7\n<mup> PR #6010: cmd/snap-discard-ns: add support for per-user mount namespaces <Created by zyga> <https://github.com/snapcore/snapd/pull/6010>\n<zyga> and man, 14.04 :)\n<cachio> kyrofa, hey\n<cachio> kyleN, could you take a look to the nested suite?\n<kyrofa> Hey there cachio! I looked at the PR you linked. Am I correct in thinking that in order to get spread using an image with nested virt enabled you need to set those environment variables?\n<cachio> no env variables needed\n<cachio> kyrofa, those env variables are to configure our test suite\n<cachio> which kind of vm do you want to start?\n<cachio> I didnt try with kvm acceleration\n<kyrofa> cachio, multipass, actually\n<kyrofa> Have you tried that?\n<cachio> no\n<cachio> which on did you try?\n<kyrofa> cachio, I haven't tried at all after seeing that GCE link I shared saying that it needed to be enabled\n<kyrofa> cachio, so to be clear, are you saying you've already done that, or are you saying that you've got nested virt working without kvm?\n<cachio> yes\n<kyrofa> Hahaha, which one?\n<cachio> we run everyday that\n<cachio> ubuntu core, ubuntu 16, ubuntu 18\n<cachio> using qemu\n<cachio> 2gb of memory\n<kyrofa> cachio, but you didn't do https://cloud.google.com/compute/docs/instances/enable-nested-virtualization-vm-instances ? Wonder if you're getting a software version, then (this is not my area of expertise)\n<cachio> kyrofa, I see, this is if you want to use the gce tooling\n<cachio> kyrofa, in fact they are describing a process really similar to what we do\n<kyrofa> cachio, interesting, so this may already work. I'm testing now\n<cachio> but they show how to create your image and use a gce image for the nested vm\n<cachio> and we create the image as part of the test\n<kyrofa> cachio, yeah it was more the \"Enabling nested virtualization on an instance\" section that I was referring to\n<kyrofa> Makes it sound like by default this won't work unless you take that action to add that licenses thing\n<kyrofa> cachio, yeah, looks like multipass needs KVM:\n<kyrofa> # multipass launch xenial\n<kyrofa> failed to launch: CPU does not support KVM extensions.\n<kyrofa> # grep -cw vmx /proc/cpuinfo\n<kyrofa> 0\n<kyrofa> cachio, looks like we indeed need \"the special license key required for virtualization.\"\n<cachio> in that case we need to create an image with kvm enabled\n<cachio> kyrofa, let me check a bit more about enabling kvm on gce\n<kyrofa> cachio, would there be a downside to just enabling that in all the images we're using?\n<kyrofa> cachio, excellent, thank you\n<cachio> kyrofa, dont have enough permissions for that\n<cachio> I'll request them and I'll try again\n<kyrofa> Alright cachio, thank you!\n<cachio> kyrofa, np\n * cachio afk\n<mup> PR snapcraft#2364 opened: maven plugin: add support for bases <Created by sergiusens> <https://github.com/snapcore/snapcraft/pull/2364>\n * zyga EODs\n<mup> PR snapcraft#2365 opened: multipass: change default CPU value <Created by sergiusens> <https://github.com/snapcore/snapcraft/pull/2365>\n<mup> PR snapcraft#2366 opened: qmake plugin: add support for bases <Created by kyrofa> <https://github.com/snapcore/snapcraft/pull/2366>\n * cachio afk\n<mup> PR snapcraft#2264 closed: Fix issue where Rust cross compile target is ignored <Created by eberkund> <Merged by sergiusens> <https://github.com/snapcore/snapcraft/pull/2264>\n<mup> PR snapcraft#2365 closed: multipass: change default CPU value <Created by sergiusens> <Merged by sergiusens> <https://github.com/snapcore/snapcraft/pull/2365>\n<mup> PR snapcraft#2367 opened: tests: add spread test exercising multipass build VMs <Created by kyrofa> <https://github.com/snapcore/snapcraft/pull/2367>\n<mup> PR snapcraft#2368 opened: {kbuild,kernel} plugin: add support for bases <Created by kyrofa> <https://github.com/snapcore/snapcraft/pull/2368>\n<mup> PR snapcraft#2366 closed: qmake plugin: add support for bases <Created by kyrofa> <Merged by kyrofa> <https://github.com/snapcore/snapcraft/pull/2366>\n#snappy 2018-10-19\n<mup> PR snapcraft#2368 closed: {kbuild,kernel} plugin: add support for bases <Created by kyrofa> <Merged by sergiusens> <https://github.com/snapcore/snapcraft/pull/2368>\n<erio> anything obviously wrong with this snapcraft.yaml ? https://pastebin.com/GSWxvuAQ\n<erio> maaaan.. cleanbuild takes ages\n<mup> PR snapcraft#2369 opened: Hide progress bar for dumb terminals <Created by eberkund> <https://github.com/snapcore/snapcraft/pull/2369>\n<mborzecki> morning\n<mborzecki> got to run an errand, back in ~30\n<zyga> Hey\n<zyga> Hey mvo\n<mvo> hey zyga\n<zyga> Prepping for SLC?\n<zyga> I forgot to mention that I will be working with Zbyszek from red hat today\n<zyga> I plan to discuss some Fedora issues as well as some cgroup topics\n<zyga> I will be around as usual, sort from the extra commute\n<mvo> zyga: yeah, preparing\n<mvo> zyga: cool, good luck\n<zyga> mvo: can you think of any systemd topics to ask about?\n<zyga> mborzecki: ^\n<mvo> zyga: heh - the mount race\n<mvo> zyga: but maybe not\n<zyga> Oh, for sure\n<zyga> No?\n<mvo> zyga: I mean, if its really util-linux then its none of his concern\n<mvo> zyga: but *maybe* it is not, might be nice to hear his opinion\n<zyga> I think it is worth trying at least\n<mvo> yeah\n<pstolowski> morning\n<mborzecki> zyga: yes, systemctl start <many-services> as single transaction\n<mborzecki> need to go to kids school\n<mborzecki> zyga: https://bugs.launchpad.net/snapd/+bug/1796125\n<mup> Bug #1796125: services in a snap with dependencies aren't started in correct order on install <snapd:New for maciek-borzecki> <https://launchpad.net/bugs/1796125>\n<mborzecki> zyga: there are links to systemd github issues in the comments\n<mborzecki> zyga: would be great if he had a suggestion for a reasoanble workaround, or eta if they plan to do it\n<mborzecki> bbiab\n<mup> PR snapd#6014 closed: ifstate: fix decoding of json numbers <Created by mvo5> <Closed by stolowski> <https://github.com/snapcore/snapd/pull/6014>\n<zyga> mborzecki: the one with services?\n<zyga> mborzecki: he replied on it already\n<zyga> But I will ask just in case :-)\n<zyga> Hey Chipaca\n<Chipaca> hey yourself\n<zyga> Chipaca: do you have any questions or issues to raise about systemd?\n<Chipaca> zyga: ?\n<Chipaca> zyga: I don't, offhand, why?\n<zyga> I\u00e2\u0080\u0099ll work with Zbyszek today\n<zyga> He is a systemd upstream\n<Chipaca> ah\n<Chipaca> zyga: is there a way to cause all the starts/stops to be in a single transaction\n<Chipaca> zyga: or do we need to do the topological sort ourselves\n<Chipaca> (we already are, almost \u00c2\u00af\\_(\u00e3\u0083\u0084)_/\u00c2\u00af )\n<Chipaca> zyga: dunno if you remember from yesterday, this is that we have before/afters in units in a snap, and those are respected at system boot, but when we systemctl start them all at snap install time, they're started without ordering\n<mvo> Chipaca: oh, yes, that is a good one\n<zyga> I\u00e2\u0080\u0099ll ask\n<Chipaca> also try to convince them to absorb something else, people can only hate on one thing at a time\n<Chipaca> :-p\n<zyga> Is this the same issue that war reported by ian?\n<zyga> Or better yet: do you have a link\n<zyga> I\u00e2\u0080\u0099m on the tube now but I will collect them later\n<Chipaca> zyga: i think we talked about it in the standup\n<Chipaca> i don't have issues/links/etc to go with it\n<Chipaca> mborzecki: you around? let's chat about the snapname pr\n<zyga> mborzecki: ^ is this the same issue you mentioned?\n<Chipaca> relatedly, somebody is calling github.com/snapcore/snapd/client a \"library\" and i'm worried\n<pedronis> yes, if we need to treat it as one we need to know\n<pedronis> atm only asserts is officially used as a library, but from things we control tough\n<Chipaca> pedronis: https://github.com/snapcore/snapd/pull/6011#issuecomment-431214304\n<mup> PR #6011: Fix import as module by adding go.mod files <Created by ryanjyoder> <https://github.com/snapcore/snapd/pull/6011>\n<Chipaca> pedronis: and http://r.chipaca.com/client.png if you need to make a point about things\n<pedronis> Chipaca: it's mostly auth from store provoking the mess I\u00c2\u00a0suppose\n<pedronis> we would need store/auth\n<pedronis> and to do reasosnable things with overlord/auth\n<pedronis> which is also misnamed atm\n<pedronis> and mixing a couple different concerns\n<Chipaca> pedronis: buy is the thing pulling in store\n<pedronis> not auth stuff?\n<pedronis> maybe that was long ago\n<Chipaca> no auth stuff\n<pedronis> yea, I see\n<pedronis> so it's Buy stuff\n<pedronis> :(\n<Chipaca> and it looks like it's just for a struct\n<Chipaca> or two\n<Chipaca> we could easily turn that one around\n<Chipaca> or we could go on and kill buy :-)\n<pedronis> after store, there's snap and overlord/auth\n<Chipaca> snap is http://r.chipaca.com/snap.png\n<pedronis> Chipaca: mmh, it doesn't import overlord/auth directly, or does it?\n<pedronis> anyway I\u00c2\u00a0seem confused\n<pedronis> either way it's a bit of work to make it a \"library\"\n<Chipaca> pedronis: if I copy the structs for Buy in, all client depends on is snap and asserts\n<pedronis> asserts is fine\n<pedronis> I\u00c2\u00a0suppose\n<Chipaca> pedronis: http://r.chipaca.com/client_pruned.png\n<Chipaca> so maybe we should do that\n<pedronis> Chipaca: the annoying bits  of snap,  are really that it pulls in squashfs,  dirs,  and maybe arch (I\u00c2\u00a0don't remember how naive or not that is these days)\n<pedronis> also snapdir\n<Chipaca> pedronis: why is the squashfs import annoying?\n<Chipaca> dirs is fine, it's just config\n<Chipaca> arch is a funny one, mostly because i'm not sure it needs to be its own package\n<pedronis> Chipaca: because is conceptually wrong, and because one day it might brings in a big library instead of shelling out\n<Chipaca> pedronis: can you explain the misconception to me?\n<pedronis> Chipaca: dealing with snaps abstractly/remotely vs concrentely are very different things\n<Chipaca> ah\n<Chipaca> pedronis: well, it would be easy to split\n<pedronis> it's just a taste thing\n<pedronis> but the bring in a library bit is a bit more serious\n<Chipaca> pedronis: snap/container.go -> snap/container/container.go (or some better name)\n<pedronis> potentially\n<pedronis> Chipaca: osutil/sys is also interesting\n<Chipaca> then snap can be the abstract, and snap/container be the \"open this thing\" and the \"build this thing\" aspects of it\n<Chipaca> osutil and osutil/sys are in the middle of finding themselves\n<Chipaca> :-p\n<Chipaca> the idea is that osutil/sys is like syscall, and has friendly wrappers in osutil\n<Chipaca> but there's work to do to finish that division, and so things are a bit messy still\n<Chipaca> (including a bit of duplication)\n<Chipaca> i'm not sure if that makes it better or not :-)\n<pedronis> Chipaca: just wondering why snap imports it\n<pedronis> directly\n<mup> PR classic-snap#21 closed: create: improve user information <Created by mvo5> <Merged by mvo5> <https://github.com/snapcore/classic-snap/pull/21>\n<Chipaca> pedronis: without looking, probably sys.UserID and sys.GroupID\n<Chipaca> now looking\n<Chipaca> \tUserXdgRuntimeDir(userID sys.UserID) string\n<pedronis> I see\n<pedronis> mmmh\n<pedronis> lots of conceptual decisions to make\n<pedronis> Chipaca: in theory the easiest is to invert and have anything in snap that client needs live in client, import client from snap\n<pedronis> but I'm not 100% happy with that\n<pedronis> either\n<Chipaca> pedronis: why not?\n<Chipaca> (sorry if this explain-your-thinking interrogation gets boring)\n<mup> PR classic-snap#26 opened:  Add simple spread tests <Created by mvo5> <https://github.com/snapcore/classic-snap/pull/26>\n<pedronis> Chipaca: it reads strange to me\n<pedronis> client.Revision\n<pedronis> is odd\n<pedronis> maybe is just me\n<Chipaca> ah, yes\n<Chipaca> no not just you\n<Chipaca> when i was saying we could do that i found the same thing\n<Chipaca> OTOH we could have client/snap and internal/snap?\n<Chipaca> dunno\n * pedronis errands\n<Chipaca> pedronis: ttfn\n<zyga> re\n<mup> PR snapd#6015 closed: tests/unit/gccgo: drop gccgo unit tests <Created by bboozzoo> <Merged by chipaca> <https://github.com/snapcore/snapd/pull/6015>\n<mup> PR snapd#6018 opened: nuke tests/unit/go-darwin <Created by chipaca> <https://github.com/snapcore/snapd/pull/6018>\n<Chipaca> I'd love to get reviews of #5955\n<mup> PR #5955: cmd/snap, tests: snapshots for all <Snapshots \u00f0\u009f\u0093\u00b8\u00f3\u00a0\u0081\u009f> <Created by chipaca> <https://github.com/snapcore/snapd/pull/5955>\n<Chipaca> it's green! and the only thing between us and snapshots\n<mup> PR classic-snap#27 opened: add shellcheck and fix warnings (16) <Created by mvo5> <https://github.com/snapcore/classic-snap/pull/27>\n<mborzecki> re, finally\n<mup> PR snapcraft#2362 closed: python plugin: add support for bases <Created by sergiusens> <Merged by sergiusens> <https://github.com/snapcore/snapcraft/pull/2362>\n<mup> PR snapcraft#2364 closed: maven plugin: add support for bases <Created by sergiusens> <Merged by sergiusens> <https://github.com/snapcore/snapcraft/pull/2364>\n<mborzecki> Chipaca: thanks for the reviews\n<mborzecki> Chipaca: any suggestions about snap/name?\n<Chipaca> mborzecki: I didn't understand your response to my comment :-)\n<Chipaca> sorry, stray middle click\n<Chipaca> mborzecki: what do you mean by \"you'd still need to have access to snap.Info\"?\n<Chipaca> mborzecki: how is that different between snap/validate and snap/name?\n<mborzecki> Chipaca: hmm maybe i misunderstood yours\n<Chipaca> mborzecki: ah\n<mborzecki> Chipaca: i thought you'd want to have all the validation code (now in snap/validate.go) in a seaprate snap/validate package?\n<Chipaca> mborzecki: mine was just: everything in name is called ValidateX\n<Chipaca> mborzecki: so why not call it validate :)\n<Chipaca> mborzecki: then using snap/validate primarily in snap/validate.go is a nice pattern as well\n<Chipaca> we do that in a few places even\n<mborzecki> Chipaca: right, but then we'd end up with some validate*() in snap/validate.go and some in snap/validate, felt a bit uneasy about that\n<mborzecki> Chipaca: but you have a point, it's snap/name now but all of it actually validation :/\n<Chipaca> mborzecki: looking at snap/validate.go in your pr, 1 sec\n<Chipaca> mborzecki: snap.ValidateVersion could move into the new package\n<Chipaca> dito snap.ValidateLicense\n<mborzecki> Chipaca: license calls out to spdx package?\n<Chipaca> yes\n<mborzecki> Chipaca: i think i'd rather keep it ValidateLicense in snap then\n<Chipaca> hm\n<Chipaca> mborzecki: so\n<Chipaca> mborzecki: how about keeping just snap.Validate as the public interface, and making everything else be either in snap/validate or private in snap?\n<mborzecki> Chipaca: the motivation was to not have another copy of ValidateName() in asserrts, but rather have a package slimmer than snap and have it importable in asserts\n<Chipaca> ha, now i understand the no-spdx thing more :-)\n<Chipaca> mborzecki: this strengthens my last suggestion above\n<Chipaca> i think\n<mborzecki> Chipaca: hm, let me check again, iirc snap.ValidateLayout may still need to be public, but the rest could be make private\n<Chipaca> grep says nothing uses it outside of snap.Validate\n<mborzecki> Chipaca: ValidateContainer is probably the only func other than Validate() that would need to be public\n<mborzecki> i see some calls to ValidateSlotName() but that would be validate.SlotName() (or validate.Slot()) now\n<mborzecki> Chipaca: yeah, snap/validate seems ok, a question about naming, since the validation code is mostly validating names right now, validate.SnapName() feels more fitting than validate.Snap(name string)\n<mup> PR snapd#6019 opened: ifacestate: optimize disconnect hooks <Created by stolowski> <https://github.com/snapcore/snapd/pull/6019>\n<pedronis> Chipaca: the problem of making it validate that it will be very tempting to move Validate itself or other things into it at some point\n<pedronis> Chipaca: also there are some name related regexpes that asserts could reuse\n<pedronis> Chipaca: making it about names (which are strings in the end), makes it easier to keep under control imo\n<mborzecki> snap/validate/name :)\n<pedronis> that is not funny\n<pedronis> Chipaca: mborzecki: anyway my 2cts\n<mborzecki> pedronis: which regexp you'd like to see public?\n<pedronis> mborzecki: asserts has at least a validAppName and validAlias atm\n<pedronis> degville: hi,  somebody liked this just now which \u00c2\u00a0I wrote long ago,  https://forum.snapcraft.io/t/the-meaning-of-classic/861 is not under doc because niemeyer said he wanted to tweak it a bit but didn't get to it, maybe you can do something with it when you have time\n<pedronis> mborzecki: Chipaca: another approach would be to find something a bit more encompassing than \"name\" and also put Channel and some helpers for the various kind of IDs we have there\n<mborzecki> Chipaca: do you have /usr/bin/tar?\n<mup> PR snapd#6020 opened: overlord/snapshotstate/backend: detect path to tar in unit tests <Simple \u00f0\u009f\u0098\u0083> <Created by bboozzoo> <https://github.com/snapcore/snapd/pull/6020>\n<mborzecki> Chipaca: ^^\n<niemeyer> zyga: I've responded on the adb interface.. sorry that it's not just a LGTM, but the current proposal there looks quite cumbersome, and a bad precedent.. we should probably talk about it in a call if you have a moment\n<zyga> niemeyer: thank you, I'll check that out\n<zyga> niemeyer: perhaps next week, it's not urgent IMO\n<niemeyer> zyga: Today is better if you have a moment.. next week I'm in SLC\n<niemeyer> zyga: It's not urgent.. it's just been sitting there for very long\n<zyga> niemeyer: I'm not at home today but I'll try to find a moment\n * pstolowski lunch\n<zyga> niemeyer: I read the response, I think you are right and this feels like a new thing - with foo-support like approach we could have the adb  server part solved, I think we should still have the adb client part\n<niemeyer> zyga: We can have that to actually make the inter-snap logic work, but I wouldn't try to bake that in together\n<niemeyer> zyga: As that's not required for the person that submitted that request, as I understand it, and it would take longer to agree on the details\n<zyga> yes, that's true\n<zyga> the user would just run adb internally\n<niemeyer> zyga: Yeah, that sounds a lot like browser-support\n<niemeyer> zyga: And it becomes pretty sensible from the outside\n<zyga> I can make those changes if that's what we agree on\n<niemeyer> zyga: once we need a snap using adb from another snap, we can then have an \"adb\" plug+slot interface, that do just that\n<zyga> +1\n<niemeyer> zyga: If we can make that work, we can even get that merged today\n<zyga> sure, that would be nice :)\n<niemeyer> zyga: Since the details of what's allowed was already approved\n<niemeyer> zyga: (by jdstrnad)\n<niemeyer> zyga: Same as in the current incarnation, we shouldn't allow access to the devices unless adb-support is connected\n<niemeyer> zyga: There's another part which feels a bit awkward in that interface which is the network bits\n<niemeyer> zyga: Does it grant open access into the network?\n<zyga> ish\n<zyga> it needs localhost sockets\n<zyga> it's like network\n<zyga> this is how adb operates\n<zyga> (well network-bind and network()\n<niemeyer> zyga: Sure, but the comments there make it sound like we're granting open ended access into the network via that interface\n<niemeyer> zyga: That sounds undue\n<zyga> that's because we have no richer language\n<zyga> yes , that is true\n<niemeyer> zyga: If it's open ended and not localhost, and unless there's more missing that would prevent the access from being actually used for general network access, I think we can drop those permissions and mention that they'll need \"network-bind\" as well\n<niemeyer> zyga: Sure, and in some cases that's alright, but here it feels like we have a very purpose-specific interface that is then offering something unexpected, and unnecessarily so since we have another interface that grants exactly those permissions\n<niemeyer> zyga: Once we get the ability to define network context, we can include in the interface, and nobody breaks\n<niemeyer> The opposite isn't true\n<zyga> in a way but it is also internal part of the interface, it will always be broken without network-bind\n<niemeyer> zyga: That's not an internal part of the interface unless we define that it is\n<niemeyer> zyga: If it's open ended network access, I'd generally recommend letting people explicitly ask for it\n<niemeyer> jdstrand: ^\n<zyga> I mean without network-bind, adb will crash\n<niemeyer> zyga: Doesn't hurt, comes for free with auto-connection, and is truthful to what the snap is being able to do\n<zyga> sure, I don't mind that\n<zyga> I can make the modifications today\n<niemeyer> zyga: I understand.. that's why they'll use the plug..\n<niemeyer> zyga: Once we're able to further restrict so that it's not open ended access, we can be more precise in what we offer\n<niemeyer> zyga: and the interface might become self-sufficient\n<zyga> yeah, that's a good point\n<mup> PR snapcraft#2367 closed: tests: add spread test exercising multipass build VMs <Created by kyrofa> <Merged by sergiusens> <https://github.com/snapcore/snapcraft/pull/2367>\n<niemeyer> zyga: Pasted this conversation into the ticket for reference\n<niemeyer> zyga: Sorry for the terrible copy & paste... my client has c&p broken right now\n<Chipaca> pedronis: mborzecki: i'm ok with it not being validate if that'll keep it about simple strings as opposed to more complex stuff, if we don't want it to have more complex stuff (and i guess using it from asserts means we don't)\n<zyga> niemeyer: thank you :-)\n<niemeyer> I'm going to have lunch\n<zyga> enjoy :)\n<niemeyer> Thanks\n<Chipaca> pedronis: mborzecki: otoh i maintain that 'name' is a bad name :-) note how everywhere you use it you have to re-name (groan) it\n<Chipaca> pedronis: mborzecki: combine that with pedronis's observation about having other things we could move out if it weren't called 'name', and i really want it called something else :-)\n<Chipaca> pedronis: mborzecki: call it \"english-racing-green\"\n<mborzecki> Chipaca: moss?\n<mborzecki> a package full of surprises\n<Chipaca> i thought that was lichen\n<Chipaca> mborzecki: 'twas a bikeshed joke, just in case it was too unobvious\n<mborzecki> Chipaca: it was\n<Chipaca> sary\n<mborzecki> uh, it wans't :)\n<Chipaca> saryn't\n<Chipaca> things we want that package to do: validate instance names, validate snap names, validate channels, validate other ids\n<Chipaca> things we can't call it because conflicting things with too similar names; snapids, snapidents\n<Chipaca> name that probably only serves to make me giggle: snapvalids (groan)\n<noise][> you should feel bad about yourself Chipaca :)\n<Chipaca> every day, noise][. Every day.\n<pedronis> Chipaca: handle (the name, not the verb), moniker, refer, designate, nominate\n<Chipaca> nomnomnom\n<Chipaca> hmm, lunch\n<rbasak> Are the various SNAP_ environment variables documented anywhere? I'm looking at docs.snapcraft.io and don't see it anywhere obvious, and I'm a bit lost after the refactor.\n<rbasak> The environment variables were previously the reference section IIRC, but that doesn't seem to be there any more.\n<popey> google got me to https://snapdocs.labix.org/look-at-this/5368\n<popey> which is a mad url\n<Chipaca> popey: https://docs.snapcraft.io/moved-environmental-variables-that-snapcraft-exposes/5368\n<Chipaca> popey: dunno where it was moved to, offhand\n<Chipaca> popey: but until they get hidden, you can use the ids to find stuff :-)\n<rbasak> I want SNAP_* rather than SNAPCRAFT_*\n<rbasak> And also what they mean rather than what they're set to\n<mborzecki> rbasak: try this https://forum.snapcraft.io/t/security-policy-and-sandboxing/554\n<Chipaca> rbasak: https://docs.snapcraft.io/environmental-variables/7983\n<rbasak> Thanks!\n<rbasak> Though that doesn't explain SNAP_INSTANCE_DATA?\n<Chipaca> that'll be in https://docs.snapcraft.io/parallel-installs/7679\n<Chipaca> but i agree it should get added to the other one\n<Chipaca> mborzecki: ^ :-)\n<Chipaca> augh, i need to go have lunch\n * Chipaca goes\n<mborzecki> w8, why doesn't https://docs.snapcraft.io/environmental-variables/7983 have SNAP_INSTANCE_NAME?\n<rbasak> Thanks! That page also doesn't explain SNAP_INSTANCE_DATA, but I think from the context it's clear I can ignore SNAP_INSTANCE_*\n<mborzecki> rbasak: which version of snapd do you have? SNAP_INSTANCE_DATA is no more\n<rbasak> 2.34.2 on Xenial on this particular system\n<mborzecki> rbasak: ah ok, makes sense now\n<mborzecki> degville: added a note about SNAP_INSTANCE_NAME and SNAP_INSTANCE_KEY to https://forum.snapcraft.io/t/environmental-variables/7983\n<degville> mborzecki: thank you!\n * Chipaca sneaks SNAP_TROLL_NAME in to keep people on their toes\n * Chipaca is making lunch, so technically on lunch break\n<popey> can we s/environmental/environment/ too :)\n<popey> always makes my teeth clench when i see 'environmental'\n<mborzecki> degville: ^^\n<mborzecki> hm discourse should be smart enough to figure it out when the topic is changed\n<Chipaca> popey: to be fair, the environ is mental\n<popey> wakka wakka wakka\n<niemeyer> mborzecki: It pops it up in the list, but it doesn't resend notifications\n<degville> popey/mborzecki: changed.\n<popey> <3\n<degville> aww, shucks.\n<mborzecki> interesting observation, not a problem though, i was automatically redirected to https://forum.snapcraft.io/t/environment-variables/7983 by discourse, but the same did not happen on docs.snapcraft.io\n<Chipaca> mborzecki: 'snap fork a-snap a-snap_foo'\n<zyga> Chipaca: snap wait ...\n<zyga> oh wait!\n<Chipaca> or maybe 'snap switch --rename=a-snap_foo a-snap'\n<Chipaca> hmm\n<zyga> Chipaca: snap rename\n<Chipaca> snap rename core core18\n<Chipaca> mbuahaha\n<Chipaca> switch is wrong, because it isn't instant\n<Chipaca> it'd have to be 'snap refresh' and then not having the equivalent switch would be strange\n<Chipaca> so maybe 'snap rename' is the potato\n<mup> PR classic-snap#28 opened: enable spread tests for core as well <Created by mvo5> <https://github.com/snapcore/classic-snap/pull/28>\n<Chipaca> snap instantiate\n<Chipaca> snap summon\n<mup> PR snapd#6021 opened: data/systemd, wrappers: tweak system-shutdown helper for core18 (2.36) <Created by mvo5> <https://github.com/snapcore/snapd/pull/6021>\n<mborzecki> Chipaca: conjure\n<Chipaca> snap dwim\n<Chipaca> snap frogger\n * Chipaca checks his drink\n<Chipaca> looks like it's free-association-friday\n<zyga> I'll skip standup to grab some food, plus no way to have a call now\n<rbasak> I'm improving the git-ubuntu importer service, which lives inside the snap and is currently just a command. I want to make it into a systemd service which a sysadmin can enable, and once enabled, it will run as a specific user (not root). It seems to make sense to me to put its persistent data in $SNAP_DATA. But: 1) how should I ship a snap such that the service isn't enabled by default, but it can be\n<rbasak> enabled; 2) $SNAP_DATA is owned by root. Can I change that? What should the mechanism be to do that?\n<rbasak> Most git-ubuntu users will never use the service. However we maintain it in the same code base, and the snap is a convenient way of deploying it. I could split it into a different snap but would like to avoid having to maintain two.\n<rbasak> (and splitting it doesn't help me with ownership of $SNAP_DATA I don't think)\n<mup> PR snapd#6020 closed: overlord/snapshotstate/backend: detect path to tar in unit tests <Simple \u00f0\u009f\u0098\u0083> <Created by bboozzoo> <Merged by bboozzoo> <https://github.com/snapcore/snapd/pull/6020>\n<Chipaca> rbasak: so, first off, we don't currently support running services as non-root\n<Chipaca> rbasak: nor do we support setuid and fly\n<Chipaca> rbasak: but, to ship a service that's default disabled you can have a hook\n<Chipaca> rbasak: e.g. have a config hook that creates a file, and the service starts and quits if the file isn't there\n<mborzecki> Chipaca: in current master you can disable it from install hook\n<Chipaca> yes :-) but that's a week or so away at least\n<Chipaca> probably more\n<Chipaca> mborzecki: is it 2.36?\n<mborzecki> or --edge :)\n<rbasak> Chipaca: thanks\n<mborzecki> Chipaca: yes\n<rbasak> Given that the service is only expected to be used by (essentially just) me, perhaps I'll keep the service out of the snap for now then, together with its persistent directory.\n<rbasak> The classic snap gives me a command, and maybe I can run that command using a manually (non-snap) defined systemd service.\n<rbasak> Then I can run it as a user as well.\n<Chipaca> rbasak: OTOH james h has been working on user session services, but I have no idea how usable that is yet\n<Chipaca> rbasak: solutions are in the pipeline --- but it's a long, thin pipe\n<Chipaca> and it's like molasses in there :-p\n<mup> PR snapd#6007 closed: tests/lib: add an @mozilla.com exception to the CLA checker <Simple \u00f0\u009f\u0098\u0083> <Created by chipaca> <Merged by mvo5> <https://github.com/snapcore/snapd/pull/6007>\n<Chipaca> mvo: thanks!\n<mvo> Chipaca: thank you!\n<mup> PR snapd#6013 closed: Revert \"snap, client, daemon, store: use and expose \"media\" more (#5906)\" <\u00e2\u009b\u0094 Blocked> <Created by chipaca> <Closed by chipaca> <https://github.com/snapcore/snapd/pull/6013>\n<mup> PR classic-snap#29 opened: create: only copy config that exists <Created by mvo5> <https://github.com/snapcore/classic-snap/pull/29>\n<Chipaca> mvo: one last 2.36 pr cooking here\n<Chipaca> do we support running on ecryptfs?\n<cachio> mvo, https://paste.ubuntu.com/p/M5ZP7S4Jgn/\n<cachio> this is the debug info for the snapd.socket issue\n<cachio> mvo, perhaps that could help to understand the root cause of the issue\n<mup> PR snapd#6022 opened: daemon, snap: mark screenshots as deprecated <Created by chipaca> <https://github.com/snapcore/snapd/pull/6022>\n * cachio lunch\n<mup> PR snapd#6023 opened: overlord/snapstate, snap, wrappers: start services in the right order during install <Created by bboozzoo> <https://github.com/snapcore/snapd/pull/6023>\n<mborzecki> Chipaca: mvo: ^^\n<mborzecki> I've tagged it 2.36 but I guess 2.36.1 will be fine too\n<greyback> hey, I'm hacking on snapd to test a new interface, but getting stuck on \"error: snap \"core\" has \"auto-refresh\" change in progress\"\n<greyback> but I can't see any evidence of a refresh happening, and it's not changing out of this state either with time\n<Chipaca> greyback: are you running snapd from the terminal?\n<mvo> mborzecki: thank you\n<greyback> Chipaca: yes. I'm doing: https://pastebin.ubuntu.com/p/S2GvCRWFjV/\n<mvo> cachio: thanks, checking\n<mvo> Chipaca: I think we do, iirc one of my systems if using it\n<greyback> Chipaca: if there's a better way to launch custom snapd, I'd happily use it\n<Chipaca> greyback: I use https://github.com/chipaca/bin/blob/master/run-snapd-srv but that might be just me\n<Chipaca> greyback: with your approach, don't you end up with a bunch of weirded bind mounts?\n<mborzecki> i just switch the binaries and let systemd restart the service\n<Chipaca> greyback: in any case, i'd be interested in the debug logs from snapd\n<greyback> Chipaca: I've only started using it today (found it in the forum), zyga's devscripts not working for me any more\n<mup> PR classic-snap#26 closed:  Add simple spread tests (16) <Created by mvo5> <Merged by mvo5> <https://github.com/snapcore/classic-snap/pull/26>\n<Chipaca> my script uses the fact that you can just run the snapd binary and it'll figure stuff out, mostly\n<Chipaca> but, anyway, the how is immaterial as long as i can see those logs ;-)\n<mborzecki> Chipaca: right, just snapd works fine, when you do changes in snap-{confine,update-ns,exec} things get hairy :)\n<greyback> Chipaca: http://paste.ubuntu.com/p/NmsMKVRyRw/\n<Chipaca> greyback: dude, turn on debug :-)\n<mborzecki> greyback: SNAPD_DEBUG=1\n<greyback> Chipaca: apologies! I only dabble in snapd\n<Chipaca> runs-snapd-srv sets all those for you :-)\n<greyback> Chipaca: aha line 4040 of https://paste.ubuntu.com/p/F32PzrKq8M/ shows something not happy with lxd\n<greyback> auto-connect of snap \"lxd\" will be retried because of \"lxd\" - \"core\" conflict\n<Chipaca> that's strange\n<Chipaca> that should either resolve or blow up, unless I misunderstood things\n<Chipaca> greyback: what's \"snap tasks --last=auto-refresh\" say?\n<Chipaca> assuming that's an auto-refresh and not an install. Maybe should've started with \"snap changes\" to figure that one out\n<greyback> Chipaca: https://pastebin.ubuntu.com/p/tr6t5T5Nz5/ for snap tasks\n<greyback> https://pastebin.ubuntu.com/p/xt64zHTM3N/ for changes\n<Chipaca> greyback: what happens if you \"snap abort 171\"?\n<Chipaca> it's been stuck there since yesterday :-(\n<Chipaca> this should not happen\n<Chipaca> greyback: the interfaces you're playing with have nothing to do with lxd, i presume\n<greyback> Chipaca: yes, I'm not touching lxd\n<greyback> Chipaca: ok that unblocked things\n<pstolowski> that looks like an incarnation of an old bug i hoped i fixed\n<Chipaca> greyback: the pastebins, did you set an expire on them?\n<pstolowski> greyback: can you send me your state.json?\n<pstolowski> cachio: hey, can you ping me when back from lunch?\n<Chipaca> pstolowski: that's snapd/2.36~pre2+git964.f71d856~ubuntu16.04.1 fwiw\n<Chipaca> pstolowski: so, quite fresh :-)\n<greyback> Chipaca: expiry on just 1: https://pastebin.ubuntu.com/p/tr6t5T5Nz5/. I'll repaste\n<Chipaca> greyback: please\n<pstolowski> Chipaca: yes, that's why i say incarnation of old bug ;)\n<greyback> Chipaca: https://pastebin.ubuntu.com/p/KFtytY5scV/\n<Chipaca> pstolowski: :-(\n<Chipaca> greyback: thanks\n<pstolowski> greyback: send my your state.json if you can but not pastebin, it has private bits\n<Chipaca> also it can be big :-)\n<greyback> pstolowski: https://paste.ubuntu.com/p/X96gdkt3rG/\n<greyback> oops\n<greyback> oh well\n<pstolowski> here you go...\n<Chipaca> heh\n<Chipaca> greyback: easy fix: snap logout\n<greyback> Chipaca: ta :)\n<pstolowski> yeah you need new macaroon now\n<Chipaca> raspberry macaroon for me plz\n<pstolowski> pastebin.c.c is wonderfull... shows me entire content, but asks for auth only if i want to download as text\n<Chipaca> pstolowski: that's because of abuse\n<Chipaca> \u00c2\u00af\\_(\u00e3\u0083\u0084)_/\u00c2\u00af\n<Chipaca> people using it to host stuff\n<pstolowski> ah, hmm... interesting\n<Chipaca> and, stuff from a canonical.com domain no less. What could go wrong.\n<Chipaca> ubuntu.com*\n<Chipaca> bah, either, same diff\n<Chipaca> (so if you convince a browser to load it as .js, it has access to your cookies)\n<Chipaca> anyway\n<Chipaca> i need to run\n<Chipaca> and by that i mean leave, not actually run\n<Chipaca> running happens tomorrow\n<Chipaca> ttfn! ttyl\n<greyback> Chipaca: thanks for the help o/\n<pstolowski> have a good weekend Chipaca!\n<pstolowski> greyback: thanks for the state\n<greyback> np\n<greyback> oh, the lxd conflict thing is appearing in my logs again\n<pstolowski> oh, that's not good :(\n<pstolowski> greyback: was the core refreshed? or is it refreshing both core and lxd again?\n<greyback> pstolowski: just lxd I think: https://pastebin.ubuntu.com/p/qGx999YXy7/\n<pstolowski> greyback: can you send me your current state again? do not abort anything\n<greyback> pstolowski: https://pastebin.canonical.com/p/fQFwFwpbdD/\n<greyback> if I can reformat it to help you, let me know\n<pstolowski> greyback: dont worry, i json_pp it\n<greyback> ok\n<pstolowski> and analyze in emacs\n<mup> PR classic-snap#29 closed: create: only copy config that exists <Created by mvo5> <Merged by mvo5> <https://github.com/snapcore/classic-snap/pull/29>\n<mup> PR snapd#5989 closed: interfaces/system-key: add parser mtime and only discover features on write <Created by jdstrand> <Merged by mvo5> <https://github.com/snapcore/snapd/pull/5989>\n<mup> PR snapd#6018 closed: nuke tests/unit/go-darwin <Created by chipaca> <Merged by mvo5> <https://github.com/snapcore/snapd/pull/6018>\n<mup> PR snapd#6002 closed: interfaces/system-key: add parser mtime and only discover features on write - 2.36 <Created by jdstrand> <Merged by mvo5> <https://github.com/snapcore/snapd/pull/6002>\n<mup> PR snapd#6021 closed: data/systemd, wrappers: tweak system-shutdown helper for core18 (2.36) <Created by mvo5> <Merged by mvo5> <https://github.com/snapcore/snapd/pull/6021>\n<mvo> 6017 needs a second review\n<mvo> its a release blocker too\n<mvo> *please* :)\n<mvo> mborzecki: thanks for 6023, looks very good\n<mborzecki> mvo: thanks for the review\n<pstolowski> mvo: i'm worried about the issue greyback just hit\n<mvo> mborzecki: I will go over it once more but first pass looks great\n<mvo> pstolowski: edge? beta? stable?\n<mvo> pstolowski: sorry, miss context, should I just read scrollback?\n<pstolowski> mvo: 2.36~pre2+git964.f71d856~ubuntu16.04.1\n<mvo> pstolowski: btw 6017 looks also really nice\n<mvo> pstolowski: aha, I read a bit of backlog now - can you reproduce this?\n<mvo> pstolowski: it looks like a blocker :/\n<pstolowski> mvo: i'm just trying to reproduce. i also have the problematic state, but it's very time consuming to understand these things from state\n<pstolowski> mvo: i wish we had a detailed log message (what's conflicting)\n<mborzecki> pstolowski: we could push a PR adding a message\n<pstolowski> mvo: of course i cannot reproduce, it needs auto-refresh of lxd\n<mborzecki> before 2.36 is released that is\n<pstolowski> might be a good idea\n<pstolowski> hmm actually we have something on debug level, not super precise but may give a clue\n<pstolowski> greyback: assuming you still see the lxd stuck on auto-connect, can you run your snapd with SNAPD_DEBUG=1 env set?\n<pstolowski> greyback: i see you did that already. would be interesing to see it again\n<mup> PR snapcraft#2370 opened: ant plugin: add support for bases <Created by sergiusens> <https://github.com/snapcore/snapcraft/pull/2370>\n<mvo> pstolowski: thanks, keep me updated, I will read backlog and keep this issue in mind\n<pstolowski> mvo: will do. i suppose you're departing soon for the sprint?\n<mvo> pstolowski: sunday morning so plenty of time. it sounds like I will do a 2.36~rc1 or even final early next week. hopefully I find time dduring the sprint for it\n<pstolowski> mvo: okay, safe travels then, talk to you on monday!\n<mvo> thanks\n<xnox> mvo, hey does snapd.seeded.service need internet / access to snapstore to complete?\n<xnox> or can it complete offline on boot?\n<cachio> pstolowski, I just saw yuor message\n<mup> PR snapcraft#2371 opened: plugins: remove jhbuild <Created by kyrofa> <https://github.com/snapcore/snapcraft/pull/2371>\n<mvo> xnox: it should work completely offline (all assertions should be in the local disk). why? do you see different behavior?\n<xnox> mvo, awesome! no, it's just cloud-init for some reason forces it to be after networking is started, which is not good in this one cloud.\n<xnox> we'd rather have seeded snaps before/in-parallel-to network up\n<mvo> xnox: ok\n<pedronis> xnox: there is some requirement tough for some part of cloud-init identifying the cloud to be done before snapd starts, otherwise cloud decition/cloud CDN stuff will not work\n<pedronis> *detection\n<mup> PR snapcraft#2372 opened: gradle plugin: add support for bases <Created by sergiusens> <https://github.com/snapcore/snapcraft/pull/2372>\n<stokachu> whats the url that is used during snapcraft push?\n<stokachu> i need to get a firewall update for it\n<stokachu> i thought it was dashboard.snapcraft.io?\n<stokachu> sergiusens: do you know? ^\n * cachio afk\n<stokachu> or noise][ ?\n<xnox> pedronis, i know that bit. but thanks for pointing out.\n<Dmitrii-Sh> https://bugs.launchpad.net/snapd/+bug/1791587/comments/4 <- found out that the proxy settings are not applied if the core snap is not installed\n<mup> Bug #1791587: [2.34.2] snapd ignores proxy settings set via core snap <cpe-onsite> <snapd:New> <https://launchpad.net/bugs/1791587>\n<cjwatson> I answered stokachu on #is\n<sergiusens> stokachu: one sec\n<stokachu> sergiusens: i got it already lol\n<stokachu> thanks though\n<sergiusens> stokachu: ah, sorry, was deep in the waters\n<stokachu> all good man\n<mup> PR classic-snap#30 opened: enable spread tests for core as well (16) <Created by mvo5> <https://github.com/snapcore/classic-snap/pull/30>\n<Chipaca> cachio: you around?\n<Chipaca> cachio: 2018-10-19 16:05:00 Cannot allocate google:ubuntu-18.10-64: cannot find any Google image matching \"ubuntu-os-cloud-devel/daily-ubuntu-1810-cosmic-v20181002\" on project \"ubuntu-os-cloud-devel\"\n<Chipaca> Dmitrii-Sh: hi\n<Chipaca> Dmitrii-Sh: i thought we'd fixed that in 2.35 though\n<Dmitrii-Sh> Chipaca: hi\n<Dmitrii-Sh> Chipaca: I tried that when core was installed but apparently without the core snap it doesn't work\n<Dmitrii-Sh> Chipaca: also noted by the k8s team https://github.com/juju-solutions/bundle-canonical-kubernetes/issues/676#issuecomment-431449672\n<Chipaca> Dmitrii-Sh: you're on 2.34\n<Dmitrii-Sh> Chipaca: hmm\n<Dmitrii-Sh> ok\n<Chipaca>   Installed: 2.34.2\n<Chipaca> Dmitrii-Sh: when you get the core snap, you run snapd from the core snap, which is 2.35\n<Chipaca> Dmitrii-Sh: that might be the difference :-)\n<Dmitrii-Sh> Chipaca: so, snapd comes from the core snap?\n<Chipaca> Dmitrii-Sh: can you update your snapd package to 2.35?\n<Chipaca> Dmitrii-Sh: on ubuntu, if the core snap is installed, yes\n<Dmitrii-Sh> Chipaca: wow, that's new to me\n<Dmitrii-Sh> Chipaca: is it present in apt repos already (updates?)\n<Dmitrii-Sh> Chipaca: 2.34.2+18.04 looks to be the newest one\n<Chipaca> Dmitrii-Sh: cosmic has 2.35.5\n<Dmitrii-Sh> the problem is that every environment that we deploy for customers uses LTS versions\n<Chipaca> right, the SRUs are chugging along\n<Dmitrii-Sh> Chipaca: I see http://people.canonical.com/~ubuntu-archive/pending-sru.html\n<Chipaca> I don't know if there's a 2.35.5 in the pipeline\n<Chipaca> 'snap info core' shows there's a 2.35.5 core, but not all updates to core need to be updates to the snapd package\n<Chipaca> mvo would know :-)\n<Chipaca> anyhow\n<Chipaca> Dmitrii-Sh: if you could install snapd from proposed, that'll tell us if this is actually fixed :-)\n<Dmitrii-Sh> Chipaca: https://launchpad.net/ubuntu/+source/snapd/2.35.4~14.04/+build/15523520\n<Dmitrii-Sh> seems like the SRU is waiting on arch-specific deps\n<Dmitrii-Sh> snapd\n<Dmitrii-Sh> ppc64el: Dependency wait\n<Dmitrii-Sh> arm64: Dependency wait\n<Dmitrii-Sh> powerpc: Dependency wait\n<Dmitrii-Sh> Chipaca: ah, that's for 14.04 only\n<Chipaca> Dmitrii-Sh: https://launchpad.net/ubuntu/+source/snapd/2.35.4+18.04 ?\n<Dmitrii-Sh> Chipaca: getting a container to test now\n<Chipaca> neat, thank you\n<Chipaca> I'll get a container for some ice-cream, meanwhile\n<Dmitrii-Sh> Chipaca: right \u00f0\u009f\u0091\u008d\n<mup> PR snapcraft#2371 closed: plugins: remove jhbuild <Created by kyrofa> <Merged by sergiusens> <https://github.com/snapcore/snapcraft/pull/2371>\n<mup> PR snapcraft#2372 closed: gradle plugin: add support for bases <Created by sergiusens> <Merged by sergiusens> <https://github.com/snapcore/snapcraft/pull/2372>\n<cachio> Chipaca, updating it\n<Dmitrii-Sh> Chipaca: https://paste.ubuntu.com/p/qtsbwhc2cY/\n<Dmitrii-Sh> hmm\n<Dmitrii-Sh> tried restarting too\n<Dmitrii-Sh> root@snaptest:~# strace -e connect -f -p `pgrep -f snapd` &\n<Dmitrii-Sh> root@snaptest:~# snap install fcbtesting\n<Dmitrii-Sh> [pid  1313] connect(4, {sa_family=AF_INET, sin_port=htons(9), sin_addr=inet_addr(\"91.189.92.19\")}, 16) = -1 ENETUNREACH (Network is unreachable)\n<Dmitrii-Sh> [pid  1313] connect(4, {sa_family=AF_INET, sin_port=htons(9), sin_addr=inet_addr(\"91.189.92.41\")}, 16) = -1 ENETUNREACH (Network is unreachable)\n<cachio> Chipaca, #6024\n<mup> PR #6024: tests: new cosmic image for spread tests on gce <Created by sergiocazzolato> <https://github.com/snapcore/snapd/pull/6024>\n<mup> PR snapd#6024 opened: tests: new cosmic image for spread tests on gce <Created by sergiocazzolato> <https://github.com/snapcore/snapd/pull/6024>\n<cachio> if you have a minute to take a look\n<mup> PR snapcraft#2373 opened: rust plugin: add support for bases <Created by kyrofa> <https://github.com/snapcore/snapcraft/pull/2373>\n<cachio> Chipaca, I'll merge it if the tests pass\n<Chipaca> cachio: thanks\n<Chipaca> Dmitrii-Sh: hmm\n<Chipaca> gah\n<Chipaca> Dmitrii-Sh: sorry, my bad\n<Chipaca> Dmitrii-Sh: the fix in 2.35 is about the proxy store, not the http proxy\n<Chipaca> Dmitrii-Sh: question, why aren't you setting the proxy via /etc/environment?\n<Dmitrii-Sh> Chipaca: Juju sets it via core snap proxy settings\n<Dmitrii-Sh> and that's how we set it on the whole env\n<Dmitrii-Sh> nowadays /etc/environment is untouched by juju\n<Dmitrii-Sh> so it's very targeted proxy config to avoid workloads from getting any proxy settings\n<Chipaca> hm\n<Dmitrii-Sh> in other words: if we deploy an HTTP service and a client, the client should not be affected by global environment settings because they speak within the same deployment behind a firewall/proxy\n<Chipaca> Dmitrii-Sh: is this on 18.04?\n<Dmitrii-Sh> and if a charm requires proxy usage it must explicitly use JUJU_CHARM_HTTP(S)_PROXY proxy settings (e.g. charms that do curl or wget)\n<Dmitrii-Sh> Chipaca: yes\n<Dmitrii-Sh> Chipaca: what we use as a workaround is cloudinit userdata + setting environment variables to the systemd unit of snapd. This makes it more rigid as changing juju snap-related model-configs does not change the proxy setup. Besides, Juju documents usage of these model-configs and while they set core proxy settings, it doesn't result in working deployments\n<Chipaca> right\n<Chipaca> we need to talk about these things i suspect\n<Chipaca> this is, to me at least, an unexpected use case\n<Chipaca> with the http proxy we'd always assumed that if you were in classic, environ was fine; if you were in core, you had core so 'snap set' would work\n<Chipaca> what you're saying is that you want 'snap set' to always work even if core isn't there, and that that needs to win over the environ\n<Dmitrii-Sh> Chipaca: well, essentially, we don't want /etc/environment to be modified by snapd because it affects services we start. Not all traffic goes to the internet and most of it stays within an internal network(s) so we only apply proxy settings for applications that really need them (like apt, snapd and other package managers).\n<Dmitrii-Sh> for example, that was a problem with Juju hooks because HTTP_PROXY in the environment resulted in charm failures when traffic was local (and it was it most cases)\n<Chipaca> Dmitrii-Sh: wait, if you don't want /etc/environment modified by snapd, why are you calling 'snap set core proxy.yadda'?\n<Dmitrii-Sh> Chipaca: to set proxy settings for snapd itself but only when it retrieves snaps from the store or from enterprise proxy (e.g. a store is behind an internal firewall)\n<Chipaca> i'm lost now\n<Chipaca> when you say 'enterprise proxy', you mean the proxy store?\n<Chipaca> because that's a different setting, that's the one we fixed\n<Dmitrii-Sh> yes-yes, let me break it down :^)\n<Chipaca> and that one wasn't touching /etc/environment afaik\n<Dmitrii-Sh> 1) proxy settings -> http transport object setting to use a proxy\n<Chipaca> break it down into small pieces because it's been a long week and it's nearly midnight\n<Dmitrii-Sh> 2) enterprise proxy settings -> retrieve snaps from here\n<Dmitrii-Sh> proxy settings + enterprise proxy settings -> retrieve snaps from here via an http proxy\n<Dmitrii-Sh> app proxy settings -> /etc/environment (global) or snap-specific options coded by snap authors to modify http transport settings of apps\n<Dmitrii-Sh> what we (ideally) want to achieve: settings are set via Juju model-configs snap-http-proxy, snap-https-proxy which translates into core snap proxy settings\n<Dmitrii-Sh> this covers case (1) above\n<Dmitrii-Sh> and app proxy settings are unaffected by this\n<Dmitrii-Sh> juju can also set snap-store-proxy\tand snap-store-assertions\tsettings -> this will handle case (2) and modify the target URL of a snap store on snapd\n<Chipaca> Dmitrii-Sh: but you also want core snap proxy settings to not affect /etc/environment\n<Chipaca> in (1) i mean\n<Dmitrii-Sh> Chipaca: yes, because on a classic system this will potentially affect all workloads we deployed\n<Dmitrii-Sh> including the non-snap ones\n<Dmitrii-Sh> instead, we expect snaps themselves to expose proxy settings if they need to direct some application traffic via a proxy\n<Chipaca> Dmitrii-Sh: this is a rather big change of behaviour\n<Dmitrii-Sh> I am open to saying that per-snap global settings should be allowed because some snaps may be primitive in that regard\n<Chipaca> Dmitrii-Sh: are you in SCL next week?\n<Dmitrii-Sh> Chipaca: yes\n<Chipaca> Dmitrii-Sh: ok, talk it over with gustavo and/or mvo\n<Dmitrii-Sh> Chipaca: ok\n<Dmitrii-Sh> Chipaca: I'll just give you an example\n<Dmitrii-Sh> kubectl talks to kubeapi\n<Dmitrii-Sh> if we install it from a snap store via a proxy\n<Dmitrii-Sh> it doesn't mean kubectl should use proxy settings to talk to kubeapi\n<Chipaca> I do understand the use case, I think :)\n<Chipaca> what's there now is very simplistic, and only works on core and not classic\n<Dmitrii-Sh> right :^) in other words it's making only north-south traffic go through a proxy if needed, but leave east-west traffic within the data center unaffected\n<Dmitrii-Sh> north-south - download packages from the internet\n<Dmitrii-Sh> east-west - talk within a DC\n<Chipaca> so, one way to cover that is to expose that config, but skip the 'write /etc/environment' bit\n<Chipaca> on classic i mean\n<Chipaca> if we need the same thing on core then i dunno\n<Chipaca> it also means we need some internal thing with this, which i think we don't currently have\n<Chipaca> that is, i think we rely on the environment for this; we do store the config\n<Chipaca> hm\n<Chipaca> anyway, talk it over with snapd people in SCL\n<Chipaca> it's very doable, once we have a design\n<Chipaca> try to do it early in the week so I  can code it in the second half (i won't be there)\n<Chipaca> :-)\n<Dmitrii-Sh> Chipaca: ok, I'll do my best - a lot of people stumbled upon it in field engineering already\n<mup> PR snapcraft#2374 opened: build providers: destroy on create failures <Created by sergiusens> <https://github.com/snapcore/snapcraft/pull/2374>\n<mup> PR snapd#6024 closed: tests: new cosmic image for spread tests on gce <Created by sergiocazzolato> <Merged by chipaca> <https://github.com/snapcore/snapd/pull/6024>\n<mup> PR snapcraft#2370 closed: ant plugin: add support for bases <Created by sergiusens> <Merged by sergiusens> <https://github.com/snapcore/snapcraft/pull/2370>\n<mup> PR snapcraft#2375 opened: sanity checks: verify that command-chain is not used with legacy adapter <Created by kyrofa> <https://github.com/snapcore/snapcraft/pull/2375>\n<mup> PR snapcraft#2373 closed: rust plugin: add support for bases <Created by kyrofa> <Merged by sergiusens> <https://github.com/snapcore/snapcraft/pull/2373>\n#snappy 2018-10-20\n<mup> PR snapcraft#2376 opened: jdk plugin: remove jdk <Created by sergiusens> <https://github.com/snapcore/snapcraft/pull/2376>\n<mup> PR snapcraft#2377 opened: cli: remove disable-parallel-build and geoip toggles <Created by sergiusens> <https://github.com/snapcore/snapcraft/pull/2377>\n<mup> PR snapcraft#2374 closed: build providers: destroy on create failures <Created by sergiusens> <Merged by sergiusens> <https://github.com/snapcore/snapcraft/pull/2374>\n<mup> PR snapcraft#2376 closed: jdk plugin: remove jdk <Created by sergiusens> <Merged by sergiusens> <https://github.com/snapcore/snapcraft/pull/2376>\n<mup> PR snapcraft#2375 closed: sanity checks: verify that command-chain is not used with legacy adapter <Created by kyrofa> <Merged by sergiusens> <https://github.com/snapcore/snapcraft/pull/2375>\n<mup> PR snapd#6006 closed: tests: move spread-shellcheck to run-checks --static <Created by chipaca> <Closed by chipaca> <https://github.com/snapcore/snapd/pull/6006>\n<mup> PR snapcraft#2377 closed: cli: remove disable-parallel-build and geoip toggles <Created by sergiusens> <Merged by sergiusens> <https://github.com/snapcore/snapcraft/pull/2377>\n<mup> PR snapcraft#2378 opened: Release chagelog for 3.0 <Created by sergiusens> <https://github.com/snapcore/snapcraft/pull/2378>\n<ping> Hi, I've a question about using snaps\n<ping> I have two GNU+Linux distros\n<ping> and is there a way to share the snaps between them?\n<ping> for example, storing them in a third SSD which I use to store stuff shared between both\n<ping> I want to do this because I've a very bad internet connection and re-download again the same set of snaps for all my distros is a little problematic\n<mup> PR snapd#6011 closed: Fix import as module by adding go.mod files <Created by ryanjyoder> <Closed by ryanjyoder> <https://github.com/snapcore/snapd/pull/6011>\n<mup> PR snapd#6025 opened: Add go.mod files <Created by ryanjyoder> <https://github.com/snapcore/snapd/pull/6025>\n<mup> PR snapd#6026 opened: cmd/snap: try not to panic on error from \"snap try\" <\u00e2\u009a\u00a0 Critical> <Created by chipaca> <https://github.com/snapcore/snapd/pull/6026>\n#snappy 2018-10-21\n<sborovkov> hi, is there an interface that gives permissions to set thread priority / cpu affinity?\n<mup> PR snapcraft#2378 closed: Release chagelog for 3.0 <Created by sergiusens> <Merged by sergiusens> <https://github.com/snapcore/snapcraft/pull/2378>\n#snappy 2019-10-14\n<mborzecki> morning\n<zyga> mborzecki: good morning\n<mborzecki> zyga: hey\n<zyga> mborzecki: election results, uuuuh\n<mborzecki> zyga: not a surprise really\n<mvo> hey mborzecki and zyga\n<mborzecki> zyga: i'm happy sejm is more diversified, but wan's really expecting a significant power shift\n<zyga> hey mvo\n<zyga> mborzecki: did you see the new results this morning\n<zyga> mborzecki: pis has almost 50 now\n<mborzecki> mvo: hey\n<mborzecki> zyga: those aren't final yet\n<zyga> mborzecki: exactly :(\n<mup> PR core-build#57 opened: many: drop static files for \"core\" snap from the package <Created by mvo5> <https://github.com/snapcore/core-build/pull/57>\n<mvo> mborzecki, zyga: can I get a review for this please? and for https://github.com/snapcore/core/pull/83\n<mup> PR core#83: move most of the ubuntu-core config deb into the snap snap build <Created by mvo5> <https://github.com/snapcore/core/pull/83>\n<mborzecki> mvo: can you take a quick look at https://github.com/snapcore/snapd/pull/7587 ?\n<mvo> without one review from a team member I cannot merge\n<mup> PR #7587: spread: generate delta when using google backend <Simple \u00f0\u009f\u0098\u0083> <Created by bboozzoo> <https://github.com/snapcore/snapd/pull/7587>\n<mvo> mborzecki: sure\n<zyga> I'll be around in 15\n<mup> PR core-build#48 closed: config: remove static files in etc,lib,usr,var <Created by mvo5> <Closed by mvo5> <https://github.com/snapcore/core-build/pull/48>\n<zyga> mborzecki: is school cancelled for your kids as well?\n<mup> PR snapd#7587 closed: spread: generate delta when using google backend <Simple \u00f0\u009f\u0098\u0083> <Created by bboozzoo> <Merged by bboozzoo> <https://github.com/snapcore/snapd/pull/7587>\n<mborzecki> mvo: left some comments under https://github.com/snapcore/core/pull/83\n<mup> PR core#83: move most of the ubuntu-core config deb into the snap snap build <Created by mvo5> <https://github.com/snapcore/core/pull/83>\n<mborzecki> mvo: i suppose it was like this before too\n<mvo> mborzecki: yeah, these files just move in this PR - happy to do a followup with fixes\n<mborzecki> mvo: +1\n<mvo> mborzecki: \\o/\n<mborzecki> mvo: hm the travis job is red anyway\n<mvo> mborzecki: yeah, I need to tweak the ppa:snappy-dev/image archive as right now the builds are fighting over which content is correct\n<mvo> mborzecki: the coresponding one in core-build (57) is what is needed in the ppa to properly build\n<mvo> mborzecki: if you could also please look at https://github.com/snapcore/core-build/pull/57\n<mup> PR core-build#57: many: drop static files for \"core\" snap from the package <Created by mvo5> <https://github.com/snapcore/core-build/pull/57>\n<mvo> mborzecki: its the coresponding one for the one you reveiwed before\n<mup> PR core#83 closed: move most of the ubuntu-core config deb into the snap snap build <Created by mvo5> <Merged by mvo5> <https://github.com/snapcore/core/pull/83>\n<zyga> eoan woes :/\n<zyga> moving back to vm\n<pstolowski> mornings\n<mvo> hey pstolowski\n<zyga> hey pawel\n<mup> PR core-build#57 closed: many: drop static files for \"core\" snap from the package <Created by mvo5> <Merged by mvo5> <https://github.com/snapcore/core-build/pull/57>\n<mup> PR core#107 opened: extra-file: drop restorecon from sshd-host-keygen <Created by mvo5> <https://github.com/snapcore/core/pull/107>\n<mborzecki> pstolowski: hey\n<mup> PR core#108 opened: extra-files: add /var/home to make snaps work on some distros <Created by mvo5> <https://github.com/snapcore/core/pull/108>\n<zyga> thanks for that\n<mborzecki> got to run an errand, back in a bit\n<mvo> zyga: my pleasure\n<mup> PR core18#141 opened: static: add /var/home to make snaps work on some distros <Created by mvo5> <https://github.com/snapcore/core18/pull/141>\n<mup> PR snapd#7594 opened: tests: replace \"test-snapd-base-bare\" with real \"bare\" base snap <Created by mvo5> <https://github.com/snapcore/snapd/pull/7594>\n<mvo> zyga: also https://github.com/snapcore/bare-base/pull/1 (which I think mup is not monitoring yet)\n<mup> PR bare-base#1: Makefile: add /var/home to make snaps work on some distros #141 <Created by mvo5> <https://github.com/snapcore/bare-base/pull/1>\n<mborzecki> re\n<zyga> one sec\n<zyga> hmm\n<pstolowski> :\n<mborzecki> mvo: can you take another look at https://github.com/snapcore/snapd/pull/7536 ? it's unclear to me whether we're still missing something there or not\n<mup> PR #7536: gadget: accept system-seed role and ubuntu-data label <Created by cmatsuoka> <https://github.com/snapcore/snapd/pull/7536>\n<mvo> mborzecki: in a meeting, but happy to do so later\n<mborzecki> mvo:  cool, thanks!\n<Chipaca> zyga: http://whatthecommit.com/index.txt\n<zyga> Chipaca: looking\n<zyga> hello btw :)\n<zyga> Chipaca: will you tell if I uses that :D ?\n<zyga> brb\n<zyga> let me get coffee\n<Chipaca> coffee sounds like a good idea\n<zyga> heh\n<zyga> my woes with eoan on suspend\n<zyga> translate to same woes in vmware on suspend\n<zyga> (vmware suspends VMs to save power if asked to by asking the os to suspend)\n<mup> PR snapd#7595 opened: seed/seedwriter: support writing Core 20 seeds (aka recovery systems) <Created by pedronis> <https://github.com/snapcore/snapd/pull/7595>\n * zyga runs spread _and_ gets that coffee he wanted\n<mborzecki> do you guys think it's legit to poke snapd api when a snap service is being stoped?\n<ondra> Chipaca I think I found another 20 seconds in first boot :0\n<ondra> Chipaca or more :)\n<pstolowski> ondra: hey, i'm working on pre-baking of firstboot stuff, with the plan to shave off those most expensive ops\n<pstolowski> pedronis: btw i saw your comment to Friday's standup notes, do you have a moment today to discuss?\n<Chipaca> ondra: tell me more :-)\n<ondra> pstolowski sure\n<Chipaca> pstolowski: ondra is finding things we can do that'll help current core16/18 though so as long as it's not disruptive it's good imho\n<ondra> Chipaca reading logs, we are trying to refresh catalogue from store, at very early stage. I'd think this is operation do not need to do pre-seeding\n<ondra> Chipaca it's so early in the boot, we have no network, so it keeps timing out.\n<Chipaca> ondra: you're saying skipping that saves us 20+ seconds?\n<ogra> yeah, snapd really shouldnt assume network ... we have many wlan equipped boards that first need wifi setup\n<ondra> Chipaca in our case there will be never network a this stage ( wireless only net interface, image has no baked in AP credentials)\n<ondra> Chipaca yep\n<pstolowski> ondra: funny you mention this as it's currently erroring/making noise in my pre-baking code (precisely because of no network in the chroot env) and i was about to look at what to do about it\n<Chipaca> ondra: you can trick it to skipping that step fwiw\n<ondra> Chipaca https://paste.ubuntu.com/p/73vXpjW3jf/\n<ondra> pstolowski Chipaca I'd argue that we have not even parsed seed.yaml, what do we actually need to refresh, or what do we expect to gain from it?\n<ondra> Chipaca pstolowski https://paste.ubuntu.com/p/3f2ZPHrtmt/\n<ondra> this shaved me 20 seconds and no noise\n<Chipaca> ondra: if you drop in a snapd.service.d file with [Service] ExecStartPre=touch /var/cache/snapd/names, that should have it skip that catalog refresh\n<ondra> pstolowski Chipaca does it sounds like something we can assume?\n<Chipaca> ondra: or that :-)\n<Chipaca> ondra: but, if you do that, can you make seeded trigger a catalog refresh?\n<ondra> Chipaca I was thinking to simply check if we are seeded, and if not, assume this is first boot\n<ondra> Chipaca you mean to trigger refresh after it's seeded?\n<Chipaca> ondra: that would mean no catalogues for the first day of the device\n<Chipaca> ondra: yes, please\n<Chipaca> ondra: it's called \"refresh\" but they don't exist before the first refresh succeeds\n<ondra> Chipaca this is first shot, I'm sure this can be done better way\n<Chipaca> ondra: fair enough\n<ondra> Chipaca but are you sure it works this way? because this refresh cannot succeed for many reasons\n<Chipaca> ondra: right, it failing means it tries again sooner\n<ondra> Chipaca there are no snaps installed, so what is it actually refreshing? if this is brand store it should have no way to access store anyway\n<ondra> Chipaca we only get serial assertion once seeded\n<Chipaca> ondra: right but you're changing code that affects everybody :)\n<ogra> pfft\n<ogra> who cares about the others\n<ondra> Chipaca then let's make it way it works way we want :)\n<ondra> Chipaca this was my first shot to see if I can use seeded as detection of first boot\n<ondra> Chipaca now we need to decide what to do next, ideally I was thinking to schedule refresh in say 10 minutes or something\n<ondra> Chipaca but I think you guys know first boot sequence way better than me, so you might have better idea\n<ogra> does refresh uses deltas ? could we pre-seed it with data at build time so it only needs to do a delta update ?\n<ondra> I do not know if we even know at that point number of snaps we are about to seed, so we can guess delay\n<ondra> ogra what refresh? this pings server before we have any snap installed\n<ondra> at that point, there zero snaps to check for refresh\n<ogra> i thought it queies the store and fills a local db\n<ogra> *queries\n<Chipaca> ogra: catalog refresh is not refresh\n<Chipaca> oh dear looks like i'm lagged\n<ogra> ah, ok\n<ogra> (just thinking about cutting down the amount of data to request and transfer to cut down time)\n<ondra> ogra you want to refresh before you have even first version, ever heard \"trying to run before you can walk\"\n<ondra> :P\n<Chipaca> ondra: so, what we want at some point is to move catalog-refresh to a task, and then trigger that task from the right places/times\n<zyga> mvo: some packaging changes may be needed https://forum.snapcraft.io/t/stop-commands-and-snapd-package-cleanup/13688\n<ondra> Chipaca that sounds good\n<Chipaca> ondra: easy peasy :-p\n<ogra> ondra, no, i want to pre-fill a db and only apply a delta so you dont need the full db data\n<ondra> Chipaca I'd do test boot to see refresh time, because we might trigger refresh when we get serial assertion\n<ondra> ogra I think we do not get db delta, as we are only pulling assertions we care about and relevant to the system\n<Chipaca> ondra: meanwhile your approach is a good step in the right direction. I'd suggest moving the check earlier, even, to where the CanAutoRefresh check is\n<ondra> ogra but I might be wrong\n<ogra> i'm probably tricked by the name \"catalog-refresh\" then :)\n<ondra> Chipaca I was not brave to put it that early, you say it's safe, then indeed better place\n<Chipaca> ondra: putting it super early means it gets to try again every ~5 minutes or so\n<Chipaca> ondra: that's what we want :-)\n<ondra> Chipaca ah yeah indeed that's good one\n<Chipaca> then once seeded it'll do the catalog refresh, and set the next catalog refresh time and back off\n<ondra> Chipaca yep, it seems it triggered refresh once it got serial assertion, even with current change\n<mvo> zyga: packaging change where exactly? in lxd? or snapd?\n<ondra> Chipaca I just did fresh boot with change I had, so we have good trigger post seeding as well\n<ondra> Chipaca OK I will update change based on your suggestion and prepare PR\n<ondra> Chipaca we can then iterate there\n<ondra> Chipaca thanks for help :)\n<Chipaca> ondra: thank you!\n<zyga> mvo: in snapd\n<mborzecki> zyga: mvo: yeah, the situation is puzzling\n<mborzecki> maybe let's talk after/during standup?\n<mborzecki> i guess there's a reason why it's done in postrm and not prerm like other distros\n<mvo> mborzecki: after sounds ok\n<mup> PR core18#141 closed: static: add /var/home to make snaps work on some distros <Created by mvo5> <Merged by sil2100> <https://github.com/snapcore/core18/pull/141>\n<ogra> wow, there are distros using /var/home as default ? crazy !\n<Chipaca> ogra: silverblue i think\n<ogra> (i used to do that on servers with /var being the data partition ... but would never have imagined a distro doing this by default)\n * pstolowski lunch\n<mup> PR snapd#7596 opened: Skip catalog refresh on unseeded system <Created by kubiko> <https://github.com/snapcore/snapd/pull/7596>\n<ondra> Chipaca pstolowski https://github.com/snapcore/snapd/pull/7596\n<mup> PR #7596: Skip catalog refresh on unseeded system <Created by kubiko> <https://github.com/snapcore/snapd/pull/7596>\n<ondra> pstolowski I also created this PR, to run assertion check in parallel https://github.com/snapcore/snapd/pull/7590\n<mup> PR #7590: seed: seed16: run adding snaps in parallel <Needs Samuele review> <Created by kubiko> <https://github.com/snapcore/snapd/pull/7590>\n<zyga> brb\n<zyga> 1\n * zyga needs to leave the house and think\n<zyga> or work anywhere but here\n<zyga> I cannot stand the smell anymore (kitchen nearby)\n<mup> Bug #1650738 changed: Scan network failure error after first reboot <Snappy:Fix Released> <https://launchpad.net/bugs/1650738>\n<mup> Bug #1649840 changed: unknown keys in model assertion are silently ignored <Snappy:Won't Fix> <Ubuntu Image:Invalid by sil2100> <https://launchpad.net/bugs/1649840>\n<mup> Bug #1651722 changed: Latest candidate snap breaks running snapcraft in classic snap <Snappy:Fix Released> <https://launchpad.net/bugs/1651722>\n<abeato> sil2100, hey, did you see my update to https://github.com/CanonicalLtd/ubuntu-image/pull/175 ?\n<mup> PR CanonicalLtd/ubuntu-image#175: Little kernel bootloader support <Created by alfonsosanchezbeato> <https://github.com/CanonicalLtd/ubuntu-image/pull/175>\n * Chipaca goes for a short walk\n<sil2100> abeato: hey! Yes, let me look at that and action in a bit, I'm on the release sprint right now\n<zyga> mvo: I'm on a slow network, I cannot join the standup with video today\n<zyga> not sure if audio will work, I'll do my best\n<mvo> zyga: no worries\n<abeato> sil2100, cool, take you time, thanks\n<zyga> I cannot connect\n<zyga> Eoan and modem manager :-/\n<mup> Bug #1749538 changed: refresh time docs lacks the correct command <docs> <Snappy:Fix Released by morrisong> <https://launchpad.net/bugs/1749538>\n<Chipaca> pedronis: wrt #1659153, I don't think there's a bug beyond the impedance mismatch (which could be alleviated by blocking private+name)\n<mup> Bug #1659153: /v2/find with select=private has different behaviour for queries and name searches <Snappy:Confirmed> <https://launchpad.net/bugs/1659153>\n<Chipaca> pedronis: OTOH I'm not sure what store bug you mean :-)\n<Chipaca> pedronis: snap find --name hits the store's 'info' endpoint\n<Chipaca> not the search one\n<mborzecki> mvo: pedronis: ok, added a note in the forum about the prerm thung we agreed on\n<mborzecki> pedronis: can you take another look at claudio's PR https://github.com/snapcore/snapd/pull/7536 ? i'm not sure there's more to do there, and if we land it then i could start looking into https://github.com/snapcore/snapd/pull/7593\n<mup> PR #7536: gadget: accept system-seed role and ubuntu-data label <Created by cmatsuoka> <https://github.com/snapcore/snapd/pull/7536>\n<mup> PR #7593: recovery-tool: add sfdisk wrapper <Created by cmatsuoka> <https://github.com/snapcore/snapd/pull/7593>\n<pedronis> mborzecki: I'll try to look today or tomorrow morning at that PR\n<mborzecki> pedronis: great, thanks!\n<zyga> I managed to somehow connect\n<zyga> at this rate I will run windows with WSL to get a machine that works :|\n * Chipaca sends zyga a raspberry pi\n<mborzecki> zyga: what's wrong with eoan?\n<zyga> mborzecki: suspend resume kills my input\n<zyga> mborzecki: then does something really odd to my modem\n<zyga> ended up powering off\n<zyga> and then powering on\n<zyga> then I can connect\n<zyga> reboot is not good enough\n<zyga> gnome-shell connection menu gets very confused when this happens, so I really reboot out of a habit now\n<mborzecki> zyga: btw. i think i asked abut it already, is the input and modem connected via usb?\n<zyga> mborzecki: I don't know\n<zyga> mvo: packaging question: should /usr/bin/snap be a symbolic link to /usr/lib/snapd/snap?\n<zyga> mvo: in our debian/ubuntu packages\n<rbasak> ANy help with hacking on snapcraft please?\n<zyga> mborzecki: I don't think the touchpad / trackpoint is using usb\n<rbasak> I'm trying to look at https://bugs.launchpad.net/snapcraft/+bug/1841861 but a day later I still haven't managed to figure out how to run snapcraft from the source tree :-/\n<mup> Bug #1841861: Python plugins fails to build a snap when some parts depends on unpublished modules <Snapcraft:New> <https://launchpad.net/bugs/1841861>\n<zyga> mborzecki: my knowledge ends at xinput that says:\n<zyga> SynPS/2 Synaptics TouchPad\n<rbasak> snapcraft seems to have its own plugin discovery and it's a plugin I'm trying to modify\n<zyga> TPPS/2 IBM TrackPoint\n<rbasak> But it's not using PYTHONPATH, and looking in the pip-installed area first.\n<rbasak> (having followed HACKING.md)\n<zyga> kenvandine: ^ actually, do you know how to debug xinput things going away on suspend\n<zyga> kenvandine: on my laptop suspend kills the trackpoint/touchpad until reboot\n<rbasak> And I'm about five levels deep in indirection trying to figure out how to get snapcraft to look in the source tree :-/\n<mvo> zyga: maybe, whats the advantage of doing it?\n<zyga> mvo: /usr/lib/snapd is enough to get all the new binaries\n<zyga> mvo: IIRC we do something like that on core18\n<mborzecki> zyga: hmm same on x250, not listed in lsusb\n<zyga> anyway\n<zyga> back to work\n<ijohnson> rbasak: I think the actual snapcraft devs such as cjp256 and sergiusens are off today, but also note that there is an additional channel for snapcraft specifically #snapcraft\n<rbasak> Joined, thanks!\n<sil2100> abeato: can we get https://snapcraft.io/docs/gadget-snap updated with the new names too?\n<abeato> sil2100, sure, let me edit\n<abeato> sil2100, ah, I thought that was the forum\n<abeato> sil2100, I don't know who needs to change that one\n<sil2100> Ah, the forum one too! I never know which one is the official one in the end\n<mvo> pedronis: do you want to review 7593 or do you think a review from maciej and me will be enough?\n<pedronis> mvo: I probably will not do a deep review, but I should look at it\n<abeato> sil2100, anyway, I've edited the forum one: https://forum.snapcraft.io/t/the-gadget-snap/696\n<pedronis> mvo: also is recovery-tool called recovery-tool? shouldn't it be snap-recovery ?\n<pedronis> where will it get installed?\n<pedronis> I asked in the PR itself\n<abeato> ijohnson, hi! do you know where is the latest version of the dpdk/hugepages interfaces?\n<ijohnson> abeato: you mean the one that luke worked/is working on?\n<abeato> yes\n<ijohnson> one minute let me look\n<pedronis> Chipaca: I made a meta-comment in #7589, would like your input\n<abeato> pedronis, fyi I have edited https://forum.snapcraft.io/t/the-gadget-snap/696 , updating the role names for lk partitions as was decided\n<mup> PR #7589: cmd/snap: add ability to register \"snap internal\" commands <Needs Samuele review> <Created by jhenstridge> <https://github.com/snapcore/snapd/pull/7589>\n<abeato> ijohnson, k\n<mvo> pedronis: I think snap-recovery is more approprate, yes\n<pedronis> abeato: thank you\n<ijohnson> abeato: last I heard from Luke, https://github.com/snapcore/snapd/pull/5885 was up-to-date, I helped him a bit with the dpdk snap here: https://github.com/anonymouse64/dpdk-snap/tree/wip\n<mup> PR #5885: Adding DPDK interface for DPDK Snap <Decaying \u00e2\u0098\u00a2> <Created by wililupy> <Closed by zyga> <https://github.com/snapcore/snapd/pull/5885>\n<ijohnson> err up-to-date insofar as that's all the work Luke had on it, not necessarily that it was complete\n<abeato> ijohnson, ok, thanks for the pointers\n<zyga> Wrapping up for now. Time to eat something\n<sil2100> abeato: merged your PR, thanks again! We should have it in edge soonish\n<sil2100> There's still one thing we want to add before we promote this further\n<sil2100> Hopefully having it in edge will be enough for now?\n<abeato> sil2100, awesome, thank you!\n<abeato> sil2100, sure, no hurry for me\n<kenvandine> zyga: sorry, I was out today for a holiday.  I'll catch up with you in the morning\n<jdstrand> joedborg: hey, I just saw this: 16:03 < joedborg> `[285928.025967] audit: type=1400 audit(1570741250.597:1384598): apparmor=\"DENIED\" operation=\"signal\" profile=\"docker-default\" pid=703 comm=\"kubelet\" requested_mask=\"receive\" denied_mask=\"receive\" signal=kill peer=\"snap.kubernetes-worker.kubelet\"`\n<jdstrand> joedborg: kubelet shouldn't be talking to a 'docker-default' profile, it should be talking to the one that containerd sets up\n<jdstrand> joedborg: oh, I read that backward. why is a docker container sending signals to kubelet?\n<ijohnson> jdstrand: joedborg: I don't remember the specifics, but IIRC the child profile (i.e. the container) needs to signal to the parent that it is done, I think that's something runC does\n<ijohnson> also welcome back jdstrand :-)\n<jdstrand> ijohnson: thanks, right, but the kubernetes-worker snap has a containerd with a different profile name than 'docker-default', so I'm confused why a profile named 'docker-default' is in play at all\n<jdstrand> joedborg: eff, I am a little slow today. that denial says that a process running under a 'docker-default' profile name was sent 'kill' by snap.kubernetes-worker.kubelet, and that was blocked because the docker-default profile doesn't allow receiving signals from snap.kubernetes-worker.kubelet\n<jdstrand> erf*\n<jdstrand> joedborg: so, why is kubelet talking to a container running under the 'docker-default' profile? the snap should be configured for it to talk to a containerd profile\n<ijohnson> jdstrand, well regardless of why it's named docker-default, the container is only allowed to transition to a docker-default profile from `docker-support` interface or to the `systemd-run` one from `k8s-support` interface if I'm reading those correctly\n<ijohnson> jdstrand: so if it started running under containerd-default we would have to change the apparmor transition rules wouldn't we?\n<jdstrand> ijohnson: the interfaces were adjusted for this before I left and there were no denials and no docker-default profiles on the system. I'm wondering what has changed. like, did something get dropped from the snap packaging? is the packaging moving to docker instead of containerd? something else?\n<jdstrand> ijohnson: ie:\n<jdstrand> # defaults for containerd\n<jdstrand> change_profile unsafe /** -> cri-containerd.apparmor.d,\n<jdstrand> signal (send) peer=cri-containerd.apparmor.d,\n<jdstrand> ptrace (read, trace) peer=cri-containerd.apparmor.d,\n<jdstrand> ijohnson: it all worked fine. this is for kubelet to *send* signals. the denial is about the container to *receive* them though\n<jdstrand> ijohnson: and there were patches to cri-containerd.apparmor.d in the kubernetes-worker package to allow this\n<jdstrand> (and for said profile to be named 'cri-containerd.apparmor.d', not 'docker-default'\n<jdstrand> )\n<jdstrand> so I'm confused why 'docker-default' is the profile name\n<jdstrand> the snap wasn't changed in 17 days according to github. I need more context from joedborg\n * jdstrand wonders if the control plane has a mix of docker and containerd. that would be weird...\n<joedborg> Hey jdstrand can we pick it up tomorrow please? I\u00e2\u0080\u0099ve got today off.  The eks-support branch in GitHub is up to date but I don\u00e2\u0080\u0099t think it\u00e2\u0080\u0099s very relevant\n<jdstrand> joedborg: yes, of course :)\n<jdstrand> joedborg: enjoy the rest of the day :)\n<joedborg> jdstrand: thanks :) I think it\u00e2\u0080\u0099s an issue of stuff in containerd still being constructed by apparmor\n<joedborg> That docker signal may be a red herring\n<joedborg> Constricted *\n<jdstrand> joedborg: well, kubelet shouldn't be sending a signal to anything with a 'docker-default' profile name when containerd is spinning up containers under the cri-containerd.apparmor.d profile\n<jdstrand> joedborg: unless there is an external docker that is spinning up stuff and the CP is telling kubelet to work with that container.\n<jdstrand> there are other things that could be wrong. we can look tomorrow\n<joedborg> jdstrand: yeah you might well be right as it\u00e2\u0080\u0099s a brown field deployment.  I\u00e2\u0080\u0099ll take a look in the AM and circle back.  Hope you had a good vacation btw\n<ijohnson> jdstrand: hmm I guess I never noticed that new containerd transition in docker-support, I only looked at kubernetes-support interface, it's still a bit confusing to me why certain things are in docker-support and not kubernetes-support when the docker snap doesn't use those things\n<ijohnson> jdstrand: anyways, for the docker snap specifically, the docker-default profile isn't persistent, it's just created in /tmp somewhere, loaded into the kernel and then the file is deleted, so it wouldn't show up anywhere in the normal apparmor packaging dirs\n<ijohnson> jdstrand: but anyways anyways I'll let you take care of this, as I haven't actually built this kubernetes snap and am just theorizing about everything\n<jdstrand> joedborg: thanks, it was great\n<jdstrand> ijohnson: yeah, I'm familiar with the way docker does things these days, but 'aa-status' would show it since the profile need to be loaded into the kernel for a process to be running under that profile. thanks\n<ijohnson> yes aa-status would still show it that's correct, I assumed you meant no docker-default profiles on the filesystem, sorry\n<jdstrand> no worries at all :)\n<mup> PR snapd#7597 opened: overlord/snapstate: add LastActiveDisabledServices, ComputeMissingDisabledServices <Created by anonymouse64> <https://github.com/snapcore/snapd/pull/7597>\n<mup> PR snapd#7598 opened: test/lib/names.sh: make backslash escaping explicit <Simple \u00f0\u009f\u0098\u0083> <Created by anonymouse64> <https://github.com/snapcore/snapd/pull/7598>\n#snappy 2019-10-15\n<mup> PR snapd#7598 closed: test/lib/names.sh: make backslash escaping explicit <Simple \u00f0\u009f\u0098\u0083> <Created by anonymouse64> <Merged by mvo5> <https://github.com/snapcore/snapd/pull/7598>\n<mborzecki> morning\n<mvo> mborzecki: good morning\n<mborzecki> yay 7536 landed :P\n<mup> PR snapd#7536 closed: gadget: accept system-seed role and ubuntu-data label <Created by cmatsuoka> <Merged by mvo5> <https://github.com/snapcore/snapd/pull/7536>\n<mborzecki> mvo: thanks!\n<mvo> mborzecki: yes, finally :)\n<mborzecki> i've updated #7593\n<mup> PR #7593: recovery-tool: add sfdisk wrapper <Created by cmatsuoka> <https://github.com/snapcore/snapd/pull/7593>\n<mborzecki> and there are some comments from zyga too\n<mborzecki> hmm, new kernel, i better reboot\n<mborzecki> brb\n<mborzecki> and back on 5.3.6 kernel\n<mup> PR snapd#7599 opened: gadget: refactor ensureVolumeConsistency <Created by mvo5> <https://github.com/snapcore/snapd/pull/7599>\n<pstolowski> morning\n<mvo> pstolowski: hey, good morning!\n<mborzecki> pstolowski: hey\n<zyga> hello?\n<zyga> is this thing on?\n<zyga> I think I connected now\n<zyga> sorry for starting late, lucy was sleeping hugging me all the time and got grumpy the second I tried to put her to bed\n<mborzecki> zyga: hey\n<zyga> mborzecki: hey, question on how to proceed for you\n<zyga> mborzecki: I removed the guts of snap-update-ns so that I can create other tools with the same logic\n<zyga> mborzecki: I moved it to system/mount for lack of a better name\n<zyga> mborzecki: some bits can go to sandbox/cgroup\n<zyga> mborzecki: but most has no good place to go\n<zyga> mborzecki: ideas?\n<zyga> mborzecki: I'm mainly after plan-writable-mimic and execute-writable-mimic\n<zyga> mborzecki: this pulls in change, assumptions, restrictions and tresspassing\n<zyga> mborzecki: along with loads of tests\n<mborzecki> mvo: i'm looking at 7593, perhaps our consistency checks are too strict, in particular the len(volumes) != 0 only counts when constraints are used, but once there's a system-seed structure defines and SsytemSeed is not true, then we bail out, why not allow this case?\n<mborzecki> zyga: that's part of mount related logic though?\n<mborzecki> zyga: or hmm we call it namespace (or whatnot) often\n<zyga> mborzecki: mainly yes\n<mborzecki> zyga: system/mount/namespace?\n<zyga> mborzecki: I'd go for system/mount really, it would help abbreviate the API names and would look nice\n<zyga> mount.Change\n<zyga> mount.Assumptions\n<zyga> mount.Restrictions\n<zyga> etc\n<mborzecki> system/mounts stgm too\n<zyga> though\n<zyga> my main question is: can we use main :)\n<zyga> er\n<zyga> system/\n<zyga> or is that too vague\n<zyga> I want to have this because otherwise debugging some issues is very hard\n<zyga> and having an interactive tool where you can do stuff is very useful to understand things misbehaving\n<zyga> and sadly it's forbidden to import from \"main\" packages\n<mborzecki> zyga: hm we have osutil which kind of is system like already, and there's some mount related stuff in there too\n<zyga> mborzecki: yeah but any existing package may trigger import loops\n<mborzecki> zyga: osutil/mount ?\n<zyga> I can tryt\n<zyga> *try\n<zyga> let's see if that works\n<zyga> mborzecki: do you know if go has some rules on what is in a binary\n<zyga> if there's a package foo/bar\n<zyga> and I use only bar.Symbol\n<zyga> does it include all of foo?\n<mborzecki> zyga: no, bar is bar, foor is foo\n<zyga> mborzecki: so foo does _not_ bloat a binary using bar?\n<zyga> mborzecki: and the reverse case?\n<zyga> mborzecki: is presence of foo/bar affecting a binary that only uses symbols from foo?\n<mborzecki> zyga: same, no effect unless you import it, or it's imported internally\n<mborzecki> zyga: or you created an import loop :P\n<zyga> ok, let's give it a try\n<mborzecki> mvo: simply put, if i have a gadget yaml with system-seed and system-data, and use an empty ModelConstraints (just want to have consistency checked), this will error out\n<mvo> mborzecki: I need to look, could you please add a note in the PR? maybe we are too strict .) it seems like the refactor helped to reason about this easier\n<mvo> mborzecki: I'm in the middle of 7593 right now\n<mborzecki> mvo: ah ok, started to play with thhis code too, i'll leave a comment in the PR then\n<mvo> mborzecki: or feel free to propose a pr on top if you feel this should be ok, either way is fine with me :)\n<mvo> ackk: hey, in snapd 2.42 we improved the fuse performance in lxd, I heard maas is using this a lot, did you see improvements?\n<Chipaca> \u00f0\u009f\u0091\u008b\n<zyga> hello Chipaca\n<zyga> mborzecki: the easy branch https://github.com/snapcore/snapd/pull/7600\n<mup> PR #7600: sandbox/cgroup: move freeze/thaw code <Created by zyga> <https://github.com/snapcore/snapd/pull/7600>\n<mup> PR snapd#7600 opened: sandbox/cgroup: move freeze/thaw code <Created by zyga> <https://github.com/snapcore/snapd/pull/7600>\n<Chipaca> pedronis: \u00f0\u009f\u0091\u008b\n<Chipaca> pedronis: did you see my question about the quotes in the repair script?\n<pedronis> yes, but I didn't understand it\n<pedronis> maybe mvo does\n<Chipaca> pedronis: you didn't understand the question, or the origin of the quotes? :)\n<mvo> Chipaca: good morning! I did not see the quotes at all\n<mvo> Chipaca: oh, fun!\n<Chipaca> mvo: snap known --remote repair brand-id=canonical repair-id=1\n<Chipaca> mvo: the script has typographic quotes\n<pedronis> Chipaca: I think it's copying from a gdoc\n<mvo> Chipaca: haha - I see it now\n<Chipaca> mvo: that might be intentional, but I doubt it\n<pedronis> that did that\n<mvo> Chipaca: yeah, it was not\n<Chipaca> yeah, that would do it\n<mvo> Chipaca: we need to improve the way we sign assertions\n<mvo> Chipaca: or let assertion sign :)\n<mvo> Chipaca: THANKS for spotting this\n<Chipaca> it's silly that I worry about this, but I worry because although \"echo\" doesn't care, there's not a lot more that is as amicable\n<mvo> Chipaca: oh, totally\n<mvo> Chipaca: we need to improve our process here\n<Chipaca> that's all i needed to hear to stop worrying about it :-)\n<mvo> Chipaca: I'm editing a gdoc now so that we don't use gdocs for this :)\n<mborzecki> mvo: added a bunch of comments in #7593, i think some relate to how the seed/recovery is supposed to work, can you take a look and maybe we could discuss that with whoever is interested before/after the standup?\n<mup> PR #7593: recovery-tool: add sfdisk wrapper <Created by cmatsuoka> <https://github.com/snapcore/snapd/pull/7593>\n<zyga> mborzecki: I'm stuck\n<zyga> mborzecki: the challenge is as follows:\n<zyga> mborzecki: there's lots of tailored mocking going on\n<zyga> mborzecki: in osutil/ snap-update-ns and now in osutil/mount\n<zyga> mborzecki: then there's the general mocking all syscalls that are used in snap-update-ns\n<zyga> mborzecki: if you try to reconcile all of that it's a big mess\n<zyga> mborzecki: thinking about it, I see the following way forward and perhaps out of the problem as well\n<zyga> mborzecki: we can make a new package syscalls/ that has just the system calls and a means to mock them\n<zyga> mborzecki: as things move out of snap-update-ns, they get updated to use this package over the private mocking code used locally\n<zyga> mborzecki: then some parts of snap-update-ns, for example all the mk{dir,file,symlink} and openpath code move to osutil/\n<zyga> (or osutil/mk... if that helps to scope it)\n<zyga> mborzecki: while the real essence of mount, like secure bind mount, mimic logic, can move to osutil/mount\n<zyga> or even osutil/mimic\n<zyga> mborzecki: moving everything in bulk might help in the short term\n<zyga> mborzecki: but won't change how those things are messy internally when considered along with the rest of osutil\n<mborzecki> heh, if you move some of the calls to osutil there's probably going to be some funky import dependencies\n<zyga> mborzecki: there already are, much of the code uses osutil already\n<zyga> mborzecki: how would you feel about the syscalls package?\n<zyga> mborzecki: the public API would be various system calls\n<zyga> mborzecki: and a means to mock them all (e.g. with the recorder already present in another package)\n<mborzecki> zyga: there's stdlib syscalls already, could those wrappers just live in osutil instead?\n<zyga> mborzecki: yes but I'd like them not to\n<zyga> osutils is already kind of large\n<zyga> but most importantly it already has a number of them and some mocking\n<zyga> mborzecki: (mock-this, mock-that, not in general)\n<zyga> mborzecki: the idea is that eventually, over time, code could move to use the new pakcage\n<zyga> and drop its own mocking\n<zyga> mborzecki: this is why I think a new package would help\n<zyga> mborzecki: if we move them over to osutil right now you will see a number of separate mocking systems that need to be reconciled\n<mborzecki> zyga: osutils/syscalls? with a godoc that 'here lie the syscalls we can mock' ? :)\n<zyga> :D\n<zyga> mborzecki: that works for me\n<zyga> mborzecki: importantly, mock in bulk\n<zyga> not one by one\n<Chipaca> mborzecki: osutil/sys\n<Chipaca> ?\n<mborzecki> right, avoids a name clash with stdlib's syscalls\n<ogra> would gadgets on top of debian work or is there any special-casing-code that only allows them on ubuntu classic ?\n<zyga> Chipaca: would you prefer if this was in osutil/sys?\n<zyga> brb\n<Chipaca> zyga: i'm not sure quite what you're asking, but, probably? the difference between osutil/syscall[s] and the existing osutil/sys escapes me\n<pedronis> zyga: what are the changes to snap-update-ns about ?\n<zyga> pedronis: being able to expose the internals for interactive debugging\n<pedronis> zyga: what's the context? are you chasing a bug?\n<zyga> Yes, correct.\n<pedronis> which one?\n<zyga> I did that yesterday and thought that some of those could land\n<zyga> Not all changes are easy though\n<pedronis> zyga: I fear I still don't have enough context, maybe you need to propose the mess as is, and I can look what to do with it\n<pedronis> when I have a bit of time\n<zyga> I think some bits are easier than others but the main value already exists. In a branch I can build mimic-tool to experiment and see where the kernel behavior is coming from\n<pedronis> zyga: still no context\n<zyga> Finishing breakfast, I\u00e2\u0080\u0099ll be back soon\n<mvo> mborzecki: I addressed a bunch of your comments in 7593, I am looking into using \"-apend\" now\n<mborzecki> mvo:  thanks! btw. that's an interesting find about blockdev\n<mvo> mborzecki: thank you for pointing this out!\n<mvo> mborzecki: blockdev seems to be part of busybox fwiw\n<mborzecki> mvo: ah, that makes sens\n<mvo> mborzecki: also thanks for the comment about -apend, I was wondering about this myself but wasn't aware of -append :)\n<mup> PR snapd#7601 opened: overlord/ifacestate: use SetupMany in setupSecurityByBackend <Created by stolowski> <https://github.com/snapcore/snapd/pull/7601>\n<pedronis> mborzecki: what's the status of #7079, is it being absorbed by the snap-recovery work?\n<mup> PR #7079: [RFC] cmd/snap-image: tool for building UC images <Created by bboozzoo> <https://github.com/snapcore/snapd/pull/7079>\n<mborzecki> pedronis: not really, parts of it probably affected snap recovery work, but iirc claudio did not pull in any patches directly\n<pedronis> mvo: are we going to do a 2.42.1 ?  mvo, pstolowski: when should we try to land #7092, it's unblocked now?\n<mup> PR #7092: packaging: use snapd type and snapcraft 3.x <Created by stolowski> <https://github.com/snapcore/snapd/pull/7092>\n<mborzecki> pedronis: though, the sfdisk parts should be consolidated into the gadget package since we alredy have some code there\n<pedronis> mborzecki: it sounds like we would redo it on top of the recovery work at this point, no?\n<pedronis> should it be closed?\n<mborzecki> pedronis: other than that, the tools are run in different environment and differnt part of the cycle\n<mborzecki> pedronis: i can close it for now and we can discuss what to do witht he tool separately\n<pedronis> ok, sounds good\n<pedronis> mborzecki: to be clear, the medium term plan is still for ubuntu-image to be a thin wrapper around snapd code, but I don't we want to land two codebases doing partions into snapd, we probably want to get to one codebase surface maybe in two slightly diffferent ways\n<mup> PR snapd#7079 closed: [RFC] cmd/snap-image: tool for building UC images <Created by bboozzoo> <Closed by bboozzoo> <https://github.com/snapcore/snapd/pull/7079>\n<pstolowski> pedronis: yes i think we should land 7092. going to deconflict it\n * Chipaca brb\n<mvo> mborzecki: I think 7593 is good for now, I want to do a followup with some real sfdisk tests but that will probably become quite a bit bigger\n<mborzecki> mvo: do you think it'd make sense to move the code that creates a LaidOutVolume out of sfdisk dump into gadget/partition.go ?\n<mup> PR snapd#7222 closed: tests: show just the last log as part of the debug output when check journal logs <Simple \u00f0\u009f\u0098\u0083> <Created by sergiocazzolato> <Closed by pedronis> <https://github.com/snapcore/snapd/pull/7222>\n<pedronis> mvo: mborzecki: volmgr is a strange name, it makes one think LVM\n<ogra> makes me think of androids vold ... :)\n<zyga> Voldmgrd\n<zyga> ;-)\n<ogra> pedronis, do you knwo off the top of your head if it is seamlessly possible to use gadget snaps on debian systems (i.e. to attach to a brand store or add certain interfaces)  or does snapd currently restrict this to ubuntu systems ?\n<mvo> pedronis: we could move it to osutil/fdisk ?\n<mup> PR snapd#7600 closed: sandbox/cgroup: move freeze/thaw code <Created by zyga> <Merged by bboozzoo> <https://github.com/snapcore/snapd/pull/7600>\n<pedronis> mvo: probably not osutil given it uses types from gadget\n<pedronis> it could be under gadget\n<mvo> pedronis: good point\n<mvo> pedronis: or just cmd/snap-recovery/fdisk ?\n<pedronis> that's fine too\n<pedronis> mostly against the volume manager terminology\n<mvo> pedronis: cool, I will rename to fdisk for now, I think it will later grow luks and stuff but even that seems to be ok to put under fdisk\n<pedronis> mvo: gadget/partition ?\n<pedronis> (I'm fine with fdisk as well)\n<mvo> pedronis: yeah, partition works for me, shall I keep it under cmd/snap-repair for now or do you prefer gagdet?\n<pedronis> mvo: as your prefer, discuss with mborzecki\n<mvo> pedronis: thanks, will do\n<pstolowski> got ubuntu-core-18-64:tests/core18/snapd-failover failure in one of my PRs: 2019-10-15T10:05:40Z INFO Waiting for restart...\n<pstolowski> error: cannot perform the following tasks:\n<pstolowski> - Mount snap \"snapd\" (unset) (remove /etc/systemd/system/snap-snapd-x2.mount: no such file or directory)\n<pstolowski> - Automatically connect eligible plugs and slots of snap \"snapd\" (there was a snapd rollback across the restart)\n<mup> Bug #1835024 changed: Links triggered within most snap apps open in a separate browser session <snapd:Incomplete> <xdg-utils (Ubuntu):New> <https://launchpad.net/bugs/1835024>\n<mup> Bug #1801201 changed: Installed snap icons missing if using pixmap <Snapcraft:New> <snapd:New> <https://launchpad.net/bugs/1801201>\n<mup> Bug #1809729 changed: Removing a snap triggers 'Starting scheduled backup' notification <amd64> <apport-bug> <cosmic> <third-party-packages> <udev> <wayland-session> <snapd:Triaged> <deja-dup (Ubuntu):New> <https://launchpad.net/bugs/1809729>\n<mup> Bug #1773416 changed: Interface from Thunderbird/Firefox to LibreOffice/VLC <snapd-interface> <snapd:Confirmed> <https://launchpad.net/bugs/1773416>\n<mup> Bug #1797745 changed: \"ln: failed to create symbolic link\" in deepin 15.7 <Snappy:Invalid> <https://launchpad.net/bugs/1797745>\n<zyga> it is frustrating when lxd and snapd use different bug trackers\n<zyga> and that launchpad does not automatically ping-back the other bug when an URL is mentioned.\n<zyga> stgraber: hello, could you kindly look at https://bugs.launchpad.net/snappy/+bug/1773044 and if appropriate, convert it to an LXD bug on github please.\n<mup> Bug #1773044: Can't get snap gui apps (notepadqq and firefox) to run in LXD/LXC container <Snappy:Invalid> <https://launchpad.net/bugs/1773044>\n<mup> Bug #1773044 changed: Can't get snap gui apps (notepadqq and firefox) to run in LXD/LXC container <Snappy:Invalid> <https://launchpad.net/bugs/1773044>\n<stgraber> zyga: doesn't look like a bug, just misconfiguration by the user. I suspect they've bind-mounted the X11 socket which works fine for everything but snaps as snaps need the abstract Unix socket instead\n<mup> Bug #1763071 changed: Error message installing a paid snap as unauthenticated user <snapd:Triaged> <https://launchpad.net/bugs/1763071>\n<mup> Bug #1765979 changed: snap applications icons missing in launcher wayland <wayland> <snapd:Triaged> <https://launchpad.net/bugs/1765979>\n<mup> Bug #1766079 changed: ripgrep installed via snap fail to work in /lib/systemd/system folder <Snappy:Invalid> <https://launchpad.net/bugs/1766079>\n<Eighth_Doctor> zyga: I kind of wish that snapd didn't use launchpad as the bug tracker\n<Chipaca> diddledan: Dear Tea., \u00e2\u0080\u00a6 ?\n<Eighth_Doctor> it's surprisingly difficult to locate bugs in launchpad\n<zyga> Eighth_Doctor: that makes 1002 of us\n<zyga> Eighth_Doctor: at least we're looking now :)\n<zyga> Eighth_Doctor: progress!\n<Eighth_Doctor> yeah\n<Eighth_Doctor> the only really useful feature of launchpad is multi-tracker aggregation\n<Eighth_Doctor> that's actually a powerful feature if it worked more...\n<mup> Bug #1758465 changed: snapd doesn't upgrade on bionic when a local installed snap mount is failing <snapd:Triaged> <https://launchpad.net/bugs/1758465>\n<diddledan> hmm?\n<Chipaca> diddledan: https://forum.snapcraft.io/t/need-to-add-our-product/13694?u=chipaca\n<diddledan> aha\n<diddledan> yeah, I think they missed an M\n<Eighth_Doctor> zyga: but does this mean I need to clone rhbz bugs to LP to get them fixed? \u00e2\u0098\u00b9\u00ef\u00b8\u008f\n<zyga> Eighth_Doctor: why would you do that?\n<zyga> ah\n<zyga> I see\n<zyga> are you saying that we should look at RHBZ bugs as well?\n<Eighth_Doctor> yes\n<mup> Bug #1750856 changed: snapd on s390x tried to run locationd tests, which does not exist on s390x <britney:Fix Released> <Snappy:Fix Released> <snapd (Ubuntu):In Progress> <snapd (Ubuntu Bionic):In Progress> <https://launchpad.net/bugs/1750856>\n<mup> Bug #1752916 changed: Desktop interface should allow accessing to recent files and xdg dirs <snapd-interface> <snapd:Triaged> <https://launchpad.net/bugs/1752916>\n<Eighth_Doctor> I've been doing some of the triage for a while now, but if there's an actual code problem, it's a bit difficult to escalate because I don't know how to get people's attention on it\n<Chipaca> zyga: we do look at ubuntu/+source/snapd bugs, so why not rhbz bugs?\n<zyga> mvo: could you kindly check if the bionic task of this bug is still valid https://bugs.launchpad.net/snappy/+bug/1750856\n<mup> Bug #1750856: snapd on s390x tried to run locationd tests, which does not exist on s390x <britney:Fix Released> <Snappy:Fix Released> <snapd (Ubuntu):In Progress> <snapd (Ubuntu Bionic):In Progress> <https://launchpad.net/bugs/1750856>\n<zyga> Chipaca: I agree, it's just a matter of manpower and gardening the mess first\n<zyga> Eighth_Doctor: we have a recurring triage work, at some point we'll run out of overflowing NEW bugs and can look at existing bugs\n<zyga> Eighth_Doctor: can you point me to the list of snapd bugs in RH bugzilla please\n<zyga> Eighth_Doctor: I'll add that to our laundry list\n<Eighth_Doctor> http://bugz.fedoraproject.org/snapd\n<Eighth_Doctor> I need to write a script to mass-close all these SELinux bugs\n<diddledan> WONTFIX :-p\n<Eighth_Doctor> I'm pretty sure a large chunk of those are from before the policy rewrite that mborzecki did in May\n<Chipaca> how do we feel about snaps that tell users to do things that could easily trick them to run things unconfined?\n<mup> Bug #1748510 changed: shell's test gives false positive on readability of files <Snappy:Won't Fix> <https://launchpad.net/bugs/1748510>\n<zyga> Chipaca: RUN THIS SNAP WITHOUT PESKY ERRORS WITH THIS ONE TRICK\n<diddledan> Chipaca: that sounds dirty\n<diddledan> zyga: you'll never believe what happens next\n<zyga> diddledan: I know, I know\n<Eighth_Doctor> zyga: protip, all Fedora packages actually have a BugURL property set on them ;)\n<zyga> sudo wget | sh\n<Chipaca> 'loopchain' (brought to my attention by requesting a track) is like this\n<zyga> it's always like tat\n<zyga> *that\n<diddledan> love those instructions appearing everywhere because macOS\n<Eighth_Doctor> `rpm --query --queryformat \"%{BUGURL}\" snapd`\n<Chipaca> it doesn't seem to be immediately bad, but it makes me feel a little uncomfortable\n<Chipaca> \"to install, first snap install this, then apt install rabbitmq, then run thesnap.init, then run the scripts it wrote in $SNAP_COMMON\n<Chipaca> \"\n<Eighth_Doctor> zyga: thankfully all these Fedora 29 bugs go away when F29 EOLs next month\n * Chipaca would NOPE out of that really fast, but some users are perseverant... \n<diddledan> or \"run `$(thesnap.init)`\n<mup> Bug #1747200 changed: console conf crashes on dragonboard <subiquity:New> <https://launchpad.net/bugs/1747200>\n<Chipaca> diddledan: sudo $(thesnap.ok)\n<Eighth_Doctor> Chipaca: you didn't think snaps would actually stop people from doing dumb things, did you? \u00f0\u009f\u0098\u00b6\n<zyga> Eighth_Doctor: that's a bit annoying on the user side but that's very convenient for the developer side :)\n<zyga> diddledan: they will all need to change to curl | zsh\n<Eighth_Doctor> well, it's the only way I maintained my sanity with snapd bugs\n<zyga> and sudo won't help since macos is locked down more than ever now\n<Eighth_Doctor> macOS has become an annoying platform to be a developer on\n<Chipaca> Eighth_Doctor: https://www.youtube.com/watch?v=TL0dfzK3Aqs\n<diddledan> love that song\n<Eighth_Doctor> it's a good song\n<Eighth_Doctor> and very appropriate here\n<Chipaca> BUT THE SUDO COMES AT NIGHT\n<mborzecki> Eighth_Doctor: i'm quite sure there's still a bunch of things popping up when installing snaps :/\n<zyga> is lxd security.nesting enabling nested apparmor?\n<mup> Bug #1744584 changed: Exclude Snap .cache from Dejadup backups <D\u00c3\u00a9j\u00c3\u00a0 Dup:Fix Released> <Snappy:Invalid> <deja-dup (Ubuntu):Fix Released> <https://launchpad.net/bugs/1744584>\n<Eighth_Doctor> yeah\n<Eighth_Doctor> it's a lot less nowadays, thankfully\n<Eighth_Doctor> and some of the warnings I don't want to fix\n<mborzecki> Eighth_Doctor: i should try installing some snaps on my wife's lapotp to catch them all :P\n<Eighth_Doctor> there are cases where it's actually bad behavior it's blocking, and I'm okay with the denial status\n<mvo> zyga: sure, done\n<Eighth_Doctor> mborzecki: the issue right now is that Silverblue users are upset that snaps using the \"home\" perm fail to start because of `/var/home`\n<Eighth_Doctor> there's a symlink for `/home` to `/var/home`, but that isn't enough for snapd, I guess\n<zyga> mvo: thank you\n<zyga> Eighth_Doctor: there's been some patches to make /var/home work already\n<zyga> Eighth_Doctor: though we obviously lack the full test\n<Eighth_Doctor> zyga: oh cool, can I cherry-pick that into 2.42 release for Fedora?\n<zyga> Eighth_Doctor: it's not the full fix yet, just initial patches\n<Eighth_Doctor> I haven't pushed it yet because this bug just came up as I started working on it\n<zyga> Eighth_Doctor: base snaps will have /var/home so we can start binding onto it\n<Eighth_Doctor> ah, I see\n<Eighth_Doctor> we'll need to keep that in mind for fedora base as well\n<mup> Bug #1732494 changed: Impossible to manage package after Trusty --> Xenial upgrade <apport-bug> <i386> <third-party-packages> <xenial> <snapd:New> <snapd (Ubuntu):Confirmed> <https://launchpad.net/bugs/1732494>\n<zyga> mvo: do you have access to launchpad.net/snapd project description?\n<zyga> mvo: it would be good to change the first line\n<zyga> mvo: now it reads \"code hosted at URL\"\n<zyga> mvo: but if you re-assign bugs between projects all you get is \"code hosted at\" period\n<zyga> mvo: we could change it to say something nice, like \"snapd is the best way to manage snap packages\" :)\n<mvo> zyga: updted\n<zyga> mvo: super, thank you\n<zyga> can you edit again to replace the word \"snap ...\" with snaps\n<zyga> the message gets cut off at \"snap\"\n<mup> Bug #1647333 changed: adduser misses extrausers support for group management <patch> <snapd:New> <adduser (Ubuntu):Confirmed> <shadow (Ubuntu):In Progress by ogra> <https://launchpad.net/bugs/1647333>\n<zyga> sorry :)\n<mvo> zyga: done\n<zyga> haha, now it says: the best way to manage snaps. Code\\n\n<zyga> and that's all :D\n<zyga> oh well, it's good enough\n<ogra> \"a good enough way to manage snaps\" ?\n<mup> Bug #1662452 changed: snap install squid-gary failed on Ubuntu Core <snapd:Invalid> <https://launchpad.net/bugs/1662452>\n * Chipaca breaks all the tests again\n<zyga> where are ubuntu-image bugs reported?\n<zyga> ogra: \"a good enough way to\"\n<zyga> mborzecki: do you know? ^\n<mborzecki> zyga: lp? or github project maybe\n<Chipaca> zyga: snaps@canonical.com ?\n<mborzecki> zyga: https://github.com/CanonicalLtd/ubuntu-image/ ?\n<zyga> thanks\n<Chipaca> popey: does email to that address reach you?\n<Chipaca> or who?\n<mborzecki> zyga: https://launchpad.net/ubuntu-image apaprently\n<zyga> wait\n<zyga> no issues there\n<popey> Chipaca: no, mvo\n<zyga> oh the horror\n<zyga> thanks\n<mborzecki> zyga: yeah, there's this message that points to LP\n<Chipaca> zyga: it has no bugs! \\o/\n<zyga> Chipaca: I wish it was easier to find :)\n<mborzecki> Chipaca: no reported bugs :P\n<zyga> Chipaca: ship it!\n * Chipaca ships everyone with everyone\n<popey> Chipaca: i lamented this back in malta\n<zyga> Chipaca: do you remember when I first wanted to join the team\n<zyga> Chipaca: I was supposed to create ubuntu-image\n<zyga> Chipaca: and maybe help with \"resources\" aka \"capabilities\" aka \"skills\"\n<Chipaca> zyga: my memory is a two-week round-robin database\n<zyga> Chipaca: what?\n<zyga> ;-)\n<mborzecki> Chipaca: journalctl --vacuum-time=2w ? :P\n<zyga> <gif of hampster on a treadmill>\n<mup> Bug #1649839 changed: unknown snap and snapd version when image created via ubuntu-image <Ubuntu Image:New> <https://launchpad.net/bugs/1649839>\n<mup> Bug #1655060 changed: snapcraft doesn't support the dbus daemon type <Snapcraft:New> <snapd:New> <https://launchpad.net/bugs/1655060>\n<Chipaca> actually it's more like rrdtool but close enough\n<Chipaca> popey: was your lament about the fact that the email is there, or that it only goes to the m of the v.o.?\n<popey> both\n<popey> it should go to a project github page, or home page\n<popey> see lxd for the pinnacle of snapcraft store pages\n<mup> Bug #1655593 changed: chattr code (tests/main/chattr/task.yaml) fails on ppc64el <snapd:Triaged> <https://launchpad.net/bugs/1655593>\n<mup> Bug #1659523 changed: console-conf doesn't work well if using screen on Mac <subiquity:New for wangliming> <https://launchpad.net/bugs/1659523>\n<zyga> mvo: can we put the snapcraft logo on snapd?\n<Chipaca> mvo: WDYT about having snaps@c.c also go to advocacy?\n<diddledan> zyga: that's far too sensible\n<Chipaca> mvo: and, WDYT about pointing ubuntu-image's contact to something better than an email address?\n<Chipaca> zyga: the snapcraft logo but in asciiart\n<zyga> Chipaca: in black and white\n<zyga> maybe that's too sad though\n<Chipaca> we have one of those\n<Chipaca> nah, sad is grey on grey\n<Chipaca> or is that depression\n<cachio> mborzecki, hey\n<mup> Bug #1679739 changed: System-User Assertions and the system time <snapd:New> <https://launchpad.net/bugs/1679739>\n<mup> Bug #1683823 changed: snapstore returns multiple instances of the same publication (was snapcraft list-revisions showing multiple publications in the same channel) <apw-snappy> <Snapcraft:New> <https://launchpad.net/bugs/1683823>\n<cachio> mborzecki, I m with the #7551\n<mup> PR #7551: tests: fix the how the systemd-journald.service is restarted during the prepare <Simple \u00f0\u009f\u0098\u0083> <Created by sergiocazzolato> <https://github.com/snapcore/snapd/pull/7551>\n<ogra> Chipaca, isnt u-image foundations child now ?\n<Chipaca> ogra: je ne sais pas, je ne sais plus, je suis perdu, etc\n<zyga> pedronis: something for your awareness: https://bugs.launchpad.net/snapd/+bug/1679739 -- perhaps assertions should be loaded and only re-validated (and actually take effect) once we have system time synchronized\n<mup> Bug #1679739: System-User Assertions and the system time <snapd:Triaged> <https://launchpad.net/bugs/1679739>\n<mborzecki> cachio: do you have more details about those journal failures?\n<cachio> mborzecki, yes\n<mborzecki> cachio: i have a hunch that it's the stop that fails\n<cachio> mborzecki, basically what happens with restart\n<cachio> is that it stops\n<cachio> but sometimes it makes a flush\n<cachio> during stop\n<cachio> and while it is flushing\n<mup> Bug #1679210 changed: snap install --revision tracks stable by default <snapd:New> <https://launchpad.net/bugs/1679210>\n<cachio> it tries to start\n<cachio> and it can't\n<mborzecki> yeah, probably when there's a lot of data bc snapd is chatty with debugs enabled\n<cachio> so retries many times until it reaches the starts limit\n<mborzecki> cachio: w8, so it didn't stop, is still flushing and nother journald instance starts up?\n<cachio> and fails\n<cachio> mborzecki, it doesn't finish the stop and it is trying to start\n<mborzecki> wow\n<cachio> mborzecki, if you see the log there, the error is Active: failed (Result: start-limit-hit) since Thu 2019-10-03\n<cachio> mborzecki, it is just happening on core18 and sometimes on core16\n<cachio> I could not reproduce is on classic\n<cachio> mborzecki, I am creating a debug session now\n<zyga> what on earth is \"ubuntu-snappy\" source package\n<cjwatson> Old name for the snapd source package\n<zyga> ah\n<mup> Bug #1657552 changed: [spread] install-sideload:reexec0 failure <Snappy:Won't Fix> <https://launchpad.net/bugs/1657552>\n<mup> Bug #1662772 changed: systemd[1]: Failed to start Set the hostname to the value stored on the writable partition <snappy-set-hostname.service> <Snappy:Won't Fix> <https://launchpad.net/bugs/1662772>\n<ogra> zyga, dont kill it in case you want to go back to a python based snapd :P\n<zyga> ogra: maybe one day we can snap install snapd0 ;)\n<ogra> haha\n<mup> Bug #1684343 changed: For candicate release is appearing on dragonboard the message \"ERROR hal_remove_bsskey response failed err\" <subiquity:New> <https://launchpad.net/bugs/1684343>\n<mup> Bug #1671778 changed: failover:emptysystemd test fails <Snappy:Won't Fix> <https://launchpad.net/bugs/1671778>\n<mup> Bug #1679432 changed: Bluetooth SCO connections don't work on Dragonboard 410c <Snappy:Invalid> <https://launchpad.net/bugs/1679432>\n<mup> Bug #1679747 changed: Cannot send bluetooth SCO packets with Raspberry Pi 3 internal bluetooth module. <Snappy:Invalid> <https://launchpad.net/bugs/1679747>\n * pstolowski lunch\n<mup> Bug #1666690 changed: Dependency issues when sharing a library through content interface <personal> <Canonical System Image:New> <snapd:New> <https://launchpad.net/bugs/1666690>\n<mup> Bug #1705985 changed: snaps fail to install on juju1 deployed lxc container <canonical-bootstack> <snapd:Incomplete> <https://launchpad.net/bugs/1705985>\n<zyga> kenvandine: hello, could you please enqueue this bug report https://bugs.launchpad.net/snapd/+bug/1661626 -- there's some things related to gsettings and dbus signal for notification on changes. I could use some help in understanding how the desktop stack works in this area.\n<mup> Bug #1661626: GSettings/dconf reports incorrect values on setting change under confinement <desktop> <snapd:Triaged> <https://launchpad.net/bugs/1661626>\n<mup> Bug #1661626 changed: GSettings/dconf reports incorrect values on setting change under confinement <desktop> <snapd:Triaged> <https://launchpad.net/bugs/1661626>\n<mup> Bug #1662962 changed: 'snap find' does not allow channel specification <snapd:Triaged> <https://launchpad.net/bugs/1662962>\n<mup> Bug #1665683 changed: Strictly confined snapped desktop applications can't toggle Launch at Login <isv> <snapd:Fix Released> <https://launchpad.net/bugs/1665683>\n<mup> Bug #1689302 changed: Can't set program_usb_boot_mode pi-config option <ce> <snapd:Confirmed> <https://launchpad.net/bugs/1689302>\n<zyga> sil2100: could you please enqueue this bug to your list https://bugs.launchpad.net/snappy/+bug/1740655 -- I'm not sure what to do about it\n<mup> Bug #1740655: Using dtoverlay=pi3-disable-bt to disable Bluetooth results in unbootable system <Snappy:Triaged> <https://launchpad.net/bugs/1740655>\n * Chipaca stands up\n<ijohnson> morning folks, I think that https://github.com/snapcore/snapd/pull/7431 is basically ready, if folks want to take a really quick look and see if there's anything obvious that I could split out into different smaller PRs that would be great\n<mup> PR #7431: overlord/snapstate: don't re-enable and start disabled services on refresh, etc <Created by anonymouse64> <https://github.com/snapcore/snapd/pull/7431>\n<mup> PR snapd#7602 opened: overlord/many: extend check snap callback to take snap container <Remodel :train:> <Simple \u00f0\u009f\u0098\u0083> <Created by bboozzoo> <https://github.com/snapcore/snapd/pull/7602>\n<kenvandine> hey zyga\n<zyga> hey\n<zyga> how are you? :)\n<kenvandine> i'll look at it\n<mborzecki> weird failure with current master https://paste.ubuntu.com/p/8P6hYK5PcJ/\n<kenvandine> good, recovering from a long weekend :)\n<zyga> kenvandine: thank you, it's not urgent, just something that came out of our bug gardening\n<zyga> mborzecki: two comments\n<zyga> mborzecki: how big is that deb?!?!\n<zyga> mborzecki: and maybe systemd became a virtual package somehow?\n<mborzecki> zyga: idk\n<zyga> cachio: can you please look at https://bugs.launchpad.net/snapd/+bug/1847665 -- it seems one snap that we get from the store is not published for i386 - perhaps we need to nuke the test or perhaps we need to publish the test snap but it looks like it should work (the test snap name is multi-arch)\n<mup> Bug #1847665: snapd autopkgtest fails on i386 <snapd:Triaged> <snapd (Ubuntu):Triaged> <https://launchpad.net/bugs/1847665>\n<zyga> cc mvo ^ not sure who has access to those\n<kenvandine> marcustomlinson: can you look at bug 1661626 ?\n<mup> Bug #1661626: GSettings/dconf reports incorrect values on setting change under confinement <desktop> <snapd:Triaged> <https://launchpad.net/bugs/1661626>\n<zyga> mvo: can you please look at https://bugs.launchpad.net/ubuntu/+source/snapd/+bug/1844498 -- you were participating in the discussion there and I'm not sure if the snapd package task is something that is still accurate - should it change to triaged or invalid?\n<mup> Bug #1844498: 18.10+ cloud images have the LXD group as gid 1000 <id-5d84bb1ca26b0679a708dc40> <cloud-images:New> <cloud-init (Ubuntu):Invalid> <livecd-rootfs (Ubuntu):Fix Released by mwhudson> <snapd (Ubuntu):New> <https://launchpad.net/bugs/1844498>\n<marcustomlinson> kenvandine: ok\n<kenvandine> marcustomlinson: thanks\n<sil2100> zyga: yes, something related to it is actually in the works\n<jdstrand> pedronis: hey, would you mind giving me an updated list of pulseaudio.snap-ids? if you don't have time, perhaps describe the query to roadmr (or me and I can find someone if he can't do it)?\n<zyga> sil2100: excellent, thank you\n<sil2100> zyga: so how it's most probably going to be resolved is for us shipping two different image flavors - one with bluetooth enabled, one with disabled\n<sil2100> Since from what I've been told on most pi's you can't actually have both serial and bluetooth enabled at the same time\n<zyga> sil2100: you can, it's just shifting the serial around to other pins\n<jdstrand> pedronis: I don't need it *immediately* since I can look in the snap usns dump and continue working, but I want to make sure I didn't miss any new ones\n<zyga> sil2100: AFAIK\n<zyga> jdstrand: hey :)\n<zyga> jdstrand: welcome back\n<sil2100> zyga: I'm not a pi expert so I can't really say, waveform would have more info about that\n<sil2100> ;)\n<jdstrand> pedronis: plan is, get through all current ones, propose a pr to manually connect, then right before 2.43 lands, do one more query and fill in any more\n<zyga> cool, I'm sure he knows more than I do\n<jdstrand> hey zyga, thanks! :)\n<zyga> just happy to see progress\n<pedronis> jdstrand: I can try to look tomorrow morning\n<cachio> zyga, I'll take a look\n<jdstrand> pedronis: thanks\n<zyga> cachio: thanks!\n<zyga> Chipaca: something that feels like a papercut and I agree with the reporter\n<zyga> https://bugs.launchpad.net/snapd/+bug/1830183\n<zyga> Chipaca: related to how we log\n<mup> Bug #1830183: Absence of updates is labelled a critical error in syslog <snapd:Triaged> <snapd (Ubuntu):New> <https://launchpad.net/bugs/1830183>\n<Chipaca> zyga: papercut, indeed\n<zyga> Chipaca: though not sure how to technically solve it\n<Chipaca> easily :-)\n<zyga> Chipaca: maybe we should talk to journald natively so that we can send those nice log properties\n<Chipaca> whoa\n<Chipaca> zyga: maybe, possibly, if there's a reasonable library for it, but that's not this bug\n<mup> PR snapd#7603 opened: dpdk and hugepages interfaces <Created by alfonsosanchezbeato> <https://github.com/snapcore/snapd/pull/7603>\n<Chipaca> this bug is just \"don't log no-refreshes-available with INFO\" probably :)\n<Chipaca> zyga: that's what makes it papercut\n<zyga> Chipaca: IIRC the format is simple so it's just about formatting the error \"text\" correctly, I think we'd prefer to carry that code instead of depending on it\n<zyga> Chipaca: yeah :)\n<zyga> Chipaca: (and talking over the right FD)\n<Chipaca> yeah, and keeping up with changes, and and and\n<roadmr> mvo: are you around?\n<mvo> roadmr: yes\n<zyga> Chipaca: no, it's not like that actually\n<zyga> Chipaca: http://0pointer.de/blog/projects/journal-submit.html\n<Chipaca> zyga: are you really advocating for NIH'ing a systemd library\n<zyga> Chipaca: not a systemd library, a public protocol\n<pstolowski> i got lxd spread test failure again on 18.04, fails with \"snapd : Depends: systemd but it is not going to be installed\", has anyone seen this? 18.04 image needs updating?\n<zyga> pstolowski: maciek did IIRC\n<zyga> maybe apt database is empty?\n<zyga> pstolowski: this is interesting\n<zyga> https://errors.ubuntu.com/problem/5e58e04cdc647a1fd50f71f02724dd0b5b8c1f4b\n<zyga> pstolowski: udev netlink hotplug panic\n<zyga> the bug behind it is https://bugs.launchpad.net/snapd/+bug/1824162\n<mup> Bug #1824162: /usr/lib/snapd/snapd:11:runtime:runtime:runtime:runtime:runtime <artful> <bionic> <cosmic> <xenial> <zesty> <snapd:New> <snapd (Ubuntu):New> <https://launchpad.net/bugs/1824162>\n<zyga> can you please enqueue looking at it\n<zyga> mvo: can I close https://bugs.launchpad.net/ubuntu/+source/snapd/+bug/1824237 now?\n<mup> Bug #1824237: snap 'core' broken/missing and causing autopkgtest failures <snapd:In Progress by zyga> <snapd (Ubuntu):New> <snapd (Ubuntu Cosmic):New> <https://launchpad.net/bugs/1824237>\n<mvo> zyga: yes, all autopkgtest related bugs can be closed\n<zyga> mvo: _all_? I found one that looks like a real bug\n * zyga is done with triage for the day\n * zyga -> break / food\n<cachio> zyga, I dont have test-snapd-hello-multi-arch under my control\n<zyga> cachio: it probably belongs to mvo\n<cachio> zyga, not sure who created this one\n<zyga> someone from the store can probably help you move it?\n<pstolowski> zyga: hmm, i think i see where the problem is on the very high level.. go routine running in the background. will check, thanks for pointing out\n<zyga> roadmr: ^ test-snapd-hello-multi-arch, do you know who is in the collaborators?\n<roadmr> I can check\n<zyga> pstolowski, roadmr: cool, thank you for looking\n<zyga> (one messgage, two topics, take that tracking AI overloards)\n<roadmr> zyga: nobody \u00f0\u009f\u00a6\u0080\n<zyga> oh crab :D\n<zyga> roadmr: can you please give it to cachio and mvo perhaps, following all protocol\n<roadmr> zyga: the current owner (the \"canonical\" account, not sure if this is mvo?) has to add collaborators. I can't do it administratively :(\n<zyga> I see\n<zyga> is there an email address?\n<zyga> mvo: are _you_ secretly all of canonical? :D\n<ijohnson> does anybody have an example of scanning journald in spread tests for something specific in the logs? is there a helper for \"discard everything in the log from x point later on\" to just check something in the logs happened after a certain point?\n<zyga> ijohnson: plenty\n<zyga> we nuke the journal between tests\n<zyga> so anything that uses 'journal' helper functions is likely a candidate\n<ijohnson> right but which journal helper there are several\n<zyga> I can find a specific example but the main principle applies\n<zyga> yeah\n<zyga> but they all do the same thing\n<zyga> with various quirks on how\n<zyga> I agree that multitude of functions is confusing\n<ijohnson> all I need to do is check for a certain message in the log happening after a certain line in the test\n<ijohnson> thanks btw!\n<zyga> I think this is a buggy area\n<zyga> and the helper that we use most often has some loops inside\n<zyga> some journal versions have a marker concept\n<zyga> so you can cat the whole log since a marker was emitted\n<zyga> then grep that\n * zyga needs to break for some back pain relief\n<ijohnson> that feels like the right thing, do you have an example I can look at zyga?\n<ijohnson> or maybe cachio knows\n<zyga> ijohnson: sorry, leaving now\n<zyga> I can later\n<zyga> if you don't get it before\n<ijohnson> zyga: np get better I can figure it out\n<cachio> ijohnson, what we do in some scenarios\n<cachio> is to count the number of ocurrencies before and after\n<cachio> and compare the number is iscreased\n<zyga> ijohnson: just ward of caution, it's all good except on 14.04 :D\n<zyga> *word\n<cachio> ijohnson, take a look to test catalog-update\n<ijohnson> trusty seems not so trustworthy anymore with respect to features :-/\n<cachio> perhaps it could help\n<ijohnson> cachio, thanks looking\n<ijohnson> cachio: that looks like the easiest way to check this, thanks\n<cachio> ijohnson, yaw\n * Chipaca takes a break\n<mvo> I saw some failures in current PRs related to the lxd test, looks like systemd was not installable in there, anyone know more ?\n<pedronis> mvo: what's the public interface of 7593 ? most things seem unexported\n<pedronis> you create a SFDisk manually?\n<pedronis> mvo: I put some questions there\n * cachio lunch\n<mvo> pedronis: public interface is just partition.NewSFdisk() and you go from there, two exported methods on it, DeviceInfo and CreatePartitions\n<mvo> pedronis: I will check in the PR\n<pedronis> mvo: that new is private atm\n<pedronis> anyway see comments\n<mvo> pedronis: yeah, everything is spot on - I think we don't really need the interface, *might* be handy for tests later, I check the full branch from claudio - but we can always add it back once we need it so I'm +1 to remove it\n<pedronis> ok\n<thresh> what does \"grandfathering\" mean in context of https://forum.snapcraft.io/t/upcoming-pulseaudio-interface-deprecation/13418 ?\n<mup> PR snapd#7604 opened: many:  address issues related to explicit/implicit channels for image building <Created by pedronis> <https://github.com/snapcore/snapd/pull/7604>\n<pedronis> Chipaca: mvo: ^\n<pedronis> thresh: that a declaration will be setup in the store to keep them working (for now at least) with pulseaudio as they did so far\n<thresh> pedronis, good, thank you!\n<thresh> (i suck at idioms)\n<mvo> thanks pedronis\n<pstolowski> zyga: i think i found the bug in the upstream go-udev code that causes the crash\n<pstolowski> commented on the bug\n<mup> PR snapd#7605 opened: tests: configure the journald service for core systems <Created by sergiocazzolato> <https://github.com/snapcore/snapd/pull/7605>\n<mup> PR snapd#7551 closed: tests: fix the how the systemd-journald.service is restarted during the prepare <Simple \u00f0\u009f\u0098\u0083> <Created by sergiocazzolato> <Closed by sergiocazzolato> <https://github.com/snapcore/snapd/pull/7551>\n<zyga> pstolowski|afk: woot, great\n<zyga> makes bug gardening worthwhile :)\n<pstolowski|afk> yes :)\n<pstolowski|afk> slightly terrible we had this bug for a while\n<mvo> cachio: can you please have an eye on master in travis? I just noticed some failures in recent PRs related to lxd. would be great if we can get master green again (if its something real and not just transient)\n<mvo> pedronis: I updated the sfdisk PR now and addressed your points\n * ogra notes pstolowski|afk must have looong arms\n<jdstrand> Chipaca: hey, you gave me a cool command for downloading the snap.yaml (with caveats) of a snap in the public store. do you happen to know a command otoh to get the snap decl for a given snap name?\n<jdstrand> Chipaca: snap download would do it, but I don't want the snap, just the decl (I'll be doing hundreds of downloads)\n * jdstrand looks at 'snap download'\n<pstolowski|afk> ogra: now you know ;)\n<pedronis> jdstrand: which revisions do you need ?\n<jdstrand> pedronis: the latest\n<jdstrand> pedronis: well, I just need the snap decl, which is shared across revisions\n<pedronis> jdstrand: ? do you nee the snap.yaml or the snap decl?\n<pedronis> not the same thing\n<jdstrand> pedronis: the snap decl\n<pedronis> jdstrand: do you have the snap name or the snap id ?\n<jdstrand> pedronis: both\n<pedronis> jdstrand: something like: snap known --remote snap-declaration series=16 snap-id=KTe2wdAu5JKdRDUgYBuXXGjDXyzobvFI\n<jdstrand> pedronis: that is perfect, thanks! (cc Chipaca)\n<mup> PR snapd#7606 opened: tests: run apt update in lxd containers <Created by mvo5> <https://github.com/snapcore/snapd/pull/7606>\n<ijohnson> cachio: have you been able to figure out the issue with the lxd tests? I see it keeps failing consistently, and mvo's patch apt update still failed\n<ijohnson> err, mvo's patch to call apt update before doing the install of snapd in the container still fails (see #7606)\n<mup> PR #7606: tests: run apt update in lxd containers <Created by mvo5> <https://github.com/snapcore/snapd/pull/7606>\n<cachio>  ijohnson working on that\n<ijohnson> ack ok\n<cachio> ijohnson, I just finished a task and started with that one\n<cachio> ijohnson, currently debugging\n<ijohnson> cachio: I looked into it a little bit but didn't find anything if you weren't looking into it I was going to, but if you're on top of I'll work on other things\n<cachio> ijohnson, I'll try to fix it\n<cachio> otherwise I'll ping you in case I need help\n<joedborg> jdstrand: will you have some free time this PM?\n<ijohnson> cachio: ack sounds good\n<jdstrand> joedborg: if by 'this PM' you mean now, sure :)\n<jdstrand> zyga: hey, it looks like solus is still at 2.39.3 and parrot os at 2.37. curious when you think they'll get updated to 2.41+\n<jdstrand> popey, Wimpress: hey, can one of you talk to electron about https://github.com/electron-userland/electron-builder/issues/4234?\n<joedborg> jdstrand: excellent.  Very basically, I'm still seeing times where containers are getting filesystem permission denied\n<jdstrand> joedborg: what are the denials? shall I login somewhere?\n<joedborg> jdstrand: let me copy your ssh keys\n<joedborg> jdstrand: ubuntu@34.201.205.205\n<jdstrand> I'm in\n<joedborg> jdstrand: we can move this to 1:1 if we're worried about spamming.  Basically, this is an EKS node where I've ripped out the EKS provisioned kubelet and stopped docker, replacing it with our snap\n<jdstrand> ok. yes, let's privmsg since this isn't interesting to others\n<joedborg> jdstrand: the only pod that's having a problem is the aws-node pod, which tried to create `/host` in its namespace\n<mup> PR snapd#7607 opened: tests: taunch the lxd images folowing the pattern ubuntu:${VERSION_ID} <Created by sergiocazzolato> <https://github.com/snapcore/snapd/pull/7607>\n<cachio> ijohnson, if you want to take a look, there is a PR to fix the lxd issue\n<cachio> #pull\n<cachio> #7607\n<mup> PR #7607: tests: taunch the lxd images folowing the pattern ubuntu:${VERSION_ID} <Created by sergiocazzolato> <https://github.com/snapcore/snapd/pull/7607>\n<jdstrand> joedborg: I privmsg'd you\n<jdstrand> ijohnson: hi!\n<ijohnson> jdstrand: hey\n<jdstrand> ijohnson: joedborg and I are looking at a denial when running kubernetes-worker under strict mode on EKS\n<ijohnson> ok\n<jdstrand> Oct 15 20:31:57 ip-192-168-91-85 audit[21757]: AVC apparmor=\"DENIED\" operation=\"exec\" profile=\"snap.kubernetes-worker.containerd\" name=\"/app/install-aws.sh\" pid=21757 comm=\"sh\" requested_mask=\"x\" denied_mask=\"x\" fsuid=0 ouid=0\n<jdstrand> ijohnson: containerd is triying to run /app/install-aws.sh which corresponds to https://github.com/aws/amazon-vpc-cni-k8s/blob/master/scripts/install-aws.sh\n<jdstrand> ijohnson: the fact that it is at /app (and later /host) means we can't use a layout\n<ijohnson> right\n<jdstrand> ijohnson: and I thought I remembered you facing similar issues with greengrass\n<ijohnson> yeah so first I'll say what we did for the docker snap is that we patched dockerd (in your case probably containerd) to not run pivot_root and instead just do a chroot\n<joedborg> ijohnson: this is what we were talking about with perhaps needing to patch containerd's app armor template\n<joedborg> :)\n<ijohnson> joedborg: jdstrand: is there a reason why you need to do pivot_root?\n * ijohnson goes and finds the dockerd patches\n<jdstrand> ijohnson: I don't know what is doing a pivot_root\n<jdstrand> joedborg: ^\n<ijohnson> jdstrand: when the container is launched, it's rootfs is actually somewhere writable like `/var/snap/.../storage-drivers/....`\n<jdstrand> joedborg: is this a pivot_root or does EKS actually ship /app and /host?\n<ijohnson> jdstrand: and to start the container containerd/dockerd will do a pivot_root into that storage-driver dir\n<joedborg> jdstrand: that's what containerd does when the kubelet asks it to run a workload\n<ijohnson> this is all behind the scense\n<jdstrand> ijohnson: I should also reiterate this is classic, not core\n<ijohnson> *scenes\n<ijohnson> jdstrand: same problem on core as classic though\n<jdstrand> ah ok\n<jdstrand> so, in theory, container do could mv /var/snap/.../storage-drivers/..../app, then symlink from /var/snap/.../storage-drivers/..../app to /var/snap/.../storage-drivers/..../somewhere/deeper/app\n<ijohnson> anyways the issue that happened with the docker snap is that if dockerd ran pivot_root then all of the container fs accesses that the container thought were at `/app/...` were really actually at `/var/snap/.../storage-driver/some-big-uuid/app`\n<ijohnson> but how we solved that was do instead just not do a pivot_root and instead just do a chroot\n<jdstrand> ijohnson: right, makes sense\n<ijohnson> then apparmor doesn't see the container processes as accessing /app it sees /var/snap/.../app\n<jdstrand> ijohnson: is the chroot a configurable thing?\n<ijohnson> no :-(\n<jdstrand> ijohnson: yep\n<ijohnson> hence why we had to patch it\n<ijohnson> here's the patch we did: https://git.launchpad.net/~docker/+git/snap/tree/dockerd-patches/snappy-real-chroot.patch\n<jdstrand> ijohnson: ah, so you patched docker to do that\n<ijohnson> I'm trying to find where in containerd you would do the same patch\n<jdstrand> ijohnson: cool, thanks!\n<ijohnson> it might be in runc actually, it's been a while since I've looked at thsi stuff\n<joedborg> ijohnson: jdstrand: just as a (probably stupid) question, is there no way for apparmor to know that a process is being containerised and to  apply different rules?\n<joedborg> ijohnson: yeah it'll almost certainly be runc\n<ijohnson> well for dockerd it is in fact in github.com/moby/moby aka \"real dockerd\"\n<ijohnson> but there has to be an equivalent thing in runc/containerd\n<jdstrand> joedborg: re apparmor: apparmor absolutely knows stuff, but containerd/runc is doing things to complicate things\n<jdstrand> joedborg: ie, it is containerdc/runc that is putting the container into the cri-containerd.apparmor.d\n<ijohnson> joedborg: do you know offhand if containerd just runs the `runc` binary directly? or does it use the opencontainers go library ?\n<joedborg> jdstrand: ah i mean can't apparmor be told \"this proc is being called by containerd so should be allowed free range of the FS\"?\n<jdstrand> joedborg: and that profile is what your snap is loading\n<joedborg> ijohnson: almost certain that it calls the binary\n<ijohnson> jdstrand: but for that specific denial you showed me with /app that's for a snap ?\n<ijohnson> joedborg: ack thanks\n<joedborg> because the runtime binaries are dropped in via config\n<jdstrand> joedborg: so you can put whatever is needed for the container. *but* this denial is not for the container, but for containerd, and its doing something post pivot_root(). depending on your pov, apparmor doesn't handle pivot_root well\n<joedborg> jdstrand: yeah, i guess that was me question; can't it handle pivot root like it does chroot\n<ijohnson> yeah I can see apparmor's pivot_root handling being a bug right now but being a savior in other cirumstances so yeah ... I dunno\n<jdstrand> joedborg: it cannot\n<jdstrand> ijohnson: we have an upstream bug on it\n * jdstrand is trying to find it\n<ijohnson> I think I've seen the bug before\n<jdstrand> ijohnson: iirc, I think we want full mediation of the whole path with something like an alias mechanism to make it convenient and flexible\n<ijohnson> yeah that sounds right\n<ijohnson> I haven't been able to find the bit in containerd you need to patch, but I have to EOD now, I will resume looking tomorrow, if you can't wait, I found that there's already an option to specify disabling pivot_root when creating a container, referenced in the oci options\n<ijohnson> i.e. https://github.com/containerd/containerd/blob/master/runtime/v2/runc/options/oci.pb.go#L27-L28\n<ijohnson> I'm not sure how to use that, but that might avoid needing to patch things\n<jdstrand> this is the bug: https://bugs.launchpad.net/apparmor/+bug/1791711\n<ijohnson> anyways good luck, I will resume looking tomorrow to try and find the stuff y'all need\n<mup> Bug #1791711: path-based AppArmor controls for snap-confine are ineffective due to pivot_root <AppArmor:Confirmed> <https://launchpad.net/bugs/1791711>\n<jdstrand> I thought there was another one\n<jdstrand> but that is what we reference in the snapd sources too\n<joedborg> thakns ijohnson, i'll ask on their slack\n<joedborg> have a good evenign\n<ijohnson> thanks you too\n<jdstrand> ijohnson: big thanks!\n<jdstrand> joedborg: ok, so with the plugs changes we discussed and this, I think we are set for the moment\n<joedborg> jdstrand: yeah, thanks for pointing out the k8s-support needing to be with containerd too, i'll test that tongiht\n<Chipaca> yusss\n<Chipaca> got a PR this PM as promised \\o/\n<mup> PR snapd#7608 opened: o/snapstate, etc: SnapState.Channel -> TrackingChannel, and a setter <Created by chipaca> <https://github.com/snapcore/snapd/pull/7608>\n * Chipaca had *more than half an hour* to spare before it was no longer technically PM\n * Chipaca now goes to wash the dishes\n#snappy 2019-10-16\n<mup> PR snapd#7607 closed: tests: launch the lxd images folowing the pattern ubuntu:${VERSION_ID} <Created by sergiocazzolato> <Merged by mvo5> <https://github.com/snapcore/snapd/pull/7607>\n<mborzecki> morning\n<mvo> hey mborzecki\n<mborzecki> mvo: how are the tests today? i'm seeing quite a lot of red\n<mborzecki> uhh lxd-nofuse/lxd-snapfuse\n<mvo> mborzecki: yeah, cachio debugged/fixed this one\n<mvo> mborzecki: mergering master should help :)\n<mborzecki> ah, great\n<zyga> o/\n<zyga> good morning\n<zyga> I'll grab some breakfast\n<mvo> zyga: good morning\n<mborzecki> zyga:  hey\n<zyga> o/\n<mborzecki> mvo:  can tou take a look at https://github.com/snapcore/snapd/pull/7605 ? i think i'm missing something, /etc/systemd as a whole is listed in writable, shouldn't mkdir /etc/systemd/journal.conf.d succeed then?\n<mup> PR #7605: tests: configure the journald service for core systems <Created by sergiocazzolato> <https://github.com/snapcore/snapd/pull/7605>\n<zyga> mborzecki: are you sure /etc/systemd is writable? can you provide a reference?\n<mborzecki> zyga: ahh damn, looking at the wrong tab\n<mborzecki> zyga: it's writable on core18, on core there's individual directories under /etc/systemd\n<zyga> that's how I remember it\n<zyga> yeah, it's complex :/\n<mvo> mborzecki: sure, looking\n<mborzecki> mvo: nvm, mystery solved :P\n<mvo> mborzecki: but iirc on core16 not all of it is writable just selected parts\n<mborzecki> mvo: right, i have writable-paths from both open and was looking at the other tab :P\n<zyga> mborzecki: I wonder if xnox experiment to use systemd in initrd works out\n * mvo nods\n<zyga> I'll get to https://github.com/snapcore/snapd/pull/7547 now\n<mup> PR #7547: many: use a dedicated named cgroup hierarchy for tracking <Created by zyga> <https://github.com/snapcore/snapd/pull/7547>\n<mborzecki> zyga: can you take a look at https://github.com/snapcore/snapd/pull/7602 ?\n<mup> PR #7602: overlord/many: extend check snap callback to take snap container <Remodel :train:> <Simple \u00f0\u009f\u0098\u0083> <Created by bboozzoo> <https://github.com/snapcore/snapd/pull/7602>\n<mvo> zyga: 1825298 is interessting\n<mvo> dear launchpad, please stop timing out on me when I try to do bugtriage, love michael\n * mvo stops bug triage\n<zyga> mvo: looking now\n<zyga> mvo: oh boy\n<zyga> mvo: how do we leave this misery\n<mvo> zyga: thats a tricky one :(\n<mvo> zyga: also super annoying :(\n<zyga> mvo: one way out would be to stop using /etc for apparmor profiles we use\n<zyga> this would involve shipping empty replacements that do NOP\n<zyga> and shipping files in /var forever\n<mvo> zyga: does apparmor support /var ?\n<zyga> mvo: ubuntu's apparmor does, that's how our profiles work\n<zyga> mvo: other distributions don't until apparmor 3.0 eventually ships\n<zyga> mvo: we wrote snapd.apparmor.service to support that and use it on some systems\n<zyga> mvo: solus has a custom solution for loading profiles but it supports /var/lib/snapd/apparmor already\n<zyga> mvo: we can do it\n<mvo> zyga: interessting, might be a good option, I feel I lack some details though, need to look closer after I did this bug triage\n<zyga> mvo: sure, we can talk about it later today\n<zyga> mvo: I mainly worry about how to fit this into our framework of rollbacks\n<amurray> mvo zyga: you could change the profile in /etc to '#include if exists </var/...>' so that it can hang around and still work even if the one in /var goes away\n<zyga> amurray: hey :)\n<amurray> mvo zyga: ah sorry - this was added in AppArmor 2.13 iirc so won't work for older releases\n<zyga> amurray: last time we looked it was not supported\n<zyga> :D\n<zyga> exactly\n<amurray> hey zyga\n<zyga> so it's great, but we cannot have it\n<amurray> bah ignore me then... oh well\n<zyga> amurray: shipping software on linux is easy they said ;)\n<zyga> amurray: while we have you\n<zyga> amurray: do you have a moment to look at an idea we had\n<zyga> amurray: it's described here https://github.com/snapcore/snapd/pull/7547\n<mup> PR #7547: many: use a dedicated named cgroup hierarchy for tracking <Created by zyga> <https://github.com/snapcore/snapd/pull/7547>\n<amurray> zyga: sure it's easy shipping software when you have snapd - shipping snapd however... that is harder :)\n<amurray> zyga: give me a sec\n<zyga> amurray: but the basic idea is that we mount a cgroup v1 hierarchy at /run/snapd/cgroup\n<zyga> amurray: no controllers just name=snapd\n<zyga> amurray: and we use it in v1 and v2 worlds so that we can always track processes\n<zyga> amurray: we want holes to be poked in the idea\n<amurray> zyga: my cgroups knowledge is a bit rusty but I will try and brush up and then review it in the next day or so if that's ok?\n<zyga> amurray: perfect\n<zyga> thank you so much\n * zyga takes bit out for a walk\n<amurray> zyga: no worries\n<mvo> amurray: hey, do you happen to know if there is a \"if file.exists()\" primitive in apparmor profiles? or an include_if_availalbe? context is bug 1825298\n<mup> Bug #1825298: apparmor.service fails to start when apt install/remove snapd due to snapd profile error <snapd:Confirmed> <snapd (Ubuntu):Triaged> <snapd (Ubuntu Cosmic):Won't Fix> <https://launchpad.net/bugs/1825298>\n<pstolowski> morning\n<pstolowski> mborzecki: hey, have you looked at https://paste.ubuntu.com/p/S48Gyv5mpp/ recently? snapd deb failing to install inside container\n<mborzecki> pstolowski: he, it's fixed in master by cachio\n<pstolowski> mborzecki: ah, great\n<mvo> hey pstolowski !\n<pstolowski> o/\n<pstolowski> mvo: do you think https://bugs.launchpad.net/snapd/+bug/1824162 is medium prio? i was contemplating setting it critical for a while :/\n<mup> Bug #1824162: /usr/lib/snapd/snapd:11:runtime:runtime:runtime:runtime:runtime <artful> <bionic> <cosmic> <xenial> <zesty> <snapd:Triaged by stolowski> <snapd (Ubuntu):In Progress> <https://launchpad.net/bugs/1824162>\n<pstolowski> mvo: it may occur regardless of experimental hotplug flag, and may prevent clean shutdown of snapd; of course only if there is udev netlink activity\n<mvo> pstolowski: I saw the report\n<mvo> pstolowski: it should probably be high or criticial, yes\n<mvo> pstolowski: do we have a fix yet or is it complicated?\n<pstolowski> mvo: no fix but should be simple, i needed to think a bit about it. should have a PR today\n<mup> PR snapd#7593 closed: recovery-tool: add sfdisk wrapper <Created by cmatsuoka> <Merged by mvo5> <https://github.com/snapcore/snapd/pull/7593>\n<mup> PR snapd#7609 opened: snap-recovery: remove \"usedPartitions\" from sfdisk.Create() <Created by mvo5> <https://github.com/snapcore/snapd/pull/7609>\n<stealthybox> davdunc, could we update the aws-cli snap?   It's getting a bit too old to use with EKS.  Anything Weaveworks can do to help get this bumped regularly?  Cheers\n<zyga> mborzecki: updated https://github.com/snapcore/snapd/pull/7547\n<mup> PR #7547: many: use a dedicated named cgroup hierarchy for tracking <Created by zyga> <https://github.com/snapcore/snapd/pull/7547>\n<zyga> mborzecki: I think I applied everything that we agreed upon\n<zyga> mborzecki: I didn't apply the changes that would impact people with the feature disabled for now\n<zyga> mborzecki: I'll do a small patch on top that enables this unconditionally to see if things fall apart\n<zyga> mborzecki: and then move this to happen for all snap confinement types\n<oSoMoN> pedronis, hello! would you mind voting on https://forum.snapcraft.io/t/auto-connecting-the-personal-files-interface-for-the-chromium-snap-part-ii/13705 ?\n<mup> PR snapd#7602 closed: overlord/many: extend check snap callback to take snap container <Remodel :train:> <Simple \u00f0\u009f\u0098\u0083> <Created by bboozzoo> <Merged by bboozzoo> <https://github.com/snapcore/snapd/pull/7602>\n<pedronis> mborzecki: please do a follow up to #7602 where you swap *snap.Info and snap.Container\n<mup> PR #7602: overlord/many: extend check snap callback to take snap container <Remodel :train:> <Simple \u00f0\u009f\u0098\u0083> <Created by bboozzoo> <Merged by bboozzoo> <https://github.com/snapcore/snapd/pull/7602>\n<mborzecki> pedronis: sure\n<pedronis> thanks\n<pedronis> mborzecki: to be clear, it means that now args are  snap, snapf, curSnap\n<mborzecki> pedronis: yup, got it :P\n<pedronis> mborzecki: I suppose snap, curSnap, snapf   if it's a bit simpler\n<pedronis> but snapf first is strange because of most of these will not use it\n<pedronis> it's ancillary to the infos\n<zyga> mborzecki: trivial https://github.com/snapcore/snapd/pull/7610\n<mup> PR #7610: cmd/snap-confine: remove leftover condition from capability world <Created by zyga> <https://github.com/snapcore/snapd/pull/7610>\n<mup> PR snapd#7610 opened: cmd/snap-confine: remove leftover condition from capability world <Created by zyga> <https://github.com/snapcore/snapd/pull/7610>\n<pstolowski> mvo: hmm i take my words back, a simple fix doesn't cut it for go-udev, it may get more complicated to fix\n<zyga> mborzecki: we need to talk\n<zyga> mborzecki: about classic mount ns\n<zyga> mborzecki: I have an idea that will resolve a problem that was raised during one of the review cycles\n<zyga> mborzecki: essentially, we can keep using the mount namespace we inherit when starting\n<zyga> mborzecki: and not re-associate back to pid-1 ns\n<zyga> mborzecki: I need to go for a haircut now, let's chat later, ok?\n<mborzecki> zyga: sgtm, deep in some bits of gadget/devicestate now\n<zyga> mborzecki: but the main idea is: since there is no persistence we don't need to re-associate with pid-1 ns\n<zyga> mborzecki: and anything we need to do (like tracking) can be forked to a helper that re-associates and quits\n<zyga> mborzecki: so that main process is where it was originally\n<zyga> mborzecki: this means that there is perfect compatibility and no impact to any odd setups that work today\n * zyga runs for an errand, ttyl\n<mvo> pstolowski: uh, thats slightly sad\n<mup> PR snapd#7577 closed: overlord: set fake serial in TestRemodelSwitchToDifferentKernel <Created by mvo5> <Merged by pedronis> <https://github.com/snapcore/snapd/pull/7577>\n<kjackal> hi jdstrand. I am settign up microk8s with strict confinement. Partially works. I have a problem with a pod getting a denial.\n<kjackal> apparmor=\"DENIED\" operation=\"ptrace\" profile=\"snap.microk8s.daemon-kubelet//systemd_run\" pid=3034 comm=\"mount\" requested_mask=\"trace\" denied_mask=\"trace\" peer=\"snap.microk8s.daemon-kubelet\"\n<kjackal> Have you seen this before?\n<Chipaca> kjackal: it's a bit early\n<kjackal> yeap I know, no worries. I will ping him later as well\n<pedronis> Chipaca: hi, I did a pass on #7608\n<mup> PR #7608: o/snapstate, etc: SnapState.Channel -> TrackingChannel, and a setter <Created by chipaca> <https://github.com/snapcore/snapd/pull/7608>\n<Chipaca> just reading it\n<Chipaca> pedronis: the \"Invalid channel\" was because that way it looked just like the error we would get from the store :-)\n<Chipaca> perhaps too cute a reason tho\n<Chipaca> pedronis: pushed fixes for those and the spread tests\n<Chipaca> now going for a walk, bbiab\n<pedronis> Chipaca: made a naming remark\n<mup> PR snapd#7611 opened: overlord/many: switch order of check snap parameters <Remodel :train:> <Simple \u00f0\u009f\u0098\u0083> <Created by bboozzoo> <https://github.com/snapcore/snapd/pull/7611>\n<mborzecki> pedronis: ^^\n<pedronis> mborzecki: thanks, the fact that nil now are packed together seems to mean it's the right thing\n<mborzecki> pedronis: wodnering about moving it further to the right, after flags though\n<pedronis> we tend to put flags as right as we can\n<pedronis> you would have:   nil, snapstate.Flags{}, nil\n<pedronis> doesn't look better to me,  any particular reason?\n<pedronis> if we want to shuffle again\n<pedronis> having after the first snap would still be best (except it needs more signature churn)\n<mborzecki> pedronis: otoh, it's probably good as it is in the PR, infos come first, then the container, then the rest\n<pedronis> mborzecki: as I said I'm fine with the PR state\n<mborzecki> ack\n<pstolowski> mborzecki: do you have a moment for https://github.com/snapcore/snapd/pull/7518 ?\n<mup> PR #7518: cmd/snap: sort tasks in snap debug timings output <Created by stolowski> <https://github.com/snapcore/snapd/pull/7518>\n<mborzecki> pstolowski: sure\n<pstolowski> thanks!\n<mup> PR snapd#7612 opened: gadget: add a public helper for parsing gadget metadata <Remodel :train:> <Simple \u00f0\u009f\u0098\u0083> <Created by bboozzoo> <https://github.com/snapcore/snapd/pull/7612>\n<mborzecki> another simple one ^^\n<mup> PR snapd#7355 closed: interfaces/apparmor: load multiple profiles in a single batch <Complex> <Created by stolowski> <Merged by stolowski> <https://github.com/snapcore/snapd/pull/7355>\n<pstolowski> pedronis: what's the problem with the transition in the store wrt #7092?\n<mup> PR #7092: packaging: use snapd type and snapcraft 3.x <\u00e2\u009b\u0094 Blocked> <Created by stolowski> <https://github.com/snapcore/snapd/pull/7092>\n<mup> PR snapd#7613 opened: snap-recovery: add minimal binary so that we can use spread on it <Created by mvo5> <https://github.com/snapcore/snapd/pull/7613>\n<amurray> mvo: there is 'include if exists' - see say https://gitlab.com/apparmor/apparmor/blob/master/profiles/apparmor.d/abstractions/dri-enumerate#L11 for an example - but this is only supported by apparmor 2.13\n<amurray> and as zyga mentioned, this 2.13 is not available everywhere so include if exists is probably not a realistic option\n<pedronis> pstolowski: the store checks that the type of snap upload is like the one of the last approved one\n<pedronis> so for snapd is app\n<pedronis> atm\n<pedronis> we are discussing with the store to have an override\n<pedronis> it's a good check in general, but a couple of cases show we need an override\n<pstolowski> pedronis: i see, thanks\n<mvo> amurray: thank you!\n<mup> PR snapcraft#2751 closed: tests: move cli store push/upload tests to FakeStoreCommands <Created by sergiusens> <Merged by sergiusens> <https://github.com/snapcore/snapcraft/pull/2751>\n<mup> PR snapcraft#2745 closed: tests: update spread tests to account for content snaps <Created by cjp256> <Merged by sergiusens> <https://github.com/snapcore/snapcraft/pull/2745>\n * pstolowski lunch\n<Chipaca> zyga: question about #7610, about something i only noticed thanks to pstolowski\n<mup> PR #7610: cmd/snap-confine: remove leftover condition from capability world <Created by zyga> <https://github.com/snapcore/snapd/pull/7610>\n<zyga> sure\n<zyga> looking at the PR\n<Chipaca> zyga: why do you call geteuid etc when you've already loaded their answers via getresuid?\n<zyga> Chipaca: there's no good reason, it's just a bunch of old code few people touch\n<zyga> Chipaca: some reasons as that it is easier to ... reason about the code in front of you\n<zyga> vs some state\n<zyga> Chipaca: but I think that it can be simplified\n<zyga> pstolowski, Chipaca: would you mind if I open the simplification as another PR if this goes green?\n<zyga> I have some more in this area anyway\n<pstolowski> zyga: absolutely\n<Chipaca> zyga: what's currently 'if geteuid() != 0 { bail } ' could go right after the call to getresuid and make it easier to follow without needing the extra syscall\n<zyga> yeah\n<Chipaca> etc etc\n<zyga> I missed that, I looked at other parts and got confused\n<Chipaca> zyga: also these are all nits :-)\n<zyga> sure, but it's good to ask such questions\n<zyga> thank you for that!\n<zyga> :)\n<Chipaca> :)\n<Chipaca> speaking of questions, lunchp?\n * Chipaca goes\n<zyga> Chipaca: lunchp? is redundant, no?\n<zyga> it's either lunch? or lunchp\n<zyga> ;-)\n<Chipaca> I was questioning the very question, probably\n<zyga> Chipaca: (lunch?)? ;-)\n<mup> PR snapd#7610 closed: cmd/snap-confine: remove leftover condition from capability world <Created by zyga> <Merged by zyga> <https://github.com/snapcore/snapd/pull/7610>\n<zyga> it's in :)\n<mup> PR snapd#7611 closed: overlord/many: switch order of check snap parameters <Remodel :train:> <Simple \u00f0\u009f\u0098\u0083> <Created by bboozzoo> <Merged by bboozzoo> <https://github.com/snapcore/snapd/pull/7611>\n<zyga> mborzecki: I opened a draft of device cgroup changes I had stashed, there's more piled on top to support v2 but I think this is a good thing to discuss before\n<zyga> mborzecki: if you have some time now we can discuss before the standup\n<mup> PR snapd#7614 opened: cmd/snap-confine: implement snap-device-helper internally <Created by zyga> <https://github.com/snapcore/snapd/pull/7614>\n<zyga> mborzecki: it's not complex, I think it's actually more readable than before\n<mborzecki> zyga: ok, let me grab a coffee\n<jdstrand> pstolowski: re 7355> woohoo, merged! :)\n<zyga> jdstrand: hey :)\n<zyga> jdstrand: there's something that you could look at to help us move forward with a feature\n<zyga> jdstrand: we also asked alex and he said he would look tomorrow\n<zyga> jdstrand: but it would be good for you be aware of it in general\n<zyga> jdstrand: https://github.com/snapcore/snapd/pull/7547\n<mup> PR #7547: many: use a dedicated named cgroup hierarchy for tracking <Created by zyga> <https://github.com/snapcore/snapd/pull/7547>\n<zyga> jdstrand: the main idea is that we mount a new cgroup at /run/snapd/cgroup, just for tracking processes\n<zyga> jdstrand: no controllers are involved\n<jdstrand> kjackal: yes, I have seen that and it should be addressed in snapd 2.42. what does 'snap version' give you?\n<zyga> jdstrand: and we use this method in v1 and v2 worlds where it surprisingly works for as long as v1 is in the kernel\n<zyga> jdstrand: we have some more plans for this, there's a follow up branch that adds and configures a release agent for the cgroup\n<zyga> jdstrand: and this lets us solve some long-standing bugs with resouce leaks as well as get the new desired features for app termination notification in snapd\n<kjackal> jdstrand: 2.42+git1515.143caf4~ubuntu16.04.1\n<jdstrand> zyga: thanks for making me aware. the idea seems ok otoh\n<kjackal> jdstrand: I am now in the middle of another addon that is failing. This time with:\n<kjackal> apparmor=\"DENIED\" operation=\"exec\" info=\"no new privs\" error=-1 profile=\"snap.microk8s.daemon-containerd\" name=\"/usr/local/bin/proxy-init\" pid=16941 comm=\"runc:[2:INIT]\" requested_mask=\"x\" denied_mask=\"x\" fsuid=0 ouid=0 target=\"cri-containerd.apparmor.d\"\n<jdstrand> kjackal: can you paste /var/lib/snapd/apparmor/profiles/snap.microk8s.daemon-kubelet ?\n<kjackal> jdstrand: Here it is http://paste.ubuntu.com/p/fqpxsZscF9/\n<jdstrand> kjackal: re the paste> you don't have the rule in there. can you paste /snap/microk8s/current/meta/snap.yaml ?\n<kjackal> jdstrand: http://paste.ubuntu.com/p/4qMqPQjmKn/\n<jdstrand> hmm, I thought that was in 2.42\n * jdstrand double checks\n<jdstrand> kjackal: ok, I misread the trace denial. I saw it the other way around (kubelet tracing itself) but not kubelet's systemd-run needing to trace kubelet\n<jdstrand> kjackal: do you know what operation is causing that?\n<kjackal> jdstrand: I shared this via email https://docs.google.com/document/d/1mGHEfgiTDB6Nd11vgkPgCY2OrzrDGk7vmEgjrJGTKmA/edit?usp=sharing\n<jdstrand> kjackal: also, what kernel is this on?\n<kjackal> jdstrand: its on Linux ip-172-31-20-243 4.15.0-1051-aws #53-Ubuntu SMP Wed Sep 18 13:35:53 UTC 2019 x86_64 x86_64 x86_64 GNU/Linux\n<mup> PR #53: Negate the integration build tag <Created by elopio> <Merged by elopio> <https://github.com/snapcore/snapd/pull/53>\n<jdstrand> kjackal: ok, I understand the denial and will create a PR\n<jdstrand> kjackal: do you have more information on the proxy-init denial?\n<kjackal> I am looking into this now\n<kjackal> What other info would you like me to gather?\n<jdstrand> kjackal: like with the subpath, the context of the denial. also, this looks to be in aws, can you give me ssh access?\n<kjackal> of course, looking for you in LP\n<kjackal> jdstrand: try ubuntu@ec2-54-161-115-99.compute-1.amazonaws.com\n<jdstrand> kjackal: ok, I'm in\n<kjackal> there is a tmux session I am using, in case you want to show me anything\n<jdstrand> kjackal: what are you doing to trigger the proxy-init denial?\n<kjackal> jdstrand: it is part of the \"microk8s.enable linkerd\"\n<kjackal> all containers are failing. I suspect the reason is \"securityContext:\n<kjackal>           runAsUser: 2103\"\n<kjackal> jdstrand: see \"sudo microk8s.kubectl edit -n linkerd       deployment.apps/linkerd-controller\"\n<jdstrand> that is entirely possible\n<jdstrand> kjackal: that user doesn't exist on the main system, but more importantly, I think nnp (no new privs) may get in the way if you try to use a different user than what it is running as. try making that root\n<kjackal> jdstrand: the problem is that the manifests I apply are not mine\n<kjackal> jdstrand: I am deploying the linkerd manifests. If they fail out of the box they will fail from anyone\n<jdstrand> joedborg: are you using linkerd? have you seen/fixed kjackal's denial in kubernetes-worker?\n<roadmr> linkerd sounds like a startup's name (linkerd.io! we link all your links!)\n<joedborg> jdstrand: i'm not using linkered.  kjackal sent me some last week which one in particular?\n<jdstrand> joedborg: the one from 30 minutes ago\n<jdstrand> (in this channel)\n * joedborg found it\n<jdstrand> kjackal: nnp presents a number of challenges\n<kjackal> joedborg: these are the instructions for deploying linkerd https://linkerd.io/2/getting-started/\n<roadmr> I was just joking about linkerd.io :(\n<jdstrand> roadmr: clearly not ;)\n<roadmr> well it's like \"I was just joking about Donald Trump being president\" :(\n<joedborg> jdstrand: kjackal: Ah, no i haven't, but this may be where k8s-worker and microk0s diverge; microk8s runs a lot of infra outside of k8s, where as k8s-worker runs it inside, so there will be differences like this (where the paths are different, for example)\n<joedborg> thanks kjackal, I'll test it on my local cluster\n<jdstrand> joedborg: that's fine, thanks\n<kjackal> joedborg: jdstrand, do you think we could say that \"certain workloads will not run on strictly confined setup\" ?\n<jdstrand> kjackal: have you tried to use a layout for /usr/local/bin?\n<jdstrand> kjackal: it isn't in the current snap.yaml\n<jdstrand> kjackal: ala https://github.com/charmed-kubernetes/snap-kubernetes-worker/blob/master/snap/snapcraft.yaml\n<kjackal> jdstrand:  I can add it now\n<jdstrand> kjackal: I would like to better understand what is happening before saying that (re certain workloads)\n<joedborg> jdstrand kjackal I think it's possible to run all workloads under strict confinement, but that it hignes on getting runc to use chroot, rather than pivot (as we discussed yesterday)\n<jdstrand> kjackal: can you not install/refresh microk8s on the aws node I'm on for a bit (I'll let you know)?\n<jdstrand> kjackal: also, what is a command I can run to trigger the subpath denial?\n<joedborg> jdstrand: kjackal: ah, so I do get that same issue when running linkerd `[86131.195871] audit: type=1400 audit(1571232667.748:226767): apparmor=\"DENIED\" operation=\"exec\" info=\"no new privs\" error=-1 profile=\"snap.kubernetes-worker.containerd\" name=\"/usr/local/bin/proxy-init\" pid=10902 comm=\"runc:[2:INIT]\" requested_mask=\"x\" denied_mask=\"x\" fsuid=0 ouid=0 target=\"cri-containerd.apparmor.d\"`\n<kjackal> jdstrand: try this: sudo microk8s.kubectl apply -f  /var/snap/microk8s/current/testcfgmount.yaml\n<jdstrand> joedborg: is it possible to intercept that 'runAsUser: 2103' bit and remove it/make it '0'?\n<joedborg> jdstrand: it might be possible, but would probably mean no cross compatibility with running clusters\n<Chipaca> zyga: I had my hand on \"close window\" before mvo finished saying \"weird users of qemu\"\n * Chipaca stays well away\n<joedborg> jdstrand: just FYI, that's user 2103 from within containerd\n<pedronis> Chipaca: any reason not to change .Full already ? just more spread tests breaking? or something else\n<joedborg> jdstrand: like with the pivot root stuff\n<Chipaca> pedronis: no reason\n<Chipaca> pedronis: oh wait, you mean the implementation?\n<pedronis> Chipaca: yes\n<jdstrand> kjackal, joedborg: I need to study the linkerd issue. nnp is, shall we say, problematic atm for all the LSMs (including apparmor)\n<pedronis> it's used only in errors afaict\n<Chipaca> pedronis: I think it'll break some things without the patch\n<Chipaca> let me check though\n<joedborg> jdstrand: i imagine there's something been done to the docker snap to allow that\n<pedronis> Chipaca: afai see all usages are in cmd/snap/error.go\n<pedronis> Chipaca: this is Full, not Clean\n<Chipaca> pedronis: that's usage of .Full, usage of canon(ical)ize are in snapstate\n<pedronis> I don't see Full in snapstate\n<pedronis> (I might have removed it myself at some point, don't know, I don't see it anymore)\n<Chipaca> pedronis: my question is what happens if you do --channel=//foo//, shut down snapd ,restart with the new one that calls Canonize\n<pedronis> Chipaca: what it has to do with Full() tough?\n<pedronis> that's a different issue\n<Chipaca> ?\n<pedronis> Chipaca: yes, we want the patch very soon\n<Chipaca> pedronis: then we're talking cross-porpoises\n<Chipaca> pedronis: what're you talking about :-)\n<pedronis> Chipaca: change Channel.Full to be Canonize\n<pedronis> what code would explode ?\n<roadmr> \u00f0\u009f\u0090\u00ac\n<Chipaca> pedronis: i thought we were talking about making channel.Canonize call Channel.Full\n<Chipaca> pedronis: you were talking about renaming Channel.Full to be Channel.Canonize?\n<pedronis> no?\n<pedronis> no\n<pedronis> no\n<pedronis> no\n * Chipaca giggles\n<pedronis> Chipaca: use the code in Canonize as implementation for Full\n<Chipaca> ahhhhhhh\n<pedronis> then make channel.Full use Channel.Full\n<pedronis> still a bit unclear what this would make explode\n<pedronis> more than the current state of the PR\n<Chipaca> nothing, probably -- it's more lenient\n<Chipaca> might break some tests that could be checking the lack of leniency\n<pedronis> ok\n<Chipaca> other than that it should be about the same\n<pedronis> as I said, Channel.Full afaict is only used in cmd/snap/error.go\n<pedronis> Chipaca: I know we need to fix Clean at some point\n<pedronis> because in the new world is weird\n<pedronis> but that came come later\n<Chipaca> ok\n<pedronis> when we do the actual default track work\n<Chipaca> I'll write the code but not push it unless there's another reason to iterate this PR\n<Chipaca> I'll push it as separate otherwise\n<pedronis> as you prefer\n<pedronis> but let's try to use Full in full (as name)\n<jdstrand> ijohnson: hey did you do anything to docker to avoid denials like this:\n<jdstrand> [86131.195871] audit: type=1400 audit(1571232667.748:226767): apparmor=\"DENIED\" operation=\"exec\" info=\"no new privs\" error=-1 profile=\"snap.kubernetes-worker.containerd\" name=\"/usr/local/bin/proxy-init\" pid=10902 comm=\"runc:[2:INIT]\" requested_mask=\"x\" denied_mask=\"x\" fsuid=0 ouid=0 target=\"cri-containerd.apparmor.d\"\n<jdstrand> ijohnson: the theory is it has to do with runAsUser\n<jdstrand> kjackal, joedborg (cc joeubuntu, amurray): so that denial ^ is going to require not insignificant investigation, possibly from other members of the security team. nnp is quite problematic with LSMs with current kernels\n<joedborg> jdstrand: nnp?\n<jdstrand> kjackal, joedborg (cc joeubuntu, amurray): this is unplanned work and beyond the strict mode k8s minimum viable product\n<jdstrand> joedborg: 'no new privs'\n * joedborg reads kernel.org\n<joedborg> jdstrand: ah okay, cool\n<kjackal> jdstrand: This denial came up with the DNS addon and had to patch it https://github.com/ubuntu/microk8s/blob/feature/strict-v3/microk8s-resources/actions/coredns.yaml#L105\n<jdstrand> kjackal (cc joedborg, joeubuntu, amurray): without investigating, my concern is this may require kernel changes for things to run unpatched\n<kjackal> meaning, it is rather common\n<jdstrand> kjackal: indeed. this isn't 'just a snapd' thing\n<jdstrand> kjackal (cc joeubuntu, amurray and joedborg): I suggest trying to work around it for now. if you need me/the security team to investigate it, we likely need to discuss prioritizing/resourcing with Tim and Joe\n<kjackal> yeap\n<ijohnson> jdstrand: hmm I don't think I've seen that one before\n<jdstrand> it's possible kernel changes are not invloved. eg, there are code changes in snap-confine that I did to work around it. something similar might be possible in linkerd or containerd (beyond the oci change, etc)\n<jdstrand> ijohnson: ack, thanks\n<jdstrand> but it depends on what the investigation reveals\n<ijohnson> did y'all find anything more about pivot_root last night? I didn't see anything more on IRC after I left\n<jdstrand> kjackal: unless you escalate to Tim and joeubuntu, I'm not planning to look into it atm\n<jdstrand> kjackal: ok, swinging back to the trace denial\n<jdstrand> kjackal: I'm tinkering with the instance now\n<kjackal> thanks\n<mup> PR snapd#7606 closed: tests: run apt update in lxd containers <Created by mvo5> <Closed by mvo5> <https://github.com/snapcore/snapd/pull/7606>\n<kjackal> I will report back to Tim and we will see what we have to do about it. Thank you jdstrand\n<zyga> jdstrand: anything I can help with?\n * zyga has highlight on snap-confine\n<jdstrand> zyga: no, snap-confine is fine. I was just talking about some hoops I had to jump through wrt nnp for context on the linkerd denial\n<zyga> ack\n<jdstrand> kjackal: ok, I'm done. with this: https://paste.ubuntu.com/p/HFpmhxVph5/ I'm able to run that test command\n<jdstrand> kjackal: those may not be the rules I use in the PR, but if you want to manually add them for testing, etc, there they are\n<jdstrand> kjackal: logging out of the instance. I'll ping you with the PR\n<kjackal> thank you jdstrand\n<kjackal> jdstrand: I tried to setup a branch on the latest channel for build of the strict microk8s. It seems things are blocked into maual review. Is there a way to automate the pushes?\n<jdstrand> kjackal: yes. I have to step away but will do that when I get back\n<kjackal> cool\n<oSoMoN> jdstrand, could you please vote/comment on https://forum.snapcraft.io/t/auto-connecting-the-personal-files-interface-for-the-chromium-snap-part-ii/13705 ?\n<oSoMoN> (thanks in advance!)\n * zyga goes for a nap\n<zyga> ttyl\n<mup> PR snapcraft#2752 opened: errors: migrate handful of errors to SnapcraftException <Created by cjp256> <https://github.com/snapcore/snapcraft/pull/2752>\n<kjackal_v2> jdstrand: joedborg: the prometheus operator is also failing with the same error:\n<kjackal_v2> apparmor=\"DENIED\" operation=\"exec\" info=\"no new privs\" error=-1 profile=\"snap.microk8s.daemon-containerd\" name=\"/bin/operator\"\n * cachio lunch\n<joedborg> kjackal_v2: +1\n<mup> PR snapd#7615 opened: policy: implement CanRemove policy for the snapd type <Created by mvo5> <https://github.com/snapcore/snapd/pull/7615>\n<zyga> mvo: I'm fixing the bug with snapd removal\n<Chipaca> ttfn!\n<ogra> zyga, by makiing it unremovable ? :)\n<zyga> ogra: not today :)\n<ogra> hehe\n * ijohnson goes to lunch before mborzecki's schedule PR makes my brain hurt more\n<zyga> ijohnson|lunch: just schedule lunch, it will solve itself\n<ogra> snap feed --time=\n<ogra> ??\n * zyga needs to finish this tomorrow\n<zyga> time to rest\n<mup> PR snapd#7616 opened: interfaces/many: allow systemd-run to mount volume subPaths plus cleanups <Created by jdstrand> <https://github.com/snapcore/snapd/pull/7616>\n<jdstrand> kjackal: fyi: https://github.com/snapcore/snapd/pull/7616\n<mup> PR #7616: interfaces/many: allow k8s/systemd-run to mount volume subPaths plus cleanups <Created by jdstrand> <https://github.com/snapcore/snapd/pull/7616>\n<kjackal> awesome, thank you jdstrand\n<jdstrand> kjackal: is that instance still up for me to verify ^ for the subPath fix?\n<kjackal> yes it is up\n<jdstrand> kjackal: do you mind if I check now real quick?\n<kjackal> jdstrand: no go ahead\n<kjackal> jdstrand: any suggestion for this:\n<kjackal> [ 4041.214192] audit: type=1400 audit(1571247745.450:4392): apparmor=\"DENIED\" operation=\"open\" profile=\"snap.microk8s.daemon-kubelet\" name=\"/var/lib/snapd/hostfs/usr/lib/x86_64-linux-gnu/libnvidia-ml.so.390.116\" pid=4464 comm=\"kubelet\" requested_mask=\"r\" denied_mask=\"r\" fsuid=0 ouid=0\n<kjackal> [ 4041.214196] audit: type=1400 audit(1571247745.450:4393): apparmor=\"DENIED\" operation=\"open\" profile=\"snap.microk8s.daemon-kubelet\" name=\"/var/lib/snapd/hostfs/usr/lib/i386-linux-gnu/libnvidia-ml.so.390.116\" pid=4464 comm=\"kubelet\" requested_mask=\"r\" denied_mask=\"r\" fsuid=0 ouid=0\n<kjackal> [ 4041.361220] audit: type=1400 audit(1571247745.598:4394): apparmor=\"DENIED\" operation=\"open\" profile=\"snap.microk8s.daemon-containerd\" name=\"/etc/nvidia-container-runtime/config.toml\" pid=15115 comm=\"nvidia-containe\" requested_mask=\"r\" denied_mask=\"r\" fsuid=0 ouid=0\n<kjackal> trying to see if gpu support is broken or not\n<jdstrand> kjackal: I'm going to defer to zyga for that. it is curious you are seeing this in hostfs. I would expect the libs to be in /var/lib/snapd/lib/gl\n<jdstrand> kjackal: perhaps you could use a layout for /etc/nvidia-container-runtime and have it look in the right place?\n<jdstrand> kjackal: but usr/lib/i386-linux-gnu/libnvidia-ml.so.390.116 is not what I expected\n<jdstrand> kjackal: that said, zyga has looked at gpu support a lot. he may be eod atm\n<kjackal> ok, I will see what I can do\n<kjackal> thanks\n<zyga> jdstrand: there are cases where we take it from hostfs\n<jdstrand> kjackal: I'll ping you in a minute when I'm done with the test\n<jdstrand> (subPath)\n<zyga> kjackal: I'm EOD, please drop me a note with the details\n<kjackal> cool zyga, let me try some things first\n<jdstrand> kjackal: ok, this would be the result of when that PR is applied: https://paste.ubuntu.com/p/fFXYP5kNvk/, and with that 'sudo microk8s.kubectl apply -f /var/snap/microk8s/current/testcfgmount.yaml' doesn't have the ptrace trace denial\n<jdstrand> kjackal: so, cool :)\n<jdstrand> kjackal: logging out now\n<kjackal> many thanks jdstrand\n<jdstrand> kjackal: np. when you see that merged, the next day's core from edge will have it\n<kjackal> great\n<jdstrand> kjackal: this should be in 2.43\n<jdstrand> kjackal: are you using the same snap name for strict mode microk8s? I ask cause I don't see any failed reviews for microk8s\n<kjackal> let me fire the lp builder\n<jdstrand> kjackal: I'll look at the snap.yaml in the instance and create a snap decl\n<kjackal> just queued a build\n<kjackal> ETA in 13 minutes (estimated)\n<jdstrand> kjackal: it will fail due to the review-tools needing an update for your use of personal-files. I've made that change but it will need to be manually approved for now\n<jdstrand> kjackal: but you can ping my to manually approve in the meantime\n<kjackal> is this a one off approval or do I need to ping you on every new revision I want to push to the channel branch?\n<kjackal> jdstrand: ^\n<jdstrand> kjackal: until the review-tools are in prod, every one. after that, it will remember\n<kjackal> jdstrand: cool, for now I can wait. We may want to push one in a couple of weeks\n<jdstrand> roadmr: can you pull 20191016-1840UTC? just doc changes and 2 override additions\n<jdstrand> kjackal: ^ that has the change I mentioned\n<jdstrand> kjackal: ok, it should all be in place then\n<jdstrand> roadmr: and hi! :)\n<kjackal> awesome\n<roadmr> jdstrand: hey! sure thing\n<roadmr> jdstrand: when can we chat re: stateful review-tools?\n * cachio afk\n<jdstrand> roadmr: tomorrow?\n<jdstrand> roadmr: and thanks! :)\n<roadmr> jdstrand: sure, can I go by your google calendar?\n<roadmr> jdstrand: looks like there's no such tag in the repo :/\n<jdstrand> roadmr: yes, please look at the calendar\n * jdstrand looks at tag\n<roadmr> thanks!\n<jdstrand> roadmr: 20191016-1840UTC ? I see it in https://git.launchpad.net/review-tools?h=master\n<jdstrand> https://git.launchpad.net/review-tools/tag/?id=20191016-1840UTC\n<roadmr> jdstrand: ah! it's there now\n<jdstrand> roadmr: oh hah, I pushed the tag, not the commit :)\n<roadmr> jdstrand: some refreshing shenanigans, it seems\n<roadmr> \u00f0\u009f\u0098\u0086\n<ijohnson> jdstrand: re #7616 am I correct in thinking that mount rules for `/var/snap/@{SNAP_INSTANCE_NAME}/*/**` would allow a snap revision to mount stuff over another revision?\n<mup> PR #7616: interfaces/many: allow k8s/systemd-run to mount volume subPaths plus cleanups <Created by jdstrand> <https://github.com/snapcore/snapd/pull/7616>\n<jdstrand> ijohnson: yep\n<jdstrand> ijohnson: hence my comment about refresh\n<ijohnson> is that intentional ?\n<jdstrand> ijohnson: did you see the commit message? I avoided SNAP_REVISION after all thinking that refresh would be potentially problematic\n<ijohnson> jdstrand: I did I just don't quite understand the reasoning\n<ijohnson> if they needs mounts to persist across refreshes then they should definitely use common\n<ijohnson> my original point was just that maybe someday they don't need to care about mounts persisting across  revisions and instead have incompatible data between revisions that they explicitly don't want to be shared across revisions\n<ijohnson> if that was the case they could then transition to mounting things on top of $SNAP_DATA, which would be per revision\n<jdstrand> ijohnson: I suspect that, like lxd, k8s will use the mechanism to not restart itself so pods aren't blown away\n<ijohnson> yes that is probably true\n<ijohnson> does lxd have rules to do mounts across revisions in $SNAP_DATA though?\n<jdstrand> ijohnson: lxd's profile allows transitioning to unconfined so there are no rules\n<jdstrand> ijohnson: (beyond allowing it to get to that point)\n<ijohnson> ah right yeah\n<ijohnson> lxd is special\n<jdstrand> ijohnson: iirc, this was why common/ was enforced in kubernetes-support\n<jdstrand> (ie, the refresh point, not lxd :)\n<jdstrand> it's been a while since I wrote those rules, but iirc I was enforcing best practice\n<ijohnson> jdstrand: perhaps given this we should just stick with common\n<jdstrand> ijohnson: ok. easy enough. we can rediscuss if there is a use case for SNAP_DATA\n<ijohnson> sure sounds good\n<ijohnson> feel free to force push if you want to remove that most recent commit\n<jdstrand> ijohnson: I am tempted to do that since I noticed typos in some commit messages ;) however, I did a revert commit so the discussion is captured for posterity\n<ijohnson> jdstrand: ack\n<mup> PR snapd#7617 opened: snap-confine.apparmor.in: harden pivot_root until we have full mediation <Created by jdstrand> <https://github.com/snapcore/snapd/pull/7617>\n<jdstrand> roadmr: fyi, https://dashboard.snapcraft.io/snaps/microk8s/feedback/ has been giving a 504 for... 30 minutes?\n<jdstrand> roadmr: ish\n<roadmr> thanks jdstrand, fighting some minor fires store-side\n<jdstrand> roadmr: ok, just fyi. I'm not blocked\n<roadmr> right - seems to be widespread, get the same for e.g. core\n<jdstrand> roadmr: fyi, it is not *all* snaps. eg https://dashboard.snapcraft.io/snaps/telegraf/feedback/ is fine\n<roadmr> ah, interesting\n<roadmr> jdstrand: nessita found it's an n+1 queries problem which will hit snaps with many uploads\n<jdstrand> interesting\n<jdstrand> roadmr: I did see this with https://dashboard.snapcraft.io/snaps/app-outlet/ (notice no feedback/ in url) and it sometimes displayed\n<nessita> jdstrand, if you browse by revision, it should work\n<nessita> jdstrand, like https://dashboard.snapcraft.io/snaps/core/revisions/<revision>/\n<jdstrand> roadmr, nessita: well, I would need to know the revision. I guess I could snap info it.... also, I don't know if this makes a difference, but as a data point, I added scores of snap decls for snaps for pulseaudio, each with a feedback comment\n<jdstrand> (yesterday)\n<jdstrand> continuing that today\n<jdstrand> nessita: fyi, 504 with https://dashboard.snapcraft.io/snaps/app-outlet/revisions/1/\n<nessita> jdstrand, odd, it opened quite fast for me. Reloading...\n<nessita> hum 504 now\n<nessita> roadmr, maybe we have some sca fe with troubles?\n<jdstrand> nessita: that one didn't have many revisions iirc\n<roadmr> nessita: could be, or maybe the app units, one could have landed on an evil host\n<jdstrand> nessita: I just saw one with 73 revisions that was fine\n<nessita> jdstrand, yeah, we may have more than one issue. I mean, the linear queries is a problem and I've writen a test for it (that fails right now)\n<nessita> jdstrand, if you reload a few times https://dashboard.snapcraft.io/snaps/app-outlet/revisions/1/, do you get the right page from time to time?\n<jdstrand> nessita: I see it now\n<jdstrand> (30 revisions)\n<nessita> jdstrand, we may issues with one of the fe units or app units, let us look\n<roadmr> nessita: I would think app/backend units, the fe is just haproxy, shouldn't have any problems plus hasn't changed in a while\n<nessita> roadmr, jdstrand moving this to our private channel\n<roadmr> +1\n<nessita> roadmr, jdstrand #snastore please\n<nessita> roadmr, jdstrand #snapstore please\n<mup> PR snapcraft#2753 opened: cli: use click utilities for registering on push <Created by sergiusens> <https://github.com/snapcore/snapcraft/pull/2753>\n<mup> PR snapd#7604 closed: many: address issues related to explicit/implicit channels for image building <Created by pedronis> <Merged by pedronis> <https://github.com/snapcore/snapd/pull/7604>\n#snappy 2019-10-17\n<mup> PR snapcraft#2753 closed: cli: use click utilities for registering on push <Created by sergiusens> <Merged by sergiusens> <https://github.com/snapcore/snapcraft/pull/2753>\n<mborzecki> morning\n<zyga> Hey\n<zyga> Taking Bit for a walk\n<mborzecki> zyga: hey\n<zyga> back in the office\n<zyga> man it's so wet today\n<zyga> it's not so cold but there's so much humidity everything is sticky wet\n<zyga> mborzecki: I'll work on the fix for apparmor now but later on I'd like to push some code through your review eyes ;)\n<mborzecki> hahah\n<mborzecki> zyga: i'm on a bug triage duty today, but want to finish some gadget stuff first\n<zyga> mborzecki: cool, enjoy it :)\n<zyga> mborzecki: perhaps you could triage fedora/rhel bugs\n<mborzecki> zyga: hm let me check whether i have the right permissions, last time i tried i couldn't switch them to resolved and assign to myself\n<mborzecki> zyga: should probably nag you and Eighth_Doctor to maybe add me to the snapd package\n<zyga> you have the required accounts and there's probably lots of stuff that is fixed\n<zyga> yeah, that's a good idea\n<zyga> add me as well if that's not already the case please\n<mup> PR snapd#7612 closed: gadget: add a public helper for parsing gadget metadata <Remodel :train:> <Simple \u00f0\u009f\u0098\u0083> <Created by bboozzoo> <Merged by bboozzoo> <https://github.com/snapcore/snapd/pull/7612>\n<pstolowski> morning\n<mborzecki> pstolowski: hey\n<mvo> hey pstolowski and mborzecki\n<mborzecki> mvo: hey\n<mvo> looks like we have lots of red, has anyone looked?\n<mvo> and happy release day\n<mborzecki> mvo: release day meaning we're going to see PRs failing on the store api? :)\n<mvo> mborzecki: most likely :/\n<mborzecki> mvo:  only 2 of recent PRs were red, pushed a little spelling fix to one with apparmor and pivot_root, the k8s one failed on store api returning 403\n<mup> PR snapd#7599 closed: gadget: refactor ensureVolumeConsistency <Created by mvo5> <Merged by mvo5> <https://github.com/snapcore/snapd/pull/7599>\n<mup> PR snapd#7618 opened: snap-install: add ext4,vfat creation support <Simple \u00f0\u009f\u0098\u0083> <Created by mvo5> <https://github.com/snapcore/snapd/pull/7618>\n<mup> PR snapd#7618 closed: snap-install: add ext4,vfat creation support <Simple \u00f0\u009f\u0098\u0083> <Created by mvo5> <Closed by mvo5> <https://github.com/snapcore/snapd/pull/7618>\n<mup> PR snapd#7619 opened: image,seed: hide Seed16/Snap16, use seed.Open in image_test.go <Created by pedronis> <https://github.com/snapcore/snapd/pull/7619>\n<mborzecki> mvo: 7618 was quick, should i review it still?\n<mvo> mborzecki: no\n<mvo> mborzecki: I just noticed it duplicates code from the gadget\n<mvo> mborzecki: better code\n<mvo> mborzecki: so I will update and repush, sorry, I'm extracting mergable bits from the draft PR of claudio and didn't notice the duplication\n * zyga has some back pain today\n<zyga> I'll focus on reviews\n<pedronis> pushed some seed/image cleanups,  so now #7619 should be reviewed before #7595\n<mup> PR #7619: image,seed: hide Seed16/Snap16, use seed.Open in image_test.go <Created by pedronis> <https://github.com/snapcore/snapd/pull/7619>\n<mup> PR #7595: seed/seedwriter: support writing Core 20 seeds (aka recovery systems) <Created by pedronis> <https://github.com/snapcore/snapd/pull/7595>\n<mvo> mborzecki: and its back again, had to tweak it a little to support contentless mkfs from gadget but still very easy I hope\n<mup> PR snapd#7620 opened: snap-install: add ext4,vfat creation support <Created by mvo5> <https://github.com/snapcore/snapd/pull/7620>\n<mvo> mborzecki: layering of the mocking is a bit debatable, happy to fix it\n<Chipaca> mborzecki: #1840751 is fix-released, if you have the bandwidth\n<mup> Bug #1840751: Please include store-url when it exists <Snap Store:Fix Released> <https://launchpad.net/bugs/1840751>\n<Chipaca> otherwise I'll leave it in my to-do\n<pedronis> Chipaca: hi, could you quickly backfill your standup notes for yesterday (maybe mvo should tell this, but I fear it might go all a bit downhill if we starts having gaps that are not because of time off)\n<Chipaca> drat, i forgot, yes\n<Chipaca> pedronis: thankyou for reminding me\n<pedronis> np\n<mborzecki> Chipaca: added a note in the topic and tagged it as upcoming for both of us :P\n<Chipaca> mborzecki: all I heard was \"it's a race\"\n<mborzecki> degville: i've gone through instructions in https://forum.snapcraft.io/t/building-a-snap-rpm-for-red-hat-enterprise-linux-rhel-8/13728 and updated them a bit, can you take a look whether i haven't butchered the language in the process?\n<degville> mborzecki: yes of course, thanks so much for looking through them and updating them!\n<degville> mborzecki: looks good - it's great to have the definitive article :) Thanks!\n<mborzecki> degville: it's using the release packages from github, at the cost of uglier download url :/ but i figured this would be better if the spec in master gains support for some new bianries that aren't in the latest release\n<Chipaca> mborzecki: degville: shouldn't the link point to the same place the example downloads?\n<Chipaca> or is it a different file\n<mborzecki> Chipaca: which example downloads?\n<mborzecki> the relase tarbal?\n<Chipaca> mborzecki: the spec file, but now i don't know what puts it there\n<Chipaca> so i'm confused and probably wrong\n<Chipaca> mborzecki: wha creates ~/rpmbuild/SOURCES/snapd.spec ?\n<Chipaca> in those instructions i mean\n<mborzecki> Chipaca: the tar incantation\n<mborzecki> Chipaca: tar -xvJ -C ~/rpmbuild/SPECS --strip-components=3 -f snapd_2.42.no-vendor.tar.xz snapd-2.42/packaging/fedora/\n<Chipaca> ahhh\n<Chipaca> mborzecki: i might have missed the strip-components option there :)\n<Chipaca> mborzecki: ok, so, question stands! shouldn't the link in \"contains the recipe\" point to the release recipe, not master?\n<mborzecki> ah right\n<degville> Chipaca / mborzecki: right, that's my fault. I put that original link in, you're right Chipaca.\n<Chipaca> https://github.com/snapcore/snapd/blob/release/2.42/packaging/fedora/snapd.spec is the 2.42 release blob\n<Chipaca> fwiw\n<mborzecki> Chipaca: degville: updated\n<degville> mborzecki: thank you!\n<Chipaca> mborzecki: is /blob/2.42/ the same as /blob/release/2.42?\n<Chipaca> anyway, i'll stop pestering now\n<zyga> pedronis: is this syntax new in go? https://github.com/snapcore/snapd/pull/7619/files#diff-4a51d32715a8521893a1f9ecf9236fb9R26\n<mup> PR #7619: image,seed: hide Seed16/Snap16, use seed.Open in image_test.go <Created by pedronis> <https://github.com/snapcore/snapd/pull/7619>\n<zyga> looks like type aliases\n<zyga> are those supported across all our go versions now?\n * zyga afk for a second\n<zyga> need to find some painkillers for the back\n<zyga> gosh, I love autumn and all the windy weather it brings\n<pedronis> zyga: yes, they are type aliases, we have already some (for tests) in the code base\n<pedronis> zyga: they were added in 1.9\n<pedronis> I think\n<Chipaca> yep, 1.9\n<mup> PR snapd#7573 closed: [RFC] client: add support for the new \"/v2/assertions/%s?remote=true\" <Created by mvo5> <Closed by mvo5> <https://github.com/snapcore/snapd/pull/7573>\n<mborzecki> ijohnson: silly me, pushed a fix for https://github.com/snapcore/snapd/pull/7443/files#r335908588 should have simplified this earlier since i was using the funky mon1-mon schedule in testing while working on the code, that's how the other part of the || came to be\n<mup> PR #7443: timeutil: fix schedules with ambiguous nth weekday spans <Bug> <Created by bboozzoo> <https://github.com/snapcore/snapd/pull/7443>\n<ijohnson> mborzecki: great, I'll take a look in a bit thanks for explaining that\n<mborzecki> ok, onto the bug triage\n<mup> PR snapd#7621 opened: Add EPL-2.0 to licenses <Created by ralight> <https://github.com/snapcore/snapd/pull/7621>\n<mvo> mborzecki, zyga can someone on a fedora system check if \"golang.org/x/xerrors\" is available as a package?\n<zyga> mvo: hold on\n<zyga> mvo: a quick google ftp://rpmfind.net/linux/RPM/fedora/devel/rawhide/x86_64/g/golang-x-xerrors-devel-0-0.1.20190916gita985d34.fc32.noarch.html\n<zyga> mvo: so I suspect so\n<mborzecki> mvo:  i see it was released to 31 only\n<mvo> mborzecki: is it possible/easy to also releae for f30?\n<zyga> mvo: if needed it can be brouht to older releases\n<mborzecki> mvo: could probably ask the guy who maintains it to push a build for 30, although it's unsing a new packaging, so will require some tweaks\n<zyga> mvo: especially new devel packaes\n<mvo> will centos be a problem?\n<mborzecki> mvo: centos uses vendored pacakges\n<mvo> cool\n<mvo> well, it would make the PR I have here a lot nicer so would be nice to have it\n<mvo> and debian-sid has the package so its really just fedora\n<mborzecki> mvo: ah, it's the 1.13 error handling for older go releases\n<mvo> mborzecki: yeah\n<pstolowski> hmmmmm is there anything special about mount unit for core? on my WIP pre-baked image the unit is there in the fs (along one other snap), yet on boot it's not mounted and there is no trace of it in journal (the mount unit of other snap does appear there and gets mounted)\n<mvo> mborzecki: I think we will benefit in other areas too\n<zyga> pstolowski: which mount unit?\n<mvo> pstolowski: maybe not enabled in /{etc,lib}/systemd/system/mount.wants or something?\n<pstolowski> zyga: mount unit for core snap\n<mborzecki> btw. do you have an ubuntu system with nvidia?\n<zyga> mborzecki: me?\n<mborzecki> zyga: yes :P\n<zyga> mborzecki: not with ubuntu, last time I tried it wasn't working with this GPU\n<zyga> mborzecki: I think 19.10 will now work\n<zyga> mborzecki: but I don't have one installed\n<pstolowski> mvo: hmm interesting, will check, although mount unit is fine for lxd snap\n<mborzecki> zyga: ok, https://bugs.launchpad.net/snapd/+bug/1824168 needs checking on nvidia, perhaps they updated the snap since that time\n<mup> Bug #1824168: classic opengl application on 19.04 fail to find gl drivers <amd64> <apport-bug> <disco> <snapd:New> <snapd (Ubuntu):New> <https://launchpad.net/bugs/1824168>\n<zyga> Ok\n<mup> PR snapd#7622 opened: snap: make `snap known --remote` use snapd if available <Created by mvo5> <https://github.com/snapcore/snapd/pull/7622>\n<ogra> ogra@pocketbeagle:~$ grep BUG /etc/os-release\n<ogra> BUG_REPORT_URL=\"http://bugs.launchpad.net/snappy/\"\n<ogra> given you guys did so much bug cleanup the last days ...\n<ogra> is that url in UbuntuCore still accurate ?\n<ogra> (thats core18)\n<pstolowski> mvo: aha! that is the case, thank you\n<Saviq> zyga: hey, is there somewhere we could read about / provide feedback on the hardware-support snaps (GL)?\n<ogra> there used to be a forum thread about this ...\n<zyga> Saviq: they are not on the roadmap anymore. What is present is on the forum\n<zyga> You can respond to existing topics there\n<zyga> I made one for OpenGL and one for CUDA\n<ogra> well, the Mir team made one for opengl too ... before yours i think\n<ogra> https://forum.snapcraft.io/t/libgl-and-snaps/6270\n<Saviq> and I suppose what you mean is https://forum.snapcraft.io/t/gpu-support-proposal/11247 and https://forum.snapcraft.io/t/hello-world-cuda-analysis/11250\n<ijohnson> mborzecki: I checked with my nvidia gpu + 19.04 and I can reproduce\n<mborzecki> hm someone reported a but about snapd 2.34.2ubuntu0.1 to 2.37.4ubuntu0.1 upgrade, but there's no 2.34 in the archive :?\n<mborzecki> ijohnson: thanks!\n<zyga> Saviq: yes\n<Chipaca> mborzecki: https://launchpad.net/ubuntu/+source/snapd/2.34.2ubuntu0.1\n<Chipaca> mborzecki: perhaps look in security you did not\n * Chipaca yodas\n<mborzecki> Chipaca: heh, thanks!\n<Chipaca> mborzecki: fwiw i got there via googling 'snapd <version>'\n<mborzecki> Chipaca: hmmm, still no deb there either, thought the old versions are just kept behind\n<mborzecki> unless, it was pulled maybe?\n<ogra> or the user has -proposed permanently enabled\n<Chipaca> mborzecki: ? the link is right there\n<Chipaca> mborzecki: on the right, \"builds\"\n<Chipaca> mborzecki: amd64\n<Chipaca> mborzecki: https://launchpad.net/~ubuntu-security/+archive/ubuntu/ppa/+build/16332834/+files/snapd_2.34.2ubuntu0.1_amd64.deb\n<Chipaca> (and all the other debs we build)\n<mborzecki> Chipaca: right, there's where i downlaoded it from, but i'm not sure why it's not in archive.u.c or security.u.c pacakge pools\n<Chipaca> ahhh\n<Chipaca> mborzecki: because it got superseded, i assume\n<Chipaca> archive doesn't keep all old versions\n<Chipaca> huh, we don't restart snapd on removing the snapd snap\n<ogra> well, if you remove the snapd snap as a general user, you probably expect the deb to be gone too ?\n<Chipaca> well you'd be expecting wrong, then\n<mborzecki> Chipaca: --purge?\n<Chipaca> mborzecki: ?\n<mborzecki> Chipaca: duh, misread, it's the snapd snap\n<sergiusens> how do I deal with \"error: cannot install snap file: snap \"snapcraft\" assumes unsupported features: snapd2.39 (try to update snapd and refresh the core snap)\" but installing the snapd snap instead? I get \"error: cannot install \"snapd\": cannot install snapd snap on a model without a base snap yet\"\n<sergiusens> this is 16.04\n<sergiusens> and hello everyone\n<ogra> create a gadget for your install :P\n<ogra> (one thats base: core18 ... )\n<sergiusens> for my lxd container running a classic system?\n<ogra> (i wasnt serious)\n<zyga> sergiusens: install core\n<Chipaca> sergiusens: 1 sec\n<ogra> note that our classic installs all default us use core, not core18\n<sergiusens> good, I want to avoid installing core, snapcraft is on core18 and doesn't want to be installed\n<ogra> s/us/to/\n<sergiusens> zyga: so to install snapcraft I need to install core and core18?\n * ogra glares at his fingers\n<zyga> Yes\n<sergiusens> I went down this path as I was told the snapd snap fixed that\n<zyga> Until we ship snapd snap ootb\n<Chipaca> hold on\n<Chipaca> 1 sec\n<zyga> AFAIK it is not ready\n<Chipaca> sergiusens: can't you update your snapd package?\n<ogra> wouldnt that be snapd and core16 then, not core ?\n<Chipaca> sergiusens: otherwise, try this\n<sergiusens> Chipaca: I could add it to the work flow\n<Chipaca> sergiusens:  snap set system experimental.snapd-snap=true\n<zyga> ogra: it is not ready yet\n<Chipaca> sergiusens: then snap install snapd\n<ogra> zyga, yes, i got that ... but you'd not be using core in that scenario, right =\n<ogra> ?\n<Chipaca> zyga: snapd + core18 on classic works fine\n<sergiusens> Chipaca: ok, useful for play, but not to get out of this pickle :-)\n<Chipaca> sergiusens: what is your pickle?\n<Chipaca> sergiusens: as an aside: why are you running things on a 16.04 that is not up to date? :)\n<sergiusens> Chipaca: I build snapcraft with assumes command-chain, and 16.04 holding an older snapd\n<sergiusens> Chipaca: it is the latest minimal image\n<ogra> how could it \"hold an older snapd\" ? it re-execs into core\n<Chipaca> sergiusens: snapd 2.40 is in xenial-updates for quite a while now, but ok\n<ogra> (which should be auto-installed with your first snap)\n<sergiusens> Chipaca: yeah, the apt update proved that\n<Chipaca> sergiusens: and why does the 'snap set system' call not get you out of there?\n<sergiusens> Chipaca: oh, I read \"experimental\" and sort of hid from it\n<Chipaca> well, it's no longer experimental in a new enough snapd :)\n<zyga> Chipaca: there are still some issues in that setup\n<sergiusens> great then\n<Chipaca> zyga: what issues?\n<zyga> Chipaca: snapd tools directory injection into snap mount namespaces leads to stale tools over time\n<zyga> There is a topic forum describing this\n<zyga> Along with three proposals for solving it\n<zyga> Chipaca: I can find the link if you want to know more\n<Chipaca> zyga: you're mentioned in this thread, but dunno if you were aware (nor if you know what they're talking about): do you know what a 'readonly snapshot' means in this context? https://discourse.ubuntu.com/t/intent-to-provide-chromium-as-a-snap-only/5987/2?u=chipaca\n<Chipaca> and more importantly why would it trip up snapd\n<Chipaca> zyga: ah, link to the forum, d'oh\n * pstolowski lunch\n<ondra> sergiusens ping\n<ondra> sergiusens you might have regression in snapcraft which is in beta\n<ondra> sergiusens run snapcraft init and then add in snapcraft.yaml plug definition from here https://forum.snapcraft.io/t/the-content-interface/1074\n<diddledan> ondra: I suspect you'll need to state which of those plug definitions you're using - there's several on that page\n<ogra> details ...\n<mup> PR snapd#7617 closed: snap-confine.apparmor.in: harden pivot_root until we have full mediation <Created by jdstrand> <Merged by jdstrand> <https://github.com/snapcore/snapd/pull/7617>\n<diddledan> ogra: details are the bane of our existence. down with details!\n<ondra> diddledan the very basic one https://paste.ubuntu.com/p/PpBrFGnMcf/\n<ondra> diddledan I get \"Sorry, an error occurred in Snapcraft: argument of type 'NoneType' is not iterable\"\n<diddledan> ooh, interesting\n<ondra> diddledan seems like missing tests\n<ondra> diddledan this should be caught during testing\n<diddledan> yes, it should :-)\n<ondra> diddledan essentially it breaks now every snap using content interface plug\n<ondra> diddledan true I'm on beta :)\n<zyga> mborzecki: small test https://github.com/snapcore/snapd/pull/7623\n<zyga> jdstrand: ^\n<mup> PR #7623: tests: check world-writable and test-owned files <Created by zyga> <https://github.com/snapcore/snapd/pull/7623>\n<mup> PR snapd#7623 opened: tests: check world-writable and test-owned files <Created by zyga> <https://github.com/snapcore/snapd/pull/7623>\n<zyga> AFAIK we discussed this a while ago\n<jdstrand> I'll take a look\n<zyga> thank you\n<sergiusens> ondra: thanks, we will look into it, adding the Sharing a C-level library ? I guess we are naively expecting a default to be defined.\n<ondra> sergiusens I used that example straight from our docs\n<ondra> sergiusens in snap it broke I was just sharing socket\n<ogra> because our docs are always correct indeed :)\n<ondra> sergiusens but I wanted to demonstrate it on official example\n<ondra> ogra :P\n<sergiusens> Chipaca: I know why there are no updates, policy today is that build images are based on -release with no -updates\n<sergiusens> ondra: that's fine, no worries, we made changes there so there most likley is a regression\n<sergiusens> Chipaca: so is the outcome to use the snapd snap or just install core?\n<ondra> sergiusens cool, thanks\n<jdstrand> zyga: ok, fixed your hook comment (good catch!). See https://github.com/snapcore/snapd/pull/7616#pullrequestreview-303088818 for discussion\n<mup> PR #7616: interfaces/many: allow k8s/systemd-run to mount volume subPaths plus cleanups <Created by jdstrand> <https://github.com/snapcore/snapd/pull/7616>\n<zyga> jdstrand: thank you, I'll look soon\n<jdstrand> zyga: thanks, not urgent (just needs to be in 2.43 :)\n<jdstrand> huh\n<jdstrand> so, yesterday I dropped pulseaudio from chocolate-doom-jdstrand and used audio-playback instead (fine)\n<jdstrand> I pushed that to git, which built the snap, which pushed it to edge which updated on my laptop\n<jdstrand> $ snap connections chocolate-doom-jdstrand|grep pulseaudio\n<jdstrand> pulseaudio              chocolate-doom-jdstrand:pulseaudio              :pulseaudio              -\n<jdstrand> $ grep pulseaudio /snap/chocolate-doom-jdstrand/current/meta/snap.yaml\n<jdstrand> [1]\n<sergiusens> ondra: https://github.com/snapcore/snapcraft/pull/2754\n<jdstrand> so... pulseaudio is connected after the refresh even though the current revision does not plugs it\n<mup> PR snapcraft#2754: meta: support the case of a plug without a default provider <Created by sergiusens> <https://github.com/snapcore/snapcraft/pull/2754>\n<jdstrand> zyga: this seems like a bug ^\n<mup> PR snapcraft#2754 opened: meta: support the case of a plug without a default provider <Created by sergiusens> <https://github.com/snapcore/snapcraft/pull/2754>\n<zyga> jdstrand: aha\n<zyga> in standup now\n<zyga> jdstrand: can you clarify, even though the revision does not plug it?\n<zyga> jdstrand: are you referring to \"snap connections\" claiming there is a connection even though a plug or slot has been removed?\n<jdstrand> zyga: the 'current' revision (ie, 81) does not 'plugs: pulseaudio'. the previous revision did. when snapd refreshed the snap from the previous to the current, pulseaudio remains connected\n<zyga> I see\n<jdstrand> zyga: unsurprisingly, that is also true of 'snap interfaces'\n<jdstrand> zyga: the profile on disk correctly only has audio-playback in the snippets\n<jdstrand> zyga: I'm going to file a bug. someone can mark it Invalid if it is operating as designed\n<kjackal_v2> jdstrand: any hints on this:\n<kjackal_v2> apparmor=\"DENIED\" operation=\"open\" profile=\"snap.microk8s.daemon-cluster-agent\" name=\"/proc/18749/mounts\" pid=18749 comm=\"python3\" requested_mask=\"r\" denied_mask=\"r\" fsuid=0 ouid=0\n<kjackal_v2> it comes from a command executing a python script\n<kjackal_v2> am I missing an interface?\n<jdstrand> or maybe not... what's going on LP?\n<zyga> jdstrand: thank you for the bug\n<zyga> jdstrand: lp is a bit wonky recently\n<ogra> release day ...\n<zyga> jdstrand: are you seeing timeout errors?\n<ogra> it is busy at some release party i guess\n<ogra> (getting drunk and such)\n<zyga> kjackal_v2: you can use mount-observe to avoid it\n<kjackal_v2> cool, trying that now, thanks zyga\n<jdstrand> kjackal_v2: plugs mount-observe\n<jdstrand> zyga: I see nothing. all white\n<zyga> jdstrand: oh that's even more buggy :)\n<jdstrand> there we go\n<kjackal_v2> there must be a tool suggesting the interfaces based on denials. thank you\n * jdstrand writes his bug report in an editor to then paste in\n<jdstrand> kjackal_v2: snappy-debug\n<zyga> kjackal_v2: there's snappy-debug\n<ogra> kjackal_v2, it is called snappy-debug\n<ogra> bah, snap\n<zyga> but I think we could instead have a tree-like output of files and patterns and associated interfaces that grant access\n<kjackal_v2> woohoo, thank you\n<jdstrand> kjackal_v2: I don't know if you saw, but it is called snappy-debug ;)\n<kjackal_v2> snappy-what ???\n<jdstrand> :)\n<zyga> jdstrand: I think snapd could even make that output\n<zyga> jdstrand: even based on dynamically created interfaces\n<zyga> jdstrand: that would be pretty neat actualy\n<zyga> *actually\n<jdstrand> zyga: the problem is globs and weird things like dbus rules and things with peers, etc\n<jdstrand> zyga: for best results (that snappy-debug is not currently doing) we need to use logprof to aid in suggestions\n<zyga> Yeah but those are all doable\n<jdstrand> and logprof is py3\n<jdstrand> snappy-debug receives nearly no love and I would still consider it poc code\n<jdstrand> I mean, it works, but isn't perfect\n<zyga> brb\n<mup> PR snapd#7518 closed: cmd/snap: sort tasks in snap debug timings output <Created by stolowski> <Merged by stolowski> <https://github.com/snapcore/snapd/pull/7518>\n<jdstrand> zyga: what would be quite cool is for snappy-debug to be able to query snapd on the fly (perhaps using your output) to obtain the policy to base suggestions on\n<jdstrand> right now I have to dump the policy snippets to disk in a rather convoluted manner and ship those snippets in snappy-debug\n<jdstrand> which, again, 'works', but it gets out of date and there are some problems wrt implicitCore and implicitClassic\n<jdstrand> anyway, we could discuss this over lunch sometime. it isn't like any of this is resourced :)\n<roadmr> jdstrand: hey there - hope it's not too short-notice, I scheduled the kickoff for the review-tools stateful thing in 50 min\n<jdstrand> roadmr: that's fine. do note that I'm booked til the roadmaap sprint and won't personally be able to do much wrt this until likely after. possibly just before\n<pedronis> pstolowski: which should probably discuss this issue with enable because I still think there is either a small bug in snapd or in some snaps, probably next week at this point though\n<jdstrand> possibly...\n<jdstrand> roadmr: my understanding was this was a 'next cycle' thing (in fact, the base snap stuff I've communicated in the forum as early next cycle)\n<pedronis> pstolowski: I made a note\n<jdstrand> roadmr: that doesn't mean I can't attend the meeting, just trying to set expectations\n<roadmr> jdstrand: right, we can clarify that in a bit. Our plan is to feature-flag this so it's ready to go once the tools support it, so there's no pressure on you ideally\n<jdstrand> roadmr: ack\n<pstolowski> pedronis: ok\n<jdstrand> pstolowski: fyi, in 2.42 snap install is fast since we only do the apparmor_parser at the end, but snap remove runs the parser on each disconnect\n<jdstrand> pstolowski: I don't recall if that was intentional (ie, it is still a known todo)\n<jdstrand> pstolowski: but if it was unknown, now it is known\n<jdstrand> :)\n<jdstrand> pstolowski: hey btw :)\n<pstolowski> jdstrand: hi! yes and no, we know we have a few variants of ops that need their own treatment... btw i've next PR up - https://github.com/snapcore/snapd/pull/7601 ; but yes i haven't considered remove yet\n<mup> PR #7601: overlord/ifacestate: use SetupMany in setupSecurityByBackend <Created by stolowski> <https://github.com/snapcore/snapd/pull/7601>\n<pstolowski> jdstrand: so, thanks for pointing out\n<jdstrand> ack on that PR (had it in my todo)\n<jdstrand> zyga: https://bugs.launchpad.net/snapd/+bug/1848516\n<mup> Bug #1848516: snap connections/interfaces shows dropped interfaces as connected after refresh <snapd:New> <https://launchpad.net/bugs/1848516>\n<jdstrand> zyga: the end of that report is bizarre\n<Chipaca> found the issue with brave\n<Chipaca> https://forum.snapcraft.io/t/small-problem-with-brave-browser/13743/6?u=chipaca\n<Chipaca> anybody know the brave devs? popey?\n<ogra> they used to be active on the forum when packaging it first\n<ogra> @posix4e on the forum it seems\n<Chipaca> ogra: thanks\n<ogra> :)\n<Chipaca> hm, last seen jan 27\n<Chipaca> hmm\n<ogra> yeah ... at least this year though :)\n<zyga> jdstrand: returning from lunch and looking\n<Saviq> Can't find this documented anywhere, does the store expire old revisions of software? What are the rules for that?\n<ogra> afaik the store never deletes anything ... and revisions are only wiped when new stuff comes in\n<ogra> (unless you manually unrelease/close channels etc)\n<Chipaca> Saviq: if you're the publisher you can still install the old revisions\n<Chipaca> e.g. i can snap install --revision=1 http\n<ogra> show off ...\n<Chipaca> wait, i lied, i can onlu install 14 and on\n<Chipaca> huh\n<Chipaca> Saviq: so maybe there's more to it than that and we should ask the store :-D\n<ogra> probably only revisions that have been published once ?\n<Saviq> well, multipass's revisions start with no. 700+ (at least as far as `snapcraft revisions` is concerned)\n<Saviq> why I'm asking is I'm considering edge/pr-123 branches for pull requests, but would not like those to live ad infinitum\n<Saviq> so if there are *some* rules for expiration, I'd be much happier :)\n * cachio lunch\n<popey> Chipaca: they haven't been active for ages\n<popey> We may have to re-home it\n<zyga> jdstrand: question about https://github.com/snapcore/snapd/pull/7623 -- it shows we actually do use wrong permissions\n<mup> PR #7623: tests: check world-writable and test-owned files <Created by zyga> <https://github.com/snapcore/snapd/pull/7623>\n<zyga> jdstrand: I made some changes to snap-confine where this test passes, do you think I should open that as a PR?\n<jdstrand> zyga: I have to step away but will circle back\n<zyga> ok\n<zyga> I'll commit and push it and give you a link\n<mup> PR snapd#7624 opened: snap: make `snap download` download via snapd if availalbe <Created by mvo5> <https://github.com/snapcore/snapd/pull/7624>\n<mup> PR snapd#7619 closed: image,seed: hide Seed16/Snap16, use seed.Open in image_test.go <Created by pedronis> <Merged by pedronis> <https://github.com/snapcore/snapd/pull/7619>\n<mvo> pedronis: yay\n<mvo> pedronis: ping me once this is merged into your other PR\n<pedronis> mvo: it is now\n<pedronis> #7595 is ready for review\n<mup> PR #7595: seed/seedwriter: support writing Core 20 seeds (aka recovery systems) <Created by pedronis> <https://github.com/snapcore/snapd/pull/7595>\n<mup> PR snapd#7625 opened: cmd/snap-confine: stop being setgid root <Created by zyga> <https://github.com/snapcore/snapd/pull/7625>\n<mup> PR snapd#7233 closed: interfaces/firewall-control: add nf_nat_* to kmod plug <Created by alfonsosanchezbeato> <Closed by zyga> <https://github.com/snapcore/snapd/pull/7233>\n<mup> PR snapd#7626 opened: [RFC] managers: add remodel undo test for new required snaps case <Created by mvo5> <https://github.com/snapcore/snapd/pull/7626>\n<joedborg> hey ijohnson, do you happen to have the snapcraft.yaml for the docker snap you wrote?\n<ijohnson> joedborg: it's being maintained by tianon now on LP\n<joedborg> ijohnson: thanks!\n<ijohnson> joedborg: but anyways it's here : https://git.launchpad.net/~docker/+git/snap/tree/\n<joedborg> ijohnson: ah, nice, thanks.  just needed to \"borrow\" some bits :)\n<ijohnson> +1\n<mup> PR snapcraft#2741 closed: extensions: support using gjs from gnome runtime <Created by galgalesh> <Merged by sergiusens> <https://github.com/snapcore/snapcraft/pull/2741>\n<jdstrand> zyga: can you take a look at this and bring it up in your standup: https://bugs.launchpad.net/snapd/+bug/1848567\n<mup> Bug #1848567: autogenerated per-snap snap-update-ns apparmor profile may contain many duplicate rules causing excessive parser memory usage <aa-parser> <AppArmor:New> <snapd:New> <https://launchpad.net/bugs/1848567>\n<jdstrand> cc pedronis ^\n<jdstrand> zyga (cc pedronis): that could be an easy performance win\n<jdstrand> I say 'easy' because it is no risk for production, but I realize there could be a lot of testsuite changes\n<mup> PR snapd#7627 opened: overlord: add checks for bootvars in TestRemodelSwitchToDifferentKernel <Simple \u00f0\u009f\u0098\u0083> <Created by mvo5> <https://github.com/snapcore/snapd/pull/7627>\n<ijohnson> jdstrand: I'll make sure it's discussed, that's could be a huge performance win it seems\n<jdstrand> ijohnson: yes, huge! and not just UC. eg, Ubuntu with preinstalled snaps on first boot could swap (or even OOM) due to this\n<ijohnson> yeah totally\n<jdstrand> ijohnson: the biggest number of dupes seems to be mostly around the content interface\n<jdstrand> layouts aren't too bad\n<jdstrand> at least anecdotally\n<ijohnson> yes it's quite odd because I have 3 graphical snaps on my system and they all have 17k line long snap-update-ns profiles and all the rest of my profiles are only about 100-200 lines\n<jdstrand> ijohnson: jjohansen mentioned to me that the issue is because mount rules don't have a quick and dirt second pass to pull out dupes\n<jdstrand> dirty*\n<ijohnson> but also all the graphical snaps use the content interface too\n<jdstrand> ijohnson: yes, exactly\n<jdstrand> ijohnson: I see that chromium ,discord, gedit, gimp, gnome-calculator, gnome-characters, gnome-logs, gnome-system-monitor, indicator-sensors, libreoffice, remmina, ...\n<jdstrand> ijohnson: you know, all the stuff no one uses :P\n<ijohnson> haha yeah :-O\n<oSoMoN> jdstrand, hey, until the voting period is over for https://forum.snapcraft.io/t/auto-connecting-the-personal-files-interface-for-the-chromium-snap-part-ii/13705, the chromium snap in the candidate channel is not installable. If I\u00c2\u00a0wanted to publish unrelated bug fixes in the chromium snap, should I\u00c2\u00a0simply revert the change to the personal-files plug temporarily, then add it back when auto-connection is granted?\n<jdstrand> oSoMoN: yes, that would be the best course. let me look at that request real quick\n<jdstrand> oSoMoN: let me look at the snapcraft.yaml. recall there is a review-tools change that is also needed\n<jdstrand> oSoMoN: I'd like to proactively add that ahead of the voting period expiration\n<oSoMoN> cool\n<jdstrand> oSoMoN: so your plan is to update the existing 'chromium-config' plug?\n<oSoMoN> jdstrand, yes, unless you advise otherwise\n<oSoMoN> the change is here:\u00c2\u00a0https://git.launchpad.net/~chromium-team/chromium-browser/+git/snap-from-source/commit/?id=ffd7ad54bca62c325f906014cd3b96bd2bcd2ee7\n<jdstrand> oSoMoN: in this case, I think that is fine. it also means I don't need to add anything to the review-tools\n<oSoMoN> even better\n<mup> PR snapcraft#2755 opened: extensions: kde-neon: add icon and sound themes <Created by galgalesh> <https://github.com/snapcore/snapcraft/pull/2755>\n#snappy 2019-10-18\n<mborzecki> morning\n<mup> PR snapd#7621 closed: spdx: add EPL-2.0 to licenses <Created by ralight> <Closed by pedronis> <https://github.com/snapcore/snapd/pull/7621>\n<mborzecki> mvo: hey\n<mvo> hey mborzecki\n<mup> PR snapd#7609 closed: snap-recovery: remove \"usedPartitions\" from sfdisk.Create() <Created by mvo5> <Merged by mvo5> <https://github.com/snapcore/snapd/pull/7609>\n<mup> PR snapd#7620 closed: snap-install: add ext4,vfat creation support <Created by mvo5> <Merged by mvo5> <https://github.com/snapcore/snapd/pull/7620>\n<mvo> 7613 is ready for review now, pretty small and hopefully simple :)\n<mborzecki> mvo: so are we going with snap-recovery instead of recovery-tool, or will the former just stay an internal/testing thing for now?\n<mvo> mborzecki: hope I understand the question but snap-recovery is the new name of recovery-tool, recovery-tool is a bit too generic (iirc that was what was the outcome of the code review earlier)\n<mborzecki> mvo: ah ok, missed that\n<mvo> mborzecki: there should be no recovery-tool anymore unless I overlooked something :)\n<mup> PR snapd#7627 closed: overlord: add checks for bootvars in TestRemodelSwitchToDifferentKernel <Simple \u00f0\u009f\u0098\u0083> <Created by mvo5> <Merged by bboozzoo> <https://github.com/snapcore/snapd/pull/7627>\n<pstolowski> morning\n<mvo> hey pstolowski\n<zyga> re\n<zyga> hey guys\n<zyga> feeling somewhat better, working from office now\n<zyga> resuming work on /etc -> /var move\n<mup> PR snapd#7628 opened: gadget: helper for volume compatibility checks <Remodel :train:> <Created by bboozzoo> <https://github.com/snapcore/snapd/pull/7628>\n<mborzecki> mvo: ^^\n<mborzecki> pstolowski: zyga: hey\n<mvo> mborzecki: nice one\n<mvo> zyga: hey ! glad to hear that you feel better\n<zyga> mvo: thanks\n<pedronis> mborzecki: hi, btw now that claudio changes have landed #7509 should be unblocked ?\n<mup> PR #7509: gadget, snap/pack: perform extended validation of gadget metadata and contents <Created by bboozzoo> <https://github.com/snapcore/snapd/pull/7509>\n<mborzecki> pedronis: yes\n<zyga> mvo: check this out\n<zyga> https://www.irccloud.com/pastebin/Kpa4yYyI/\n<mborzecki> zyga: hm maybe snapd.failure.service ran and exited between the is-active calls?\n<zyga> that's a good hunch\n<zyga> perhaps it should stay-after-exit?\n<zyga> or leave a trace that the test can reliably check for\n<mup> PR snapd#7629 opened: snap-recovery: create filesystems as defined in the gadget <Created by mvo5> <https://github.com/snapcore/snapd/pull/7629>\n<mborzecki> osx jobs fail on travis?\n<zyga> mborzecki: I didn't see any failures, what did you get?\n<mborzecki> zyga: jobn fails, 10 minutes with no output, as if nothing got really executed\n<zyga> hum\n<zyga> I've submitted some changes so I will likely see that soon\n<zyga> but no output is a big hard to debug\n<zyga> macos has abandoned bash and switched to zsh\n<zyga> maybe that's a factor?\n<mborzecki> really?\n<mborzecki> wonder why\n<zyga> gpl\n<zyga> they never upgraded past gpl 2.0 licensed version\n<zyga> there's nothing gpl 3.0 on macos\n<mborzecki> duh\n<mborzecki> at least they didn't go with tcsh :P\n<zyga> mash :)\n<pedronis> mvo: so I'm ready to submit seed/seed20 code and the basics of using it for firstboot, but I need reviews otherwise it will just be huge diffs\n<zyga> mvo: question on your policy branch https://github.com/snapcore/snapd/pull/7615/files#r336367270\n<mup> PR #7615: policy: implement CanRemove policy for the snapd type <Created by mvo5> <https://github.com/snapcore/snapd/pull/7615>\n<pedronis> I'll have a break and then switch to doing reviews\n<mvo> zyga: sure, I have a look\n<mvo> pedronis: will review your PR in a little bit\n<Chipaca> \u00f0\u009f\u0091\u008b\n<Chipaca> just to note I'm not working today :-)\n<Chipaca> did I say note? I meant 'gloat'\n<zyga> Chipaca: are you okay?\n<pedronis> zyga: what's the status of #7547 ? does it need Jamie's review?\n<mup> PR #7547: many: use a dedicated named cgroup hierarchy for tracking <Created by zyga> <https://github.com/snapcore/snapd/pull/7547>\n<zyga> pedronis: I asked for someone from security (jamie or alex) to review it\n<zyga> jamie had a look and mentioned the idea is sound (on IRC)\n<zyga> but there's no full review from him yet\n<zyga> I think it would be good to have one though it's all entirely behind a feature flag so we might land it without a review assuming we get one later\n<zyga> I have more code depending on this landing so moving it would unblock me\n<zyga> mborzecki: reviewed https://github.com/snapcore/snapd/pull/7628#pullrequestreview-303746745\n<mup> PR #7628: gadget: helper for volume compatibility checks <Remodel :train:> <Created by bboozzoo> <https://github.com/snapcore/snapd/pull/7628>\n<mborzecki> thx\n<mvo> thanks zyga !\n<zyga> mvo: small review for you https://github.com/snapcore/snapd/pull/7626#pullrequestreview-303758751\n<mup> PR #7626: [RFC] managers: add remodel undo test for new required snaps case <Created by mvo5> <https://github.com/snapcore/snapd/pull/7626>\n<mvo> zyga: happy to discuss this in a bit, fwiw we use similar style in snapstate and wrappers, it seems to be ok if \"f() (err error)\" style is used - or am I misreading/misunderstanding?\n<zyga> mvo: it's still easy to define another err\n<zyga> mvo: I know we are using this style\n<zyga> but if we are going to rely on it I think it's a bit too fragile\n<pedronis> zyga: it's a bit more subtle\n<mvo> zyga: you mean if someone defines does \"return err2\" ?\n<pedronis> the return do an assignment afaiu\n<mvo> yeah, that is my understanding as well, so I wonder if I miss something\n<pedronis> zyga: see, this code  https://play.golang.org/p/gzUa03a0ET7\n<zyga> mvo: I could be wrong but last time I was doing it I had unexpected results from foo, err := ... style code even if err was defined\n<mvo> zyga: this case will work, I can add some test for this later\n<mvo> zyga: but in the middle of a review right now so I don't want to switch too much context :)\n<mvo> zyga: aha, pedronis was kind enough to add the pastebin\n<mvo> eh, play\n<pedronis> zyga: is the this bit of the spec: A \"return\" statement that specifies results sets the result parameters before any deferred functions are executed.\n<pedronis> https://golang.org/ref/spec#Return_statements\n<zyga> pedronis: that's interesting, I didn't know that\n<zyga> I was trying to craft something nefarious in the playground but could not\n<mvo> zyga: we could add a comment to this kind of code to ensure ppl are not nervous about it\n<pedronis> there are still some ways to get this idiom wrong:\n<pedronis> not defining err in the return type, but have some early err := but using the idiom anyway somehow\n<pedronis> some path that errors but returns nil to the caller (but still hope to get the undoing working)\n<pedronis> mvo: thanks for the review, I asked a question about one of your questions :)\n<zyga> I'll be back soon,\n<zyga> it's so cold in the office nowadays\n<zyga> I should turn more computers on\n<zyga> (heating is on but the office has weaker heat insulation compared to the rest of the house)\n<mvo> pedronis: thanks, I replied\n<pstolowski> yay, got the cloud image firstboot working end-to-end with pre-baked image \\o/\n<pstolowski> now onto open points.. system key, gadget configure hook..\n<zyga> pstolowski: nice milestone :)\n<pedronis> mvo: couple of comments in 7626\n<mvo> pedronis: thank you\n<pedronis> pstolowski: great\n<mup> PR snapd#7548 closed: tests: update snap logs to match for multiple lines for  \"running\" <Created by sergiocazzolato> <Merged by pedronis> <https://github.com/snapcore/snapd/pull/7548>\n<mvo> pedronis: thanks for your suggestions, I will update the undo PR accordingly, much simpler this way :)\n<mup> PR snapd#7630 opened: overlord/devicestate: check snap handler for gadget remodel compatibility <Remodel :train:> <Created by bboozzoo> <https://github.com/snapcore/snapd/pull/7630>\n<mborzecki> mvo: pedronis: ^^\n<mup> PR snapcraft#2754 closed: meta: support the case of a plug without a default provider <Created by sergiusens> <Merged by sergiusens> <https://github.com/snapcore/snapcraft/pull/2754>\n<mvo> mborzecki: thanks, looking\n<zyga> mborzecki: https://github.com/snapcore/snapd/pull/7630#pullrequestreview-303818422\n<mup> PR #7630: overlord/devicestate: check snap handler for gadget remodel compatibility <Remodel :train:> <Created by bboozzoo> <https://github.com/snapcore/snapd/pull/7630>\n<zyga> mvo: is https://github.com/snapcore/snapd/pull/7613 already minimal or would merging master shrink it?\n<mup> PR #7613: snap-recovery: add minimal binary so that we can use spread on it <Created by mvo5> <https://github.com/snapcore/snapd/pull/7613>\n<zyga> mborzecki: can you do a pass over https://github.com/snapcore/snapd/pull/7614 as well\n<mup> PR #7614: cmd/snap-confine: implement snap-device-helper internally <Created by zyga> <https://github.com/snapcore/snapd/pull/7614>\n<mvo> zyga: its already minimal, I merged master this morning\n<zyga> mvo: thanks, I'll review it then\n<zyga> mvo: I only asked because it said it is based on something and I wasn't sure\n<mvo> zyga: ta\n * pstolowski lunch\n * zyga break as well\n<zyga> mvo: I'll finish the review soon\n<mvo> zyga: no worries, I have lunch now\n<zyga> mvo: https://github.com/snapcore/snapd/pull/7629#pullrequestreview-303823599 :)\n<mup> PR #7629: snap-recovery: create filesystems as defined in the gadget <Created by mvo5> <https://github.com/snapcore/snapd/pull/7629>\n<mup> PR snapd#7628 closed: gadget: helper for volume compatibility checks <Remodel :train:> <Created by bboozzoo> <Merged by bboozzoo> <https://github.com/snapcore/snapd/pull/7628>\n<zyga> LXD test is failing a few times today\n<mborzecki> pedronis: updated #7509\n<mup> PR #7509: gadget, snap/pack: perform extended validation of gadget metadata and contents <Created by bboozzoo> <https://github.com/snapcore/snapd/pull/7509>\n<pedronis> jdstrand: hi, I made a meta comment in the system-backup PR, you probably know but you have quite few snapd PRs asking your review\n<jdstrand> pedronis: thanks, yes, going to get through as many as I can today\n<mborzecki> off to pick up the kids, or i'm gonna be late for standup\n<jdstrand> mvo: hey, others said they would bring this up in your standup, but fyi bug #1848567\n<mup> Bug #1848567: autogenerated per-snap snap-update-ns apparmor profile may contain many duplicate mount rules causing excessive parser memory usage <aa-parser> <AppArmor:New> <snapd:New> <https://launchpad.net/bugs/1848567>\n<zyga> oh\n<jdstrand> zyga: oh, did you not see backscroll from after you eod'd?\n * jdstrand gathers\n<zyga> nope\n<zyga> I didn't read any\n<jdstrand> zyga: https://paste.ubuntu.com/p/NKFGsZtBZN/\n<zyga> jdstrand: thanks\n<zyga> jdstrand: I think there is an \"easy\" way to solve this\n<zyga> jdstrand: I can give it a try\n<zyga> jdstrand: we can de-duple in the apparmor spec\n<zyga> *de-dupe\n<zyga> jdstrand: and simply change how we emit lines for the offending rules\n<jdstrand> zyga: please only dedupe in snap-update-ns profiles though\n<zyga> jdstrand: I'll try\n<zyga> jdstrand: though\n<zyga> jdstrand: I think it'd be good to do globally\n<jdstrand> zyga: I do not\n<zyga> jdstrand: we can have some code that emits # line if line was already added\n<zyga> jdstrand: why?\n<zyga> jdstrand: doing it in a specific profile would create a special case\n<zyga> jdstrand: so more complexity to test\n<jdstrand> zyga: snap-update-ns is auto-generated so we need to make sure it is clean. the handcrafted snippets will have few duplicates and removing them will have essentially no performance gain but cause confusion in debugging and auditing\n<zyga> jdstrand: it depends on how it is done, we can keep the duplicated lines, just comment them out\n<pedronis> I agree with jdstrand that it will get confusing for debugging\n<Saviq> is there documentation somewhere about the acls I can give to `snapcraft export-login`?\n<zyga> pedronis: it's hard to say if it is confusing before we see it\n<pedronis> zyga: heh\n<pedronis> you are copying something into something else\n<pedronis> except removing some bits\n<jdstrand> zyga: please note the problem is that the parser doesn't (currently) have a cheap dedupe for mount rules. all others are dedupes fast. we just need to make sure the auto-generated profiles doesn't balloon\n<pedronis> depending on mixing of things\n<pedronis> that sounds confusing\n<pedronis> a priori\n<zyga> pedronis: I think you are confused by what I'm trying to do\n<zyga> jdstrand: sure, I understand the problem\n<pedronis> zyga: I expect every line from a template to end up in the final profile atm\n<pedronis> it sounds you want to change that\n<jdstrand> zyga: the commented out idea is better than removing, but we don't want that. why have 17000 commented out lines?\n<zyga> jdstrand: for the audit you wanted?\n<zyga> pedronis: I don't want to change anything related to the template\n<zyga> pedronis: or parse anything for that matter\n<pedronis> zyga: you are changing the relation between template content and output\n<jdstrand> zyga: I am talking about *auto-generated* rules. for templated policy with snippets, we  should have everything\n<zyga> pedronis: yes, but that is unavoidable, we must change something to get less output\n<pedronis> zyga: yes, but only for autogenerated stuff\n<zyga> jdstrand: sure, but I never intended to change the template here\n<zyga> pedronis: yes, that's what I was proposing\n<zyga> anyway, I think code speaks clearer than english\n<pedronis> zyga: so I'm not confused, but both me and jdstrand are saying no to that\n<zyga> I will have a look\n<zyga> and we can discuss it then\n<jdstrand> zyga: but you did say that you would dedupe snap.* profiles, not just snap-update-ns.*. snap.* aren't autogenerated\n<pedronis> zyga: please discuss with mvo how to prioritize this\n<zyga> jdstrand: my idea is to dedupe snippets\n<zyga> jdstrand: nothing more\n<zyga> jdstrand: this idea is super simple, it only depends on how we send mount rules as snippets\n<zyga> jdstrand: instead of sending one big block of unique text\n<jdstrand> zyga: snippets are also not autogenerated rules\n<zyga> jdstrand: we can send each mount rule\n<zyga> jdstrand: snippets are just that, the contets is auto generated or not\n<jdstrand> zyga: or rather, the ones in interfaces/builtins are not autogenerated\n<zyga> jdstrand: if we change the content permissions to generate each mount rule as a snippet\n<zyga> (actually we may already have deduplication in the snippets)\n<jdstrand> zyga: there is a difference between snapd calculating individual rules and adding them and snapd splatting out templated snippets\n<zyga> jdstrand: so instead of sending one, say, ten line snippet\n<zyga> jdstrand: we can send ten snippets\n<zyga> jdstrand: and if the next directory rule sends the 9 snippets that are the same\n<zyga> jdstrand: and one that is different\n<zyga> jdstrand: we end up with just 11 snippets now\n<zyga> jdstrand: as I said above, I don't intend to parse or split snippets that are provided to the spec\n<zyga> jdstrand: just be smarter about the snippets that we add to the spec in this case\n<jdstrand> zyga: there are implementation ideas that can be done to dedupe. that is fine. I'm saying that at the end of it all, we should have deduped snap-update-ns policy, but snap.* policy is character by character identical\n<jdstrand> to what we have now\n<zyga> jdstrand: I think I see your point but I don't think we should be this strict about this, this kind of approach introduces special cases that are error prone. I don't think we have any duplication in snap profiles today. Having said that I would not like to if-then-else this special case\n<jdstrand> zyga: it doesn't feel that hard. add a flag if and set it to true if generating snap-update-ns\n<zyga> jdstrand: btw, how did you run into this?\n<zyga> jdstrand: is there a simple test where we can measure the memory used by apparmor parser?\n<pedronis> jdstrand: agreed\n<jdstrand> zyga: people (including myself) were seeing OOMs in Ubuntu vms\n<jdstrand> zyga: did you read the bug? :)\n<zyga> jdstrand: I didn't notice the -f mem thing there, I read the summary only\n<zyga> jdstrand: I will look at adding a test that checks if the memory used by apparmor parser on a specific profile is not unreasonable\n<zyga> (though as with all \"benchmark\" style tests, it's not a clear-cut what is reasonable)\n<jdstrand> zyga: btw, there is duplication in the snap.* profiles today, but it is small and unimportant for performance and memory\n<jdstrand> zyga: that will be difficult and dependent on how many cpus you have\n<zyga> jdstrand: I would imagine a test that loads one specific profile should not depend on that\n<zyga> jdstrand: (load profile one by one, check that memory used by apparmor parser is << than some sane value)\n<zyga> (with the right arguments to force skipping cache to see the actual cost)\n<jdstrand> zyga: one profile no, but that is artificial with pstolowski's patches to load all of the snaps profiles with one parser invocation. it might be ok, but I don't know what a good number is. it is definitely less than 1.5G :)\n<zyga> jdstrand: btw, why is apparmor parser not de-duplicating mount rules?\n<jdstrand> zyga: that is in the bug :)\n<zyga> jdstrand: yeah, for sure, I need to see\n<jdstrand> zyga: it is a bug in apparmor_parser. it should be\n<zyga> I see\n<zyga> ok\n<zyga> mvo: can you triage https://bugs.launchpad.net/snapd/+bug/1848567 :)\n<mup> Bug #1848567: autogenerated per-snap snap-update-ns apparmor profile may contain many duplicate mount rules causing excessive parser memory usage <aa-parser> <AppArmor:New> <snapd:New> <https://launchpad.net/bugs/1848567>\n<jdstrand> zyga: but even if that was fixed, 17000 auto-generated rules need to be fixed\n<zyga> jdstrand: it looked good when we were writing it ;)\n<zyga> jdstrand: precise and all that\n<zyga> but yeah\n<jdstrand> that is impossible to read, audit and too much disk\n<pedronis> mborzecki: I don't understand why we need volumes for classic gadgets now in #7509\n<mup> PR #7509: gadget, snap/pack: perform extended validation of gadget metadata and contents <Created by bboozzoo> <https://github.com/snapcore/snapd/pull/7509>\n<zyga> jdstrand: perhaps we should not be this precise\n<jdstrand> zyga: well, I think things are pretty 'ok' with a single content interface. but the pattern in the filed is multiple content interfaces like with gnome-calculator\n<pedronis> mborzecki: commented there\n<jdstrand> zyga: we are precise for a reason. just dedupe: we are then precise and small\n<jdstrand> the file ends up being <700 lines (with comments) after deduped. that is totally fine\n<jdstrand> (for gnome-calculator that is)\n<jdstrand> memory is inline with all our othe profiles\n<jdstrand> time to compile too\n<jdstrand> it's a cheap win with no production risk since the rules loaded into the kernel are exactly the same as the 17000 line profile\n<zyga> jdstrand: because of apparmor parser DFA miminalization?\n<jdstrand> zyga: yeah\n<ijohnson> jdstrand: well looks like you got your bug discussed before I even had a chance to mention it :-)\n<jdstrand> zyga: there is an expensive dedupe stage and a cheap one. the cheap one is missing for mount in the parser.\n<zyga> yeah, I think I understand how the parser is ending up working this way\n<jdstrand> zyga: the idea is, do the cheap one then the expensive.\n<zyga> state machine transformations are expensive, especially the minimalization that results in exponential states\n<jdstrand> ijohnson: heh, it was good. now people know where everyone stands and the discussion in the standup can perhaps be more productive, shorter and about resourcing\n<ijohnson> +1\n<ijohnson> oh btw I still have a todo to look into stopping pivot_root for containerd, is that still necessary/relevant (cc joedborg)\n<mborzecki> pedronis: heh, right, leftover from the initial version of the pr\n<ijohnson> jdstrand: ^\n<pedronis> ijohnson: hi, I did a pass on the disabled services PRs\n<joedborg> ijohnson: I\u00e2\u0080\u0099ve tried with setting `no_pivot` to true but am still getting the app armor violations on the file system\n<jdstrand> ijohnson: kjackal is who wanted it (but I'm sure joedborg is interested too), but yes, kjackal saw prometheus had a similaar issue. I'll let him comment further\n<jdstrand> ijohnson: if you don't mind that is\n * kjackal reading\n<jdstrand> zyga: fyi, sha256sum for big vs deduped cache files: https://paste.ubuntu.com/p/YFCkGZysk2/\n<zyga> jdstrand: how did you dedupe?\n<ijohnson> pedronis: I saw that thanks\n<jdstrand> zyga: it is in the bug ;) I sort -u then put the preamble lines and the } in the right spot\n<zyga> jdstrand: +1\n<zyga> thanks\n<zyga> yeah, this is expected\n * jdstrand nods\n<kjackal> ijohnson: joedborg is probably the best to comment on this. The only thing I can say for sure is that we see issues with a number of workloads some of which are probably due to patches mising from containerd.\n<jdstrand> just wanted to prove that the kernel blob is the same. no reason to change our rules\n<ijohnson> jdstrand, kjackal, joedborg: ack I'll still take a look at it then. btw which snap is this for, the kubernetes-worker snap? I can't seem to find it on github anymore, I thought it was somewhere in https://github.com/charmed-kubernetes/bundle\n<jdstrand> ijohnson: https://github.com/charmed-kubernetes/snap-kubernetes-worker is kubernetes-worker\n<ijohnson> thanks jdstrand\n<jdstrand> ijohnson: https://github.com/ubuntu/microk8s/ is microk8s\n<joedborg> ah thanks jdstrand\n<jdstrand> ijohnson: (though I don't know where kjackal's strict mode branch is currently living)\n<jdstrand> otoh\n<kjackal> It is here https://github.com/ubuntu/microk8s/tree/feature/strict-v3\n<ijohnson> thanks everybody, will try to look into this soon\n<jdstrand> zyga: so, for the benchmark, /usr/bin/time -f \"wall: %E, mem: %M Kb\" apparmor_parser -QTK -o benchmark.cache profile\n<jdstrand> zyga: actually, just to be 100% consistent: /usr/bin/time -f \"wall: %E, mem: %M Kb\" apparmor_parser -j1 -QTK -o benchmark.cache profile\n<mup> PR snapd#7562 closed: tests: check the apparmor_parser when the file exists on snap-confine test <Simple \u00f0\u009f\u0098\u0083> <Created by sergiocazzolato> <Merged by sergiocazzolato> <https://github.com/snapcore/snapd/pull/7562>\n<jdstrand> zyga: where profile is something akin to what gnome-calculator has (eg, multiple content plugs). maybe put memory at under 50000 and time at under 1 second?\n<zyga> jdstrand: thank you, I'll make sure this is tested\n<jdstrand> zyga: you might have to play with those thresholds. the deduped profile was ~32M here and < .5 seconds\n<jdstrand> here\n<zyga> jdstrand: I think I will put the threshold at 512M\n<zyga> if we needed more mem we will fail on some supported systems\n<jdstrand> zyga: maybe make sure it is < 1000? line? (it was 662 here)\n<zyga> but I need to sit down and code it first\n<zyga> most likely next week as we won't release over weekend anyway\n<jdstrand> zyga: soryy, 50000 was in k. that is 50M\n<jdstrand> zyga: 'time' uses 'k' but then I used 'm' in later comments. 50M as the upper limit initially sounds good\n * jdstrand tests on arm64 and armhf real quick\n<zyga> jdstrand: I'm only grumpy that nobody raised this during 19.10 beta\n<zyga> jdstrand: we could have fixed it for that release\n<zyga> jdstrand: but that's why I want to do a test\n<jdstrand> zyga: it isn't a 19.10 thing\n<zyga> jdstrand: so that next time we won't be burned by accident\n<zyga> jdstrand: oh I know\n<zyga> but it JUST SHIPPED and nobody noticed before :)\n<jdstrand> zyga: oh I see what you mean\n<jdstrand> zyga: yes, well, at least it was found by us rather than the field blowing up\n<zyga> jdstrand: well, the field may still blow up :)\n<jdstrand> zyga: but, for sure classic distro is feeling this and don't know it\n<jdstrand> zyga: most desktop system probably have 1.5G ram and swap these days, and it is desktop system that hit the pathological multiple content interface case\n<zyga> jdstrand: yeah\n<jdstrand> zyga: so OOM won't usually be hit unless other things are going on\n<zyga> jdstrand: if you want to review it today I may look at a quick PR after standup\n<zyga> jdstrand: if you are fine waiting it will be done next week\n<jdstrand> but, they could crawl with swap and be a bit slow\n<jdstrand> zyga: yes. I am off Mon and Tue. 2.43 material is fine\n<zyga> jdstrand: oh\n<zyga> hmmm\n<jdstrand> zyga: I'm going to try to get through all the PR reviews today\n<zyga> perhaps a quick iteration today is better\n<zyga> well, I'll leave that to you\n<zyga> otherwise I will resume reviews\n<zyga> and try to finish a bugfix for apparmor in another area\n<zyga> (the one with the include file)\n<jdstrand> zyga: 2.43 wasn't even branched yet as of... yesterday? wed?\n<zyga> I don't know the status of the release\n<zyga> sorry\n<jdstrand> that's fine. next week is fine. please discuss priority in standup (and feel free to relay I'm reviewing today and off Mon and Tue if that is useful)\n<jdstrand> zyga: ^\n<zyga> ok\n<jdstrand> zyga: a not nearly as important bug that I can't recall if I forwarded to you: https://bugs.launchpad.net/snapd/+bug/1848516\n<mup> Bug #1848516: snap connections/interfaces shows dropped interfaces as connected after refresh <snapd:New> <https://launchpad.net/bugs/1848516>\n<jdstrand> zyga: oh, I did. I was really surprised remove/install still showed it as connected :)\n<jdstrand> erf, 'time' isn't in UC\n<ogra> jdstrand, lies ... my UC16 has it :P\n<jdstrand> ogra: /usr/bin/time?\n<ogra> ah, no, the shell builtin\n<jdstrand> (it is also a shell builtin, but that isn't what I want)\n * jdstrand nods\n<jdstrand> using classic snap\n<jdstrand> ogra: I totally forgot how handy /usr/bin/time is\n<ogra> haha, yeah\n<jdstrand> the builtin is all I think I've used for years :)\n<ogra> oh, it actually even comes from its own deb\n<ogra> i thought it is part of coreutils\n<jdstrand> huh, me too\n<jdstrand> zyga: oh, /usr/bin/time -f \"wall: %E, mem: %M Kb\" apparmor_parser -QTK -Ono-expr-simplify -j1 -o cache profile\n<jdstrand> zyga: (forgot -Ono-expr-simplify)\n<jdstrand> zyga: armhf: wall: 0:00.24, mem: 3472 Kb\n<jdstrand> zyga: arm64: wall: 0:00.45, mem: 5392 Kb\n * jdstrand moves along\n<ogra> heh, thats the same binary you call on armhf and arm64 i guess ?\n<ogra> (surprising it isnt 2x the memory size but only 1.5 or so ... )\n<ijohnson> hey Chipaca got a question yesterday about store connections from snapd... is there a single global timeout we set for all connections to the store? and if there is, can a user adjust that timeout?\n<mup> PR snapd#7574 closed: client: add KnownOptions to Know() and support remote assertions <Created by mvo5> <Merged by mvo5> <https://github.com/snapcore/snapd/pull/7574>\n<pedronis> ijohnson: John is off today,  we have a couple of timeouts and retry strategies, they are not user configurable atm\n<ijohnson> ah okay, thanks pedronis\n<mvo> 7622 is now also ready for a review\n<mvo> zyga: hm, it looks like I did not look closely enough, 7613 was the smallest snap-recovery PR in flight right now, I will apply your feedback to the other to this one. sorry that I overlooked this earlier\n<zyga> mvo: no worries :)\n<pedronis> mborzecki: re-reviewed 7509\n<mborzecki> pedronis: thanks\n<jdstrand> pedronis: hey, those snap-ids, they were for all stores, correct?\n<pedronis> jdstrand: yes\n<jdstrand> thanks\n<zyga> jdstrand: I think it works\n<zyga> jdstrand: have a look https://usercontent.irccloud-cdn.com/file/FB0h24Ik/deduped-update-ns-profile\n<zyga> I need to adjust tests but it's simple enough\n<zyga> but firstd\n<zyga> foood :D\n * zyga had only breakfast and it's almost 5PM\n<jdstrand> zyga: yikes. that happened to me yesterday :\\\n<zyga> as a super-cheap approach for now until tests pass\n<zyga> jdstrand: diff that makes it go  https://www.irccloud.com/pastebin/TCWMioYP/\n<zyga> it relies on spec.AddUpdateNS() de-duplicating already\n<zyga> ok, time for that food\n<joeubuntu> hey all - looking for a pointer. I've heard tales of a scenario where snaps can be built by pulling source down from github. Is there a link you can share so I can read up on it? I have not been able to find it with the googles.\n<joeubuntu> i.e. I'd somehow modify my snapcraft.yaml to git clone my repo? Is that a thing or do I misunderstand the feature?\n<ijohnson> joeubuntu: do you mean you have a snapcraft.yaml source on github you want to be built into a snap? or you just want to include some github repo in your snap?\n<ijohnson> joeubuntu: we have build.snapcraft.io which will automatically re-build your snap when you push to the github repository and publish the built snap into the edge channel\n<joeubuntu> ijohnson that is the goal!  right now I just copy my files in to ~/snap/snapName/snap/files\n<ijohnson> hmm I guess I didn't quite follow which thing is the goal :-)\n<joeubuntu> I want to use build.snapcraft.io , so thanks !\n<ijohnson> joeubuntu: ah okay cool, feel free to let us know if you can't get it setup\n<ogra> oh, so interesting (and i have never noticed that before ...)\n<ogra> $ du -hcs /usr/lib/chromium-browser\n<ogra> 230M\t/usr/lib/chromium-browser\n<ogra> $ ls -lh /var/lib/snapd/snaps/chromium_881.snap\n<ogra> -rw------- 1 root root 156M Okt 11 03:00 /var/lib/snapd/snaps/chromium_881.snap\n<ogra> oSoMoN, why the heck dont we blog left and right about this ^^^ :)\n<ogra> (i just had another \"snaps are too big\" discussion with someone ... and actually checked the sizes for the first time ... what a surprise :)\n<ijohnson> ogra: maybe popey should update that blog post?\n<ogra> well, its a bit unfair given you have 3 copies with the snap ... so you lose the advatage in the end again ... but the fact alone that the snap itself is 80M smaller is definitely not well known among the haters (and their parrots)\n<joeubuntu> Sorry for all the question... now that I am using build.snapcraft.io what does my snapcraft.yaml have to look like ? prior to using b.s.io I manually copied my files in to files/bin/* ?  In the repo they are just in the root.  I imagine I need to just update wrapper: source: to / and change the command from bin/foo to /foo ?\n<ijohnson> joeubuntu: so you have some files that are just on your mahcine's filesystem that need to be in the snap? if it doesn't make sense to put those files into your git repository, then you usually would either build those files inside a part in your snapcraft.yaml or upload those files somewhere and use the dump plugin in snapcraft with a source pointing to wherever you uploaded those files\n<ijohnson> does that make sense?\n<zyga> re\n<joeubuntu> ijohnson thanks,  I'll poke around. Thanks for the tips!\n<popey> ijohnson: I'm on vacation. Please email if there is something that needs my attention. Ta\n * ogra hugs popey ... no action needed enjoy holiday beers !\n<ijohnson> popey: enjoy the vacation! do something fun and stop checking notifications :-)\n * cachio lunch\n<oSoMoN> ogra, yeah, I\u00c2\u00a0wrote about it at some point to answer one of those \"snaps are big\" claim\n<oSoMoN> to be fair, that's quite the exception, snaps do tend to be bigger than their deb counterparts\n<oSoMoN> which is totally normal, given that they embed their dependencies\n<mvo> zyga: I addressed some of the feedback in 7629 in 7613, probably best to focus on 7613 for now and once that landed I will work on the remaining bits in the other one\n<zyga> mvo: cool, I'll finish the de-dupper for jdstrand and look\n<mvo> zyga: I still need to look at how not-to-install snpa-recover on rpms :/ but I'm running out of time for today\n<zyga> mvo: rm -f works :)\n<zyga> mvo: porting it to use snapd.mk also works\n<zyga> mvo: in snapd.mk there's a section for things that are removed if we are packaging for a classic distribution\n<zyga> mvo: thank you for looking into this :)\n<ogra> oSoMoN, indeed\n<mvo> zyga: ok, feel free to just do it and push while I'm away but I will try to get to it later tonight\n * mvo waves\n<zyga> mvo: I won't have time, I will finish this bug and work on a test\n<mup> PR snapd#7631 opened: interfaces/pulseaudio: adjust to manually connect by default <Created by jdstrand> <https://github.com/snapcore/snapd/pull/7631>\n<pedronis> jdstrand: what's the status of #7228 ?\n<mup> PR #7228: interfaces: add audio-playback/record and pulseaudio spread tests <Created by jdstrand> <https://github.com/snapcore/snapd/pull/7228>\n<jdstrand> pedronis: that is next up after I do PR reviews and store reviews, so, for next week\n<jdstrand> pedronis: but for 2.43 for sure. disco has the changes needed to actually write those tests now, so I can move forward\n<pedronis> jdstrand: ok, thanks for the update\n<jdstrand> pedronis: fyi, I talked with kenvandine and he said that the desktop team will hopefully have the sru done for bionic and xenial (see https://bugs.launchpad.net/ubuntu/+source/pulseaudio/+bug/1781428)\n<mup> Bug #1781428: please enable snap mediation support <patch> <pulseaudio (Ubuntu):Fix Released by jamesh> <pulseaudio (Ubuntu Xenial):Triaged by jamesh> <pulseaudio (Ubuntu Bionic):Triaged by jamesh> <https://launchpad.net/bugs/1781428>\n<jdstrand> pedronis: all the necessary dependencies are SRU'd, so just need the pulseaudio patch (though there may be a snapd-glib bug that needs fixing on xenial)\n<kenvandine> jdstrand: that reminds me to check on that :)\n<jdstrand> pedronis: I mention that because if it is SRUd before 2.43, I can adjust the aforementioned spread test to also include xenial and bionic rather than just disco (and now that I think of it, eoan)\n<jdstrand> kenvandine: thanks :)\n<jdstrand> popey, Wimpress: is there anything besides snapcraft-desktop-helpers and electron-builder that might templatize snapcraft.yaml/snap.yaml to include pulseaudio?\n<zyga> jdstrand: ok, I have a fix\n<zyga> jdstrand: I'll work on a perf test now\n<mup> PR snapd#7632 opened: interfaces/apparmor: avoid excessive repetition of snap-update-ns mount rules <Created by zyga> <https://github.com/snapcore/snapd/pull/7632>\n<popey> jdstrand: we are both on holiday, please email or forum thread\n<zyga> jdstrand: https://github.com/snapcore/snapd/pull/7632\n<mup> PR #7632: interfaces/apparmor: avoid excessive repetition of snap-update-ns mount rules <Created by zyga> <https://github.com/snapcore/snapd/pull/7632>\n<zyga> jdstrand: if you don't mind I'll EOD now but watch for your feedback\n<zyga> jdstrand: I can implement the spread test that checks for memory usage next week\n<zyga> jdstrand: I wanted to ack the main part with you\n<zyga> jdstrand: namely changes to apparmor.Specification.AddUpdateNS\n * zyga EODs and waits for jdstrand's input passively \n<jdstrand> zyga: thanks! I've got a bunch of PRs enqueued ahead of that so may not get to it today\n<zyga> jdstrand: boo ;-)\n<zyga> jdstrand: can you just ack 3 line diff then\n<zyga> jdstrand: (or not ack)\n<zyga> that's the essence\n<zyga> https://github.com/snapcore/snapd/pull/7632/files#diff-8d0225478e724e1ef6689c6f12feac06L184\n<zyga> this one\n<mup> PR #7632: interfaces/apparmor: avoid excessive repetition of snap-update-ns mount rules <Bug> <Created by zyga> <https://github.com/snapcore/snapd/pull/7632>\n<zyga> I just realized this is just the layout part, not the content part\n<zyga> shoo\n<zyga> anyway, that's that\n<jdstrand> zyga: I'm going to want to really examine it and not rush it to make sure we end up with identical cache files\n<zyga> jdstrand: note, you don't have to approve it\n<zyga> jdstrand: just disapprove if the approach is too simple\n<zyga> jdstrand: but it's your call\n<zyga> jdstrand: I'll add the perf test and handle content interface next\n<jdstrand> zyga: it's apparmor policy generation. I requested myself for review\n<jdstrand> popey: sorry, thanks, done\n<mup> PR snapd#7616 closed: interfaces/many: allow k8s/systemd-run to mount volume subPaths plus cleanups <Created by jdstrand> <Merged by jdstrand> <https://github.com/snapcore/snapd/pull/7616>\n<jdstrand> kjackal: fyi ^. that should be in monday's core in edge\n<kjackal> woohoo awesome jdstrand\n<zyga> jdstrand: FYI https://github.com/snapcore/snapd/pull/7632 is updated to handle all the interfaces that used update-ns snippets\n<mup> PR #7632: interfaces/apparmor: avoid excessive repetition of snap-update-ns mount rules <Bug> <Created by zyga> <https://github.com/snapcore/snapd/pull/7632>\n<zyga> jdstrand: I _really_ EOD now :)\n<ijohnson> jdstrand: feel free to push #7579 to the back of your queue FWIW, the other PR's open in snapd are more important and we don't have anybody asking for that right now, just something I noticed\n<mup> PR #7579: interfaces/network-setup-observe: add Info D-Bus method accesses <Created by anonymouse64> <https://github.com/snapcore/snapd/pull/7579>\n * zyga waves and wishes everyone a good weekend\n<ijohnson> have a good weekend zyga\n<jdstrand> ijohnson: it is on the list, thanks\n<jdstrand> zyga: thanks!\n#snappy 2019-10-19\n<Eighth_Doctor> zyga, mborzecki: failure when trying to build snapd for el7 ppc64le: https://kojipkgs.fedoraproject.org//work/tasks/3761/38393761/build.log\n<Eighth_Doctor> err not el7, fc32 (rawhide)\n<Eighth_Doctor> https://koji.fedoraproject.org/koji/taskinfo?taskID=38393761\n#snappy 2019-10-20\n<mup> PR snapcraft#2756 opened: extractors: match setuptools metadata keys <Created by galgalesh> <https://github.com/snapcore/snapcraft/pull/2756>\n<grubbleapple> where's the best place to get news on the snapd project and any integration with epel-release/centos8 ?\n<mup> PR snapcraft#2756 closed: WIP: extractors: match setuptools metadata keys <Created by galgalesh> <Closed by galgalesh> <https://github.com/snapcore/snapcraft/pull/2756>\n<Eighth_Doctor> grubbleapple: well, I'm working on it...\n<Eighth_Doctor> if I have news to share, I'll share it on the snapcraft forums\n<mup> PR snapcraft#2518 closed: snapcraft/extractors/setuppy.py: match setuptools metadata keys <Created by anonymouse64> <Closed by anonymouse64> <https://github.com/snapcore/snapcraft/pull/2518>\n"
}