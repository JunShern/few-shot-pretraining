{
    "criteria": [
        {
            "criterion": "AllDocuments",
            "passed": true,
            "reason": "All documents pass."
        },
        {
            "criterion": "Domain",
            "passed": false,
            "reason": "Document source unavailable."
        },
        {
            "criterion": "QuestionAnswerStrings",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "QuestionAnswerStringsV2",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "FullyStructured",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamStrings",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamStringsV2",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesStrings",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ListPrefix",
            "passed": true,
            "reason": "Found 5 list prefixes. (Min: 5)"
        },
        {
            "criterion": "ListPrefixV2",
            "passed": false,
            "reason": "Does not meet criterion."
        }
    ],
    "doc_id": "6845",
    "text": "/* --COPYRIGHT--,BSD\n * Copyright (c) 2016, Texas Instruments Incorporated\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n *\n * *  Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer.\n *\n * *  Redistributions in binary form must reproduce the above copyright\n *    notice, this list of conditions and the following disclaimer in the\n *    documentation and/or other materials provided with the distribution.\n *\n * *  Neither the name of Texas Instruments Incorporated nor the names of\n *    its contributors may be used to endorse or promote products derived\n *    from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,\n * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n * PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR\n * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;\n * OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR\n * OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n * --/COPYRIGHT--*/\n\n#ifndef IMAGEBUTTON_H_\n#define IMAGEBUTTON_H_\n\n//*****************************************************************************\n//\n//! This structure defines the characteristics of a ImageButton\n//\n//*****************************************************************************\ntypedef struct Graphics_ImageButton\n{\n    uint16_t xPosition;        /*!< x coordinate for upper left corner of button */\n    uint16_t yPosition;        /*!< y coordinate for upper left corner of button */\n    uint8_t borderWidth;    /*!< border width in pixels */\n    bool selected;            /*!< draws button with selected colors enabled */\n    uint16_t imageHeight;    /*!< image height in pixels */\n    uint16_t imageWidth;    /*!< image width in pixels */\n    uint32_t borderColor;    /*!< Border color, border is drawn if borderWidth >0 */\n    uint32_t selectedColor;    /*!< Background button color when selected */\n    Graphics_Image *image;    /*!< Pointer to the image */\n} Graphics_ImageButton;\n\n//*****************************************************************************\n//globals\n//*****************************************************************************\nextern Graphics_Context g_sContext;\n\n//*****************************************************************************\n// the function prototypes\n//*****************************************************************************\nextern void Graphics_drawImageButton(const Graphics_Context *context,\n                                     const Graphics_ImageButton *imageButton);\nextern bool Graphics_isImageButtonSelected(\n    const Graphics_ImageButton *imageButton,\n    uint16_t x,\n    uint16_t y);\nextern void Graphics_drawSelectedImageButton(const Graphics_Context *context,\n                                             const Graphics_ImageButton *\n                                             imageButton);\nextern void Graphics_drawReleasedImageButton(const Graphics_Context *context,\n                                             const Graphics_ImageButton *\n                                             imageButton);\n\n#endif /* IMAGEBUTTON_H_ */\n"
}