{
    "criteria": [
        {
            "criterion": "AllDocuments",
            "passed": true,
            "reason": "All documents pass."
        },
        {
            "criterion": "QuestionAnswerStringsV2",
            "passed": true,
            "reason": "Text contains ['Q:', 'A:']."
        },
        {
            "criterion": "FullyStructured",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamStringsV2",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesStrings",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesStringsV2",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ListPrefixV2",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesMinimalEmbed",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesSynonymsEmbed",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesDiverseEmbed",
            "passed": false,
            "reason": "Does not meet criterion."
        }
    ],
    "doc_id": "7840",
    "text": "Q:\n\nSwift changing different labels labelData in every loop\n\nSo i would like to simplify this chunk of code to a simple for loop.\nBut UITextFields and UILabels are giving me some hard time.\n    @IBOutlet var thingsIUse: UITextField!\n    @IBOutlet var orThis: UILabel!\n\n    saveProgress(year: year, season: season, day: \"1\", value: \"\\(Int(day1new.text!)! + Int(day1newExtra.text!)!)\")\n    saveProgress(year: year, season: season, day: \"2\", value: \"\\(Int(day2new.text!)! + Int(day2newExtra.text!)!)\")\n    saveProgress(year: year, season: season, day: \"3\", value: \"\\(Int(day3new.text!)! + Int(day3newExtra.text!)!)\")\n    saveProgress(year: year, season: season, day: \"4\", value: \"\\(Int(day4new.text!)! + Int(day4newExtra.text!)!)\")\n    saveProgress(year: year, season: season, day: \"5\", value: \"\\(Int(day5new.text!)! + Int(day5newExtra.text!)!)\")\n    saveProgress(year: year, season: season, day: \"6\", value: \"\\(Int(day6new.text!)! + Int(day6newExtra.text!)!)\")\n    saveProgress(year: year, season: season, day: \"1Taki\", value: day1new.text!)\n    saveProgress(year: year, season: season, day: \"2Taki\", value: day2new.text!)\n    saveProgress(year: year, season: season, day: \"3Taki\", value: day3new.text!)\n    saveProgress(year: year, season: season, day: \"4Taki\", value: day4new.text!)\n    saveProgress(year: year, season: season, day: \"5Taki\", value: day5new.text!)\n    saveProgress(year: year, season: season, day: \"6Taki\", value: day6new.text!)\n\nTo something like this...\n    for k in 1...10{\n        saveProgress(year: year, season: season, day: \"\\(k)\", value: \"\\(Int(day\\(k)new.text!)! + Int(day\\(k)newExtra.text!)!)\")\n        saveProgress(year: year, season: season, day: \"\\(k)Taki\", value: day\\(k)new.text!)\n    }\n\nAny suggestions?\n\nA:\n\nYou can solve this a few ways.  One is to use IBOutlet collections.  In swift, you define them as such:\n@IBOutlet var dayLabels: [UILabel]!\n\nThen make sure you go in your Xib/Storyboard and add references to your labels by clicking the little \"+\" beside the collecting name and dragging it to the various labels.  Since this is a collection, you can drag like this to many labels just make sure you add them in the order you want them updated.\nAnother way to solve this, is to create the array of the labels you want updated dynamically at runtime, like this:\nlet labelsToUpdate: [UILabel] = [day1new,day2new,day3new,day4new,day5new,day6new]\nfor k in 0...5 {\n    let day = \"\\(k+1)\"\n    let label = labelsToUpdate[k]\n    ...\n}\n\nThere are several other optimizations you could do to keep your code clean, but this will be a good start to achieve what you want.\nGood luck!\n\n"
}