{
    "criteria": [
        {
            "criterion": "AllDocuments",
            "passed": true,
            "reason": "All documents pass."
        },
        {
            "criterion": "Domain",
            "passed": false,
            "reason": "Document source unavailable."
        },
        {
            "criterion": "QuestionAnswerStrings",
            "passed": true,
            "reason": "Text contains Q:."
        },
        {
            "criterion": "QuestionAnswerStringsV2",
            "passed": true,
            "reason": "Text contains ['Q:', 'A:']."
        },
        {
            "criterion": "FullyStructured",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamStrings",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamStringsV2",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesStrings",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ListPrefix",
            "passed": false,
            "reason": "Found 0 list prefixes. (Min: 5)"
        },
        {
            "criterion": "ListPrefixV2",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesMinimalEmbed",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesSynonymsEmbed",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesDiverseEmbed",
            "passed": true,
            "reason": "Text contains ['and I have submitted three different patches, the last of which introduces a variable of type Properties: (0.187)']."
        }
    ],
    "doc_id": "6706",
    "text": "Q:\n\nJava 6: how to pass multiple parameters to APT\n\nI have a Java Annotation Processor that extends from AbstractProcessor.\nI have two supported options, addResDir and verbose, and I am trying to set them like this:\n-AaddResDir=src/main/webapp -Averbose=true\n\nI have also tried this:\n-AaddResDir=src/main/webapp,verbose=true\n\nWhile a single parameter works, e.g.\n-AaddResDir=src/main/webapp\n\nI can't get the multiple parameters to work and I can't find any relevant docs. Do I need to parse the parameters manually in APT?\nThe only thing I have is the output of javac -help:\n-Akey[=value]   Options to pass to annotation processors\n\nEDIT\nIt turns out to be a maven problem, after all. Here is my maven config:\n<plugin>\n    <inherited>true</inherited>\n    <groupId>org.apache.maven.plugins</groupId>\n    <artifactId>maven-compiler-plugin</artifactId>\n    <version>2.3.1</version>\n    <configuration>\n        <source>1.6</source>\n        <target>1.6</target>\n        <optimize>true</optimize>\n        <debug>true</debug>\n        <compilerArgument>-AaddResDir=src/main/webapp -Averbose=true</compilerArgument>\n    </configuration>\n</plugin>\n\nUnfortunately, maven sends the argument to Javac as a single string in the args array, while it should of course be two Strings. The Map Version <compilerAguments> is no help either, because \n<Averbose>true</Averbose>\n<AaddResDir>src/main/webapp</AResDir>\n\ngenerates the output:\n[... , -Averbose, true, -AaddResDir, src/main/webapp]\n\nWhile javac requires the syntax\n[... , -Averbose=true, -AaddResDir=src/main/webapp ]\n\nand \n<Averbose=true />\n<AaddResDir=src/main/webapp />\n\nis invalid XML.\n(See Mapping Maps from the Guide to Configuring Maven Plugins)\nAnd I am afraid there is no way to change this, argh.\n\nEDIT:\nI have now filed a bug report.\n\nA:\n\nThere is no real answer as of yet.\nThe bug is filed: MCOMPILER-135\nand I have submitted three different patches, the last of which introduces a variable of type Properties:\n<additionalCompilerArguments>\n    <property> <name>-Akey=value</name> </property>\n    <property> <name>-verbose</name> </property>\n    <property> <name>-Xmaxerrs</name> <value>1000</value> </property>\n</additionalCompilerArguments>\n\nThis solution is the most flexible one because it supports many different parameter syntax formats.\n(If the existing parameter <compilerArguments> were also of type Properties my problem would be solved)\n\n"
}