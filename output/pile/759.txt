{
    "criteria": [
        {
            "criterion": "AllDocuments",
            "passed": true,
            "reason": "All documents pass."
        },
        {
            "criterion": "Domain",
            "passed": false,
            "reason": "Document source unavailable."
        },
        {
            "criterion": "QuestionAnswerStrings",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "QuestionAnswerStringsV2",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "FullyStructured",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamStrings",
            "passed": true,
            "reason": "Text contains GRE."
        },
        {
            "criterion": "ExamStringsV2",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesStrings",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ListPrefix",
            "passed": false,
            "reason": "Found 0 list prefixes. (Min: 5)"
        },
        {
            "criterion": "ListPrefixV2",
            "passed": false,
            "reason": "Does not meet criterion."
        }
    ],
    "doc_id": "759",
    "text": "#include \"global.h\"\n#include \"gflib.h\"\n#include \"keyboard_text.h\"\n#include \"decompress.h\"\n#include \"easy_chat.h\"\n#include \"graphics.h\"\n#include \"menu.h\"\n#include \"new_menu_helpers.h\"\n#include \"strings.h\"\n#include \"text_window.h\"\n\nstruct ECWork\n{\n    u16 state;\n    u16 windowId;\n    u16 id;\n    u8 frameAnimIdx;\n    u8 frameAnimTarget;\n    s8 frameAnimDelta;\n    u8 modeIconState;\n    u8 ecPrintBuffer[0xC1];\n    u8 ecPaddedWordBuffer[0x200];\n    u16 bg2ScrollRow;\n    int tgtBgY;\n    int deltaBgY;\n    struct Sprite * selectDestFieldCursorSprite;\n    struct Sprite * rectCursorSpriteRight;\n    struct Sprite * rectCursorSpriteLeft;\n    struct Sprite * selectWordCursorSprite;\n    struct Sprite * selectGroupHelpSprite;\n    struct Sprite * modeIconsSprite;\n    struct Sprite * upTriangleCursorSprite;\n    struct Sprite * downTriangleCursorSprite;\n    struct Sprite * startPgUpButtonSprite;\n    struct Sprite * selectPgDnButtonSprite;\n    u16 bg1TilemapBuffer[BG_SCREEN_SIZE / 2];\n    u16 bg3TilemapBuffer[BG_SCREEN_SIZE / 2];\n};\n\nstruct EasyChatPhraseFrameDimensions\n{\n    u8 left;\n    u8 top;\n    u8 width;\n    u8 height;\n};\n\nstatic EWRAM_DATA struct ECWork * sEasyChatGraphicsResources = NULL;\n\nstatic bool8 ECInterfaceCmd_01(void);\nstatic bool8 ECInterfaceCmd_02(void);\nstatic bool8 ECInterfaceCmd_03(void);\nstatic bool8 ECInterfaceCmd_05(void);\nstatic bool8 ECInterfaceCmd_06(void);\nstatic bool8 ECInterfaceCmd_04(void);\nstatic bool8 ECInterfaceCmd_07(void);\nstatic bool8 ECInterfaceCmd_08(void);\nstatic bool8 ECInterfaceCmd_09(void);\nstatic bool8 ECInterfaceCmd_10(void);\nstatic bool8 ECInterfaceCmd_22(void);\nstatic bool8 ECInterfaceCmd_14(void);\nstatic bool8 ECInterfaceCmd_15(void);\nstatic bool8 ECInterfaceCmd_16(void);\nstatic bool8 ECInterfaceCmd_11(void);\nstatic bool8 ECInterfaceCmd_12(void);\nstatic bool8 ECInterfaceCmd_13(void);\nstatic bool8 ECInterfaceCmd_17(void);\nstatic bool8 ECInterfaceCmd_19(void);\nstatic bool8 ECInterfaceCmd_18(void);\nstatic bool8 ECInterfaceCmd_21(void);\nstatic bool8 ECInterfaceCmd_20(void);\nstatic bool8 InitEasyChatGraphicsWork_Internal(void);\nstatic void SetGpuRegsForEasyChatInit(void);\nstatic void LoadEasyChatPals(void);\nstatic void PrintTitleText(void);\nstatic void EC_AddTextPrinterParameterized2(u8 windowId, u8 fontId, const u8 *str, u8 left, u8 top, u8 speed, u8 bg, u8 fg, u8 shadow);\nstatic void PrintECInstructionsText(void);\nstatic void PrintECInterfaceTextById(u8 a0);\nstatic void EC_CreateYesNoMenuWithInitialCursorPos(u8 initialCursorPos);\nstatic void CreatePhraseFrameWindow(void);\nstatic void PrintECFields(void);\nstatic void DrawECFrameInTilemapBuffer(u16 *buffer);\nstatic void PutWin2TilemapAndCopyToVram(void);\nstatic void PrintECMenuById(u32 a0);\nstatic void PrintECGroupOrAlphaMenu(void);\nstatic void PrintECGroupsMenu(void);\nstatic void PrintEasyChatKeyboardText(void);\nstatic void PrintECWordsMenu(void);\nstatic void UpdateWin2PrintWordsScrollDown(void);\nstatic void UpdateWin2PrintWordsScrollUp(void);\nstatic void UpdateWin2PrintWordsScrollPageDown(void);\nstatic void UpdateWin2PrintWordsScrollPageUp(void);\nstatic void PrintECRowsWin2(u8 row, u8 remrow);\nstatic void ClearECRowsWin2(u8 row, u8 remrow);\nstatic void ClearWin2AndCopyToVram(void);\nstatic void StartWin2FrameAnim(int a0);\nstatic bool8 AnimateFrameResize(void);\nstatic void RedrawFrameByIndex(u8 a0);\nstatic void RedrawFrameByRect(int left, int top, int width, int height);\nstatic void InitBg2Scroll(void);\nstatic void ScheduleBg2VerticalScroll(s16 direction, u8 speed);\nstatic bool8 AnimateBg2VerticalScroll(void);\nstatic int GetBg2ScrollRow(void);\nstatic void SetRegWin0Coords(u8 left, u8 top, u8 right, u8 bottom);\nstatic void LoadSpriteGfx(void);\nstatic void CreateSelectDestFieldCursorSprite(void);\nstatic void SpriteCB_BounceCursor(struct Sprite * sprite);\nstatic void SetSelectDestFieldCursorSpritePosAndResetAnim(u8 x, u8 y);\nstatic void FreezeSelectDestFieldCursorSprite(void);\nstatic void UnfreezeSelectDestFieldCursorSprite(void);\nstatic void CreateRedRectangularCursorSpritePair(void);\nstatic void DestroyRedRectangularCursor(void);\nstatic void EC_MoveCursor(void);\nstatic void MoveCursor_Group(s8 a0, s8 a1);\nstatic void MoveCursor_Alpha(s8 a0, s8 a1);\nstatic void CreateSelectWordCursorSprite(void);\nstatic void SpriteCB_SelectWordCursorSprite(struct Sprite * sprite);\nstatic void SetSelectWordCursorSpritePos(void);\nstatic void SetSelectWordCursorSpritePosExplicit(u8 x, u8 y);\nstatic void DestroySelectWordCursorSprite(void);\nstatic void CreateSelectGroupHelpSprite(void);\nstatic bool8 AnimateSeletGroupModeAndHelpSpriteEnter(void);\nstatic void StartModeIconHidingAnimation(void);\nstatic bool8 RunModeIconHidingAnimation(void);\nstatic void ShrinkModeIconsSprite(void);\nstatic void ShowModeIconsSprite(void);\nstatic bool8 ModeIconsSpriteAnimIsEnded(void);\nstatic void CreateVerticalScrollArrowSprites(void);\nstatic void UpdateVerticalScrollArrowVisibility(void);\nstatic void HideVerticalScrollArrowSprites(void);\nstatic void UpdateVerticalScrollArrowSpriteXPos(int a0);\nstatic void CreateStartSelectButtonsSprites(void);\nstatic void UpdateStartSelectButtonSpriteVisibility(void);\nstatic void HideStartSelectButtonSprites(void);\nstatic void CreateFooterWindow(void);\n\nstatic const u16 gUnknown_843F3B8[] = INCBIN_U16(\"graphics/link_rfu/unk_843F3F8.gbapal\");\nstatic const u16 gUnknown_843F3D8[] = INCBIN_U16(\"graphics/link_rfu/unk_8E9BD28.gbapal\");\nstatic const u16 sRightTriangleCursor_Tiles[] = INCBIN_U16(\"graphics/link_rfu/unk_843F3F8.4bpp\");\nstatic const u16 sUpTriangleCursor_Tiles[] = INCBIN_U16(\"graphics/link_rfu/unk_843F418.4bpp\");\nstatic const u16 sStartSelectButtons_Tiles[] = INCBIN_U16(\"graphics/link_rfu/unk_843F518.4bpp\");\nstatic const u16 gUnknown_843F618[] = INCBIN_U16(\"graphics/link_rfu/unk_843F638.gbapal\");\nstatic const u32 gUnknown_843F638[] = INCBIN_U32(\"graphics/link_rfu/unk_843F638.4bpp.lz\");\nstatic const u16 gUnknown_843F76C[] = INCBIN_U16(\"graphics/link_rfu/unk_843F76C.gbapal\");\nstatic const u16 gUnknown_843F78C[] = INCBIN_U16(\"graphics/link_rfu/unk_843F78C.gbapal\");\nstatic const u32 gUnknown_843F7AC[] = INCBIN_U32(\"graphics/link_rfu/unk_843F7AC.4bpp.lz\");\n\nstatic const u16 gUnknown_843F874[] = {\n    RGB( 0,  0,  0),\n    RGB( 0,  0,  0),\n    RGB( 7, 25, 31),\n    RGB(21, 21, 29)\n};\n\nstatic const u16 gUnknown_843F87C[] = {\n    RGB( 0,  0,  0),\n    RGB(31, 31, 31),\n    RGB(12, 12, 12),\n    RGB(27, 26, 27),\n    RGB( 8, 17,  9)\n};\n\nstatic const struct EasyChatPhraseFrameDimensions sPhraseFrameDimensions[] = {\n    {\n        .left = 0x03,\n        .top = 0x04,\n        .width = 0x18,\n        .height = 0x04\n    }, {\n        .left = 0x01,\n        .top = 0x04,\n        .width = 0x1b,\n        .height = 0x04\n    }, {\n        .left = 0x03,\n        .top = 0x00,\n        .width = 0x18,\n        .height = 0x0a\n    }, {\n        .left = 0x06,\n        .top = 0x06,\n        .width = 0x12,\n        .height = 0x04\n    }, {\n        .left = 0x10,\n        .top = 0x04,\n        .width = 0x09,\n        .height = 0x02\n    }, {\n        .left = 0x0e,\n        .top = 0x04,\n        .width = 0x12,\n        .height = 0x04\n    }\n};\n\nstatic const struct BgTemplate sEasyChatBgTemplates[] = {\n    {\n        .bg = 0,\n        .charBaseIndex = 0,\n        .mapBaseIndex = 28,\n        .screenSize = 0,\n        .paletteMode = 0,\n        .priority = 0,\n        .baseTile = 0,\n    }, {\n        .bg = 1,\n        .charBaseIndex = 3,\n        .mapBaseIndex = 29,\n        .screenSize = 0,\n        .paletteMode = 0,\n        .priority = 1,\n        .baseTile = 0,\n    }, {\n        .bg = 2,\n        .charBaseIndex = 0,\n        .mapBaseIndex = 30,\n        .screenSize = 0,\n        .paletteMode = 0,\n        .priority = 2,\n        .baseTile = 0x80,\n    }, {\n        .bg = 3,\n        .charBaseIndex = 2,\n        .mapBaseIndex = 31,\n        .screenSize = 0,\n        .paletteMode = 0,\n        .priority = 3,\n        .baseTile = 0,\n    }\n};\n\nstatic const struct WindowTemplate sEasyChatWindowTemplates[] = {\n    {\n        .bg = 1,\n        .tilemapLeft = 7,\n        .tilemapTop = 0,\n        .width = 16,\n        .height = 2,\n        .paletteNum = 10,\n        .baseBlock = 0x10,\n    },\n    {\n        .bg = 0,\n        .tilemapLeft = 4,\n        .tilemapTop = 15,\n        .width = 22,\n        .height = 4,\n        .paletteNum = 15,\n        .baseBlock = 0xA,\n    },\n    {\n        .bg = 2,\n        .tilemapLeft = 1,\n        .tilemapTop = 0,\n        .width = 28,\n        .height = 32,\n        .paletteNum = 3,\n        .baseBlock = 0,\n    },\n    DUMMY_WIN_TEMPLATE,\n};\n\nstatic const struct WindowTemplate sEasyChatYesNoWindowTemplate = {\n    .bg = 0,\n    .tilemapLeft = 22,\n    .tilemapTop = 9,\n    .width = 5,\n    .height = 4,\n    .paletteNum = 15,\n    .baseBlock = 0x062\n};\n\nstatic const u8 gUnknown_843F8D8[] = _(\"{UNDERSCORE}\");\nstatic const u8 sText_Clear17[] = _(\"{CLEAR 17}\");\n\nstatic const u8 *const sEasyChatKeyboardText[] = {\n    gUnknown_847A8D8,\n    gUnknown_847A8FA,\n    gUnknown_847A913,\n    gUnknown_847A934\n};\n\nstatic const struct SpriteSheet sEasyChatSpriteSheets[] = {\n    {sRightTriangleCursor_Tiles, 0x0020, 0},\n    {sUpTriangleCursor_Tiles, 0x0100, 2},\n    {sStartSelectButtons_Tiles, 0x0100, 3},\n    {}\n};\n\nstatic const struct SpritePalette sEasyChatSpritePalettes[] = {\n    {gUnknown_843F3B8, 0},\n    {gUnknown_843F3D8, 1},\n    {gUnknown_8E99F24, 2},\n    {gUnknown_843F618, 3},\n    {}\n};\n\nstatic const struct CompressedSpriteSheet sEasyChatCompressedSpriteSheets[] = {\n    {gUnknown_843F638, 0x0800, 5},\n    {gEasyChatRedRectangularCursor_Tiles, 0x1000, 1},\n    {gEasyChatSelectGroupHelp_Tiles, 0x0800, 6},\n    {gEasyChatModeIcons_Tiles, 0x1000, 4}\n};\n\nstatic const u8 sECDisplay_AlphaModeXCoords[] = {\n     0,\n    12,\n    24,\n    56,\n    68,\n    80,\n    92\n};\n\nstatic const struct OamData sOamData_RightTriangleCursor = {\n    .y = 0,\n    .affineMode = ST_OAM_AFFINE_OFF,\n    .objMode = ST_OAM_OBJ_NORMAL,\n    .bpp = ST_OAM_4BPP,\n    .mosaic = FALSE,\n    .shape = SPRITE_SHAPE(8x8),\n    .x = 0,\n    .matrixNum = 0,\n    .size = SPRITE_SIZE(8x8),\n    .tileNum = 0x000,\n    .priority = 3,\n    .paletteNum = 0\n};\n\nstatic const struct SpriteTemplate sSpriteTemplate_RightTriangleCursor = {\n    .tileTag = 0,\n    .paletteTag = 0,\n    .oam = &sOamData_RightTriangleCursor,\n    .anims = gDummySpriteAnimTable,\n    .images = NULL,\n    .affineAnims = gDummySpriteAffineAnimTable,\n    .callback = SpriteCB_BounceCursor\n};\n\nstatic const struct OamData sOamData_RedRectangularCursor = {\n    .y = 0,\n    .affineMode = ST_OAM_AFFINE_OFF,\n    .objMode = ST_OAM_OBJ_NORMAL,\n    .bpp = ST_OAM_4BPP,\n    .mosaic = FALSE,\n    .shape = SPRITE_SHAPE(64x32),\n    .x = 0,\n    .matrixNum = 0,\n    .size = SPRITE_SIZE(64x32),\n    .tileNum = 0x000,\n    .priority = 1,\n    .paletteNum = 0\n};\n\nstatic const union AnimCmd sAnimCmd_RectCursor_Wide[] = {\n    ANIMCMD_FRAME(0x00, 0),\n    ANIMCMD_END\n};\n\nstatic const union AnimCmd sAnimCmd_RectCursor_Norm[] = {\n    ANIMCMD_FRAME(0x20, 0),\n    ANIMCMD_END\n};\n\nstatic const union AnimCmd sAnimCmd_RectCursor_NormTaller[] = {\n    ANIMCMD_FRAME(0x40, 0),\n    ANIMCMD_END\n};\n\nstatic const union AnimCmd sAnimCmd_RectCursor_Narrow[] = {\n    ANIMCMD_FRAME(0x60, 0),\n    ANIMCMD_END\n};\n\nstatic const union AnimCmd *const sAnimTable_RedRectangularCursor[] = {\n    sAnimCmd_RectCursor_Wide,\n    sAnimCmd_RectCursor_Norm,\n    sAnimCmd_RectCursor_NormTaller,\n    sAnimCmd_RectCursor_Narrow\n};\n\nstatic const struct SpriteTemplate sSpriteTemplate_RedRectangularCursor = {\n    .tileTag = 1,\n    .paletteTag = 1,\n    .oam = &sOamData_RedRectangularCursor,\n    .anims = sAnimTable_RedRectangularCursor,\n    .images = NULL,\n    .affineAnims = gDummySpriteAffineAnimTable,\n    .callback = SpriteCB_BounceCursor\n};\n\nstatic const struct OamData sOamData_EasyChatModeIcons = {\n    .y = 0,\n    .affineMode = ST_OAM_AFFINE_OFF,\n    .objMode = ST_OAM_OBJ_NORMAL,\n    .bpp = ST_OAM_4BPP,\n    .mosaic = FALSE,\n    .shape = SPRITE_SHAPE(64x32),\n    .x = 0,\n    .matrixNum = 0,\n    .size = SPRITE_SIZE(64x32),\n    .tileNum = 0x000,\n    .priority = 1,\n    .paletteNum = 0\n};\n\nstatic const union AnimCmd sAnim_EasyChatModeIcon_Hidden[] = {\n    ANIMCMD_FRAME(0x60, 0),\n    ANIMCMD_END\n};\n\nstatic const union AnimCmd sAnim_EasyChatModeIcon_ToGroupMode[] = {\n    ANIMCMD_FRAME(0x40, 4),\n    ANIMCMD_FRAME(0x20, 4),\n    ANIMCMD_END\n};\n\nstatic const union AnimCmd sAnim_EasyChatModeIcon_ToAlphaMode[] = {\n    ANIMCMD_FRAME(0x40, 4),\n    ANIMCMD_FRAME(0x00, 4),\n    ANIMCMD_END\n};\n\nstatic const union AnimCmd sAnim_EasyChatModeIcon_ToHidden[] = {\n    ANIMCMD_FRAME(0x40, 4),\n    ANIMCMD_FRAME(0x60, 0),\n    ANIMCMD_END\n};\n\nstatic const union AnimCmd sAnim_EasyChatModeIcon_HoldSmall[] = {\n    ANIMCMD_FRAME(0x40, 4),\n    ANIMCMD_END\n};\n\nstatic const union AnimCmd *const sAnimTable_EasyChatModeIcons[] = {\n    sAnim_EasyChatModeIcon_Hidden,\n    sAnim_EasyChatModeIcon_ToGroupMode,\n    sAnim_EasyChatModeIcon_ToAlphaMode,\n    sAnim_EasyChatModeIcon_ToHidden,\n    sAnim_EasyChatModeIcon_HoldSmall\n};\n\nstatic const struct SpriteTemplate sSpriteTemplate_EasyChatModeIcons = {\n    .tileTag = 4,\n    .paletteTag = 2,\n    .oam = &sOamData_EasyChatModeIcons,\n    .anims = sAnimTable_EasyChatModeIcons,\n    .images = NULL,\n    .affineAnims = gDummySpriteAffineAnimTable,\n    .callback = SpriteCallbackDummy\n};\n\nstatic const struct OamData sOamData_SelectGroupHelp = {\n    .y = 0,\n    .affineMode = ST_OAM_AFFINE_OFF,\n    .objMode = ST_OAM_OBJ_NORMAL,\n    .mosaic = FALSE,\n    .bpp = ST_OAM_4BPP,\n    .shape = SPRITE_SHAPE(64x64),\n    .x = 0,\n    .matrixNum = 0,\n    .size = SPRITE_SIZE(64x64),\n    .tileNum = 0x000,\n    .priority = 3,\n    .paletteNum = 0\n};\n\nstatic const struct SpriteTemplate sSpriteTemplate_SelectGroupHelp = {\n    .tileTag = 6,\n    .paletteTag = 2,\n    .oam = &sOamData_SelectGroupHelp,\n    .anims = gDummySpriteAnimTable,\n    .images = NULL,\n    .affineAnims = gDummySpriteAffineAnimTable,\n    .callback = SpriteCallbackDummy\n};\n\nstatic const struct OamData gUnknown_843FA58 = {\n    .y = 0,\n    .affineMode = ST_OAM_AFFINE_OFF,\n    .objMode = ST_OAM_OBJ_NORMAL,\n    .mosaic = FALSE,\n    .bpp = ST_OAM_4BPP,\n    .shape = SPRITE_SHAPE(32x8),\n    .x = 0,\n    .matrixNum = 0,\n    .size = SPRITE_SIZE(32x8),\n    .tileNum = 0x000,\n    .priority = 1,\n    .paletteNum = 0\n};\n\nstatic const struct OamData sOamData_UpTriangleCursor = {\n    .y = 0,\n    .affineMode = ST_OAM_AFFINE_OFF,\n    .objMode = ST_OAM_OBJ_NORMAL,\n    .mosaic = FALSE,\n    .bpp = ST_OAM_4BPP,\n    .shape = SPRITE_SHAPE(16x16),\n    .x = 0,\n    .matrixNum = 0,\n    .size = SPRITE_SIZE(16x16),\n    .tileNum = 0x000,\n    .priority = 1,\n    .paletteNum = 0\n};\n\nstatic const union AnimCmd gUnknown_843FA68[] = {\n    ANIMCMD_FRAME(0, 0),\n    ANIMCMD_END,\n};\n\nstatic const union AnimCmd gUnknown_843FA70[] = {\n    ANIMCMD_FRAME(4, 0),\n    ANIMCMD_END,\n};\n\nstatic const union AnimCmd *const gUnknown_843FA78[] = {\n    gUnknown_843FA68,\n    gUnknown_843FA70,\n};\n\nstatic const struct SpriteTemplate sSpriteTemplate_StartSelectButtons = {\n    .tileTag = 3,\n    .paletteTag = 2,\n    .oam = &gUnknown_843FA58,\n    .anims = gUnknown_843FA78,\n    .images = NULL,\n    .affineAnims = gDummySpriteAffineAnimTable,\n    .callback = SpriteCallbackDummy,\n};\n\nstatic const struct SpriteTemplate sSpriteTemplate_UpTriangleCursor = {\n    .tileTag = 2,\n    .paletteTag = 2,\n    .oam = &sOamData_UpTriangleCursor,\n    .anims = gUnknown_843FA78,\n    .images = NULL,\n    .affineAnims = gDummySpriteAffineAnimTable,\n    .callback = SpriteCallbackDummy,\n};\n\nbool8 InitEasyChatGraphicsWork(void)\n{\n    if (!InitEasyChatGraphicsWork_Internal())\n        return FALSE;\n    else\n        return TRUE;\n}\n\nbool8 LoadEasyChatGraphics(void)\n{\n    switch (sEasyChatGraphicsResources->state)\n    {\n    case 0:\n        ResetBgsAndClearDma3BusyFlags(0);\n        InitBgsFromTemplates(0, sEasyChatBgTemplates, NELEMS(sEasyChatBgTemplates));\n        SetBgTilemapBuffer(3, sEasyChatGraphicsResources->bg3TilemapBuffer);\n        SetBgTilemapBuffer(1, sEasyChatGraphicsResources->bg1TilemapBuffer);\n        InitWindows(sEasyChatWindowTemplates);\n        DeactivateAllTextPrinters();\n        LoadEasyChatPals();\n        SetGpuRegsForEasyChatInit();\n        CpuFastFill(0, (void *)VRAM + 0x1000000, 0x400);\n        break;\n    case 1:\n        DecompressAndLoadBgGfxUsingHeap(3, gEasyChatWindow_Gfx, 0, 0, 0);\n        CopyToBgTilemapBuffer(3, gEasyChatWindow_Tilemap, 0, 0);\n        CreatePhraseFrameWindow();\n        CreateFooterWindow();\n        CopyBgTilemapBufferToVram(3);\n        break;\n    case 2:\n        DrawECFrameInTilemapBuffer(sEasyChatGraphicsResources->bg1TilemapBuffer);\n        DecompressAndLoadBgGfxUsingHeap(1, gUnknown_843F7AC, 0, 0, 0);\n        CopyBgTilemapBufferToVram(1);\n        break;\n    case 3:\n        PrintTitleText();\n        PrintECInstructionsText();\n        PrintECFields();\n        PutWin2TilemapAndCopyToVram();\n        break;\n    case 4:\n        LoadSpriteGfx();\n        CreateSelectDestFieldCursorSprite();\n        break;\n    case 5:\n        if (IsDma3ManagerBusyWithBgCopy())\n        {\n            return TRUE;\n        }\n        else\n        {\n            SetRegWin0Coords(0, 0, 0, 0);\n            SetGpuReg(REG_OFFSET_WININ, WIN_RANGE(0, 63));\n            SetGpuReg(REG_OFFSET_WINOUT, WIN_RANGE(0, 59));\n            ShowBg(3);\n            ShowBg(1);\n            ShowBg(2);\n            ShowBg(0);\n            CreateVerticalScrollArrowSprites();\n            CreateStartSelectButtonsSprites();\n        }\n        break;\n    default:\n        return FALSE;\n    }\n\n    sEasyChatGraphicsResources->state++;\n    return TRUE;\n}\n\nvoid DestroyEasyChatGraphicsResources(void)\n{\n    if (sEasyChatGraphicsResources)\n        Free(sEasyChatGraphicsResources);\n}\n\nvoid EasyChatInterfaceCommand_Setup(u16 id)\n{\n    sEasyChatGraphicsResources->id = id;\n    sEasyChatGraphicsResources->state = 0;\n    EasyChatInterfaceCommand_Run();\n}\n\nbool8 EasyChatInterfaceCommand_Run(void)\n{\n    switch (sEasyChatGraphicsResources->id)\n    {\n    case 0:  return FALSE;\n    case 1:  return ECInterfaceCmd_01();\n    case 2:  return ECInterfaceCmd_02();\n    case 3:  return ECInterfaceCmd_03();\n    case 4:  return ECInterfaceCmd_04();\n    case 5:  return ECInterfaceCmd_05();\n    case 6:  return ECInterfaceCmd_06();\n    case 7:  return ECInterfaceCmd_07();\n    case 8:  return ECInterfaceCmd_08();\n    case 9:  return ECInterfaceCmd_09();\n    case 10: return ECInterfaceCmd_10();\n    case 11: return ECInterfaceCmd_11();\n    case 12: return ECInterfaceCmd_12();\n    case 13: return ECInterfaceCmd_13();\n    case 14: return ECInterfaceCmd_14();\n    case 15: return ECInterfaceCmd_15();\n    case 16: return ECInterfaceCmd_16();\n    case 17: return ECInterfaceCmd_17();\n    case 18: return ECInterfaceCmd_18();\n    case 19: return ECInterfaceCmd_19();\n    case 20: return ECInterfaceCmd_20();\n    case 21: return ECInterfaceCmd_21();\n    case 22: return ECInterfaceCmd_22();\n    default: return FALSE;\n    }\n}\n\nstatic bool8 ECInterfaceCmd_01(void)\n{\n    switch (sEasyChatGraphicsResources->state)\n    {\n    case 0:\n        PrintECFields();\n        sEasyChatGraphicsResources->state++;\n        break;\n    case 1:\n        return IsDma3ManagerBusyWithBgCopy();\n    }\n\n    return TRUE;\n}\n\nstatic bool8 ECInterfaceCmd_02(void)\n{\n    u8 i;\n    u16 *ecWordBuffer;\n    u16 *ecWord;\n    u8 frameId;\n    u8 cursorColumn, cursorRow, numColumns;\n    s16 var1;\n    int stringWidth;\n    int trueStringWidth;\n    int var2;\n    u8 str[64];\n\n    ecWordBuffer = GetEasyChatWordBuffer();\n    frameId = GetEasyChatScreenFrameId();\n    cursorColumn = GetMainCursorColumn();\n    cursorRow = GetMainCursorRow();\n    numColumns = GetNumColumns();\n    ecWord = &ecWordBuffer[cursorRow * numColumns];\n    var1 = 8 * sPhraseFrameDimensions[frameId].left + 13;\n    for (i = 0; i < cursorColumn; i++)\n    {\n        if (*ecWord == 0xFFFF)\n        {\n            stringWidth = GetStringWidth(1, gUnknown_843F8D8, 0) * 7;\n        }\n        else\n        {\n            CopyEasyChatWord(str, *ecWord);\n            stringWidth = GetStringWidth(1, str, 0);\n        }\n\n        trueStringWidth = stringWidth + 17;\n        var1 += trueStringWidth;\n        ecWord++;\n    }\n\n    var2 = 8 * (sPhraseFrameDimensions[frameId].top + cursorRow * 2 + 1) + 1;\n    SetSelectDestFieldCursorSpritePosAndResetAnim(var1, var2);\n    return FALSE;\n}\n\nstatic bool8 ECInterfaceCmd_03(void)\n{\n    u8 xOffset;\n    switch (GetMainCursorColumn())\n    {\n    case 0:\n        xOffset = 28;\n        break;\n    case 1:\n        xOffset = 115;\n        break;\n    case 2:\n        xOffset = 191;\n        break;\n    default:\n        return FALSE;\n    }\n    SetSelectDestFieldCursorSpritePosAndResetAnim(xOffset, 97);\n    return FALSE;\n}\n\nstatic bool8 ECInterfaceCmd_05(void)\n{\n    switch (sEasyChatGraphicsResources->state)\n    {\n    case 0:\n        FreezeSelectDestFieldCursorSprite();\n        PrintECInterfaceTextById(2);\n        EC_CreateYesNoMenuWithInitialCursorPos(1);\n        sEasyChatGraphicsResources->state++;\n        break;\n    case 1:\n        return IsDma3ManagerBusyWithBgCopy();\n    }\n\n    return TRUE;\n}\n\nstatic bool8 ECInterfaceCmd_06(void)\n{\n    switch (sEasyChatGraphicsResources->state)\n    {\n    case 0:\n        FreezeSelectDestFieldCursorSprite();\n        PrintECInterfaceTextById(3);\n        EC_CreateYesNoMenuWithInitialCursorPos(0);\n        sEasyChatGraphicsResources->state++;\n        break;\n    case 1:\n        return IsDma3ManagerBusyWithBgCopy();\n    }\n\n    return TRUE;\n}\n\nstatic bool8 ECInterfaceCmd_04(void)\n{\n    switch (sEasyChatGraphicsResources->state)\n    {\n    case 0:\n        FreezeSelectDestFieldCursorSprite();\n        PrintECInterfaceTextById(1);\n        EC_CreateYesNoMenuWithInitialCursorPos(1);\n        sEasyChatGraphicsResources->state++;\n        break;\n    case 1:\n        return IsDma3ManagerBusyWithBgCopy();\n    }\n\n    return TRUE;\n}\n\nstatic bool8 ECInterfaceCmd_07(void)\n{\n    switch (sEasyChatGraphicsResources->state)\n    {\n    case 0:\n        UnfreezeSelectDestFieldCursorSprite();\n        PrintECInterfaceTextById(0);\n        ShowBg(0);\n        sEasyChatGraphicsResources->state++;\n        break;\n    case 1:\n        return IsDma3ManagerBusyWithBgCopy();\n    }\n\n    return TRUE;\n}\n\nstatic bool8 ECInterfaceCmd_08(void)\n{\n    switch (sEasyChatGraphicsResources->state)\n    {\n    case 0:\n        UnfreezeSelectDestFieldCursorSprite();\n        PrintECInterfaceTextById(0);\n        PrintECFields();\n        sEasyChatGraphicsResources->state++;\n        // Fall through\n    case 1:\n        return IsDma3ManagerBusyWithBgCopy();\n    }\n\n    return TRUE;\n}\n\nstatic bool8 ECInterfaceCmd_09(void)\n{\n    switch (sEasyChatGraphicsResources->state)\n    {\n    case 0:\n        FreezeSelectDestFieldCursorSprite();\n        HideBg(0);\n        SetRegWin0Coords(0, 0, 0, 0);\n        PrintECGroupOrAlphaMenu();\n        sEasyChatGraphicsResources->state++;\n        break;\n    case 1:\n        if (!IsDma3ManagerBusyWithBgCopy())\n        {\n            StartWin2FrameAnim(0);\n            sEasyChatGraphicsResources->state++;\n        }\n        break;\n    case 2:\n        if (!IsDma3ManagerBusyWithBgCopy() && !AnimateFrameResize())\n            sEasyChatGraphicsResources->state++;\n        break;\n    case 3:\n        if (!IsDma3ManagerBusyWithBgCopy())\n        {\n            CreateSelectGroupHelpSprite();\n            sEasyChatGraphicsResources->state++;\n        }\n        break;\n    case 4:\n        if (!AnimateSeletGroupModeAndHelpSpriteEnter())\n        {\n            CreateRedRectangularCursorSpritePair();\n            UpdateVerticalScrollArrowSpriteXPos(0);\n            UpdateVerticalScrollArrowVisibility();\n            sEasyChatGraphicsResources->state++;\n            return FALSE;\n        }\n        break;\n    default:\n        return FALSE;\n    }\n\n    return TRUE;\n}\n\nstatic bool8 ECInterfaceCmd_10(void)\n{\n    switch (sEasyChatGraphicsResources->state)\n    {\n    case 0:\n        DestroyRedRectangularCursor();\n        StartModeIconHidingAnimation();\n        HideVerticalScrollArrowSprites();\n        sEasyChatGraphicsResources->state++;\n        break;\n    case 1:\n        if (RunModeIconHidingAnimation() == TRUE)\n            break;\n\n        StartWin2FrameAnim(1);\n        sEasyChatGraphicsResources->state++;\n        // Fall through\n    case 2:\n        if (!AnimateFrameResize())\n            sEasyChatGraphicsResources->state++;\n        break;\n    case 3:\n        if (!IsDma3ManagerBusyWithBgCopy())\n        {\n            UnfreezeSelectDestFieldCursorSprite();\n            ShowBg(0);\n            sEasyChatGraphicsResources->state++;\n        }\n        break;\n    case 4:\n        return FALSE;\n    }\n\n    return TRUE;\n}\n\nstatic bool8 ECInterfaceCmd_22(void)\n{\n    switch (sEasyChatGraphicsResources->state)\n    {\n    case 0:\n        DestroyRedRectangularCursor();\n        HideVerticalScrollArrowSprites();\n        ShrinkModeIconsSprite();\n        StartWin2FrameAnim(5);\n        sEasyChatGraphicsResources->state++;\n        break;\n    case 1:\n        if (!AnimateFrameResize() && !ModeIconsSpriteAnimIsEnded())\n        {\n            PrintECGroupOrAlphaMenu();\n            sEasyChatGraphicsResources->state++;\n        }\n        break;\n    case 2:\n        if (!IsDma3ManagerBusyWithBgCopy())\n        {\n            StartWin2FrameAnim(6);\n            ShowModeIconsSprite();\n            sEasyChatGraphicsResources->state++;\n        }\n        break;\n    case 3:\n        if (!AnimateFrameResize() && !ModeIconsSpriteAnimIsEnded())\n        {\n            UpdateVerticalScrollArrowVisibility();\n            CreateRedRectangularCursorSpritePair();\n            sEasyChatGraphicsResources->state++;\n            return FALSE;\n        }\n        break;\n    case 4:\n        return FALSE;\n    }\n\n    return TRUE;\n}\n\nstatic bool8 ECInterfaceCmd_14(void)\n{\n    EC_MoveCursor();\n    return FALSE;\n}\n\nstatic bool8 ECInterfaceCmd_15(void)\n{\n    switch (sEasyChatGraphicsResources->state)\n    {\n    case 0:\n        ScheduleBg2VerticalScroll(1, 2);\n        sEasyChatGraphicsResources->state++;\n        // Fall through\n    case 1:\n        if (!AnimateBg2VerticalScroll())\n        {\n            EC_MoveCursor();\n            UpdateVerticalScrollArrowVisibility();\n            return FALSE;\n        }\n        break;\n    }\n\n    return TRUE;\n}\n\nstatic bool8 ECInterfaceCmd_16(void)\n{\n    switch (sEasyChatGraphicsResources->state)\n    {\n    case 0:\n        ScheduleBg2VerticalScroll(-1, 2);\n        sEasyChatGraphicsResources->state++;\n        // Fall through\n    case 1:\n        if (!AnimateBg2VerticalScroll())\n        {\n            UpdateVerticalScrollArrowVisibility();\n            sEasyChatGraphicsResources->state++;\n            return FALSE;\n        }\n        break;\n    case 2:\n        return FALSE;\n    }\n\n    return TRUE;\n}\n\nstatic bool8 ECInterfaceCmd_11(void)\n{\n    switch (sEasyChatGraphicsResources->state)\n    {\n    case 0:\n        DestroyRedRectangularCursor();\n        StartModeIconHidingAnimation();\n        HideVerticalScrollArrowSprites();\n        sEasyChatGraphicsResources->state++;\n        break;\n    case 1:\n        if (!RunModeIconHidingAnimation())\n        {\n            ClearWin2AndCopyToVram();\n            sEasyChatGraphicsResources->state++;\n        }\n        break;\n    case 2:\n        if (!IsDma3ManagerBusyWithBgCopy())\n        {\n            StartWin2FrameAnim(2);\n            sEasyChatGraphicsResources->state++;\n        }\n        break;\n    case 3:\n        if (!AnimateFrameResize())\n        {\n            PrintECMenuById(2);\n            sEasyChatGraphicsResources->state++;\n        }\n        break;\n    case 4:\n        if (!IsDma3ManagerBusyWithBgCopy())\n        {\n            CreateSelectWordCursorSprite();\n            UpdateVerticalScrollArrowSpriteXPos(1);\n            UpdateVerticalScrollArrowVisibility();\n            UpdateStartSelectButtonSpriteVisibility();\n            sEasyChatGraphicsResources->state++;\n            return FALSE;\n        }\n        break;\n    case 5:\n        return FALSE;\n    }\n\n    return TRUE;\n}\n\nstatic bool8 ECInterfaceCmd_12(void)\n{\n    switch (sEasyChatGraphicsResources->state)\n    {\n    case 0:\n        PrintECFields();\n        sEasyChatGraphicsResources->state++;\n        break;\n    case 1:\n        DestroySelectWordCursorSprite();\n        HideVerticalScrollArrowSprites();\n        HideStartSelectButtonSprites();\n        ClearWin2AndCopyToVram();\n        sEasyChatGraphicsResources->state++;\n        break;\n    case 2:\n        if (!IsDma3ManagerBusyWithBgCopy())\n        {\n            StartWin2FrameAnim(3);\n            sEasyChatGraphicsResources->state++;\n        }\n        break;\n    case 3:\n        if (!AnimateFrameResize())\n        {\n            ShowBg(0);\n            sEasyChatGraphicsResources->state++;\n        }\n        break;\n    case 4:\n        if (!IsDma3ManagerBusyWithBgCopy())\n        {\n            UnfreezeSelectDestFieldCursorSprite();\n            sEasyChatGraphicsResources->state++;\n            return FALSE;\n        }\n        break;\n    case 5:\n        return FALSE;\n    }\n\n    return TRUE;\n}\n\nstatic bool8 ECInterfaceCmd_13(void)\n{\n    switch (sEasyChatGraphicsResources->state)\n    {\n    case 0:\n        DestroySelectWordCursorSprite();\n        HideVerticalScrollArrowSprites();\n        HideStartSelectButtonSprites();\n        ClearWin2AndCopyToVram();\n        sEasyChatGraphicsResources->state++;\n        break;\n    case 1:\n        if (!IsDma3ManagerBusyWithBgCopy())\n        {\n            StartWin2FrameAnim(4);\n            sEasyChatGraphicsResources->state++;\n        }\n        break;\n    case 2:\n        if (!AnimateFrameResize())\n        {\n            PrintECGroupOrAlphaMenu();\n            sEasyChatGraphicsResources->state++;\n        }\n        break;\n    case 3:\n        if (!IsDma3ManagerBusyWithBgCopy())\n        {\n            CreateSelectGroupHelpSprite();\n            sEasyChatGraphicsResources->state++;\n        }\n        break;\n    case 4:\n        if (!AnimateSeletGroupModeAndHelpSpriteEnter())\n        {\n            CreateRedRectangularCursorSpritePair();\n            UpdateVerticalScrollArrowSpriteXPos(0);\n            UpdateVerticalScrollArrowVisibility();\n            sEasyChatGraphicsResources->state++;\n            return FALSE;\n        }\n        break;\n    }\n\n    return TRUE;\n}\n\nstatic bool8 ECInterfaceCmd_17(void)\n{\n    SetSelectWordCursorSpritePos();\n    return FALSE;\n}\n\nstatic bool8 ECInterfaceCmd_19(void)\n{\n    switch (sEasyChatGraphicsResources->state)\n    {\n    case 0:\n        UpdateWin2PrintWordsScrollDown();\n        sEasyChatGraphicsResources->state++;\n        break;\n    case 1:\n        if (!IsDma3ManagerBusyWithBgCopy())\n        {\n            ScheduleBg2VerticalScroll(1, 2);\n            sEasyChatGraphicsResources->state++;\n        }\n        break;\n    case 2:\n        if (!AnimateBg2VerticalScroll())\n        {\n            SetSelectWordCursorSpritePos();\n            UpdateVerticalScrollArrowVisibility();\n            UpdateStartSelectButtonSpriteVisibility();\n            sEasyChatGraphicsResources->state++;\n            return FALSE;\n        }\n        break;\n    case 3:\n        return FALSE;\n    }\n\n    return TRUE;\n}\n\nstatic bool8 ECInterfaceCmd_18(void)\n{\n    switch (sEasyChatGraphicsResources->state)\n    {\n    case 0:\n        UpdateWin2PrintWordsScrollUp();\n        sEasyChatGraphicsResources->state++;\n        break;\n    case 1:\n        if (!IsDma3ManagerBusyWithBgCopy())\n        {\n            ScheduleBg2VerticalScroll(-1, 2);\n            sEasyChatGraphicsResources->state++;\n        }\n        break;\n    case 2:\n        if (!AnimateBg2VerticalScroll())\n        {\n            UpdateVerticalScrollArrowVisibility();\n            UpdateStartSelectButtonSpriteVisibility();\n            sEasyChatGraphicsResources->state++;\n            return FALSE;\n        }\n        break;\n    case 3:\n        return FALSE;\n    }\n\n    return TRUE;\n}\n\nstatic bool8 ECInterfaceCmd_21(void)\n{\n    switch (sEasyChatGraphicsResources->state)\n    {\n    case 0:\n        UpdateWin2PrintWordsScrollPageDown();\n        sEasyChatGraphicsResources->state++;\n        break;\n    case 1:\n        if (!IsDma3ManagerBusyWithBgCopy())\n        {\n            s16 direction = GetECSelectWordRowsAbove() - GetBg2ScrollRow();\n            ScheduleBg2VerticalScroll(direction, 4);\n            sEasyChatGraphicsResources->state++;\n        }\n        break;\n    case 2:\n        if (!AnimateBg2VerticalScroll())\n        {\n            SetSelectWordCursorSpritePos();\n            UpdateVerticalScrollArrowVisibility();\n            UpdateStartSelectButtonSpriteVisibility();\n            sEasyChatGraphicsResources->state++;\n            return FALSE;\n        }\n        break;\n    case 3:\n        return FALSE;\n    }\n\n    return TRUE;\n}\n\nstatic bool8 ECInterfaceCmd_20(void)\n{\n    switch (sEasyChatGraphicsResources->state)\n    {\n    case 0:\n        UpdateWin2PrintWordsScrollPageUp();\n        sEasyChatGraphicsResources->state++;\n        break;\n    case 1:\n        if (!IsDma3ManagerBusyWithBgCopy())\n        {\n            s16 direction = GetECSelectWordRowsAbove() - GetBg2ScrollRow();\n            ScheduleBg2VerticalScroll(direction, 4);\n            sEasyChatGraphicsResources->state++;\n        }\n        break;\n    case 2:\n        if (!AnimateBg2VerticalScroll())\n        {\n            UpdateVerticalScrollArrowVisibility();\n            UpdateStartSelectButtonSpriteVisibility();\n            sEasyChatGraphicsResources->state++;\n            return FALSE;\n        }\n        break;\n    case 3:\n        return FALSE;\n    }\n\n    return TRUE;\n}\n\nstatic bool8 InitEasyChatGraphicsWork_Internal(void)\n{\n    sEasyChatGraphicsResources = Alloc(sizeof(*sEasyChatGraphicsResources));\n    if (sEasyChatGraphicsResources == NULL)\n        return FALSE;\n\n    sEasyChatGraphicsResources->state = 0;\n    sEasyChatGraphicsResources->selectDestFieldCursorSprite = NULL;\n    sEasyChatGraphicsResources->rectCursorSpriteRight = NULL;\n    sEasyChatGraphicsResources->rectCursorSpriteLeft = NULL;\n    sEasyChatGraphicsResources->selectWordCursorSprite = NULL;\n    sEasyChatGraphicsResources->selectGroupHelpSprite = NULL;\n    sEasyChatGraphicsResources->modeIconsSprite = NULL;\n    sEasyChatGraphicsResources->upTriangleCursorSprite = NULL;\n    sEasyChatGraphicsResources->downTriangleCursorSprite = NULL;\n    sEasyChatGraphicsResources->startPgUpButtonSprite = NULL;\n    sEasyChatGraphicsResources->selectPgDnButtonSprite = NULL;\n    return TRUE;\n}\n\nstatic void SetGpuRegsForEasyChatInit(void)\n{\n    ChangeBgX(3, 0, 0);\n    ChangeBgY(3, 0, 0);\n    ChangeBgX(1, 0, 0);\n    ChangeBgY(1, 0, 0);\n    ChangeBgX(2, 0, 0);\n    ChangeBgY(2, 0, 0);\n    ChangeBgX(0, 0, 0);\n    ChangeBgY(0, 0, 0);\n    SetGpuReg(REG_OFFSET_DISPCNT, DISPCNT_MODE_0 | DISPCNT_OBJ_1D_MAP | DISPCNT_OBJ_ON | DISPCNT_WIN0_ON);\n}\n\nstatic void LoadEasyChatPals(void)\n{\n    ResetPaletteFade();\n    LoadPalette(gEasyChatMode_Pal, 0, 32);\n    LoadPalette(gUnknown_843F76C,  1 * 16, 32);\n    LoadPalette(gUnknown_843F78C,  4 * 16, 32);\n    LoadPalette(gUnknown_843F874, 10 * 16, 8);\n    LoadPalette(gUnknown_843F87C, 11 * 16, 10);\n    LoadPalette(gUnknown_843F87C, 15 * 16, 10);\n    LoadPalette(gUnknown_843F87C,  3 * 16, 10);\n}\n\nstatic void PrintTitleText(void)\n{\n    int xOffset;\n    const u8 *titleText = GetTitleText();\n    if (titleText == NULL)\n        return;\n\n    xOffset = (128 - GetStringWidth(1, titleText, 0)) / 2u;\n    FillWindowPixelBuffer(0, PIXEL_FILL(0));\n    EC_AddTextPrinterParameterized2(0, 1, titleText, xOffset, 0, TEXT_SPEED_FF, TEXT_COLOR_TRANSPARENT, TEXT_COLOR_DARK_GREY, TEXT_COLOR_LIGHT_GREY);\n    PutWindowTilemap(0);\n    CopyWindowToVram(0, COPYWIN_BOTH);\n}\n\nstatic void EC_AddTextPrinterParameterized(u8 windowId, u8 fontId, const u8 *str, u8 x, u8 y, u8 speed, void (*callback)(struct TextPrinterTemplate *, u16))\n{\n    if (fontId == 1) y += 2;\n    AddTextPrinterParameterized(windowId, fontId, str, x, y, speed, callback);\n}\n\nstatic void EC_AddTextPrinterParameterized2(u8 windowId, u8 fontId, const u8 *str, u8 x, u8 y, u8 speed, u8 bg, u8 fg, u8 shadow)\n{\n    u8 color[3];\n    if (fontId == 1) y += 2;\n    color[0] = bg;\n    color[1] = fg;\n    color[2] = shadow;\n    AddTextPrinterParameterized3(windowId, fontId, x, y, color, speed, str);\n}\n\nstatic void PrintECInstructionsText(void)\n{\n    FillBgTilemapBufferRect(0, 0, 0, 0, 32, 20, 17);\n    TextWindow_SetUserSelectedFrame(1, 1, 0xE0);\n    DrawTextBorderOuter(1, 1, 14);\n    PrintECInterfaceTextById(0);\n    PutWindowTilemap(1);\n    CopyBgTilemapBufferToVram(0);\n}\n\nstatic void PrintECInterfaceTextById(u8 direction)\n{\n    const u8 *text2 = NULL;\n    const u8 *text1 = NULL;\n    switch (direction)\n    {\n    case 0:\n        GetEasyChatInstructionsText(&text1, &text2);\n        break;\n    case 2:\n        GetEasyChatConfirmCancelText(&text1, &text2);\n        break;\n    case 3:\n        GetEasyChatConfirmText(&text1, &text2);\n        break;\n    case 1:\n        GetEasyChatConfirmDeletionText(&text1, &text2);\n        break;\n    }\n\n    FillWindowPixelBuffer(1, PIXEL_FILL(1));\n    if (text1)\n        EC_AddTextPrinterParameterized(1, 1, text1, 0, 0, TEXT_SPEED_FF, NULL);\n\n    if (text2)\n        EC_AddTextPrinterParameterized(1, 1, text2, 0, 16, TEXT_SPEED_FF, NULL);\n\n    CopyWindowToVram(1, COPYWIN_BOTH);\n}\n\nstatic void EC_CreateYesNoMenuWithInitialCursorPos(u8 initialCursorPos)\n{\n    CreateYesNoMenu(&sEasyChatYesNoWindowTemplate, 1, 0, 2, 0x001, 14, initialCursorPos);\n}\n\nstatic void CreatePhraseFrameWindow(void)\n{\n    u8 frameId;\n    struct WindowTemplate template;\n\n    frameId = GetEasyChatScreenFrameId();\n    template.bg = 3;\n    template.tilemapLeft = sPhraseFrameDimensions[frameId].left;\n    template.tilemapTop = sPhraseFrameDimensions[frameId].top;\n    template.width = sPhraseFrameDimensions[frameId].width;\n    template.height = sPhraseFrameDimensions[frameId].height;\n    template.paletteNum = 11;\n    template.baseBlock = 0x060;\n    sEasyChatGraphicsResources->windowId = AddWindow(&template);\n    PutWindowTilemap(sEasyChatGraphicsResources->windowId);\n}\n\nstatic void PrintECFields(void)\n{\n    u16 *ecWord;\n    u8 numColumns, numRows;\n    u8 *str;\n    u8 frameId;\n    int i, j, k;\n\n    ecWord = GetEasyChatWordBuffer();\n    numColumns = GetNumColumns();\n    numRows = GetNumRows();\n    frameId = GetEasyChatScreenFrameId();\n    FillWindowPixelBuffer(sEasyChatGraphicsResources->windowId, PIXEL_FILL(1));\n    for (i = 0; i < numRows; i++)\n    {\n        str = sEasyChatGraphicsResources->ecPrintBuffer;\n        str[0] = EOS;\n        str = StringAppend(str, sText_Clear17);\n        for (j = 0; j < numColumns; j++)\n        {\n            if (*ecWord != 0xFFFF)\n            {\n                str = CopyEasyChatWord(str, *ecWord);\n                ecWord++;\n            }\n            else\n            {\n                str = WriteColorChangeControlCode(str, 0, TEXT_COLOR_RED);\n                ecWord++;\n                for (k = 0; k < 7; k++)\n                {\n                    *str++ = CHAR_EXTRA_EMOJI;\n                    *str++ = 9;\n                }\n\n                str = WriteColorChangeControlCode(str, 0, TEXT_COLOR_DARK_GREY);\n            }\n\n            str = StringAppend(str, sText_Clear17);\n            if (frameId == 2)\n            {\n                if (j == 0 && i == 4)\n                    break;\n            }\n        }\n\n        *str = EOS;\n        EC_AddTextPrinterParameterized(sEasyChatGraphicsResources->windowId, 1, sEasyChatGraphicsResources->ecPrintBuffer, 0, i * 16, TEXT_SPEED_FF, NULL);\n    }\n\n    CopyWindowToVram(sEasyChatGraphicsResources->windowId, COPYWIN_BOTH);\n}\n\nstatic void DrawECFrameInTilemapBuffer(u16 *tilemap)\n{\n    u8 frameId;\n    int right, bottom;\n    int x, y;\n\n    frameId = GetEasyChatScreenFrameId();\n    CpuFastFill(0, tilemap, BG_SCREEN_SIZE);\n    if (frameId == 2)\n    {\n        right = sPhraseFrameDimensions[frameId].left + sPhraseFrameDimensions[frameId].width;\n        bottom = sPhraseFrameDimensions[frameId].top + sPhraseFrameDimensions[frameId].height;\n        for (y = sPhraseFrameDimensions[frameId].top; y < bottom; y++)\n        {\n            x = sPhraseFrameDimensions[frameId].left - 1;\n            tilemap[y * 32 + x] = 0x1005;\n            x++;\n            for (; x < right; x++)\n                tilemap[y * 32 + x] = 0x1000;\n\n            tilemap[y* 32 + x] = 0x1007;\n        }\n    }\n    else\n    {\n        y = sPhraseFrameDimensions[frameId].top - 1;\n        x = sPhraseFrameDimensions[frameId].left - 1;\n        right = sPhraseFrameDimensions[frameId].left + sPhraseFrameDimensions[frameId].width;\n        bottom = sPhraseFrameDimensions[frameId].top + sPhraseFrameDimensions[frameId].height;\n        tilemap[y * 32 + x] = 0x1001;\n        x++;\n        for (; x < right; x++)\n            tilemap[y * 32 + x] = 0x1002;\n\n        tilemap[y * 32 + x] = 0x1003;\n        y++;\n        for (; y < bottom; y++)\n        {\n            x = sPhraseFrameDimensions[frameId].left - 1;\n            tilemap[y * 32 + x] = 0x1005;\n            x++;\n            for (; x < right; x++)\n                tilemap[y * 32 + x] = 0x1000;\n\n            tilemap[y* 32 + x] = 0x1007;\n        }\n\n        x = sPhraseFrameDimensions[frameId].left - 1;\n        tilemap[y * 32 + x] = 0x1009;\n        x++;\n        for (; x < right; x++)\n            tilemap[y * 32 + x] = 0x100A;\n\n        tilemap[y * 32 + x] = 0x100B;\n    }\n}\n\nstatic void PutWin2TilemapAndCopyToVram(void)\n{\n    PutWindowTilemap(2);\n    CopyBgTilemapBufferToVram(2);\n}\n\nstatic void PrintECMenuById(u32 id)\n{\n    InitBg2Scroll();\n    FillWindowPixelBuffer(2, PIXEL_FILL(1));\n    switch (id)\n    {\n    case 0:\n        PrintECGroupsMenu();\n        break;\n    case 1:\n        PrintEasyChatKeyboardText();\n        break;\n    case 2:\n        PrintECWordsMenu();\n        break;\n    }\n\n    CopyWindowToVram(2, COPYWIN_GFX);\n}\n\nstatic void PrintECGroupOrAlphaMenu(void)\n{\n    if (!IsEasyChatAlphaMode())\n        PrintECMenuById(0);\n    else\n        PrintECMenuById(1);\n}\n\nstatic void PrintECGroupsMenu(void)\n{\n    int i;\n    int x, y;\n\n    i = 0;\n    y = 96;\n    while (1)\n    {\n        for (x = 0; x < 2; x++)\n        {\n            u8 groupId = GetSelectedGroupByIndex(i++);\n            if (groupId == EC_NUM_GROUPS)\n            {\n                ScheduleBg2VerticalScroll(GetECSelectGroupRowsAbove(), 0);\n                return;\n            }\n\n            EC_AddTextPrinterParameterized(2, 1, GetEasyChatWordGroupName(groupId), x * 84 + 10, y, TEXT_SPEED_FF, NULL);\n        }\n\n        y += 16;\n    }\n}\n\nstatic void PrintEasyChatKeyboardText(void)\n{\n    u32 i;\n\n    for (i = 0; i < NELEMS(sEasyChatKeyboardText); i++)\n        EC_AddTextPrinterParameterized(2, 1, sEasyChatKeyboardText[i], 10, 96 + i * 16, TEXT_SPEED_FF, NULL);\n}\n\nstatic void PrintECWordsMenu(void)\n{\n    PrintECRowsWin2(0, 4);\n}\n\nstatic void UpdateWin2PrintWordsScrollDown(void)\n{\n    u8 rowsAbove = GetECSelectWordRowsAbove() + 3;\n    ClearECRowsWin2(rowsAbove, 1);\n    PrintECRowsWin2(rowsAbove, 1);\n}\n\nstatic void UpdateWin2PrintWordsScrollUp(void)\n{\n    u8 rowsAbove = GetECSelectWordRowsAbove();\n    ClearECRowsWin2(rowsAbove, 1);\n    PrintECRowsWin2(rowsAbove, 1);\n}\n\nstatic void UpdateWin2PrintWordsScrollPageDown(void)\n{\n    u8 row = GetECSelectWordRowsAbove();\n    u8 maxrow = row + 4;\n    u8 numrowsplus1 = GetECSelectWordNumRows() + 1;\n    if (maxrow > numrowsplus1)\n        maxrow = numrowsplus1;\n\n    if (row < maxrow)\n    {\n        u8 remrow = maxrow - row;\n        ClearECRowsWin2(row, remrow);\n        PrintECRowsWin2(row, remrow);\n    }\n}\n\nstatic void UpdateWin2PrintWordsScrollPageUp(void)\n{\n    u8 row = GetECSelectWordRowsAbove();\n    u8 maxrow = GetBg2ScrollRow();\n    if (row < maxrow)\n    {\n        u8 remrow = maxrow - row;\n        ClearECRowsWin2(row, remrow);\n        PrintECRowsWin2(row, remrow);\n    }\n}\n\nstatic void PrintECRowsWin2(u8 row, u8 remrow)\n{\n    int i, j;\n    u16 easyChatWord;\n    u8 *str;\n    int y;\n    u8 y_;\n    int ecWordIdx;\n\n    ecWordIdx = row * 2;\n    y = (row * 16 + 96) & 0xFF;\n\n    for (i = 0; i < remrow; i++)\n    {\n        for (j = 0; j < 2; j++)\n        {\n            // FIXME: Dumb trick needed to match\n            y_ = y << 18 >> 18;\n            easyChatWord = GetDisplayedWordByIndex(ecWordIdx++);\n            if (easyChatWord != 0xFFFF)\n            {\n\n                CopyEasyChatWordPadded(sEasyChatGraphicsResources->ecPaddedWordBuffer, easyChatWord, 0);\n\n                EC_AddTextPrinterParameterized(2, 1, sEasyChatGraphicsResources->ecPaddedWordBuffer, (j * 13 + 3) * 8, y_, TEXT_SPEED_FF, NULL);\n            }\n        }\n        y += 16;\n\n    }\n\n    CopyWindowToVram(2, COPYWIN_GFX);\n}\n\nstatic void ClearECRowsWin2(u8 row, u8 remrow)\n{\n    int y;\n    int totalHeight;\n    int heightWrappedAround;\n    int heightToBottom;\n\n    y = (row * 16 + 96) & 0xFF;\n    heightToBottom = remrow * 16;\n    totalHeight = y + heightToBottom;\n    if (totalHeight > 255)\n    {\n        heightWrappedAround = totalHeight - 256;\n        heightToBottom = 256 - y;\n    }\n    else\n    {\n        heightWrappedAround = 0;\n    }\n\n    FillWindowPixelRect(2, PIXEL_FILL(1), 0, y, 224, heightToBottom);\n    if (heightWrappedAround)\n        FillWindowPixelRect(2, PIXEL_FILL(1), 0, 0, 224, heightWrappedAround);\n}\n\nstatic void ClearWin2AndCopyToVram(void)\n{\n    FillWindowPixelBuffer(2, PIXEL_FILL(1));\n    CopyWindowToVram(2, COPYWIN_GFX);\n}\n\nstatic void StartWin2FrameAnim(int animNo)\n{\n    switch (animNo)\n    {\n    case 0:\n        sEasyChatGraphicsResources->frameAnimIdx = 0;\n        sEasyChatGraphicsResources->frameAnimTarget = 10;\n        break;\n    case 1:\n        sEasyChatGraphicsResources->frameAnimIdx = 9;\n        sEasyChatGraphicsResources->frameAnimTarget = 0;\n        break;\n    case 2:\n        sEasyChatGraphicsResources->frameAnimIdx = 11;\n        sEasyChatGraphicsResources->frameAnimTarget = 17;\n        break;\n    case 3:\n        sEasyChatGraphicsResources->frameAnimIdx = 17;\n        sEasyChatGraphicsResources->frameAnimTarget = 0;\n        break;\n    case 4:\n        sEasyChatGraphicsResources->frameAnimIdx = 17;\n        sEasyChatGraphicsResources->frameAnimTarget = 10;\n        break;\n    case 5:\n        sEasyChatGraphicsResources->frameAnimIdx = 18;\n        sEasyChatGraphicsResources->frameAnimTarget = 22;\n        break;\n    case 6:\n        sEasyChatGraphicsResources->frameAnimIdx = 22;\n        sEasyChatGraphicsResources->frameAnimTarget = 18;\n        break;\n    }\n\n    sEasyChatGraphicsResources->frameAnimDelta = sEasyChatGraphicsResources->frameAnimIdx < sEasyChatGraphicsResources->frameAnimTarget ? 1 : -1;\n}\n\nstatic bool8 AnimateFrameResize(void)\n{\n    if (sEasyChatGraphicsResources->frameAnimIdx == sEasyChatGraphicsResources->frameAnimTarget)\n        return FALSE;\n\n    sEasyChatGraphicsResources->frameAnimIdx += sEasyChatGraphicsResources->frameAnimDelta;\n    RedrawFrameByIndex(sEasyChatGraphicsResources->frameAnimIdx);\n    return sEasyChatGraphicsResources->frameAnimIdx != sEasyChatGraphicsResources->frameAnimTarget;\n}\n\nstatic void RedrawFrameByIndex(u8 direction)\n{\n    FillBgTilemapBufferRect_Palette0(1, 0, 0, 10, 30, 10);\n    switch (direction)\n    {\n    case 0:\n        break;\n    case 1:\n        RedrawFrameByRect(11, 14, 3, 2);\n        break;\n    case 2:\n        RedrawFrameByRect(9, 14, 7, 2);\n        break;\n    case 3:\n        RedrawFrameByRect(7, 14, 11, 2);\n        break;\n    case 4:\n        RedrawFrameByRect(5, 14, 15, 2);\n        break;\n    case 5:\n        RedrawFrameByRect(3, 14, 19, 2);\n        break;\n    case 6:\n        RedrawFrameByRect(1, 14, 23, 2);\n        break;\n    case 7:\n        RedrawFrameByRect(1, 13, 23, 4);\n        break;\n    case 8:\n        RedrawFrameByRect(1, 12, 23, 6);\n        break;\n    case 9:\n        RedrawFrameByRect(1, 11, 23, 8);\n        break;\n    case 10:\n        RedrawFrameByRect(1, 10, 23, 10);\n        break;\n    case 11:\n        RedrawFrameByRect(1, 10, 24, 10);\n        break;\n    case 12:\n        RedrawFrameByRect(1, 10, 25, 10);\n        break;\n    case 13:\n        RedrawFrameByRect(1, 10, 26, 10);\n        break;\n    case 14:\n        RedrawFrameByRect(1, 10, 27, 10);\n        break;\n    case 15:\n        RedrawFrameByRect(1, 10, 28, 10);\n        break;\n    case 16:\n        RedrawFrameByRect(1, 10, 29, 10);\n        break;\n    case 17:\n        RedrawFrameByRect(0, 10, 30, 10);\n        break;\n    case 18:\n        RedrawFrameByRect(1, 10, 23, 10);\n        break;\n    case 19:\n        RedrawFrameByRect(1, 11, 23, 8);\n        break;\n    case 20:\n        RedrawFrameByRect(1, 12, 23, 6);\n        break;\n    case 21:\n        RedrawFrameByRect(1, 13, 23, 4);\n        break;\n    case 22:\n        RedrawFrameByRect(1, 14, 23, 2);\n        break;\n    }\n\n    CopyBgTilemapBufferToVram(1);\n}\n\nstatic void RedrawFrameByRect(int left, int top, int width, int height)\n{\n    u16 *tilemap;\n    int right;\n    int bottom;\n    int x, y;\n\n    tilemap = sEasyChatGraphicsResources->bg1TilemapBuffer;\n    right = left + width - 1;\n    bottom = top + height - 1;\n    x = left;\n    y = top;\n    tilemap[y * 32 + x] = 0x4001;\n    x++;\n    for (; x < right; x++)\n        tilemap[y * 32 + x] = 0x4002;\n\n    tilemap[y * 32 + x] = 0x4003;\n    y++;\n    for (; y < bottom; y++)\n    {\n        tilemap[y * 32 + left] = 0x4005;\n        x = left + 1;\n        for (; x < right; x++)\n            tilemap[y * 32 + x] = 0x4000;\n\n        tilemap[y * 32 + x] = 0x4007;\n    }\n\n    tilemap[y * 32 + left] = 0x4009;\n    x = left + 1;\n    for (; x < right; x++)\n        tilemap[y * 32 + x] = 0x400A;\n\n    tilemap[y * 32 + x] = 0x400B;\n    SetRegWin0Coords((left + 1) * 8, (top + 1) * 8, (width - 2) * 8, (height - 2) * 8);\n}\n\nstatic void InitBg2Scroll(void)\n{\n    ChangeBgY(2, 0x800, 0);\n    sEasyChatGraphicsResources->bg2ScrollRow = 0;\n}\n\nstatic void ScheduleBg2VerticalScroll(s16 direction, u8 speed)\n{\n    int bgY;\n    s16 totalDelta;\n\n    bgY = GetBgY(2);\n    sEasyChatGraphicsResources->bg2ScrollRow += direction;\n    totalDelta = direction * 16;\n    bgY += totalDelta << 8;\n    if (speed)\n    {\n        sEasyChatGraphicsResources->tgtBgY = bgY;\n        sEasyChatGraphicsResources->deltaBgY = speed * 256;\n        if (totalDelta < 0)\n            sEasyChatGraphicsResources->deltaBgY = -sEasyChatGraphicsResources->deltaBgY;\n    }\n    else\n    {\n        ChangeBgY(2, bgY, 0);\n    }\n}\n\nstatic bool8 AnimateBg2VerticalScroll(void)\n{\n    int bgY;\n\n    bgY = GetBgY(2);\n    if (bgY == sEasyChatGraphicsResources->tgtBgY)\n    {\n        return FALSE;\n    }\n    else\n    {\n        ChangeBgY(2, sEasyChatGraphicsResources->deltaBgY, 1);\n        return TRUE;\n    }\n}\n\nstatic int GetBg2ScrollRow(void)\n{\n    return sEasyChatGraphicsResources->bg2ScrollRow;\n}\n\nstatic void SetRegWin0Coords(u8 left, u8 top, u8 width, u8 height)\n{\n    u16 horizontalDimensions = WIN_RANGE(left, left + width);\n    u16 verticalDimensions = WIN_RANGE(top, top + height);\n    SetGpuReg(REG_OFFSET_WIN0H, horizontalDimensions);\n    SetGpuReg(REG_OFFSET_WIN0V, verticalDimensions);\n}\n\nstatic void LoadSpriteGfx(void)\n{\n    u32 i;\n\n    LoadSpriteSheets(sEasyChatSpriteSheets);\n    LoadSpritePalettes(sEasyChatSpritePalettes);\n    for (i = 0; i < NELEMS(sEasyChatCompressedSpriteSheets); i++)\n        LoadCompressedSpriteSheet(&sEasyChatCompressedSpriteSheets[i]);\n}\n\nstatic void CreateSelectDestFieldCursorSprite(void)\n{\n    u8 frameId = GetEasyChatScreenFrameId();\n    s16 x = sPhraseFrameDimensions[frameId].left * 8 + 13;\n    s16 y = (sPhraseFrameDimensions[frameId].top + 1) * 8 + 1;\n    u8 spriteId = CreateSprite(&sSpriteTemplate_RightTriangleCursor, x, y, 2);\n    sEasyChatGraphicsResources->selectDestFieldCursorSprite = &gSprites[spriteId];\n    gSprites[spriteId].data[1] = 1;\n}\n\nstatic void SpriteCB_BounceCursor(struct Sprite * sprite)\n{\n    if (sprite->data[1])\n    {\n        if (++sprite->data[0] > 2)\n        {\n            sprite->data[0] = 0;\n            if (++sprite->pos2.x > 0)\n                sprite->pos2.x = -6;\n        }\n    }\n}\n\nstatic void SetSelectDestFieldCursorSpritePosAndResetAnim(u8 x, u8 y)\n{\n    sEasyChatGraphicsResources->selectDestFieldCursorSprite->pos1.x = x;\n    sEasyChatGraphicsResources->selectDestFieldCursorSprite->pos1.y = y;\n    sEasyChatGraphicsResources->selectDestFieldCursorSprite->pos2.x = 0;\n    sEasyChatGraphicsResources->selectDestFieldCursorSprite->data[0] = 0;\n}\n\nstatic void FreezeSelectDestFieldCursorSprite(void)\n{\n    sEasyChatGraphicsResources->selectDestFieldCursorSprite->data[0] = 0;\n    sEasyChatGraphicsResources->selectDestFieldCursorSprite->data[1] = 0;\n    sEasyChatGraphicsResources->selectDestFieldCursorSprite->pos2.x = 0;\n}\n\nstatic void UnfreezeSelectDestFieldCursorSprite(void)\n{\n    sEasyChatGraphicsResources->selectDestFieldCursorSprite->data[1] = 1;\n}\n\nstatic void CreateRedRectangularCursorSpritePair(void)\n{\n    u8 spriteId = CreateSprite(&sSpriteTemplate_RedRectangularCursor, 0, 0, 3);\n    sEasyChatGraphicsResources->rectCursorSpriteRight = &gSprites[spriteId];\n    sEasyChatGraphicsResources->rectCursorSpriteRight->pos2.x = 32;\n\n    spriteId = CreateSprite(&sSpriteTemplate_RedRectangularCursor, 0, 0, 3);\n    sEasyChatGraphicsResources->rectCursorSpriteLeft = &gSprites[spriteId];\n    sEasyChatGraphicsResources->rectCursorSpriteLeft->pos2.x = -32;\n\n    sEasyChatGraphicsResources->rectCursorSpriteRight->hFlip = TRUE;\n    EC_MoveCursor();\n}\n\nstatic void DestroyRedRectangularCursor(void)\n{\n    DestroySprite(sEasyChatGraphicsResources->rectCursorSpriteRight);\n    sEasyChatGraphicsResources->rectCursorSpriteRight = NULL;\n    DestroySprite(sEasyChatGraphicsResources->rectCursorSpriteLeft);\n    sEasyChatGraphicsResources->rectCursorSpriteLeft = NULL;\n}\n\nstatic void EC_MoveCursor(void)\n{\n    u8 x;\n    u8 y;\n\n    if (sEasyChatGraphicsResources->rectCursorSpriteRight && sEasyChatGraphicsResources->rectCursorSpriteLeft)\n    {\n        GetECSelectGroupCursorCoords(&x, &y);\n        if (!IsEasyChatAlphaMode())\n            MoveCursor_Group(x, y);\n        else\n            MoveCursor_Alpha(x, y);\n    }\n}\n\nstatic void MoveCursor_Group(s8 x, s8 y)\n{\n    if (x != -1)\n    {\n        StartSpriteAnim(sEasyChatGraphicsResources->rectCursorSpriteRight, 0);\n        sEasyChatGraphicsResources->rectCursorSpriteRight->pos1.x = x * 84 + 58;\n        sEasyChatGraphicsResources->rectCursorSpriteRight->pos1.y = y * 16 + 96;\n\n        StartSpriteAnim(sEasyChatGraphicsResources->rectCursorSpriteLeft, 0);\n        sEasyChatGraphicsResources->rectCursorSpriteLeft->pos1.x = x * 84 + 58;\n        sEasyChatGraphicsResources->rectCursorSpriteLeft->pos1.y = y * 16 + 96;\n    }\n    else\n    {\n        StartSpriteAnim(sEasyChatGraphicsResources->rectCursorSpriteRight, 1);\n        sEasyChatGraphicsResources->rectCursorSpriteRight->pos1.x = 216;\n        sEasyChatGraphicsResources->rectCursorSpriteRight->pos1.y = y * 16 + 112;\n\n        StartSpriteAnim(sEasyChatGraphicsResources->rectCursorSpriteLeft, 1);\n        sEasyChatGraphicsResources->rectCursorSpriteLeft->pos1.x = 216;\n        sEasyChatGraphicsResources->rectCursorSpriteLeft->pos1.y = y * 16 + 112;\n    }\n}\n\nstatic void MoveCursor_Alpha(s8 cursorX, s8 cursorY)\n{\n    int anim;\n    int x, y;\n\n    if (cursorX != -1)\n    {\n        y = cursorY * 16 + 96;\n        x = 32;\n        if (cursorX == 6 && cursorY == 0)\n        {\n            x = 157;\n            anim = 2;\n        }\n        else\n        {\n            x += sECDisplay_AlphaModeXCoords[cursorX < NELEMS(sECDisplay_AlphaModeXCoords) ? cursorX : 0];\n            anim = 3;\n        }\n\n        StartSpriteAnim(sEasyChatGraphicsResources->rectCursorSpriteRight, anim);\n        sEasyChatGraphicsResources->rectCursorSpriteRight->pos1.x = x;\n        sEasyChatGraphicsResources->rectCursorSpriteRight->pos1.y = y;\n\n        StartSpriteAnim(sEasyChatGraphicsResources->rectCursorSpriteLeft, anim);\n        sEasyChatGraphicsResources->rectCursorSpriteLeft->pos1.x = x;\n        sEasyChatGraphicsResources->rectCursorSpriteLeft->pos1.y = y;\n    }\n    else\n    {\n        StartSpriteAnim(sEasyChatGraphicsResources->rectCursorSpriteRight, 1);\n        sEasyChatGraphicsResources->rectCursorSpriteRight->pos1.x = 216;\n        sEasyChatGraphicsResources->rectCursorSpriteRight->pos1.y = cursorY * 16 + 112;\n\n        StartSpriteAnim(sEasyChatGraphicsResources->rectCursorSpriteLeft, 1);\n        sEasyChatGraphicsResources->rectCursorSpriteLeft->pos1.x = 216;\n        sEasyChatGraphicsResources->rectCursorSpriteLeft->pos1.y = cursorY * 16 + 112;\n    }\n}\n\nstatic void CreateSelectWordCursorSprite(void)\n{\n    u8 spriteId = CreateSprite(&sSpriteTemplate_RightTriangleCursor, 0, 0, 4);\n    sEasyChatGraphicsResources->selectWordCursorSprite = &gSprites[spriteId];\n    sEasyChatGraphicsResources->selectWordCursorSprite->callback = SpriteCB_SelectWordCursorSprite;\n    sEasyChatGraphicsResources->selectWordCursorSprite->oam.priority = 2;\n    SetSelectWordCursorSpritePos();\n}\n\nstatic void SpriteCB_SelectWordCursorSprite(struct Sprite * sprite)\n{\n    if (++sprite->data[0] > 2)\n    {\n        sprite->data[0] = 0;\n        if (++sprite->pos2.x > 0)\n            sprite->pos2.x = -6;\n    }\n}\n\nstatic void SetSelectWordCursorSpritePos(void)\n{\n    s8 cursorX, cursorY;\n    u8 x, y;\n\n    GetECSelectWordCursorCoords(&cursorX, &cursorY);\n    x = cursorX * 13 + 3;\n    y = cursorY * 2 + 11;\n    SetSelectWordCursorSpritePosExplicit(x, y);\n}\n\nstatic void SetSelectWordCursorSpritePosExplicit(u8 x, u8 y)\n{\n    if (sEasyChatGraphicsResources->selectWordCursorSprite)\n    {\n        sEasyChatGraphicsResources->selectWordCursorSprite->pos1.x = x * 8 + 4;\n        sEasyChatGraphicsResources->selectWordCursorSprite->pos1.y = (y + 1) * 8 + 1;\n        sEasyChatGraphicsResources->selectWordCursorSprite->pos2.x = 0;\n        sEasyChatGraphicsResources->selectWordCursorSprite->data[0] = 0;\n    }\n}\n\nstatic void DestroySelectWordCursorSprite(void)\n{\n    if (sEasyChatGraphicsResources->selectWordCursorSprite)\n    {\n        DestroySprite(sEasyChatGraphicsResources->selectWordCursorSprite);\n        sEasyChatGraphicsResources->selectWordCursorSprite = NULL;\n    }\n}\n\nstatic void CreateSelectGroupHelpSprite(void)\n{\n    u8 spriteId = CreateSprite(&sSpriteTemplate_SelectGroupHelp, 208, 128, 6);\n    sEasyChatGraphicsResources->selectGroupHelpSprite = &gSprites[spriteId];\n    sEasyChatGraphicsResources->selectGroupHelpSprite->pos2.x = -64;\n\n    spriteId = CreateSprite(&sSpriteTemplate_EasyChatModeIcons, 208, 80, 5);\n    sEasyChatGraphicsResources->modeIconsSprite = &gSprites[spriteId];\n    sEasyChatGraphicsResources->modeIconState = 0;\n}\n\nstatic bool8 AnimateSeletGroupModeAndHelpSpriteEnter(void)\n{\n    switch (sEasyChatGraphicsResources->modeIconState)\n    {\n    default:\n        return FALSE;\n    case 0:\n        sEasyChatGraphicsResources->selectGroupHelpSprite->pos2.x += 8;\n        if (sEasyChatGraphicsResources->selectGroupHelpSprite->pos2.x >= 0)\n        {\n            sEasyChatGraphicsResources->selectGroupHelpSprite->pos2.x = 0;\n            if (!IsEasyChatAlphaMode())\n                StartSpriteAnim(sEasyChatGraphicsResources->modeIconsSprite, 1);\n            else\n                StartSpriteAnim(sEasyChatGraphicsResources->modeIconsSprite, 2);\n\n            sEasyChatGraphicsResources->modeIconState++;\n        }\n        break;\n    case 1:\n        if (sEasyChatGraphicsResources->modeIconsSprite->animEnded)\n        {\n            sEasyChatGraphicsResources->modeIconState = 2;\n            return FALSE;\n        }\n    }\n\n    return TRUE;\n}\n\nstatic void StartModeIconHidingAnimation(void)\n{\n    sEasyChatGraphicsResources->modeIconState = 0;\n    StartSpriteAnim(sEasyChatGraphicsResources->modeIconsSprite, 3);\n}\n\nstatic bool8 RunModeIconHidingAnimation(void)\n{\n    switch (sEasyChatGraphicsResources->modeIconState)\n    {\n    default:\n        return FALSE;\n    case 0:\n        if (sEasyChatGraphicsResources->modeIconsSprite->animEnded)\n            sEasyChatGraphicsResources->modeIconState = 1;\n        break;\n    case 1:\n        sEasyChatGraphicsResources->selectGroupHelpSprite->pos2.x -= 8;\n        if (sEasyChatGraphicsResources->selectGroupHelpSprite->pos2.x <= -64)\n        {\n            DestroySprite(sEasyChatGraphicsResources->modeIconsSprite);\n            DestroySprite(sEasyChatGraphicsResources->selectGroupHelpSprite);\n            sEasyChatGraphicsResources->modeIconsSprite = NULL;\n            sEasyChatGraphicsResources->selectGroupHelpSprite = NULL;\n            sEasyChatGraphicsResources->modeIconState++;\n            return FALSE;\n        }\n    }\n\n    return TRUE;\n}\n\nstatic void ShrinkModeIconsSprite(void)\n{\n    StartSpriteAnim(sEasyChatGraphicsResources->modeIconsSprite, 4);\n}\n\nstatic void ShowModeIconsSprite(void)\n{\n    if (!IsEasyChatAlphaMode())\n        StartSpriteAnim(sEasyChatGraphicsResources->modeIconsSprite, 1);\n    else\n        StartSpriteAnim(sEasyChatGraphicsResources->modeIconsSprite, 2);\n}\n\nstatic bool8 ModeIconsSpriteAnimIsEnded(void)\n{\n    return !sEasyChatGraphicsResources->modeIconsSprite->animEnded;\n}\n\nstatic void CreateVerticalScrollArrowSprites(void)\n{\n    u8 spriteId = CreateSprite(&sSpriteTemplate_UpTriangleCursor, 96, 80, 0);\n    if (spriteId != MAX_SPRITES)\n        sEasyChatGraphicsResources->upTriangleCursorSprite = &gSprites[spriteId];\n\n    spriteId = CreateSprite(&sSpriteTemplate_UpTriangleCursor, 96, 156, 0);\n    if (spriteId != MAX_SPRITES)\n    {\n        sEasyChatGraphicsResources->downTriangleCursorSprite = &gSprites[spriteId];\n        sEasyChatGraphicsResources->downTriangleCursorSprite->vFlip = TRUE;\n    }\n\n    HideVerticalScrollArrowSprites();\n}\n\nstatic void UpdateVerticalScrollArrowVisibility(void)\n{\n    sEasyChatGraphicsResources->upTriangleCursorSprite->invisible = !ShouldDrawECUpArrow();\n    sEasyChatGraphicsResources->downTriangleCursorSprite->invisible = !ShouldDrawECDownArrow();\n}\n\nstatic void HideVerticalScrollArrowSprites(void)\n{\n    sEasyChatGraphicsResources->upTriangleCursorSprite->invisible = TRUE;\n    sEasyChatGraphicsResources->downTriangleCursorSprite->invisible = TRUE;\n}\n\nstatic void UpdateVerticalScrollArrowSpriteXPos(int direction)\n{\n    if (!direction)\n    {\n        // Group select\n        sEasyChatGraphicsResources->upTriangleCursorSprite->pos1.x = 96;\n        sEasyChatGraphicsResources->downTriangleCursorSprite->pos1.x = 96;\n    }\n    else\n    {\n        // Word select\n        sEasyChatGraphicsResources->upTriangleCursorSprite->pos1.x = 120;\n        sEasyChatGraphicsResources->downTriangleCursorSprite->pos1.x = 120;\n    }\n}\n\nstatic void CreateStartSelectButtonsSprites(void)\n{\n    u8 spriteId = CreateSprite(&sSpriteTemplate_StartSelectButtons, 220, 84, 1);\n    if (spriteId != MAX_SPRITES)\n        sEasyChatGraphicsResources->startPgUpButtonSprite = &gSprites[spriteId];\n\n    spriteId = CreateSprite(&sSpriteTemplate_StartSelectButtons, 220, 156, 1);\n    if (spriteId != MAX_SPRITES)\n    {\n        sEasyChatGraphicsResources->selectPgDnButtonSprite = &gSprites[spriteId];\n        StartSpriteAnim(sEasyChatGraphicsResources->selectPgDnButtonSprite, 1);\n    }\n\n    HideStartSelectButtonSprites();\n}\n\nstatic void UpdateStartSelectButtonSpriteVisibility(void)\n{\n    sEasyChatGraphicsResources->startPgUpButtonSprite->invisible = !ShouldDrawECUpArrow();\n    sEasyChatGraphicsResources->selectPgDnButtonSprite->invisible = !ShouldDrawECDownArrow();\n}\n\nstatic void HideStartSelectButtonSprites(void)\n{\n    sEasyChatGraphicsResources->startPgUpButtonSprite->invisible = TRUE;\n    sEasyChatGraphicsResources->selectPgDnButtonSprite->invisible = TRUE;\n}\n\nstatic void CreateFooterWindow(void)\n{\n    u16 windowId;\n    struct WindowTemplate template;\n    template.bg = 3;\n    template.tilemapLeft = 4;\n    template.tilemapTop = 11;\n    template.width = 24;\n    template.height = 2;\n    template.paletteNum = 11;\n    template.baseBlock = 0x030;\n    windowId = AddWindow(&template);\n    FillWindowPixelBuffer(windowId, PIXEL_FILL(1));\n    EC_AddTextPrinterParameterized(windowId, 1, gUnknown_841EE2B, 0, 0, 0, NULL);\n    PutWindowTilemap(windowId);\n}\n"
}