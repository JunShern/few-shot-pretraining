{
    "criteria": [
        {
            "criterion": "AllDocuments",
            "passed": true,
            "reason": "All documents pass."
        },
        {
            "criterion": "QuestionAnswerStringsV2",
            "passed": true,
            "reason": "Text contains ['Q:', 'A:']."
        },
        {
            "criterion": "FullyStructured",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamStringsV2",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesStrings",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesStringsV2",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ListPrefixV2",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesMinimalEmbed",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesSynonymsEmbed",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesDiverseEmbed",
            "passed": false,
            "reason": "Does not meet criterion."
        }
    ],
    "doc_id": "3119",
    "text": "Q:\n\nElasticSearch Make Field non-searchable from java\n\nI am currently working on elastic search through my java Application . I know how to index the Java pojo using RestHighLevelClient. How i can  make search only on new fields not the complete pojo.?\n    public class Employee{ \n        private long id;\n        private String name;\n        private String designation;\n        private String address;       //want to index but not searchable in elastic search    \n     }\n\nMy Code for indexing is below which is working fine:\n public String saveToEs(Employee employee) throws IOException {\n    Map<String, Object> map = objectMapper.convertValue(employee, Map.class);\n\n    IndexRequest indexRequest =\n        new IndexRequest(INDEX, TYPE, employee.getId().toString()).source(map, XContentType.JSON);\n\n    IndexResponse indexResponse = client.index(indexRequest, RequestOptions.DEFAULT);\n\nI need to do this in java .Any help please or good link ?\n\nA:\n\nWriting another answer for RestHighLevelClient As another answer is useful for people not using the Rest client and adding this in the first answer makes it too long.\nNote: you are passing the type which is deprecated in ES 7.X and I am using the ES 7.X version, so my code is according to 7.X.\n        CreateIndexRequest request = new CreateIndexRequest(\"employee\");\n        Map<String, Object> name = new HashMap<>();\n        name.put(\"type\", \"text\");\n        Map<String, Object> address = new HashMap<>();\n        address.put(\"type\", \"text\");\n        address.put(\"index\", false);\n\n        Map<String, Object> properties = new HashMap<>();\n        properties.put(\"name\", name);\n        properties.put(\"address\", address);\n        Map<String, Object> mapping = new HashMap<>();\n        mapping.put(\"properties\", properties);\n        request.mapping(mapping);\n        CreateIndexResponse createIndexResponse = client.indices().create(request, RequestOptions.DEFAULT);\n\nImportant points\n\nI've used only 2 fields for illustration purpose, one of which is address field which is not searchable, and to do that I used, address.put(\"index\", false); , while name is searchable field and there this option isn't present.\nI've created index mapping using the Map method which is available in this official ES doc.\nyou can check the mapping created by this code, using mapping REST API.\nBelow is the mapping generated for this code in my system and you can see, index: false is added in the address field.\n\n{\n  \"employee\": {\n    \"mappings\": {\n      \"properties\": {\n        \"address\": {\n          \"type\": \"text\",\n          \"index\": false\n        },\n        \"name\": {\n          \"type\": \"text\"\n        }\n      }\n    }\n  }\n}\n\nYou can just use the same search JSON mentioned in the previous answer, to test that it's not searchable.\n\n"
}