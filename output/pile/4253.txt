{
    "criteria": [
        {
            "criterion": "AllDocuments",
            "passed": true,
            "reason": "All documents pass."
        },
        {
            "criterion": "QuestionAnswerStringsV2",
            "passed": true,
            "reason": "Text contains ['Q:', 'A:']."
        },
        {
            "criterion": "FullyStructured",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamStringsV2",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesStrings",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesStringsV2",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ListPrefixV2",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesMinimalEmbed",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesSynonymsEmbed",
            "passed": false,
            "reason": "Does not meet criterion."
        },
        {
            "criterion": "ExamplesDiverseEmbed",
            "passed": false,
            "reason": "Does not meet criterion."
        }
    ],
    "doc_id": "4253",
    "text": "Q:\n\nandroid error: Could not read input channel file descriptors from parcel\n\nI've made an application for Android that works more or less like this:\n\nApplication communicates with the Web service and transfers information (not files)\nI can navigate to a different screen using Intent and startActivity\n\nUnfortunately, sometimes the application crashes with the following error in different activity: \njava.lang.RuntimeException: Could not read input channel file descriptors from parcel.  \nat android.view.InputChannel.nativeReadFromParcel(Native Method)  \nat android.view.InputChannel.readFromParcel(InputChannel.java:135)  \nat android.view.IWindowSession$Stub$Proxy.add(IWindowSession.java:523)  \nat android.view.ViewRootImpl.setView(ViewRootImpl.java:481)  \nat android.view.WindowManagerImpl.addView(WindowManagerImpl.java:301)  \nat android.view.WindowManagerImpl.addView(WindowManagerImpl.java:215)  \nat android.view.WindowManagerImpl$CompatModeWrapper.addView(WindowManagerImpl.java:140)  \nat android.view.Window$LocalWindowManager.addView(Window.java:537)  \nat android.app.ActivityThread.handleResumeActivity(ActivityThread.java:2507)  \nat android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:1986)  \nat android.app.ActivityThread.access$600(ActivityThread.java:123)  \nat android.app.ActivityThread$H.handleMessage(ActivityThread.java:1147)  \nat android.os.Handler.dispatchMessage(Handler.java:99)  \nat android.os.Looper.loop(Looper.java:137)  \nat android.app.ActivityThread.main(ActivityThread.java:4424)  \nat java.lang.reflect.Method.invokeNative(Native Method)  \nat java.lang.reflect.Method.invoke(Method.java:511)  \nat com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:784)  \nat com.android.internal.os.ZygoteInit.main(ZygoteInit.java:551)  \nat dalvik.system.NativeStart.main(Native Method) \n\nBut I don't know what does this error mean because I don't work with files. Any idea? \n\nA:\n\nThis question appears to be the same as Could not read input channel file descriptors from parcel, which was (incorrectly) closed as off-topic. It is also more or less same as Could not read input channel file descriptors from parcel crash report. Unfortunately those questions haven't gotten a satisfactory (and sufficiently general) answer, so I am going to try anyway.\nFile descriptors are used in multiple places in Android:\n\nSockets (yes, open network connections are \"files\" too);\nActual files (not necessarily files on disks, may as well be android.os.MemoryFile instances);\nPipes\u2014Linux uses them everywhere, for example the attempt to open pipe, that resulted in your exception, was likely required to send input events between IME (keyboard) process and your application.\n\nAll descriptors are subject to shared maximum limit; when that count is exceeded, your app begins to experience serious problems. Having the process die is the best scenario in such case, because otherwise the kernel would have run out of memory (file descriptors are stored in kernel memory).\nYou may have issues with descriptors (files, network connections) not being closed. You must close them ASAP. You may also have issues with memory leaks\u2014objects not being garbage-collected when they should (and some of leaked objects may in turn hold onto file descriptors).\nYour own code does not have to be guilty, libraries you use and even some system components may have bugs, leading to memory leaks and file descriptor leaks. I recommend you to use Square's Leak Canary\u2014a simple, easy to use library for automatic detection of leaks (well, at least memory leaks, which are most frequent).\n\n"
}